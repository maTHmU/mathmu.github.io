CInstall["nvstring"]
Begin[System`String]

CInterface["nvstring",
Value[`Join],
`add[_String],
`len[]
]

End[]

StringJoin = System`String`Join
Path[x_String] := Path[].add[x]CInstall["nvnumber"]
Begin[System`Number]

CInterface["nvnumber",
Value[`Cast,`Minus,`Divide,`Plus,`Times,`Power,`Factorial,`Binomial,`Fibonacci,`Lucas],
System`Integer`neg[],
System`Integer`add[_Integer],
System`Integer`mul[_Integer],
System`Integer`div[_Integer],
System`Integer`pow[_Integer],
System`Rational`neg[],
System`Rational`add[_Rational],
System`Rational`mul[_Rational],
System`Rational`div[],
System`Rational`div[_Rational],
System`Rational`pow[_Integer],
System`Real`neg[],
System`Real`add[_Real],
System`Real`mul[_Real],
System`Real`div[],
System`Real`div[_Real],
System`Real`pow[_Integer]
]

End[]

Begin[System]

CInterface["nvnumber",
Value[`PrimeQ,`OddQ,`EvenQ,`SquareQ,`NextPrime,`IntegerLength,`CoprimeQ,`GCD,`LCM,`ExtendedGCD,`RandomInteger,`RandomPrime,`FactorInteger,`N,`Precision,`NI,`RealI,`IntervalN]
]

`Euler
`Factorial[x_Integer] := `Number`Factorial[x]
`Binomial[n_Integer,k_Integer] := `Number`Binomial[n,k]
`Fibonacci[x_Integer] := `Number`Fibonacci[x]
`Lucas[x_Integer] := `Number`Lucas[x]

End[]

Begin[System`Number]

`Heads = {"Log","Log2","Log10","Exp","Exp2","Exp10","Cos","Sin","Tan","Sec","Csc","Cot","ArcCos","ArcSin","ArcTan","Cosh","Sinh","Tanh","Coth","Sech","Csch","ArcCosh","ArcSinh","ArcTanh","Gamma","LogGamma","Zeta","Erf","Erfc","Sqrt"}

M[h_] := System`Number.{h}

ClearAttributes[CInterface,HoldRest]
CInterface["nvnumber",
Value@@(M /@ `Heads)
]
SetAttributes[CInterface,HoldRest]

M[h_] := SetDelayed@@(Hold[(System.{H})[x_Real],(System`Number.{H})[x]] /. H->h)
M /@ `Heads
M[h_] := SetDelayed@@(Hold[(System.{H})[x_RealI],(System`Number.{H})[x]] /. H->h)
M /@ `Heads

M[h_] =.

End[]
Begin[System]

`D`Heads = {Exp, Log, Sin, Cos, Tan, Cot, Sec, ArcCosh, ArcTanh, Csc, ArcSin, ArcCos, ArcTan, ArcCot, ArcSec, ArcCsc, Sinh, Cosh, Tanh, Coth, Sech, Csch, ArcSinh, ArcSech, ArcCsch, ArcTanh}

Begin[D]

Rules = {
A[x_,x_] :> 1,
A[E^x_, x_] :> E^x,
A[Exp[x_], x_] :> Exp[x],
A[Log[x_], x_] :> 1/x,
A[Sin[x_], x_] :> Cos[x],
A[Cos[x_], x_] :> -Sin[x],
A[Tan[x_], x_] :> Sec[x]^2,
A[Cot[x_], x_] :> -Csc[x]^2,
A[Sec[x_], x_] :> Sec[x] Tan[x],
A[ArcCosh[x_], x_] :> 1/(Sqrt[x-1] Sqrt[x+1]),
A[ArcTanh[x_], x_] :> 1/(1-x^2),
A[Csc[x_], x_] :> -Cot[x] Csc[x],
A[ArcSin[x_], x_] :> 1/Sqrt[1-x^2],
A[ArcCos[x_], x_] :> -(1/Sqrt[1-x^2]),
A[ArcTan[x_], x_] :> 1/(1+x^2),
A[ArcCot[x_], x_] :> -(1/(1+x^2)),
A[ArcSec[x_], x_] :> 1/(Sqrt[1-1/x^2] x^2),
A[ArcCsc[x_], x_] :> -(1/(Sqrt[1-1/x^2] x^2)),
A[Sinh[x_], x_] :> Cosh[x],
A[Cosh[x_], x_] :> Sinh[x],
A[Tanh[x_], x_] :> Sech[x]^2,
A[Coth[x_], x_] :> -Csch[x]^2,
A[Sech[x_], x_] :> -Sech[x] Tanh[x],
A[Csch[x_], x_] :> -Coth[x] Csch[x],
A[ArcSinh[x_], x_] :> 1/Sqrt[1+x^2],
A[ArcSech[x_], x_] :> -(1/(x Sqrt[(1-x)/(1+x)] (1+x))),
A[ArcCsch[x_], x_] :> -(1/(Sqrt[1+1/x^2] x^2)),
A[ArcTanh[x_], x_] :> 1/(1-x^2),
A[x_^x_, x_] :> x^x (1+Log[x]),
A[f_ + g_, x_] :> A[f, x] + A[g, x],
A[a_, x_] :> 0 /; FreeQ[a, x], 
A[x_^n_, x_] :> n x^(n-1) /; NumberQ[n],
A[g_^n_, x_] :> n g^(n-1) A[g, x] /; FreeQ[n, x],
A[E^g_, x_] :> E^g A[g, x] /; !FreeQ[g, x],
A[a_^x_, x_] :> a^x Log[a] /; FreeQ[a, x],
A[a_^g_, x_] :> a^g Log[a] A[g, x] /; FreeQ[a, x] && !FreeQ[g, x],
A[g_^h_, x_] :> g^h ((h A[g, x])/g+Log[g] A[h, x]) /; !FreeQ[g, x] && !FreeQ[h, x],
A[a_ f_, x_] :> a A[f, x] /; FreeQ[a, x] && ! FreeQ[f, x],
A[f_ g_, x_] :> A[f, x] g + f A[g, x] /; ! FreeQ[f, x] && ! FreeQ[g, x],
A[(f_)[g_], x_] :> A[f[g], g] A[g, x] /; g =!= x && !FreeQ[Heads, f],
A[(f_)[g_], x_] :> Derivative[1][f][g] A[g, x] /; FreeQ[Heads, f],
A[(f_)[g__], x_] :> MultiA[f,g,x] /; Head[g]==List && FreeQ[Heads, f]
}

(*Evaluate[Rules/.Dispatch[RuleDelayed->SetDelayed,A->D]]*)
Rules = CSerial@@Rules
D[f_, x_] := A[f, x] //. Rules

End[]

End[]Begin[System]

Sin[Pi] := 0
Sin[Pi/2] := 1
Sin[Pi/3] := Sqrt[3]/2
Sin[2 Pi/3] := Sqrt[3]/2
Sin[Pi/4] := Sqrt[2]/2
Sin[3 Pi/4] := Sqrt[2]/2
Sin[Pi/6] := 1/2
Sin[5 Pi/6] := 1/2
Sin[0] := 0
Sin[k_Integer] := -Sin[-k] /; k < 0
Sin[k_Rational] := -Sin[-k] /; k < 0
Sin[k_Integer Pi] := 0
Sin[k_Rational Pi] := -Sin[-k Pi] /; k < 0
(*Sin[k_Rational Pi] := Module[{n = IntegerPart[k], x = Pretty[k], q, p},
q = x[[1]]; p = x[[2]];
If[n != 0, (-1)^n Sin[((q%p)/p) Pi],'Sin[k Pi]]] /; k > 0*)
Sin[-x_] := -Sin[x]
Sin[Pi+x_] := -Sin[x]
Sin[k_Integer Pi+x_] := (-1)^k Sin[x]
Sin[Pi/2+x_] := Cos[x]

Cos[Pi] := -1
Cos[Pi/2] := 0
Cos[Pi/3] := 1/2
Cos[2 Pi/3] := -1/2
Cos[Pi/4] := Sqrt[2]/2
Cos[3 Pi/4] := -Sqrt[2]/2
Cos[Pi/6] := Sqrt[3]/2
Cos[5 Pi/6] := -1/2
Cos[0] := 1
Cos[k_Integer] := Cos[-k] /; k < 0
Cos[k_Rational] := Cos[-k] /; k < 0
Cos[k_Integer Pi] := (-1)^k
(*Cos[k_Rational Pi] := Module[{n = IntegerPart[k], x = Pretty[k], q, p},
q = x[[1]]; p = x[[2]];
If[n != 0, (-1)^n Cos[((q%p)/p) Pi],'Cos[k Pi]]] /; k > 0*)
Cos[-x_] := Cos[x]
Cos[Pi+x_] := -Cos[x]
Cos[k_Integer Pi+x_] := (-1)^k Cos[x]
Cos[Pi/2+x_] := -Sin[x]

Exp[0] := 1
Exp[x_] := E^x /; Head[x] =!= Real
Log[1] := 0
Log[E] := 1
Log[E^n_] := n

End[]Begin[System]

Begin[`Integrate]

`Rules = {
`A[x_, x_] :> x^2/2,
`A[f_ + g_, x_] :> `A[f, x] + `A[g, x],
`A[a_ f_, x_] :> (a) `A[f, x] /; FreeQ[a, x],
`A[a_, x_] :> a x /; FreeQ[a, x],
`A[x_^n_, x_] :> If[n === -1, Log[x], x^(1 + n)/(1 + n)] /; FreeQ[n, x],
`A[System`E^x_, x_] :> System`E^x,
`A[a_^x_, x_] :> a^x/Log[a] /; FreeQ[a, x],
`A[Sin[x_], x_] :> -Cos[x],
`A[Cos[x_], x_] :> Sin[x],
`A[Csc[x_]^2, x_] :> -Cot[x],
`A[Sec[x_]^2, x_] :> Tan[x],
`A[Sec[x_] Tan[x_], x_] :> Sec[x],
`A[Cot[x_] Csc[x_], x_] :> -Csc[x],
`A[Tan[x_], x_] :> -Log[Cos[x]],
`A[Cot[x_], x_] :> Log[Sin[x]],
`A[Csc[x_], x_] :> -Log[2 Cos[x/2]] + Log[2 Sin[x/2]],
`A[Sec[x_], x_] :> -Log[Cos[x/2] - Sin[x/2]] + Log[Cos[x/2] + Sin[x/2]],
`A[1/(1 + x_^2), x_] :> ArcTan[x],
`A[1/(1 - x_^2), x_] :> 1/2 Log[-1 - x] - 1/2 Log[-1 + x],
`A[1/Sqrt[1 - x_^2], x_] :> ArcSin[x],
`A[1/Sqrt[1 + x_^2], x_] :> ArcSinh[x],
`A[1/Sqrt[-1 + x_^2], x_] :> Log[2 (x + Sqrt[-1 + x^2])],
`A[Sinh[x_], x_] :> Cosh[x],
`A[Cosh[x_], x_] :> Sinh[x],
`A[Csch[x_]^2, x_] :> -Coth[x],
`A[Sech[x_]^2, x_] :> Tanh[x],
`A[Tanh[x_], x_] :> Log[Cosh[x]],
`A[Coth[x_], x_] :> Log[Sinh[x]],
`A[Csch[x_], x_] :> -Log[2 Cosh[x/2]] + Log[2 Sinh[x/2]],
`A[Sqrt[b_ + a_ x_], x_] :> (2 (b + a x)^(3/2))/(3 a) /; FreeQ[{a, b}, x],
`A[x_ Sqrt[b_ + a_ x_], x_] :> (2 Sqrt[b + a x] (-2 b^2 + a b x + 3 a^2 x^2))/(15 a^2) /; FreeQ[{a, b}, x],
`A[Sqrt[x_ + Sqrt[x_]], x_] :> 1/12 Sqrt[Sqrt[x] + x] (-3 + 2 Sqrt[x] + 8 x) + 1/8 Log[1 + 2 Sqrt[x] + 2 Sqrt[Sqrt[x] + x]],
`A[x_^n_ Sqrt[a_ x_ + b_], x_] :> (2 x^n)/((2 n + 3) a) (Sqrt[(a x + b)])^3 - (2 n b)/((2 n + 3) a) `A[x^(n - 1) Sqrt[a x + b], x] /; FreeQ[{n, a, b}, x],
`A[f_[a_ x_ + b_], x_] :> `A[f[a x + b],a x + b] / a /; FreeQ[{a, b}, x]
}

`Rules = CSerial@@`Rules
Integrate[f_,x_] := `A[f, x] //. `Rules

End[]

End[]
CInstall["nvpolynomial"]

Begin[System]

CInterface["nvpolynomial",
Value[`Minus,`Divide,`Plus,`Times,`Power,`Compare,`Less,`Equal,`Greater,`LessEqual,`Unequal,`GreaterEqual,
`ToCPE,`FromCPE,`ExpandFromCPE,
`ToCRE,`FromCRE,`ExpandFromCRE,`Expand,
`DivExact,`Div,`PolynomialRemainder,`PolynomialQuotient,`PolynomialQuotientRemainder,`PseudoRemainder,
`Variables,`Coefficient,`Degree,
`GroebnerBasis,`CharacterSet,
`PolynomialGCD,`PolynomialLCM,`FactorList,`Factor,`Collect
]]
(*`CPE`Pretty[x_`CPE] := `FromCPE[x]*)
`CPE`Pretty := `FromCPE
`CRE`Pretty := `FromCRE

End[]

Attributes[Minus] = {Listable}
Attributes[Divide] = {Listable}
Attributes[Plus] = {OneIdentity,Flat,Orderless,Listable}
Attributes[Times] = {OneIdentity,Flat,Orderless,Listable}
CInstall["nvgraphics"]
Begin[System`Graphics]

CInterface["nvgraphics",
Value[System`Plot,System`ListPlot,System`DiscretePlot,System`Plot3D,System`ParametricPlot,System`PolarPlot,System`ContourPlot,System`ParametricRegionPlot,System`ContourPlot3D,System`ParametricPlot3D,System`DensityPlot,System`ParametricSurfacePlot3D]
]

Attributes[System`Plot] = {HoldAll}
Attributes[System`ListPlot] = {HoldAll}
Attributes[System`DiscretePlot] = {HoldAll}
Attributes[System`Plot3D] = {HoldAll}
Attributes[System`ParametricPlot] = {HoldAll}
Attributes[System`PolarPlot] = {HoldAll}
Attributes[System`ContourPlot] = {HoldAll}
Attributes[System`ParametricRegionPlot] = {HoldAll}
Attributes[System`ContourPlot3D] = {HoldAll}
Attributes[System`ParametricPlot3D] = {HoldAll}
Attributes[System`DensityPlot] = {HoldAll}
Attributes[System`ParametricSurfacePlot3D] = {HoldAll}

End[]

Begin[System]
`Graphics2D
`Graphics3D
`Shape
`GraphicsComplex
`PlotRange
`Polygon
`FlatSpace
`Color3f
`Color255
`Axes
`Auto
`ColorFunction
`FillToCurve
`FillToAxes
`GraphLabel
`True
`Mesh
`DoubleSurface
`Surface
`LightedSurface
`ColorfulLine
`PointList
`QuadArray
`TriangleArray
`Curve
`Real
`Integer
`Minus
`ColorPolygon
`AxesLabel
`GraphLabel
`Joined
`NoFilling
`Line
`Options
`NormalSpace
`Hue
`Directive
`ColorPolygon
End[]

CInstall["mulink"]

(*Symbol[Null,"mU"]*)
mU`mU

Begin[$mU]

CInterface["mulink",
Value[mU`mU,`Eval,`Main,`Object],
`nV[_`Object],
`Read[_String,_],
`Object`eval[],
`Object`nV[]
]

End[]

System`Modulus
System`Solve[x_] := mU`mU[System`Solve][x].nV[]
System`CoefficientList[x_,y_] := mU`mU[System`CoefficientList][x,y].nV[]
System`FromCoefficientList[x_,y_] := mU`mU[System`FromCoefficientList][x,y].nV[]
Attributes[System`Do] = {HoldAll}
System`Do[x_,lst_List] := mU`mU[System`Do][x,lst].nV[]
Attributes[System`Table] = {HoldAll}
System`Table[x_,lst_List] := mU`mU[System`Table][x,lst].nV[]
System`D[f_,x_] := mU`mU[System`D][f,x].nV[]
System`Integrate[f_,x_] := mU`mU[System`Integrate][f,x].nV[]

(*System`Pretty[x_] := mU`mU[System`Pretty][x].nV[] /; FreeQ[Integer[Real,Rational],Head[x]]
System`N[x_System] := mU`mU[System`N][x].nV[]
System`N[x_System,y_Integer] := mU`mU[System`N][x,y].nV[]*)

System`LinearSolve[x_,y_] := mU`mU[System`LinearSolve][x,y].nV[]
System`NullSpace[x_] := mU`mU[System`NullSpace][x].nV[]
System`Rank[x_] := mU`mU[System`Rank][x].nV[]
System`LeastSquares[x_,y_] := mU`mU[System`LeastSquares][x,y].nV[]
(* Begin[System] *)

CInterface["nvsystem",
Assign[Attributes,Condition,List,Slot],
Value[Address,And,Apply,Attributes,Begin,BeginLocal,BeginPackage,Block,CMatch,CRule,CSerial,CTest,Clear,ClearAttributes,Context,ContextPath,Delayed,Dispatch,End,EndLocal,EndPackage,Evaluate,For,FreeQ,Full,Function,Hash,Head,If,Input,IntArray,Key,Kind,Lazy,Length,Local,Load,Map,MatchQ,Module,Name,New,Not,Or,Order,Parse,Path,Postfix,Prefix,Pretty,Primary,Print,Replace,ReplaceAll,ReplaceRepeated,SameQ,Serial,Set,SetAttributes,SetDelayed,Slot,Symbol,Save,Timing,ToString,Type,Unevaluated,UnsameQ,Unset,While,Parser`Load,Parser`Save],
CInstall[_String],
CUninstall[_String],
Output[_,_String],
OutputAppend[_,_String],
Shell[_String]
]

SetAttributes[Set,HoldFirst]
Attributes[And] = {HoldAll,OneIdentity,Flat}
Attributes[Block] = {HoldAll}
Attributes[Condition] = {HoldAll}
Attributes[Context] = {HoldFirst}
Attributes[Delayed] = {HoldAll}
Attributes[For] = {HoldAll}
Attributes[Function] = {HoldAll}
Attributes[Hold] = {HoldAll}
Attributes[If] = {HoldRest}
Attributes[Local] = {HoldAll}
Attributes[Module] = {HoldAll}
Attributes[Name] = {HoldAll}
Attributes[Or] = {HoldAll,OneIdentity,Flat}
Attributes[Pattern] = {HoldFirst}
Attributes[Production] = {HoldAll}
Attributes[RuleDelayed] = {HoldRest}
Attributes[Serial] = {HoldAll,Flat}
Attributes[SetDelayed] = {HoldAll}
Attributes[Slot] = {HoldRest}
Attributes[Timing] = {HoldAll}
Attributes[Unevaluated] =  {HoldAll}
Attributes[Unset] = {HoldFirst}
Attributes[While] = {HoldAll}
Attributes[With] = {HoldAll}

End[]

<< Path["Number/Number.n"]
<< Path["Polynomial/Polynomial.n"]
<< Path["Graphics/Graphics.n"]
<< Path["String/String.n"]

(*<< Path["Calculus/Simplify.n"]
<< Path["Calculus/D.n"]
<< Path["Calculus/Integrate.n"]*)

<< Path["mULink/EmbedmU.n"]

(*<< Path["nVLink/Lua/LinkLua.n"]
<< Path["nVLink/NTL/LinkNTL.n"]
<< Path["nVLink/flint/LinkFLINT.n"]
<< Path["nVLink/Java/Embed/EmbedJava.n"]
<< Path["nVLink/Ecl/Embed/EmbedEcl.n"]*)
Begin["System`"]

CInstall["nvnumber"]

CProc["nvnumber",FactorInteger,SeedRandom,RandomInteger,RandomPrime,NextPrime,IntegerLength,GCD,LCM,ExtendedGCD,ChineseRemainder,PrimeQ,CoprimeQ,Radical]

SetAttributes[CoprimeQ, {Listable, Orderless, Protected}]

CProc["nvnumber",Factorial,Binomial,Fibonacci,Lucas,EulerGamma,Catalan,Log,Log2,Log10,Exp,Cos,Sin,Tan,Sec,Csc,Cot,ArcCos,ArcSin,ArcTan,Cosh,Sinh,Tanh,Sech,Csch,Coth,ArcCosh,ArcSinh,ArcTanh,Gamma,LogGamma,Zeta,Erf,Erfc,Sqrt,Pow,Pi,E,Sign]

SetAttributes[Sign, {Listable, NumericFunction, Protected}]
SetAttributes[ArcCos, {NumericFunction, Protected}]
SetAttributes[ArcCosh, {NumericFunction, Protected}]
SetAttributes[ArcSin, {NumericFunction, Protected}]
SetAttributes[ArcSinh, {NumericFunction, Protected}]
SetAttributes[ArcTan, {NumericFunction, Protected}]
SetAttributes[ArcTanh, {NumericFunction, Protected}]
SetAttributes[Binomial, {NumericFunction, Protected}]
SetAttributes[Catalan, {Constant, Protected}]
SetAttributes[Cos, {NumericFunction, Protected}]
SetAttributes[Cosh, {NumericFunction, Protected}]
SetAttributes[Cot, {NumericFunction, Protected}]
SetAttributes[Coth, {NumericFunction, Protected}]
SetAttributes[Csc, {NumericFunction, Protected}]
SetAttributes[Csch, {NumericFunction, Protected}]
SetAttributes[E, {Constant, Protected}]
SetAttributes[Erf, {NumericFunction, Protected}]
SetAttributes[Erfc, {NumericFunction, Protected}]
SetAttributes[EulerGamma, {Constant, Protected}]
SetAttributes[Exp, {NumericFunction, Protected}]
SetAttributes[Factorial, {NumericFunction, Protected}]
SetAttributes[Fibonacci, {NumericFunction, Protected}]
SetAttributes[Gamma, {NumericFunction, Protected}]
SetAttributes[Log, {NumericFunction, Protected}]
SetAttributes[Log10, {NumericFunction, Protected}]
SetAttributes[Log2, {NumericFunction, Protected}]
SetAttributes[LogGamma, {NumericFunction, Protected}]
SetAttributes[Lucas, {NumericFunction, Protected}]
SetAttributes[Pi, {Constant, Protected}]
SetAttributes[Pow, {NumericFunction, Protected}]
SetAttributes[Sec, {NumericFunction, Protected}]
SetAttributes[Sech, {NumericFunction, Protected}]
SetAttributes[Sin, {NumericFunction, Protected}]
SetAttributes[Sinh, {NumericFunction, Protected}]
SetAttributes[Sqrt, {NumericFunction, Protected}]
SetAttributes[Tan, {NumericFunction, Protected}]
SetAttributes[Tanh, {NumericFunction, Protected}]
SetAttributes[Zeta, {NumericFunction, Protected}]

(* the following function do not have cprocs yet *)
(* SetAttributes[CosIntegral, {NumericFunction, Protected}]
SetAttributes[CoshIntegral, {NumericFunction, Protected}] *)
SetAttributes[EllipticF, {NumericFunction, Protected}]
SetAttributes[Erfi, {NumericFunction, Protected}]
SetAttributes[ExpIntegralE, {NumericFunction, Protected}]
SetAttributes[ExpIntegralEi, {NumericFunction, Protected}]
(* SetAttributes[FresnelS, {NumericFunction, Protected}]
SetAttributes[FresnelC, {NumericFunction, Protected}] *)
SetAttributes[LogIntegral, {NumericFunction, Protected}]
SetAttributes[PolyGamma, {NumericFunction, Protected}]
SetAttributes[PolyLog, {NumericFunction, Protected}]
SetAttributes[ProductLog, {NumericFunction, Protected}]
(* SetAttributes[SinIntegral, {NumericFunction, Protected}]
SetAttributes[SinhIntegral, {NumericFunction, Protected}] *)

End[]
Begin["System`"]

CInstall["nvmatrix"]

CProc["nvmatrix",mLinearSolve,LinearSolve,StrassenMM,MDot,MInverse,MDet,NullSpace,Rank,LeastSquares]

End[]
BeginPackage["Product`"]
Begin["`Private`"]
A[i_, {i_, n_}] := n!
A[i_, {i_, m_, n_}] := n! / (m - 1)!
A[i_^e_, {i_, n_}] := (n!)^e
A[i_^e_, {i_, m_, n_}] := (n! / (m - 1)!)^e
A[1 - (4 x_^2) / (Pi^2 (2k_-1)^2),{k_,1,Infinity}]:=Cos[x]
End[]
Product := `Private`A;
EndPackage[]BeginPackage["Integrate`"]
Begin["`Private`"]
{A[a_ f_, x_] := a A[f, x] /; FreeQ[a, x],
 A[a_, x_] := a x /; FreeQ[a, x],
 A[x_, x_] := x^2/2,
 A[f_ + g_, x_] := A[f, x] + A[g, x],
 A[x_^n_ Sqrt[a_ x_ + b_], x_] := (2 x^n)/((2 n + 3) a) (Sqrt[(a x + b)])^3 - (
      2 n b)/((2 n + 3) a) A[x^(n - 1) Sqrt[a x + b], x] /; 
    FreeQ[n, x] && FreeQ[a, x] && FreeQ[b, x],
 A[f_[a_ x_ + b_], x_] := A[f[a x + b],a x + b] / a /; FreeQ[{a, b}, x]
  };
{
   A[1/x_,x_]:=Log[x],
  A[x_^n_, x_] := x^(1 + n)/(1 + n) /; FreeQ[{n}, x],
  A[E^x_, x_] := E^x,
  A[a_^x_, x_] := a^x/Log[a] /; FreeQ[{a}, x],
  A[Sin[x_], x_] := -Cos[x],
  A[Cos[x_], x_] := Sin[x],
  A[Csc[x_]^2, x_] := -Cot[x],
  A[Sec[x_]^2, x_] := Tan[x],
  A[Sec[x_] Tan[x_], x_] := Sec[x],
  A[Cot[x_] Csc[x_], x_] := -Csc[x],
  A[Tan[x_], x_] := -Log[Cos[x]],
  A[Cot[x_], x_] := Log[Sin[x]],
  A[Csc[x_], x_] := -Log[2 Cos[x/2]] + Log[2 Sin[x/2]],
  A[Sec[x_], x_] := -Log[Cos[x/2] - Sin[x/2]] + 
    Log[Cos[x/2] + Sin[x/2]],
  A[1/(1 + x_^2), x_] := ArcTan[x],
  A[1/(1 - x_^2), x_] := 1/2 Log[-1 - x] - 1/2 Log[-1 + x],
  A[1/Sqrt[1 - x_^2], x_] := ArcSin[x],
  A[1/Sqrt[1 + x_^2], x_] := ArcSinh[x],
  A[1/Sqrt[-1 + x_^2], x_] := Log[2 (x + Sqrt[-1 + x^2])],
  A[Sinh[x_], x_] := Cosh[x],
  A[Cosh[x_], x_] := Sinh[x],
  A[Csch[x_]^2, x_] := -Coth[x],
  A[Sech[x_]^2, x_] := Tanh[x],
  A[Tanh[x_], x_] := Log[Cosh[x]],
  A[Coth[x_], x_] := Log[Sinh[x]],
  A[Csch[x_], x_] := -Log[2 Cosh[x/2]] + Log[2 Sinh[x/2]],
  A[1/(1 - x_^2), x_] := 1/2 Log[-1 - x] - 1/2 Log[-1 + x],
  A[Sqrt[b_ + a_ x_], x_] := (2 (b + a x)^(3/2))/(3 a) /; 
    FreeQ[{a, b}, x],
  A[x_ Sqrt[b_ + a_ x_], 
    x_] := (2 Sqrt[b + a x] (-2 b^2 + a b x + 3 a^2 x^2))/(15 a^2) /; 
    FreeQ[{a, b}, x],
  A[Sqrt[x_ + Sqrt[x_]], x_] := 1/12 Sqrt[Sqrt[x] + x] (-3 + 2 Sqrt[x] + 8 x) + 
 1/8 Log[1 + 2 Sqrt[x] + 2 Sqrt[Sqrt[x] + x]]
  };
End[]
Integrate[f_,x_] := Expand[`Private`A[f,x]];
EndPackage[]
Begin["System`"]

$SolutionFormula

Begin["`Private`"]

$SolutionFormula = 
{
a,
b,
c,
d,
e,
(*1*){-b/a},
(*2*){(-b - Sqrt[b^2 - 4 a c])/( 2 a), (-b + Sqrt[b^2 - 4 a c])/(2 a)},
(*3*){-(b/(3*a)) - (2^(1/3)*(-b^2 + 3*a*c))/
    (3*a*(-2*b^3 + 9*a*b*c - 27*a^2*d + Sqrt[4*(-b^2 + 3*a*c)^3 + (-2*b^3 + 9*a*b*c - 27*a^2*d)^
          2])^(1/3)) + (-2*b^3 + 9*a*b*c - 27*a^2*d + 
      Sqrt[4*(-b^2 + 3*a*c)^3 + (-2*b^3 + 9*a*b*c - 27*a^2*d)^2])^(1/3)/(3*2^(1/3)*a), 
  -(b/(3*a)) + ((1 + I*Sqrt[3])*(-b^2 + 3*a*c))/
    (3*2^(2/3)*a*(-2*b^3 + 9*a*b*c - 27*a^2*d + Sqrt[4*(-b^2 + 3*a*c)^3 + 
         (-2*b^3 + 9*a*b*c - 27*a^2*d)^2])^(1/3)) - 
   ((1 - I*Sqrt[3])*(-2*b^3 + 9*a*b*c - 27*a^2*d + Sqrt[4*(-b^2 + 3*a*c)^3 + 
         (-2*b^3 + 9*a*b*c - 27*a^2*d)^2])^(1/3))/(6*2^(1/3)*a), 
  -(b/(3*a)) + ((1 - I*Sqrt[3])*(-b^2 + 3*a*c))/
    (3*2^(2/3)*a*(-2*b^3 + 9*a*b*c - 27*a^2*d + Sqrt[4*(-b^2 + 3*a*c)^3 + 
         (-2*b^3 + 9*a*b*c - 27*a^2*d)^2])^(1/3)) - 
   ((1 + I*Sqrt[3])*(-2*b^3 + 9*a*b*c - 27*a^2*d + Sqrt[4*(-b^2 + 3*a*c)^3 + 
         (-2*b^3 + 9*a*b*c - 27*a^2*d)^2])^(1/3))/(6*2^(1/3)*a)},
(*4*){-(b/(4*a)) - (1/2)*Sqrt[b^2/(4*a^2) - (2*c)/(3*a) + (2^(1/3)*(c^2 - 3*b*d + 12*a*e))/
       (3*a*(2*c^3 - 9*b*c*d + 27*a*d^2 + 27*b^2*e - 72*a*c*e + 
          Sqrt[-4*(c^2 - 3*b*d + 12*a*e)^3 + (2*c^3 - 9*b*c*d + 27*a*d^2 + 27*b^2*e - 72*a*c*e)^
             2])^(1/3)) + (1/(3*2^(1/3)*a))*(2*c^3 - 9*b*c*d + 27*a*d^2 + 27*b^2*e - 72*a*c*e + 
         Sqrt[-4*(c^2 - 3*b*d + 12*a*e)^3 + (2*c^3 - 9*b*c*d + 27*a*d^2 + 27*b^2*e - 72*a*c*e)^
            2])^(1/3)] - (1/2)*Sqrt[b^2/(2*a^2) - (4*c)/(3*a) - 
      (2^(1/3)*(c^2 - 3*b*d + 12*a*e))/(3*a*(2*c^3 - 9*b*c*d + 27*a*d^2 + 27*b^2*e - 72*a*c*e + 
          Sqrt[-4*(c^2 - 3*b*d + 12*a*e)^3 + (2*c^3 - 9*b*c*d + 27*a*d^2 + 27*b^2*e - 72*a*c*e)^
             2])^(1/3)) - (1/(3*2^(1/3)*a))*(2*c^3 - 9*b*c*d + 27*a*d^2 + 27*b^2*e - 72*a*c*e + 
         Sqrt[-4*(c^2 - 3*b*d + 12*a*e)^3 + (2*c^3 - 9*b*c*d + 27*a*d^2 + 27*b^2*e - 72*a*c*e)^
            2])^(1/3) - (-(b^3/a^3) + (4*b*c)/a^2 - (8*d)/a)/
       (4*Sqrt[b^2/(4*a^2) - (2*c)/(3*a) + (2^(1/3)*(c^2 - 3*b*d + 12*a*e))/
           (3*a*(2*c^3 - 9*b*c*d + 27*a*d^2 + 27*b^2*e - 72*a*c*e + 
              Sqrt[-4*(c^2 - 3*b*d + 12*a*e)^3 + (2*c^3 - 9*b*c*d + 27*a*d^2 + 27*b^2*e - 
                  72*a*c*e)^2])^(1/3)) + (1/(3*2^(1/3)*a))*(2*c^3 - 9*b*c*d + 27*a*d^2 + 
             27*b^2*e - 72*a*c*e + Sqrt[-4*(c^2 - 3*b*d + 12*a*e)^3 + (2*c^3 - 9*b*c*d + 
                 27*a*d^2 + 27*b^2*e - 72*a*c*e)^2])^(1/3)])], 
  -(b/(4*a)) - (1/2)*Sqrt[b^2/(4*a^2) - (2*c)/(3*a) + (2^(1/3)*(c^2 - 3*b*d + 12*a*e))/
       (3*a*(2*c^3 - 9*b*c*d + 27*a*d^2 + 27*b^2*e - 72*a*c*e + 
          Sqrt[-4*(c^2 - 3*b*d + 12*a*e)^3 + (2*c^3 - 9*b*c*d + 27*a*d^2 + 27*b^2*e - 72*a*c*e)^
             2])^(1/3)) + (1/(3*2^(1/3)*a))*(2*c^3 - 9*b*c*d + 27*a*d^2 + 27*b^2*e - 72*a*c*e + 
         Sqrt[-4*(c^2 - 3*b*d + 12*a*e)^3 + (2*c^3 - 9*b*c*d + 27*a*d^2 + 27*b^2*e - 72*a*c*e)^
            2])^(1/3)] + (1/2)*Sqrt[b^2/(2*a^2) - (4*c)/(3*a) - 
      (2^(1/3)*(c^2 - 3*b*d + 12*a*e))/(3*a*(2*c^3 - 9*b*c*d + 27*a*d^2 + 27*b^2*e - 72*a*c*e + 
          Sqrt[-4*(c^2 - 3*b*d + 12*a*e)^3 + (2*c^3 - 9*b*c*d + 27*a*d^2 + 27*b^2*e - 72*a*c*e)^
             2])^(1/3)) - (1/(3*2^(1/3)*a))*(2*c^3 - 9*b*c*d + 27*a*d^2 + 27*b^2*e - 72*a*c*e + 
         Sqrt[-4*(c^2 - 3*b*d + 12*a*e)^3 + (2*c^3 - 9*b*c*d + 27*a*d^2 + 27*b^2*e - 72*a*c*e)^
            2])^(1/3) - (-(b^3/a^3) + (4*b*c)/a^2 - (8*d)/a)/
       (4*Sqrt[b^2/(4*a^2) - (2*c)/(3*a) + (2^(1/3)*(c^2 - 3*b*d + 12*a*e))/
           (3*a*(2*c^3 - 9*b*c*d + 27*a*d^2 + 27*b^2*e - 72*a*c*e + 
              Sqrt[-4*(c^2 - 3*b*d + 12*a*e)^3 + (2*c^3 - 9*b*c*d + 27*a*d^2 + 27*b^2*e - 
                  72*a*c*e)^2])^(1/3)) + (1/(3*2^(1/3)*a))*(2*c^3 - 9*b*c*d + 27*a*d^2 + 
             27*b^2*e - 72*a*c*e + Sqrt[-4*(c^2 - 3*b*d + 12*a*e)^3 + (2*c^3 - 9*b*c*d + 
                 27*a*d^2 + 27*b^2*e - 72*a*c*e)^2])^(1/3)])], 
  -(b/(4*a)) + (1/2)*Sqrt[b^2/(4*a^2) - (2*c)/(3*a) + (2^(1/3)*(c^2 - 3*b*d + 12*a*e))/
       (3*a*(2*c^3 - 9*b*c*d + 27*a*d^2 + 27*b^2*e - 72*a*c*e + 
          Sqrt[-4*(c^2 - 3*b*d + 12*a*e)^3 + (2*c^3 - 9*b*c*d + 27*a*d^2 + 27*b^2*e - 72*a*c*e)^
             2])^(1/3)) + (1/(3*2^(1/3)*a))*(2*c^3 - 9*b*c*d + 27*a*d^2 + 27*b^2*e - 72*a*c*e + 
         Sqrt[-4*(c^2 - 3*b*d + 12*a*e)^3 + (2*c^3 - 9*b*c*d + 27*a*d^2 + 27*b^2*e - 72*a*c*e)^
            2])^(1/3)] - (1/2)*Sqrt[b^2/(2*a^2) - (4*c)/(3*a) - 
      (2^(1/3)*(c^2 - 3*b*d + 12*a*e))/(3*a*(2*c^3 - 9*b*c*d + 27*a*d^2 + 27*b^2*e - 72*a*c*e + 
          Sqrt[-4*(c^2 - 3*b*d + 12*a*e)^3 + (2*c^3 - 9*b*c*d + 27*a*d^2 + 27*b^2*e - 72*a*c*e)^
             2])^(1/3)) - (1/(3*2^(1/3)*a))*(2*c^3 - 9*b*c*d + 27*a*d^2 + 27*b^2*e - 72*a*c*e + 
         Sqrt[-4*(c^2 - 3*b*d + 12*a*e)^3 + (2*c^3 - 9*b*c*d + 27*a*d^2 + 27*b^2*e - 72*a*c*e)^
            2])^(1/3) + (-(b^3/a^3) + (4*b*c)/a^2 - (8*d)/a)/
       (4*Sqrt[b^2/(4*a^2) - (2*c)/(3*a) + (2^(1/3)*(c^2 - 3*b*d + 12*a*e))/
           (3*a*(2*c^3 - 9*b*c*d + 27*a*d^2 + 27*b^2*e - 72*a*c*e + 
              Sqrt[-4*(c^2 - 3*b*d + 12*a*e)^3 + (2*c^3 - 9*b*c*d + 27*a*d^2 + 27*b^2*e - 
                  72*a*c*e)^2])^(1/3)) + (1/(3*2^(1/3)*a))*(2*c^3 - 9*b*c*d + 27*a*d^2 + 
             27*b^2*e - 72*a*c*e + Sqrt[-4*(c^2 - 3*b*d + 12*a*e)^3 + (2*c^3 - 9*b*c*d + 
                 27*a*d^2 + 27*b^2*e - 72*a*c*e)^2])^(1/3)])], 
  -(b/(4*a)) + (1/2)*Sqrt[b^2/(4*a^2) - (2*c)/(3*a) + (2^(1/3)*(c^2 - 3*b*d + 12*a*e))/
       (3*a*(2*c^3 - 9*b*c*d + 27*a*d^2 + 27*b^2*e - 72*a*c*e + 
          Sqrt[-4*(c^2 - 3*b*d + 12*a*e)^3 + (2*c^3 - 9*b*c*d + 27*a*d^2 + 27*b^2*e - 72*a*c*e)^
             2])^(1/3)) + (1/(3*2^(1/3)*a))*(2*c^3 - 9*b*c*d + 27*a*d^2 + 27*b^2*e - 72*a*c*e + 
         Sqrt[-4*(c^2 - 3*b*d + 12*a*e)^3 + (2*c^3 - 9*b*c*d + 27*a*d^2 + 27*b^2*e - 72*a*c*e)^
            2])^(1/3)] + (1/2)*Sqrt[b^2/(2*a^2) - (4*c)/(3*a) - 
      (2^(1/3)*(c^2 - 3*b*d + 12*a*e))/(3*a*(2*c^3 - 9*b*c*d + 27*a*d^2 + 27*b^2*e - 72*a*c*e + 
          Sqrt[-4*(c^2 - 3*b*d + 12*a*e)^3 + (2*c^3 - 9*b*c*d + 27*a*d^2 + 27*b^2*e - 72*a*c*e)^
             2])^(1/3)) - (1/(3*2^(1/3)*a))*(2*c^3 - 9*b*c*d + 27*a*d^2 + 27*b^2*e - 72*a*c*e + 
         Sqrt[-4*(c^2 - 3*b*d + 12*a*e)^3 + (2*c^3 - 9*b*c*d + 27*a*d^2 + 27*b^2*e - 72*a*c*e)^
            2])^(1/3) + (-(b^3/a^3) + (4*b*c)/a^2 - (8*d)/a)/
       (4*Sqrt[b^2/(4*a^2) - (2*c)/(3*a) + (2^(1/3)*(c^2 - 3*b*d + 12*a*e))/
           (3*a*(2*c^3 - 9*b*c*d + 27*a*d^2 + 27*b^2*e - 72*a*c*e + 
              Sqrt[-4*(c^2 - 3*b*d + 12*a*e)^3 + (2*c^3 - 9*b*c*d + 27*a*d^2 + 27*b^2*e - 
                  72*a*c*e)^2])^(1/3)) + (1/(3*2^(1/3)*a))*(2*c^3 - 9*b*c*d + 27*a*d^2 + 
             27*b^2*e - 72*a*c*e + Sqrt[-4*(c^2 - 3*b*d + 12*a*e)^3 + (2*c^3 - 9*b*c*d + 
                 27*a*d^2 + 27*b^2*e - 72*a*c*e)^2])^(1/3)])]},
a-b,
a (-1)^b
}

End[]

CInstall["nvpolynomial"]

CProc["nvpolynomial",PolynomialQ]
CProc["nvpolynomial",Factor,FactorList,CharacterSet,Cyclotomic,CyclotomicQ,Decompose,PolynomialGCD,PolynomialLCM,Solve,ZRoot,GroebnerBasis,RootIntervals,PolynomialQuotient,PolynomialRemainder,PolynomialQuotientRemainder,UniGcdZ,UniGcdZp,UniLcmZ,UniLcmZp,UniGcdZpExt,UniDivModZp,UniFacZ,UniFacZp,UniAddZ,UniAddZp,UniMulZ,UniMulZp]

End[]
Begin["System`"]

CInstall["mugraphics"]

CProc["mugraphics",Plot,Plot3D,ListPlot,ParametricCurvePlot,ParametricRegionPlot,PolarPlot,ParametricCurvePlot3D,ParametricSurfacePlot3D,ContourPlot3D,ContourPlot]

SetAttributes[Plot, HoldAll]
SetAttributes[Plot3D, HoldAll]
SetAttributes[ListPlot, HoldAll]
SetAttributes[ParametricCurvePlot, HoldAll]
SetAttributes[ParametricRegionPlot, HoldAll]
SetAttributes[PolarPlot, HoldAll]
SetAttributes[ParametricCurvePlot3D, HoldAll]
SetAttributes[ParametricSurfacePlot3D, HoldAll]
SetAttributes[ContourPlot3D, HoldAll]
SetAttributes[ContourPlot, HoldAll]

End[]CInstall["mulink"]

Begin["nV`"]

CProc["mulink",`nV,`Eval,`Main,`mU];

End[]

System`FactorInteger[x_Integer] := nV`mU[nV`Eval[nV`nV[System`FactorInteger][x]]]
System`Expand[x_] := nV`mU[nV`Eval[nV`nV[System`Expand][x]]]
System`PolynomialGCD[p__] := nV`mU[nV`Eval[nV`nV[System`PolynomialGCD][p]]]
System`FactorList[x_] := nV`mU[nV`Eval[nV`nV[System`FactorList][x]]]
System`Factor[x_] := nV`mU[nV`Eval[nV`nV[System`Factor][x]]]
System`PolynomialLCM[p__] := nV`mU[nV`Eval[nV`nV[System`PolynomialLCM][p]]]
System`Collect[p_,x_] := nV`mU[nV`Eval[nV`nV[System`Collect][p,x]]]
System`CharacterSet[x_] := nV`mU[nV`Eval[nV`nV[System`CharacterSet][x]]]
System`PolynomialRemainder[f_,g_,x_] := nV`mU[nV`Eval[nV`nV[System`PolynomialRemainder][f,g,x]]]
System`PolynomialQuotient[f_,g_,x_] := nV`mU[nV`Eval[nV`nV[System`PolynomialQuotient][f,g,x]]]
System`PolynomialQuotientRemainder[f_,g_,x_] := nV`mU[nV`Eval[nV`nV[System`PolynomialQuotientRemainder][f,g,x]]]
Begin["System`"]

Sin[Pi] := 0
Sin[Pi/2] := 1
Sin[Pi/3] := Sqrt[3]/2
Sin[2 Pi/3] := Sqrt[3]/2
Sin[Pi/4] := Sqrt[2]/2
Sin[3 Pi/4] := Sqrt[2]/2
Sin[Pi/6] := 1/2
Sin[5 Pi/6] := 1/2
Sin[0] := 0
Sin[k_Integer] := -Sin[-k] /; k < 0
Sin[k_Rational] := -Sin[-k] /; k < 0
Sin[k_Integer Pi] := 0
Sin[k_Rational Pi] := -Sin[-k Pi] /; k < 0
(*
Sin[k_Rational Pi] := Module[{n = IntegerPart[k], x = Pretty[k], q, p},
q = x[[1]]; p = x[[2]];
If[n != 0, (-1)^n Sin[((q%p)/p) Pi],'Sin[k Pi]]] /; k > 0
*)
Sin[-x_] := -Sin[x]
Sin[Pi+x_] := -Sin[x]
Sin[k_Integer Pi+x_] := (-1)^k Sin[x]
Sin[Pi/2+x_] := Cos[x]

Cos[Pi] := -1
Cos[Pi/2] := 0
Cos[Pi/3] := 1/2
Cos[2 Pi/3] := -1/2
Cos[Pi/4] := Sqrt[2]/2
Cos[3 Pi/4] := -Sqrt[2]/2
Cos[Pi/6] := Sqrt[3]/2
Cos[5 Pi/6] := -1/2
Cos[0] := 1
Cos[k_Integer] := Cos[-k] /; k < 0
Cos[k_Rational] := Cos[-k] /; k < 0
Cos[k_Integer Pi] := (-1)^k
(*
Cos[k_Rational Pi] := Module[{n = IntegerPart[k], x = Pretty[k], q, p},
q = x[[1]]; p = x[[2]];
If[n != 0, (-1)^n Cos[((q%p)/p) Pi],'Cos[k Pi]]] /; k > 0
*)
Cos[-x_] := Cos[x]
Cos[Pi+x_] := -Cos[x]
Cos[k_Integer Pi+x_] := (-1)^k Cos[x]
Cos[Pi/2+x_] := -Sin[x]

Log[1] := 0
Exp[0] := 1
Exp[x_] := E^x /; Head[x] =!= Real
Log[1] := 0
Log[E] := 1
Log[E^n_] := n

End[]
(* ::Package:: *)

BeginPackage["System`"]

Unprotect[I, Complex, Re, Im, Abs, Conjugate, Arg];
I::usage = "I represents the imaginary unit Sqrt[-1].";
Complex::usage = "Complex is used as the head of complex numbers.";
Re::usage = "Re[z] gives the real part of a complex number z.";
Im::usage = "Im[z] gives the imaginary part of a complex number z";
Arg::usage = "Arg[z] gives the argument of a complex number z";
Conjugate::usage = "Conjugate[z] or z^\[Conjugate] gives the complex conjugate of z";

SetAttributes[I,{Locked,ReadProtected}];
SetAttributes[Re,{Listable,NumericFunction}];
SetAttributes[Im,{Listable,NumericFunction}];
SetAttributes[Conjugate,{Listable,NumericFunction}];
SetAttributes[Arg,{Listable,NumericFunction}];

CProc["musystem", Complex, ComplexRe, ComplexIm, ComplexConjugate]

Begin["`Private`"]


(*-----------------------------------------------------------*)
(* :Summary: 	Basic Definition of {I, Complex, Re, Im, Abs, Conjugate, Arg} for atom numbers
	It's better to move these basics into nV kernel.
*)

I := Complex[0,1];
(* LACKS: Switch
Should better replace with general z_Complex^x?NumberQ rules
I ^n_Integer := Switch[Mod[n,4],
		0,	1,
		1,	I,
		2,	-1,
		3,	-I
	];
Sqrt[x_?Negative] := Sqrt[-x] * I;
LACKS *)

(* Re[] and Im[] are only for complex numbers in mU Kernel *)
Re[x_Complex] := ComplexRe[x]
Im[x_Complex] := ComplexIm[x]
Re[x_Real] := x;
Im[x_Real] := 0;
Re[x_Rational] := x;
Im[x_Rational] := 0;
Re[x_Integer] := x;
Im[x_Integer] := 0;
(* Can be combined by | *)

Complex[x_,0] := x;
(*
x_Complex + y_?NumberQ := Complex[Re[x]+Re[y], Im[x]+Im[y]];
x_Complex * y_Complex := Complex[Re[x]*Re[y]-Im[x]*Im[y], Im[x]*Re[y]+Re[x]*Im[y]];
x_Complex * y_Real := Complex[Re[x]*y, Im[x]*y];
x_Complex * y_Rational := Complex[Re[x]*y, Im[x]*y];
x_Complex * y_Integer := Complex[Re[x]*y, Im[x]*y];
x_Complex ^ n_Integer?Function[#<0] := Complex[Re[x]/(Re[x]^2+Im[x]^2), -Im[x]/(Re[x]^2+Im[x]^2)]^(-n); (* Use Negative instead of Function[#<0] ? *)
*)

Abs[z_Complex] := Sqrt[Re[z]^2+Im[z]^2];

Arg[z_?NumberQ] := Module[
	{x=Re[z], y=Im[z]},
		If[x==0,
			If[y==0,
				0,
				If[y>0,
					Pi/2,
					-Pi/2
				]
			],
			If[x>0,
				ArcTan[y/x],
				If[y>=0,
					ArcTan[y/x]+Pi,
					ArcTan[y/x]-Pi
				]
			]
		]
	];

Conjugate[z_?NumberQ] := ComplexConjugate[z]
(*Conjugate[z_] := Re[z]-Im[z]*I /; NumberQ[z];*)

(*-----------------------------------------------------------*)
(* :Summary: 	Simplifications with Re[] and Im[]
                                                                      
  The basic idea is to allow variables to be assumed real.            
  To declare a variable x real, use                                   
                                                                      
  	x/: Im[x] = 0                                                   
                                                                      
  There are also rules for Arg[], Abs[], and Conjugate[].             
  Sometimes more simplifications are possible if variables are        
  known to be positive or negative (e.g., with Log[x]).                
  Such declarations can be made with                                 
                                                                      
  	p /: Positive[p] = True                                         
                                                                      
  There can be problems with multivalued functions, e.g., with
                                                                      
  			n /: Negative[n] = True                                        
  we get 
  			Im[Log[-n]] --> 2Pi                                         
                                                                      
  Functions can also be declared real-valued, meaning that f[x]       
  is real if x is real. To declare a function to be real valued, use                        
  	RealValued[f, g,...]                                            
                                                                      
  Reading in this file makes such definitions for some of the         
  built-in functions, for example the trigonometric ones.             
                                                                      
  See also ComplexExpand[].
*)

(* :Warning: Re, Im, Abs, Conjugate, and Arg redefined. *)

RealValued::usage = "RealValued[f] declares f to be a real-valued function
	(for real-valued arguments)."

(* LACKS: Positive, Negative, PatternTest
(* fundamental rules, Im[x]==0 serves as our test for 'reality' *)

Re[x_] := x  /; Im[x] == 0
Arg[x_] := 0 /; Positive[x]
Arg[x_] :=Pi /; Negative[x]
Conjugate[x_] :=  x /; Im[x] == 0
Conjugate[x_] := -x /; Re[x] == 0

(* there must not be a rule for Im[x] in terms of Re[x] !! *)

(* things known to be real *)

Im[Re[_]] := 0
Im[Im[_]] := 0
Im[Abs[_]] := 0
Im[Arg[_]] := 0
Im[x_?Positive] = 0
Im[x_?Negative] = 0

Im[x_ ^ y_] := 0 /; Positive[x] && Im[y] == 0

Im[Log[r_?Positive]] := 0

(* arithmetic *)

Re[x_Plus] := Re /@ x
Im[x_Plus] := Im /@ x

Re[x_ y_Plus] := Re[Expand[x y]]
Im[x_ y_Plus] := Im[Expand[x y]]

Re[x_ y_] := Re[x] Re[y] - Im[x] Im[y]
Im[x_ y_] := Re[x] Im[y] + Im[x] Re[y]

(* hidden products *)
Re[(x_ y_)^k_] := Re[x^k y^k]
Im[(x_ y_)^k_] := Im[x^k y^k]

(* nested powers *)
Re[(x_^y_)^k_] := Re[x^(y k)]
Im[(x_^y_)^k_] := Im[x^(y k)]

Re[ 1/x_ ] :=  Re[x] / (Re[x]^2 + Im[x]^2)
Im[ 1/x_ ] := -Im[x] / (Re[x]^2 + Im[x]^2)

Im[x_^2] := 2 Re[x] Im[x]

Re[ x_^n_Integer ] :=
	Block[{a, b},
		a = Round[n/2]; b = n-a;
		Re[x^a] Re[x^b] - Im[x^a] Im[x^b]
	]

Im[ x_^n_Integer ] :=
	Block[{a, b},
		a = Round[n/2]; b = n-a;
		Re[x^a] Im[x^b] + Im[x^a] Re[x^b]
	]

Re[x_Integer^n_Rational] := 0                /; IntegerQ[2n] && Negative[x]
Im[x_Integer^n_Rational] := 
	(-x)^n (-1)^((Numerator[n]-1)/2)     /; IntegerQ[2n] && Negative[x]

(* functions *)

Re[Log[r_?Negative]] := Log[-r]
Im[Log[r_?Negative]] := Pi
Re[Log[z_]] := Log[Abs[z]] /; Im[z] == 0
Re[Log[z_]] := (1/2) Log[Re[z]^2 + Im[z]^2]
Im[Log[z_]] := Arg[z]

Re[Log[a_ b_]] := Re[Log[a] + Log[b]]
Im[Log[a_ b_]] := Im[Log[a] + Log[b]]
Re[Log[a_^c_]] := Re[c Log[a]]
Im[Log[a_^c_]] := Im[c Log[a]]

Re[E^x_] := Cos[Im[x]] Exp[Re[x]]
Im[E^x_] := Sin[Im[x]] Exp[Re[x]]

Re[Sin[x_]] := Sin[Re[x]] Cosh[Im[x]]
Im[Sin[x_]] := Cos[Re[x]] Sinh[Im[x]]

Re[Cos[x_]] :=  Cos[Re[x]] Cosh[Im[x]]
Im[Cos[x_]] := -Sin[Re[x]] Sinh[Im[x]]

Re[Sinh[x_]] := Sinh[Re[x]] Cos[Im[x]]
Im[Sinh[x_]] := Cosh[Re[x]] Sin[Im[x]]

Re[Cosh[x_]] := Cosh[Re[x]] Cos[Im[x]]
Im[Cosh[x_]] := Sinh[Re[x]] Sin[Im[x]]

(* conjugates *)

Re[Conjugate[z_]] :=  Re[z]
Im[Conjugate[z_]] := -Im[z]

Conjugate[x_Plus]:= Conjugate /@ x
Conjugate[x_Times]:= Conjugate /@ x
Conjugate[x_^n_Integer]:= Conjugate[x]^n
Conjugate[Conjugate[x_]]:= x

(* real-valued rules *)

Attributes[RealValued] = {Listable, HoldAll}
Attributes[RealValuedQ] = {HoldFirst}

RealValued[f_Symbol] := (f/: RealValuedQ[f] = True; f)
RealValued[f__] := RealValued /@ {f}

Im[ (_?RealValuedQ)[_?(Im[#]==0&)...] ] := 0

(* define built-in function to be real-valued *)

DoRules[flist_] :=
	Block[{protected},
		protected = Unprotect[flist];
		RealValued[flist];
		Protect[Evaluate[protected]]
	]

DoRules[{Sin, Cos, Tan, ArcSin, ArcCos, ArcTan, ArcCot,
	 Sinh, Cosh, Tanh, ArcSinh, ArcCosh, ArcTanh,
	 Floor, Ceiling, Round, Sign, Factorial}]

(*-----------------------------------------------------------*)
(*	:Keywords:
	Positivity, Positive, Negative, NonNegative, NonNegativeQ
*)

(*	:Limitations:
	NonNegativeQ is not in any sense general.
*)

(*	:Discussion:

	The Mathematica functions Positive, Negative and NonNegative evaluate
	for numbers only. They can be used to define properties of symbols
	but for combinations of such symbols, the properties are not evaluated
	any further.
	
	The function NonNegativeQ (defined in this package) tries to find out
	if the result can not be negative. In such cases, it returns True,
	otherwise False.
*)

(*	:Summary:
	The function NonNegativeQ tries to find out if expressions can not be negative.
*)

NonNegativeQ::usage =
"NonNegativeQ[expr] returns True if expr is obviously not negative and else 
False. Properties of symbols can be defined with the functions Positive, 
NonNegative and Negative (e.g.: x /: Positive[x] = True). Real symbols can be 
declared by definitions like a /: Im[a] = 0";

RealTest[x_?AtomQ] := True /; NonNegativeQ[x]

RealTest[x_] := True /; Im[x] == 0 ||
  Positive[x] || NonNegative[x] || Negative[x]

RealTest[x_ + y_] := RealTest[x] && RealTest[y]

RealTest[x_ y_] := RealTest[x] && RealTest[y]

RealTest[x_^_Integer] := RealTest[x]

NonNegativeQ[x_] := True /; Positive[x] || NonNegative[x]

NonNegativeQ[x_?(!AtomQ[#]&)] := NNQ[Factor[x]]

NonNegativeQ[x_] := False

NNQ[x_ y_] := (NNQ[x] && NNQ[y]) || (NNQ[-x] && NNQ[-y]) /;
    x =!= -1 && y =!= -1

NNQ[x_ + y_] := NNQ[x] && NNQ[y]

NNQ[x_^_?OddQ] := NNQ[x] /; RealTest[x]

NNQ[-x_^_?OddQ] := NNQ[-x] /; RealTest[x]

NNQ[x_^_?EvenQ] := True /; RealTest[x]

NNQ[Abs[x_]] := True

NNQ[Sqrt[x_]] := True /; RealTest[x]

NNQ[Exp[x_]] := True /; RealTest[x]

NNQ[-x_] := True /;
  Positive[-x] || NonNegative[-x] || Negative[x]

NNQ[x_] := True /;
  Positive[x] || NonNegative[x] || Negative[-x]

NNQ[x_?AtomQ] := NonNegativeQ[x]

NNQ[x_] := False

(*-----------------------------------------------------------*)
(*:Keywords:
	Complex Symbols, Abs, Arg
*)

(* Discussion

	Background:
	The built in functions Re, Im, Conjugate, Abs and Arg evaluate for
	numbers only. The package Algebra`ReIm` extends Re, Im and Conjugate
	to symbols and expressions. This package also extends Abs and Arg.

	Mathematica does not know a priori if a symbol stands for a real or
	a complex number. A real symbol can be defined by:
	
	a /: Im[a] = 0;
	
	or, equivalently, by:
	
	Im[a] ^= 0;
	
	Abs and Arg often allow further simplification if information about
	the positivity of symbols is given. This can be done with the functions
	Positive, Negative and NonNegative or with NonNegativeQ from the
	package SKPackages`NonNegativeQ`, e.g.:
	Positive[a] ^= True;
*)

Abs[z_] := Re[z] /; Im[z] == 0 && NonNegativeQ[Re[z]]

Abs[z_] := -Re[z] /; Im[z] == 0 && NonNegativeQ[-Re[z]]

Abs[z_] := Im[z] /; Re[z] == 0 && NonNegativeQ[Im[z]]

Abs[z_] := -Im[z] /; Re[z] == 0 && NonNegativeQ[-Im[z]]

Abs[z_] := Sqrt[Re[z]^2 + Im[z]^2]

Arg[z_] := 0 /; NonNegativeQ[z]

Arg[z_] := Pi /; NonNegativeQ[-z]

Arg[z_] := Pi/2 /; Re[z] == 0 && NonNegativeQ[Im[z]]

Arg[z_] := -Pi/2 /; Re[z] == 0 && NonNegativeQ[-Im[z]]

Arg[z_] := ArcTan[Im[z]/Re[z]] /; Re[z] =!= 0 && Im[z] =!= 0

LACKS *)


End[]

Protect[I, Complex, Re, Im, Abs, Conjugate, Arg];

EndPackage[]
(* ::Package:: *)

Begin["System`"]

(*StringOperations.cpp*)
CProc["musystem",StringDrop]
CProc["musystem",StringReplace]

End[]
(* ::Package:: *)

Begin["System`"]

{\[Infinity],\[Pi],E,I} = {Infinity,Pi,E,I}
Simplify[x_] := Expand[x]
FullSimplify[x_]:=Simplify[x]
Usage[x_Symbol] := Information[x, LongForm->False]
mU := True
PossibleZeroQ[x_] := Simplify[x] == 0
ZeroQ[x_] := PossibleZeroQ[x]

End[]

(*
simpson[f_, a_, b_, n_] := 
  Module[{h = N[(b - a)/n], u, v, r}, 
   u = Table[N[f[a + i h]], {i, 0, n}];
   v = Table[u[[i]] + u[[i + 1]], {i, n}];
   r = u[[1]] + u[[n + 1]] + 2 v[[1]];
   Do[r += 2 u[[i]] + 2 v[[i]], {i, 2, n}]; (h/6) r];
f[x_] := 1/(x^2 + 1);
simpson[f, 0, 1, 200]


<<"../Calculus/cn/init.m"
Calculus`Rubi`Int[x,x]
*)
(* ::Package:: *)

Begin["System`"]

Numerator::usage = "Numerator[expr] gives the numerator of expr.";
Denominator::usage = "Denominator[expr] gives the denominator of expr.";
Cancel::usage = "Cancel[expr] cancels out common factors in the numerator and denominator of expr.";
Together::usage = "Together[expr] puts terms in a sum over a common denominator, and cancels factors in the result.";
Apart::usage = "Apart[expr] rewrites a rational expression as a sum of terms with minimal denominators. 
Apart[expr,var] treats all variables other than var as constants.";

SetAttributes[Numerator,Listable];
SetAttributes[Denominator,Listable];
SetAttributes[Cancel,Listable];
SetAttributes[Together,Listable];
SetAttributes[Apart,Listable];

CProc["musystem",(*RationalQ,*)RationalNumerator,RationalDenominator]

Begin["`Private`"]


Numerator[x_Rational] := RationalNumerator[x]
Numerator[f_]:=Module[
	{e=f},
	If[Head[f]=!=Power && Head[f]=!=Times && Head[f]=!=Exp,
		If[Head[f]===List,
			Return[Numerator/@f],
			Return[f]
		]
	];
	e = e//. Power[b_,n_]/;n<0 -> 1;
	e = e//. Power[b_,n_*c_]/;n<0 -> 1;
	e = e//. Power[b_,n_*c_+d_]/;n<0 -> Power[b,d];
	(* If Exp[x]=!=E^x in mU kernel:*)
	e = e//. Exp[n_]/;n<0 -> 1;
	e = e//. Exp[n_*c_]/;n<0 -> 1;
	e = e//. Exp[n_*c_+d_]/;n<0 -> Exp[d];
	Return[e];
]

Denominator[x_Rational] := RationalDenominator[x]
Denominator[f_]:=Module[
	{},
	If[f==0, 1, Numerator[f]/f]
]

(* Useful when single variable*)
Cancel[f_] := Module[
	{e=f, num, den, gcd, v},
	(*Print["Cancel: ",f];*)
	If[AtomQ[e],Return[e]];
	If[Head[e]===List || Head[e]===Plus,
		(* Head[e]=!=Times && Head[e]=!=Power leads to unknown error *)
		(* ? TODO: /@ only when meets List, Equation, Inequality, Logic Function *)
		Return[Cancel/@e]
	];
	num = Numerator[e];
	den = Denominator[e];
	v = First[Variables[e]];
	If[!PolynomialQ[num, v], Return[e]];
	If[!PolynomialQ[den, v], Return[e]];
	gcd = PolynomialGCD[num, den];
	(* Is this ok to choose an arbitrary variable to do poly divide? *)
	num = PolynomialQuotient[num, gcd, v];
	den = PolynomialQuotient[den, gcd, v];
	Return[num/den];
]

Together[f_] := Module[
	{denom, lcm, num, v, i},
	If[Head[f]===List || Head[f]===Times,
		(* Head[f]=!=Plus leads to unknown error *)
		(* ? TODO: /@ only when meets List, Equation, Inequality, Logic Function *)
		Return[Together/@f]
	];
	(*Print[f];*)
	If[Head[f]===Plus,
		(*Print[6];*)
		denom = Denominator[List@@f];
		(*Print["denom=",denom];*)
		lcm = PolynomialLCM@@denom;
		v=Variables[lcm];
		(*Print[7];*)
		If[Length[v]==0, Return[f]];
		v = First[v];
		Do[
			denom[[i]] = PolynomialQuotient[lcm, denom[[i]], v], (* it's better to use multi-var exact div *)
			{i,Length[denom]}
		];
		(*Print[8];*)
		num = Expand[Plus@@(Numerator[List@@f]*denom)];
		Cancel[num/lcm],
		(*Print[11];*)
		f
	]
]

(* Given a Euclidean domain D and a,b,c\[Element]D with c\[Element](a,b), return s,t,g\[Element]D such that g=gcd(a,b) and s*a+t*b=g *)
ExtendedEuclidean[A_, B_, x_Symbol] := Module[
	{a=Expand[A],b=Expand[B],s,t,g,q,r,a1,b1,r1},
	a1=1;b1=0;
	While[b=!=0,
		{q,r}=PolynomialQuotientRemainder[a,b,x];
		a=b;b=Expand[r];
		r1=a1-q*b1;a1=b1;b1=r1;
	];
	{s,g}={a1,a};
	{t,r}=PolynomialQuotientRemainder[g-s*A,B,x];
	{s,t,g}
]

(* return {s,t} so that s*a+t*b=c *)
ExtendedEuclidean[a_, b_, c_, x_Symbol] := Module[
	{g,s,t,q,r},
	(*Print["{a,b,c}=",{a,b,c}];*)
	{s,t,g}=ExtendedEuclidean[a,b,x];
	(*Print[4];*)
	q=PolynomialQuotient[c,g,x];
	(* deal with exception that r!=0 *)
	{s,t}=q*{s,t};
	{q,r}=PolynomialQuotientRemainder[s,b,x];
	(*Print[5];*)
	{r,Together[t+q*a]}
]

PartialFraction[A_, d_List, x_Symbol] := Module[
	{a0, a1, ai, b0, r, t},
	(*Print["{A,d}=",{A,d}];*)
	{a0,r} = PolynomialQuotientRemainder[A, Times@@d, x];
	If[Length[d]==1, Return[{a0,{r}}]];
	(*Print[1];*)
	{a1,t} = ExtendedEuclidean[Times@@Rest[d], First[d], r, x];
	(*Print[2];*)
	{b0,ai} = PartialFraction[t, Rest[d], x];
	(*Print[3];*)
	{a0+b0,Flatten[{a1,ai}]}
]

(* reference: Bronstein P17 *)
PartialFraction[A_, d_List, e_List, x_Symbol] := Module[
	{a0, a, n=Length[d], c, i, j},
	{a0, a} = PartialFraction[A, Power[d,e], x];
	(*Print["{a0,a}=",{a0,a}];*)
	c = Table[0,{n}];
	Do[
		c[[i]] = Table[0,{e[[i]]}];
		Do[
			{a[[i]], c[[i,j]]} = PolynomialQuotientRemainder[a[[i]], d[[i]], x]
			,{j,e[[i]],1,-1}
		];
		a[[0]] = a[[0]]+a[[i]];
		,{i,n}
	];
	{a0, c}
] /; Length[d]==Length[e]

Apart[f_, x_Symbol] := Module[
	{F=Cancel[f], lst, d, e, ans, c, i, j},
	If[Head[F]===Plus,
		Return[Apart/@F]
	];
	lst = FactorList[Denominator[F]];
	d = (#[[1]]&)/@lst(*lst[[All,1]]*);
	e = (#[[2]]&)/@lst(*lst[[All,2]]*);
	{ans, c} = PartialFraction[Numerator[F], d, e, x];
	Do[
		Do[
			ans = ans + c[[i,j]]*Power[d[[i]],-j]
			,{j,e[[i]]}
		]
		,{i,Length[d]}
	];
	ans
]

Apart[f_] := Module[
	{F=Cancel[f]},
	If[Head[f]===List,
		Apart/@F,
		If[Length[Variables[F]] > 0,
			Apart[F, Variables[F][[1]]],
			F
		]
	]
]


End[]

Protect[Numerator,Denominator,Cancel,Together,Apart];

End[]
{
{"<<","\\ll "},
{">>","\\gg "},
{">>>","\\ggg "},
{":=","\\text{:=}"},
{"^=","\\text{^{\\wedge}$=}"},
{"^:=","\\text{^{\\wedge}$:=}"},
{"=.","\\text{=.}"},
{"//","\\text{//}"},
{"+=","\\text{+=}"},
{"-=","\\text{-=}"},
{"*=","\\text{*=}"},
{"/=","\\text{/=}"},
{"%=","\\text{\\%=}"},
{"=>","\\Rightarrow "},
{"/.","\\text{/.}"},
{"//.","\\text{//.}"},
{"->","\\to "},
{":>",":\\to "},
{"/;","\\text{/;}"},
{"~~","\\sim\\sim "},
{"..","\\text{..}"},
{"||","\\lor "},
{"&&","\\land "},
{"===","\\text{===}"},
{"=!=","\\text{=!=}"},
{"==","="},
{"<=","\\leq "},
{">=","\\geq "},
{"!=","\\neq "},
{"<>","<>"},
{"/@","\\text{/@}"},
{"//@","\\text{//@}"},
{"@@","\\text{@@}"},
{"++","\\text{++}"},
{"--","\\text{--}"},
{"__","\\text{\\_\\_}"},
{"##","\\text{\\#\\#}"},
{"::","\\text{::}"},
{"\[AAcute]","\\text{\\' a}"},
{"\[ABar]","\\text{\\= a}"},
{"\[ACup]","\\text{\\u a}"},
{"\[ADoubleDot]","\\text{\\\" a}"},
{"\[AE]","\\text{\\ae}"},
{"\[AGrave]","\\text{\\` a}"},
{"\[AHat]","\\text{\\^ a}"},
{"\[Aleph]","\\aleph "},
{"\[AliasDelimiter]","\\vdots "},
{"\[AliasIndicator]","\\vdots "},
{"\[AlignmentMarker]",""},
{"\[Alpha]","\\alpha "},
{"\[AltKey]","\\fbox{ALT}"},
{"\[And]","\\land "},
{"\[Angle]","\\angle "},
{"\[Angstrom]","\\text{\\AA}"},
{"\[ARing]","\\text{\\aa}"},
{"\[AscendingEllipsis]",".\\cdot{}^{\\cdot}"},
{"\[ATilde]","\\text{\\~ a}"},
{"\[AutoLeftMatch]",""},
{"\[AutoRightMatch]",""},
{"\[Backslash]","\\backslash "},
{"\[BeamedEighthNote]","\\mathsym{\\BeamedEighthNote}"},
{"\[BeamedSixteenthNote]","\\mathsym{\\BeamedSixteenthNote}"},
{"\[Because]","\\because "},
{"\[Bet]","\\beth "},
{"\[Beta]","\\beta "},
{"\[Breve]","\\smallsmile "},
{"\[Bullet]","\\bullet "},
{"\[CAcute]","\\text{\\' c}"},
{"\[CapitalAAcute]","\\text{\\' A}"},
{"\[CapitalABar]","\\text{\\= A}"},
{"\[CapitalACup]","\\text{\\u A}"},
{"\[CapitalADoubleDot]","\\text{\\\" A}"},
{"\[CapitalAE]","\\text{\\AE}"},
{"\[CapitalAGrave]","\\text{\\` A}"},
{"\[CapitalAHat]","\\text{\\^ A}"},
{"\[CapitalAlpha]","A"},
{"\[CapitalARing]","\\text{\\AA}"},
{"\[CapitalATilde]","\\text{\\~ A}"},
{"\[CapitalBeta]","B"},
{"\[CapitalCAcute]","\\text{\\' C}"},
{"\[CapitalCCedilla]","\\text{\\c C}"},
{"\[CapitalCHacek]","\\text{\\v C}"},
{"\[CapitalChi]","X"},
{"\[CapitalDelta]","\\Delta "},
{"\[CapitalDifferentialD]","\\mathbb{D}"},
{"\[CapitalDigamma]","F"},
{"\[CapitalEAcute]","\\text{\\' E}"},
{"\[CapitalEBar]","\\text{\\= E}"},
{"\[CapitalECup]","\\text{\\u E}"},
{"\[CapitalEDoubleDot]","\\text{\\\" E}"},
{"\[CapitalEGrave]","\\text{\\` E}"},
{"\[CapitalEHat]","\\text{\\^ E}"},
{"\[CapitalEpsilon]","E"},
{"\[CapitalEta]","H"},
{"\[CapitalEth]","\\mathsym{\\CapitalEth}"},
{"\[CapitalGamma]","\\Gamma "},
{"\[CapitalIAcute]","\\text{\\' I}"},
{"\[CapitalICup]","\\text{\\u I}"},
{"\[CapitalIDoubleDot]","\\text{\\\" I}"},
{"\[CapitalIGrave]","\\text{\\` I}"},
{"\[CapitalIHat]","\\text{\\^ I}"},
{"\[CapitalIota]","I"},
{"\[CapitalKappa]","K"},
{"\[CapitalKoppa]","\\mathsym{\\CapitalKoppa}"},
{"\[CapitalLambda]","\\Lambda "},
{"\[CapitalLSlash]","\\text{\\L}"},
{"\[CapitalMu]","M"},
{"\[CapitalNTilde]","\\text{\\~ N}"},
{"\[CapitalNu]","N"},
{"\[CapitalOAcute]","\\text{\\' O}"},
{"\[CapitalODoubleAcute]","\\text{\\H O}"},
{"\[CapitalODoubleDot]","\\text{\\\" O}"},
{"\[CapitalOGrave]","\\text{\\` O}"},
{"\[CapitalOHat]","\\text{\\^ O}"},
{"\[CapitalOmega]","\\Omega "},
{"\[CapitalOmicron]","O"},
{"\[CapitalOSlash]","\\text{\\O}"},
{"\[CapitalOTilde]","\\text{\\~ O}"},
{"\[CapitalPhi]","\\Phi "},
{"\[CapitalPi]","\\Pi "},
{"\[CapitalPsi]","\\Psi "},
{"\[CapitalRho]","P"},
{"\[CapitalSampi]","\\mathsym{\\CapitalSampi}"},
{"\[CapitalSHacek]","\\text{\\v S}"},
{"\[CapitalSigma]","\\Sigma "},
{"\[CapitalStigma]","\\varsigma"},
{"\[CapitalTau]","T"},
{"\[CapitalTheta]","\\Theta "},
{"\[CapitalThorn]","\\mathsym{\\CapitalThorn}"},
{"\[CapitalUAcute]","\\text{\\' U}"},
{"\[CapitalUDoubleAcute]","\\text{\\H U}"},
{"\[CapitalUDoubleDot]","\\text{\\\" U}"},
{"\[CapitalUGrave]","\\text{\\` U}"},
{"\[CapitalUHat]","\\text{\\^ U}"},
{"\[CapitalUpsilon]","\\Upsilon "},
{"\[CapitalXi]","\\Xi "},
{"\[CapitalYAcute]","\\text{\\' Y}"},
{"\[CapitalZeta]","Z"},
{"\[Cap]","\\frown "},
{"\[CCedilla]","\\text{\\c c}"},
{"\[Cedilla]","\\text{\\c }"},
{"\[CenterDot]","\\cdot "},
{"\[CenterEllipsis]","\\cdots "},
{"\[Cent]","\\not {c}"},
{"\[CHacek]","\\text{\\v c}"},
{"\[Checkmark]","\\checkmark "},
{"\[Chi]","\\chi "},
{"\[CircleDot]","\\odot "},
{"\[CircleMinus]","\\ominus "},
{"\[CirclePlus]","\\oplus "},
{"\[CircleTimes]","\\otimes "},
{"\[ClockwiseContourIntegral]","\\oint "},
{"\[CloseCurlyDoubleQuote]","\\text{''}"},
{"\[CloseCurlyQuote]","\\text{'}"},
{"\[CloverLeaf]","\\mathsym{\\CloverLeaf}"},
{"\[ClubSuit]","\\clubsuit "},
{"\[Colon]",":"},
{"\[CommandKey]","\\fbox{CMD}"},
{"\[Congruent]","\\equiv "},
{"\[Conjugate]","\\unicode{f3c8}"},
{"\[ConjugateTranspose]","\\unicode{f3c9}"},
{"\[ConstantC]","c"},
{"\[Continuation]","\\ddots "},
{"\[ContourIntegral]","\\oint "},
{"\[ControlKey]","\\fbox{CTRL}"},
{"\[Coproduct]","\\coprod "},
{"\[Copyright]","\\copyright "},
{"\[CounterClockwiseContourIntegral]","\\oint "},
{"\[Cross]","\\times "},
{"\[CupCap]","\\overset{\\smile}{\\frown}"},
{"\[Cup]","\\smile "},
{"\[CurlyCapitalUpsilon]","\\varUpsilon "},
{"\[CurlyEpsilon]","\\varepsilon "},
{"\[CurlyKappa]","\\varkappa "},
{"\[CurlyPhi]","\\varphi "},
{"\[CurlyPi]","\\varpi "},
{"\[CurlyRho]","\\varrho "},
{"\[CurlyTheta]","\\vartheta "},
{"\[Currency]","\\mathsym{\\Currency}"},
{"\[Dagger]","\\dagger "},
{"\[Dalet]","\\daleth "},
{"\[Dash]","--"},
{"\[Degree]","{}^{\\circ}"},
{"\[DeleteKey]","\\fbox{DEL}"},
{"\[Del]","\\nabla "},
{"\[Delta]","\\delta "},
{"\[DescendingEllipsis]","\\ddots"},
{"\[Diameter]","\\varnothing "},
{"\[Diamond]","\\diamond "},
{"\[DiamondSuit]","\\diamondsuit "},
{"\[DifferenceDelta]","\\unicode{f4a4}"},
{"\[DifferentialD]","d"},
{"\[Digamma]","\\digamma "},
{"\[DiscreteRatio]","\\unicode{f4a5}"},
{"\[DiscreteShift]","\\unicode{f4a3}"},
{"\[DiscretionaryHyphen]","\\unicode{00ad}"},
{"\[DiscretionaryLineSeparator]","\\unicode{f76e}"},
{"\[DiscretionaryParagraphSeparator]","\\unicode{f76f}"},
{"\[Divide]","\\div "},
{"\[DotEqual]","\\doteq "},
{"\[DotlessI]","\\text{\\i}"},
{"\[DotlessJ]","\\text{\\j}"},
{"\[DottedSquare]","\\square"},
{"\[DoubleContourIntegral]","\\oint "},
{"\[DoubleDagger]","\\ddagger "},
{"\[DoubledGamma]","\\gamma "},
{"\[DoubleDownArrow]","\\Downarrow "},
{"\[DoubledPi]","\\pi "},
{"\[DoubleLeftArrow]","\\Leftarrow "},
{"\[DoubleLeftRightArrow]","\\Leftrightarrow "},
{"\[DoubleLeftTee]","=|"},
{"\[DoubleLongLeftArrow]","\\Longleftarrow "},
{"\[DoubleLongLeftRightArrow]","\\Longleftrightarrow "},
{"\[DoubleLongRightArrow]","\\Longrightarrow "},
{"\[DoublePrime]","\\prime\\prime "},
{"\[DoubleRightArrow]","\\Rightarrow "},
{"\[DoubleRightTee]","\\vDash "},
{"\[DoubleStruckA]","\\mathbf{a}"},
{"\[DoubleStruckB]","\\mathbf{b}"},
{"\[DoubleStruckC]","\\mathbf{c}"},
{"\[DoubleStruckCapitalA]","\\mathbb{A}"},
{"\[DoubleStruckCapitalB]","\\mathbb{B}"},
{"\[DoubleStruckCapitalC]","\\mathbb{C}"},
{"\[DoubleStruckCapitalD]","\\mathbb{D}"},
{"\[DoubleStruckCapitalE]","\\mathbb{E}"},
{"\[DoubleStruckCapitalF]","\\mathbb{F}"},
{"\[DoubleStruckCapitalG]","\\mathbb{G}"},
{"\[DoubleStruckCapitalH]","\\mathbb{H}"},
{"\[DoubleStruckCapitalI]","\\mathbb{I}"},
{"\[DoubleStruckCapitalJ]","\\mathbb{J}"},
{"\[DoubleStruckCapitalK]","\\mathbb{K}"},
{"\[DoubleStruckCapitalL]","\\mathbb{L}"},
{"\[DoubleStruckCapitalM]","\\mathbb{M}"},
{"\[DoubleStruckCapitalN]","\\mathbb{N}"},
{"\[DoubleStruckCapitalO]","\\mathbb{O}"},
{"\[DoubleStruckCapitalP]","\\mathbb{P}"},
{"\[DoubleStruckCapitalQ]","\\mathbb{Q}"},
{"\[DoubleStruckCapitalR]","\\mathbb{R}"},
{"\[DoubleStruckCapitalS]","\\mathbb{S}"},
{"\[DoubleStruckCapitalT]","\\mathbb{T}"},
{"\[DoubleStruckCapitalU]","\\mathbb{U}"},
{"\[DoubleStruckCapitalV]","\\mathbb{V}"},
{"\[DoubleStruckCapitalW]","\\mathbb{W}"},
{"\[DoubleStruckCapitalX]","\\mathbb{X}"},
{"\[DoubleStruckCapitalY]","\\mathbb{Y}"},
{"\[DoubleStruckCapitalZ]","\\mathbb{Z}"},
{"\[DoubleStruckD]","\\mathbf{d}"},
{"\[DoubleStruckE]","\\mathbf{e}"},
{"\[DoubleStruckEight]","\\mathbf{8}"},
{"\[DoubleStruckF]","\\mathbf{f}"},
{"\[DoubleStruckFive]","\\mathbf{5}"},
{"\[DoubleStruckFour]","\\mathbf{4}"},
{"\[DoubleStruckG]","\\mathbf{g}"},
{"\[DoubleStruckH]","\\mathbf{h}"},
{"\[DoubleStruckI]","\\mathbf{i}"},
{"\[DoubleStruckJ]","\\mathbf{j}"},
{"\[DoubleStruckK]","\\Bbbk "},
{"\[DoubleStruckL]","\\mathbf{l}"},
{"\[DoubleStruckM]","\\mathbf{m}"},
{"\[DoubleStruckN]","\\mathbf{n}"},
{"\[DoubleStruckNine]","\\mathbf{9}"},
{"\[DoubleStruckO]","\\mathbf{o}"},
{"\[DoubleStruckOne]","\\mathbf{1}"},
{"\[DoubleStruckP]","\\mathbf{p}"},
{"\[DoubleStruckQ]","\\mathbf{q}"},
{"\[DoubleStruckR]","\\mathbf{r}"},
{"\[DoubleStruckS]","\\mathbf{s}"},
{"\[DoubleStruckSeven]","\\mathbf{7}"},
{"\[DoubleStruckSix]","\\mathbf{6}"},
{"\[DoubleStruckT]","\\mathbf{t}"},
{"\[DoubleStruckThree]","\\mathbf{3}"},
{"\[DoubleStruckTwo]","\\mathbf{2}"},
{"\[DoubleStruckU]","\\mathbf{u}"},
{"\[DoubleStruckV]","\\mathbf{v}"},
{"\[DoubleStruckW]","\\mathbf{w}"},
{"\[DoubleStruckX]","\\mathbf{x}"},
{"\[DoubleStruckY]","\\mathbf{y}"},
{"\[DoubleStruckZ]","\\mathbf{z}"},
{"\[DoubleStruckZero]","\\mathbf{0}"},
{"\[DoubleUpArrow]","\\Uparrow "},
{"\[DoubleUpDownArrow]","\\Updownarrow "},
{"\[DoubleVerticalBar]","\\parallel "},
{"\[DownArrowBar]","\\underline{\\downarrow}"},
{"\[DownArrow]","\\downarrow "},
{"\[DownArrowUpArrow]","\\downarrow \\uparrow "},
{"\[DownBreve]","\\smallfrown "},
{"\[DownExclamation]","\\text{!`}"},
{"\[DownLeftRightVector]","\\leftharpoondown \\rightharpoondown "},
{"\[DownLeftTeeVector]","\\leftharpoondown |"},
{"\[DownLeftVector]","\\leftharpoondown "},
{"\[DownLeftVectorBar]","|\\leftharpoondown "},
{"\[DownPointer]","\\blacktriangledown "},
{"\[DownQuestion]","\\text{?`}"},
{"\[DownRightTeeVector]","|\\rightharpoondown "},
{"\[DownRightVector]","\\rightharpoondown "},
{"\[DownRightVectorBar]","\\rightharpoondown |"},
{"\[DownTeeArrow]","\\bar{\\downarrow}"},
{"\[DownTee]","\\top "},
{"\[EAcute]","\\text{\\' e}"},
{"\[Earth]","\\mathsym{\\Earth}"},
{"\[EBar]","\\text{\\= e}"},
{"\[ECup]","\\text{\\u e}"},
{"\[EDoubleDot]","\\text{\\\" e}"},
{"\[EGrave]","\\text{\\` e}"},
{"\[EHat]","\\text{\\^ e}"},
{"\[EighthNote]","\\mathsym{\\EighthNote}"},
{"\[Element]","\\in "},
{"\[Ellipsis]","\\ldots "},
{"\[EmptyCircle]","\\bigcirc "},
{"\[EmptyDiamond]","\\lozenge "},
{"\[EmptyDownTriangle]","\\triangledown "},
{"\[EmptyRectangle]","\\square"},
{"\[EmptySet]","\\emptyset "},
{"\[EmptySmallCircle]","\\circ "},
{"\[EmptySmallSquare]","\\square"},
{"\[EmptySquare]","\\square "},
{"\[EmptyUpTriangle]","\\triangle "},
{"\[EmptyVerySmallSquare]","\\square"},
{"\[EnterKey]","\\fbox{ENTER}"},
{"\[EntityEnd]","\\fbox{;}"},
{"\[EntityStart]","\\fbox{\\&}"},
{"\[Epsilon]","\\epsilon "},
{"\[Equal]","=="},
{"\[EqualTilde]","\\eqsim "},
{"\[Equilibrium]","\\rightleftharpoons "},
{"\[Equivalent]","\\unicode{29e6}"},
{"\[ErrorIndicator]","\\fbox{$\\smallfrown$}"},
{"\[EscapeKey]","\\fbox{ESC}"},
{"\[Eta]","\\eta "},
{"\[Eth]","\\eth "},
{"\[Euro]","\\matkfrac{E}"},
{"\[Exists]","\\exists "},
{"\[ExponentialE]","e"},
{"\[FiLigature]","fi"},
{"\[FilledCircle]","\\bullet"},
{"\[FilledDiamond]","\\blacklozenge "},
{"\[FilledDownTriangle]","\\blacktriangledown "},
{"\[FilledLeftTriangle]","\\blacktriangleleft "},
{"\[FilledRectangle]","\\blacksquare"},
{"\[FilledRightTriangle]","\\blacktriangleright "},
{"\[FilledSmallCircle]","\\bullet "},
{"\[FilledSmallSquare]","\\blacksquare"},
{"\[FilledSquare]","\\blacksquare "},
{"\[FilledUpTriangle]","\\blacktriangle "},
{"\[FilledVerySmallSquare]","\\square"},
{"\[FinalSigma]","\\varsigma "},
{"\[FirstPage]","|\\blacktriangleleft "},
{"\[FivePointedStar]","\\star "},
{"\[Flat]","\\flat "},
{"\[FlLigature]","fl"},
{"\[Florin]","\\mathit{f}"},
{"\[ForAll]","\\forall "},
{"\[FormalA]","\\unicode{f800}"},
{"\[FormalB]","\\unicode{f801}"},
{"\[FormalC]","\\unicode{f802}"},
{"\[FormalCapitalA]","\\unicode{f81a}"},
{"\[FormalCapitalB]","\\unicode{f81b}"},
{"\[FormalCapitalC]","\\unicode{f81c}"},
{"\[FormalCapitalD]","\\unicode{f81d}"},
{"\[FormalCapitalE]","\\unicode{f81e}"},
{"\[FormalCapitalF]","\\unicode{f81f}"},
{"\[FormalCapitalG]","\\unicode{f820}"},
{"\[FormalCapitalH]","\\unicode{f821}"},
{"\[FormalCapitalI]","\\unicode{f822}"},
{"\[FormalCapitalJ]","\\unicode{f823}"},
{"\[FormalCapitalK]","\\unicode{f824}"},
{"\[FormalCapitalL]","\\unicode{f825}"},
{"\[FormalCapitalM]","\\unicode{f826}"},
{"\[FormalCapitalN]","\\unicode{f827}"},
{"\[FormalCapitalO]","\\unicode{f828}"},
{"\[FormalCapitalP]","\\unicode{f829}"},
{"\[FormalCapitalQ]","\\unicode{f82a}"},
{"\[FormalCapitalR]","\\unicode{f82b}"},
{"\[FormalCapitalS]","\\unicode{f82c}"},
{"\[FormalCapitalT]","\\unicode{f82d}"},
{"\[FormalCapitalU]","\\unicode{f82e}"},
{"\[FormalCapitalV]","\\unicode{f82f}"},
{"\[FormalCapitalW]","\\unicode{f830}"},
{"\[FormalCapitalX]","\\unicode{f831}"},
{"\[FormalCapitalY]","\\unicode{f832}"},
{"\[FormalCapitalZ]","\\unicode{f833}"},
{"\[FormalD]","\\unicode{f803}"},
{"\[FormalE]","\\unicode{f804}"},
{"\[FormalF]","\\unicode{f805}"},
{"\[FormalG]","\\unicode{f806}"},
{"\[FormalH]","\\unicode{f807}"},
{"\[FormalI]","\\unicode{f808}"},
{"\[FormalJ]","\\unicode{f809}"},
{"\[FormalK]","\\unicode{f80a}"},
{"\[FormalL]","\\unicode{f80b}"},
{"\[FormalM]","\\unicode{f80c}"},
{"\[FormalN]","\\unicode{f80d}"},
{"\[FormalO]","\\unicode{f80e}"},
{"\[FormalP]","\\unicode{f80f}"},
{"\[FormalQ]","\\unicode{f810}"},
{"\[FormalR]","\\unicode{f811}"},
{"\[FormalS]","\\unicode{f812}"},
{"\[FormalT]","\\unicode{f813}"},
{"\[FormalU]","\\unicode{f814}"},
{"\[FormalV]","\\unicode{f815}"},
{"\[FormalW]","\\unicode{f816}"},
{"\[FormalX]","\\unicode{f817}"},
{"\[FormalY]","\\unicode{f818}"},
{"\[FormalZ]","\\unicode{f819}"},
{"\[FreakedSmiley]","\\mathsym{\\FreakedSmiley}"},
{"\[Function]","\\unicode{f4a1}"},
{"\[Gamma]","\\gamma "},
{"\[Gimel]","\\gimel "},
{"\[GothicA]","\\mathfrak{a}"},
{"\[GothicB]","\\mathfrak{b}"},
{"\[GothicC]","\\mathfrak{c}"},
{"\[GothicCapitalA]","\\mathfrak{A}"},
{"\[GothicCapitalB]","\\mathfrak{B}"},
{"\[GothicCapitalC]","\\mathfrak{C}"},
{"\[GothicCapitalD]","\\mathfrak{D}"},
{"\[GothicCapitalE]","\\mathfrak{E}"},
{"\[GothicCapitalF]","\\mathfrak{F}"},
{"\[GothicCapitalG]","\\mathfrak{G}"},
{"\[GothicCapitalH]","\\mathfrak{H}"},
{"\[GothicCapitalI]","\\mathfrak{I}"},
{"\[GothicCapitalJ]","\\mathfrak{J}"},
{"\[GothicCapitalK]","\\mathfrak{K}"},
{"\[GothicCapitalL]","\\mathfrak{L}"},
{"\[GothicCapitalM]","\\mathfrak{M}"},
{"\[GothicCapitalN]","\\mathfrak{N}"},
{"\[GothicCapitalO]","\\mathfrak{O}"},
{"\[GothicCapitalP]","\\mathfrak{P}"},
{"\[GothicCapitalQ]","\\mathfrak{Q}"},
{"\[GothicCapitalR]","\\mathfrak{R}"},
{"\[GothicCapitalS]","\\mathfrak{S}"},
{"\[GothicCapitalT]","\\mathfrak{T}"},
{"\[GothicCapitalU]","\\mathfrak{U}"},
{"\[GothicCapitalV]","\\mathfrak{V}"},
{"\[GothicCapitalW]","\\mathfrak{W}"},
{"\[GothicCapitalX]","\\mathfrak{X}"},
{"\[GothicCapitalY]","\\mathfrak{Y}"},
{"\[GothicCapitalZ]","\\mathfrak{Z}"},
{"\[GothicD]","\\mathfrak{d}"},
{"\[GothicE]","\\mathfrak{e}"},
{"\[GothicEight]","\\mathfrak{8}"},
{"\[GothicF]","\\mathfrak{f}"},
{"\[GothicFive]","\\mathfrak{5}"},
{"\[GothicFour]","\\mathfrak{4}"},
{"\[GothicG]","\\mathfrak{g}"},
{"\[GothicH]","\\mathfrak{h}"},
{"\[GothicI]","\\mathfrak{i}"},
{"\[GothicJ]","\\mathfrak{j}"},
{"\[GothicK]","\\mathfrak{k}"},
{"\[GothicL]","\\mathfrak{l}"},
{"\[GothicM]","\\mathfrak{m}"},
{"\[GothicN]","\\mathfrak{n}"},
{"\[GothicNine]","\\mathfrak{9}"},
{"\[GothicO]","\\mathfrak{o}"},
{"\[GothicOne]","\\mathfrak{1}"},
{"\[GothicP]","\\mathfrak{p}"},
{"\[GothicQ]","\\mathfrak{q}"},
{"\[GothicR]","\\mathfrak{r}"},
{"\[GothicS]","\\mathfrak{s}"},
{"\[GothicSeven]","\\mathfrak{7}"},
{"\[GothicSix]","\\mathfrak{6}"},
{"\[GothicT]","\\mathfrak{t}"},
{"\[GothicThree]","\\mathfrak{3}"},
{"\[GothicTwo]","\\mathfrak{2}"},
{"\[GothicU]","\\mathfrak{u}"},
{"\[GothicV]","\\mathfrak{v}"},
{"\[GothicW]","\\mathfrak{w}"},
{"\[GothicX]","\\mathfrak{x}"},
{"\[GothicY]","\\mathfrak{y}"},
{"\[GothicZ]","\\mathfrak{z}"},
{"\[GothicZero]","\\mathfrak{0}"},
{"\[GrayCircle]","\\bullet"},
{"\[GraySquare]","\\blacksquare"},
{"\[GreaterEqualLess]","\\gtreqless "},
{"\[GreaterEqual]","\\geq "},
{"\[GreaterFullEqual]","\\geqq "},
{"\[GreaterGreater]","\\gg "},
{"\[GreaterLess]","\\gtrless "},
{"\[GreaterSlantEqual]","\\geqslant "},
{"\[GreaterTilde]","\\gtrsin "},
{"\[Hacek]","{}_ {\\check{}}"},
{"\[HappySmiley]","\\mathsym{\\HappySmiley}"},
{"\[HBar]","\\hbar "},
{"\[HeartSuit]","\\heartsuit "},
{"\[HermitianConjugate]","\\unicode{f3ce}"},
{"\[HorizontalLine]","_"},
{"\[HumpDownHump]","\\Bumpeq "},
{"\[HumpEqual]","\\bumpeq "},
{"\[Hyphen]","-"},
{"\[IAcute]","\\text{\\' \\i}"},
{"\[ICup]","\\text{\\u \\i}"},
{"\[IDoubleDot]","\\text{\\\" \\i}"},
{"\[IGrave]","\\text{\\` \\i}"},
{"\[IHat]","\\text{\\^ \\i}"},
{"\[ImaginaryI]","i"},
{"\[ImaginaryJ]","j"},
{"\[ImplicitPlus]","\\unicode{f39e}"},
{"\[Implies]","\\Rightarrow "},
{"\[IndentingNewLine]",""},
{"\[Infinity]","\\infty "},
{"\[Integral]","\\int "},
{"\[Intersection]","\\cap "},
{"\[InvisibleApplication]",""},
{"\[InvisibleComma]",""},
{"\[InvisiblePostfixScriptBase]"," "},
{"\[InvisiblePrefixScriptBase]","\\, "},
{"\[InvisibleSpace]",""},
{"\[InvisibleTimes]","\\unicode{2062}"},
{"\[Iota]","\\iota "},
{"\[Jupiter]","\\mathsym{\\Jupiter}"},
{"\[Kappa]","\\kappa "},
{"\[KernelIcon]","\\mathsym{\\KernelIcon}"},
{"\[Koppa]","\\mathsym{\\koppa}"},
{"\[Lambda]","\\lambda "},
{"\[LastPage]","\\blacktriangleright |"},
{"\[LeftAngleBracket]","\\langle "},
{"\[LeftArrowBar]","|\\leftarrow "},
{"\[LeftArrow]","\\leftarrow "},
{"\[LeftArrowRightArrow]","\\leftrightarrows "},
{"\[LeftBracketingBar]","|"},
{"\[LeftCeiling]","\\lceil "},
{"\[LeftDoubleBracket]","[["},
{"\[LeftDoubleBracketingBar]","\\|"},
{"\[LeftDownTeeVector]","\\bar{\\downharpoonleft}"},
{"\[LeftDownVectorBar]","\\underline{\\downharpoonleft}"},
{"\[LeftDownVector]","\\downharpoonleft "},
{"\[LeftFloor]","\\lfloor "},
{"\[LeftGuillemet]","\\langle\\langle "},
{"\[LeftModified]","["},
{"\[LeftPointer]","\\blacktriangleleft "},
{"\[LeftRightArrow]","\\leftrightarrow "},
{"\[LeftRightVector]","\\leftharpoonup \\rightharpoonup "},
{"\[LeftSkeleton]","\\langle\\langle "},
{"\[LeftTee]","\\dashv "},
{"\[LeftTeeArrow]","\\leftarrow |"},
{"\[LeftTeeVector]","\\leftharpoonup |"},
{"\[LeftTriangle]","\\triangleleft "},
{"\[LeftTriangleBar]","\\triangleleft |"},
{"\[LeftTriangleEqual]","\\trianglelefteq "},
{"\[LeftUpDownVector]","\\overset{\\upharpooneleft}{\\downharpoonleft}"},
{"\[LeftUpTeeVector]","\\underline{\\upharpoonleft}"},
{"\[LeftUpVector]","\\upharpoonleft "},
{"\[LeftUpVectorBar]","\\bar{\\upharpoonleft}"},
{"\[LeftVector]","\\leftharpoonup "},
{"\[LeftVectorBar]","|\\leftharpoonup "},
{"\[LessEqual]","\\leq "},
{"\[LessEqualGreater]","\\lesseqgtr "},
{"\[LessFullEqual]","\\leqq "},
{"\[LessGreater]","\\lessgtr "},
{"\[LessLess]","\\ll "},
{"\[LessSlantEqual]","\\leqslant "},
{"\[LessTilde]","\\lesssim "},
{"\[LetterSpace]","\\unicode{f754}"},
{"\[LightBulb]","\\mathsym{\\LightBulb}"},
{"\[LineSeparator]",""},
{"\[LongDash]","---"},
{"\[LongEqual]","="},
{"\[LongLeftArrow]","\\longleftarrow "},
{"\[LongLeftRightArrow]","\\longleftrightarrow "},
{"\[LongRightArrow]","\\longrightarrow "},
{"\[LowerLeftArrow]","\\swarrow "},
{"\[LowerRightArrow]","\\searrow "},
{"\[LSlash]","\\text{\\l}"},
{"\[Mars]","\\mathsym{\\Mars}"},
{"\[MathematicaIcon]",""},
{"\[MeasuredAngle]","\\measuredangle "},
{"\[MediumSpace]","\\medspace "},
{"\[Mercury]","\\mathsym{\\Mercury}"},
{"\[Mho]","\\mho "},
{"\[Micro]","\\mu "},
{"\[MinusPlus]","\\mp "},
{"\[Mu]","\\mu "},
{"\[Nand]","\\barwedge "},
{"\[Natural]","\\natural "},
{"\[NegativeMediumSpace]","\\nmedspace "},
{"\[NegativeThickSpace]","\\nthickspace "},
{"\[NegativeThinSpace]","\\! "},
{"\[NegativeVeryThinSpace]","@! "},
{"\[Neptune]","\\mathsym{\\Neptune}"},
{"\[NestedGreaterGreater]","\\gg "},
{"\[NestedLessLess]","\\ll "},
{"\[NeutralSmiley]","\\mathsym{\\NeutralSmiley}"},
{"\\n","\\text{$\\backslash $n}"},
{"\[NoBreak]",""},
{"\[NonBreakingSpace]",""},
{"\[Nor]","\\bar{\\vee}"},
{"\[NotCongruent]","\\not {\\equiv}"},
{"\[NotCupCap]","\\not {\\overset{\\smile}{\\frown}}"},
{"\[NotDoubleVerticalBar]","\\nparallel "},
{"\[NotElement]","\\notin "},
{"\[NotEqual]","\\neq "},
{"\[NotEqualTilde]","\\not {\\neqsim}"},
{"\[NotExists]","\\nexists "},
{"\[NotGreater]","\\ngtr "},
{"\[NotGreaterEqual]","\\ngeq "},
{"\[NotGreaterFullEqual]","\\ngeqq "},
{"\[NotGreaterGreater]","\\not {\\gg}"},
{"\[NotGreaterLess]","\\not {\\gtrless}"},
{"\[NotGreaterSlantEqual]","\\ngeqslant "},
{"\[NotGreaterTilde]","\\not {\\gtrsim}"},
{"\[NotHumpDownHump]","\\not {\\Bumpeq}"},
{"\[NotHumpEqual]","\\not {\\bumpeq}"},
{"\[NotLeftTriangle]","\\ntriangleleft "},
{"\[NotLeftTriangleBar]","\\ntriangleleft |"},
{"\[NotLeftTriangleEqual]","\\ntrianglelefteq "},
{"\[NotLessEqual]","\\nleq "},
{"\[NotLessFullEqual]","\\nleqq "},
{"\[NotLessGreater]","\\not {\\lessgtr}"},
{"\[NotLess]","\\nless "},
{"\[NotLessLess]","\\not {\\ll}"},
{"\[NotLessSlantEqual]","\\nleqslant "},
{"\[NotLessTilde]","\\not {\\lesssim}"},
{"\[Not]","\\neg "},
{"\[NotNestedGreaterGreater]","\\not {\\gg}"},
{"\[NotNestedLessLess]","\\not {\\ll}"},
{"\[NotPrecedes]","\\nprec "},
{"\[NotPrecedesEqual]","\\npreceq "},
{"\[NotPrecedesSlantEqual]","\\not {\\precurlyeq}"},
{"\[NotPrecedesTilde]","\\not {\\precsim}"},
{"\[NotReverseElement]","\\not {\\ni}"},
{"\[NotRightTriangle]","\\ntriangleright "},
{"\[NotRightTriangleBar]","|\\ntriangleright "},
{"\[NotRightTriangleEqual]","\\ntrianglerighteq "},
{"\[NotSquareSubset]","\\not {\\sqsubset}"},
{"\[NotSquareSubsetEqual]","\\not {\\sqsubseteq}"},
{"\[NotSquareSuperset]","\\not {\\sqsupset}"},
{"\[NotSquareSupersetEqual]","\\not {\\sqsupseteq}"},
{"\[NotSubset]","\\not {\\subset}"},
{"\[NotSubsetEqual]","\\nsubseteq "},
{"\[NotSucceeds]","\\nsucc "},
{"\[NotSucceedsEqual]","\\nsucceq "},
{"\[NotSucceedsSlantEqual]","\\not {\\succurlyeq}"},
{"\[NotSucceedsTilde]","\\not {\\succsim}"},
{"\[NotSuperset]","\\not {\\supset}"},
{"\[NotSupersetEqual]","\\nsupseteq "},
{"\[NotTilde]","\\not {\\sim}"},
{"\[NotTildeEqual]","\\not {\\simeq}"},
{"\[NotTildeFullEqual]","\\ncong "},
{"\[NotTildeTilde]","\\not {\\approx}"},
{"\[NotVerticalBar]","\\nmid "},
{"\[NTilde]","\\text{\\~ n}"},
{"\[Nu]","\\nu "},
{"\[Null]",""},
{"\[NumberSign]","\\#"},
{"\[OAcute]","\\text{\\' o}"},
{"\[ODoubleAcute]","\\text{\\H o}"},
{"\[ODoubleDot]","\\text{\\\" o}"},
{"\[OGrave]","\\text{\\` o}"},
{"\[OHat]","\\text{\\^ o}"},
{"\[Omega]","\\omega "},
{"\[Omicron]","o"},
{"\[OpenCurlyDoubleQuote]","\\text{``}"},
{"\[OpenCurlyQuote]","\\text{`}"},
{"\[OptionKey]","\\fbox{OPTION}"},
{"\[Or]","\\lor "},
{"\[OSlash]","\\text{\\o}"},
{"\[OTilde]","\\text{\\~ o}"},
{"\[OverBrace]","{}_ {\\overbrace{}}"},
{"\[OverBracket]","\\mathsym{\\OverBracket}"},
{"\[OverParenthesis]","\\frown "},
{"\[Paragraph]","\\P "},
{"\[ParagraphSeparator]",""},
{"\[PartialD]","\\partial "},
{"\[Phi]","\\phi "},
{"\[Pi]","\\pi "},
{"\[Piecewise]","\\{"},
{"\[Placeholder]","\\square "},
{"\[PlusMinus]","\\pm "},
{"\[Pluto]","\\mathsym{\\Pluto}"},
{"\[Precedes]","\\prec "},
{"\[PrecedesEqual]","\\preceq "},
{"\[PrecedesSlantEqual]","\\precurlyeq "},
{"\[PrecedesTilde]","\\precsim "},
{"\[Prime]","\\prime "},
{"\[Product]","\\prod "},
{"\[Proportion]","::"},
{"\[Proportional]","\\propto "},
{"\[Psi]","\\psi "},
{"\[QuarterNote]","\\mathsym{\\QuarterNote}"},
{"&","\\&"},
{"@","@"},
{"`","\\grave{ }"},
{":",":"},
{",",","},
{"-","-"},
{"$","\\$"},
{".","."},
{"=","="},
{"\[RawEscape]","\\unicode{001b}"},
{"!","!"},
{">",">"},
{"{","\\{"},
{"[","["},
{"(","("},
{"<","<"},
{"#","\\#"},
{"%","\\%"},
{"+","+"},
{"?","?"},
{"'","'"},
{"\\n","\\text{$\\backslash $n}"},
{"}","\\}"},
{"]","]"},
{")",")"},
{";",";"},
{"/","/"},
{" "," "},
{"*","*"},
{"\\t","\\text{$\\backslash $t}"},
{"~","\\sim "},
{"_","\\_"},
{"|","|"},
{"^","{}^{\\wedge}"},
{"\[RegisteredTrademark]","\\circledR "},
{"\[ReturnIndicator]","\\mathsym{\\ReturnIndicator}"},
{"\[ReturnKey]","\\fbox{RETURN}"},
{"\[ReverseDoublePrime]","\\backprime\\backprime "},
{"\[ReverseElement]","\\ni "},
{"\[ReverseEquilibrium]","\\leftrightharpoons "},
{"\[ReversePrime]","\\backprime "},
{"\[ReverseUpEquilibrium]","\\downharpoon \\upharpoon "},
{"\[Rho]","\\rho "},
{"\[RightAngle]","\\angle"},
{"\[RightAngleBracket]","\\rangle "},
{"\[RightArrow]","\\rightarrow "},
{"\[RightArrowBar]","\\rightarrow |"},
{"\[RightArrowLeftArrow]","\\rightleftarrows "},
{"\[RightBracketingBar]","|"},
{"\[RightCeiling]","\\rceil "},
{"\[RightDoubleBracket]","]]"},
{"\[RightDoubleBracketingBar]","\\|"},
{"\[RightDownTeeVector]","\\bar{\\doenharpoonright}"},
{"\[RightDownVector]","\\downharpoonright "},
{"\[RightDownVectorBar]","\\underline{\\downharpoonright}"},
{"\[RightFloor]","\\rfloor "},
{"\[RightGuillemet]","\\rangle \\rangle "},
{"\[RightModified]","]"},
{"\[RightPointer]","\\blacktriangleright "},
{"\[RightSkeleton]","\\rangle \\rangle "},
{"\[RightTee]","\\vdash "},
{"\[RightTeeArrow]","|\\rightarrow "},
{"\[RightTeeVector]","|\\rightharpoonup "},
{"\[RightTriangle]","\\triangleright "},
{"\[RightTriangleBar]","|\\triangleright "},
{"\[RightTriangleEqual]","\\trianglerighteq "},
{"\[RightUpDownVector]","\\overset{\\upharpooneright}{\\downharpoonright}"},
{"\[RightUpTeeVector]","\\underline{\\upharpoonright}"},
{"\[RightUpVector]","\\upharpoonright "},
{"\[RightUpVectorBar]","\\bar{\\upharpoonright}"},
{"\[RightVector]","\\rightharpoonup "},
{"\[RightVectorBar]","\\rightharpoonup |"},
{"\[RoundImplies]","\\Rightarrow "},
{"\[RoundSpaceIndicator]","\\smallsmile "},
{"\[Rule]","\\to "},
{"\[RuleDelayed]",":\\to "},
{"\[SadSmiley]","\\mathsym{\\SadSmiley}"},
{"\[Sampi]","\\mathsym{\\sampi}"},
{"\[Saturn]","\\mathsym{\\Saturn}"},
{"\[ScriptA]","\\mathit{a}"},
{"\[ScriptB]","\\mathit{b}"},
{"\[ScriptC]","\\mathit{c}"},
{"\[ScriptCapitalA]","\\mathcal{A}"},
{"\[ScriptCapitalB]","\\mathcal{B}"},
{"\[ScriptCapitalC]","\\mathcal{C}"},
{"\[ScriptCapitalD]","\\mathcal{D}"},
{"\[ScriptCapitalE]","\\mathcal{E}"},
{"\[ScriptCapitalF]","\\mathcal{F}"},
{"\[ScriptCapitalG]","\\mathcal{G}"},
{"\[ScriptCapitalH]","\\mathcal{H}"},
{"\[ScriptCapitalI]","\\mathcal{I}"},
{"\[ScriptCapitalJ]","\\mathcal{J}"},
{"\[ScriptCapitalK]","\\mathcal{K}"},
{"\[ScriptCapitalL]","\\mathcal{L}"},
{"\[ScriptCapitalM]","\\mathcal{M}"},
{"\[ScriptCapitalN]","\\mathcal{N}"},
{"\[ScriptCapitalO]","\\mathcal{O}"},
{"\[ScriptCapitalP]","\\mathcal{P}"},
{"\[ScriptCapitalQ]","\\mathcal{Q}"},
{"\[ScriptCapitalR]","\\mathcal{R}"},
{"\[ScriptCapitalS]","\\mathcal{S}"},
{"\[ScriptCapitalT]","\\mathcal{T}"},
{"\[ScriptCapitalU]","\\mathcal{U}"},
{"\[ScriptCapitalV]","\\mathcal{V}"},
{"\[ScriptCapitalW]","\\mathcal{W}"},
{"\[ScriptCapitalX]","\\mathcal{X}"},
{"\[ScriptCapitalY]","\\mathcal{Y}"},
{"\[ScriptCapitalZ]","\\mathcal{Z}"},
{"\[ScriptD]","\\mathit{d}"},
{"\[ScriptDotlessI]","\\imath "},
{"\[ScriptDotlessJ]","\\jmath "},
{"\[ScriptE]","\\mathit{e}"},
{"\[ScriptEight]","\\mathit{8}"},
{"\[ScriptF]","\\mathit{f}"},
{"\[ScriptFive]","\\mathit{5}"},
{"\[ScriptFour]","\\mathit{4}"},
{"\[ScriptG]","\\mathit{g}"},
{"\[ScriptH]","\\mathit{h}"},
{"\[ScriptI]","\\mathit{i}"},
{"\[ScriptJ]","\\mathit{j}"},
{"\[ScriptK]","\\mathit{k}"},
{"\[ScriptL]","\\ell "},
{"\[ScriptM]","\\mathit{m}"},
{"\[ScriptN]","\\mathit{n}"},
{"\[ScriptNine]","\\mathit{9}"},
{"\[ScriptO]","\\mathit{o}"},
{"\[ScriptOne]","\\mathit{1}"},
{"\[ScriptP]","\\mathit{p}"},
{"\[ScriptQ]","\\mathit{q}"},
{"\[ScriptR]","\\mathit{r}"},
{"\[ScriptS]","\\mathit{s}"},
{"\[ScriptSeven]","\\mathit{7}"},
{"\[ScriptSix]","\\mathit{6}"},
{"\[ScriptT]","\\mathit{t}"},
{"\[ScriptThree]","\\mathit{3}"},
{"\[ScriptTwo]","\\mathit{2}"},
{"\[ScriptU]","\\mathit{u}"},
{"\[ScriptV]","\\mathit{v}"},
{"\[ScriptW]","\\mathit{w}"},
{"\[ScriptX]","\\mathit{x}"},
{"\[ScriptY]","\\mathit{y}"},
{"\[ScriptZ]","\\mathit{z}"},
{"\[ScriptZero]","\\mathit{0}"},
{"\[Section]","\\S "},
{"\[SelectionPlaceholder]","\\blacksquare "},
{"\[SHacek]","\\text{\\v s}"},
{"\[Sharp]","\\sharp "},
{"\[ShortLeftArrow]","\\leftarrow "},
{"\[ShortRightArrow]","\\rightarrow "},
{"\[Sigma]","\\sigma "},
{"\[SixPointedStar]","\\ast"},
{"\[SkeletonIndicator]","-"},
{"\[SmallCircle]","\\circ "},
{"\[SpaceIndicator]","\\_"},
{"\[SpaceKey]","\\fbox{SPACE}"},
{"\[SpadeSuit]","\\spadesuit "},
{"\[SpanFromAbove]",""},
{"\[SpanFromBoth]",""},
{"\[SpanFromLeft]",""},
{"\[SphericalAngle]","\\sphericalangle "},
{"\[Sqrt]","\\surd "},
{"\[Square]","\\square "},
{"\[SquareIntersection]","\\sqcap "},
{"\[SquareSubset]","\\sqsubset "},
{"\[SquareSubsetEqual]","\\sqsubseteq "},
{"\[SquareSuperset]","\\sqsupset "},
{"\[SquareSupersetEqual]","\\sqsupseteq "},
{"\[SquareUnion]","\\sqcup "},
{"\[Star]","*"},
{"\[Sterling]","\\pounds "},
{"\[Stigma]","\\varsigma"},
{"\[Subset]","\\subset "},
{"\[SubsetEqual]","\\subseteq "},
{"\[Succeeds]","\\succ "},
{"\[SucceedsEqual]","\\succeq "},
{"\[SucceedsSlantEqual]","\\succurlyeq "},
{"\[SucceedsTilde]","\\succsim "},
{"\[SuchThat]","\\backepsilon "},
{"\[Sum]","\\sum "},
{"\[Superset]","\\supset "},
{"\[SupersetEqual]","\\supseteq "},
{"\[SystemEnterKey]","\\unicode{f75f}"},
{"\[SZ]","\\text{\\ss}"},
{"\[TabKey]","\\fbox{TAB}"},
{"\[Tau]","\\tau "},
{"\[Therefore]","\\therefore "},
{"\[Theta]","\\theta "},
{"\[ThickSpace]","\\thickspace "},
{"\[ThinSpace]","\\, "},
{"\[Thorn]","\\mathsym{\\Thorn}"},
{"\[Tilde]","\\sim "},
{"\[TildeEqual]","\\simeq "},
{"\[TildeFullEqual]","\\cong "},
{"\[TildeTilde]","\\approx "},
{"\[Times]","\\times "},
{"\[Trademark]","{}^{TM}"},
{"\[Transpose]","\\unicode{f3c7}"},
{"\[UAcute]","\\text{\\' u}"},
{"\[UDoubleAcute]","\\text{\\H u}"},
{"\[UDoubleDot]","\\text{\\\" u}"},
{"\[UGrave]","\\text{\\` u}"},
{"\[UHat]","\\text{\\^ u}"},
{"\[UnderBrace]","\\underbrace{}"},
{"\[UnderBracket]","\\mathsym{\\UnderBracket}"},
{"\[UnderParenthesis]","\\smile "},
{"\[Union]","\\cup "},
{"\[UnionPlus]","\\uplus "},
{"\[UpArrow]","\\uparrow "},
{"\[UpArrowBar]","\\bar{\\uparrow}"},
{"\[UpArrowDownArrow]","\\uparrow \\downarrow "},
{"\[UpDownArrow]","\\updownarrow "},
{"\[UpEquilibrium]","\\upharpoon \\downharpoon "},
{"\[UpperLeftArrow]","\\nwarrow "},
{"\[UpperRightArrow]","\\nearrow "},
{"\[UpPointer]","\\blacktriangle "},
{"\[Upsilon]","\\upsilon "},
{"\[UpTee]","\\bot "},
{"\[UpTeeArrow]","\\underline{\\uparrow}"},
{"\[Uranus]","\\mathsym{\\Uranus}"},
{"\[Vee]","\\vee "},
{"\[Venus]","\\mathsym{\\Venus}"},
{"\[VerticalBar]","\\mid "},
{"\[VerticalEllipsis]","\\vdots "},
{"\[VerticalLine]","|"},
{"\[VerticalSeparator]","|"},
{"\[VerticalTilde]","\\wr "},
{"\[VeryThinSpace]","@ "},
{"\[WarningSign]","\\mathsym{\\WarningSign}"},
{"\[WatchIcon]","\\mathsym{\\WatchIcon}"},
{"\[Wedge]","\\wedge "},
{"\[WeierstrassP]","\\wp "},
{"\[Wolf]","\\mathsym{\\Wolf}"},
{"\[Xi]","\\xi "},
{"\[Xnor]","\\unicode{f4a2}"},
{"\[Xor]","\\veebar "},
{"\[YAcute]","\\text{\\' y}"},
{"\[YDoubleDot]","\\text{\\\" y}"},
{"\[Yen]","\\yen "},
{"\[Zeta]","\\zeta "}
}
BeginPackage["TeX`"]
Begin["`Private`"]
Trs = << NotebookDirectory[] <> "TeXTr.m";
Do[Tr[i[[1]]] := i[[2]],{i,Trs}];
Tr[x_] := Module[{m = 90,n = StringLength[x],k,r},
If[n > m,
k = IntegerPart[n / m];
r = "";
Do[r = StringJoin[r,StringTake[x,{m * i - m + 1,m * i}],"\\\\\n"],{i,k}];
StringJoin[r,StringTake[x,{m * k,n}]],
x]];
Boxes = {RowBox,SuperscriptBox,SubscriptBox,FractionBox,SubsuperscriptBox,UnderoverscriptBox,SqrtBox,RadicalBox};
A[x_] := Full[x] /; FreeQ[Boxes,Head[x]];
A[x_String] := Tr[x];
A[RowBox[x_List]] := Apply[StringJoin,Map[A,x]];
A[SuperscriptBox[x_,y_]] := StringJoin["{",A[x],"}^{",A[y],"}"];
A[SubscriptBox[x_,y_]] := StringJoin["{",A[x],"}_{",A[y],"}"];
A[FractionBox[{x_,y_}]] := StringJoin["\\frac{",A[x],"}{",A[y],"}"];
A[SubsuperscriptBox[x_,y_,z_]] := StringJoin[A[x],"_{",A[y],"}^{",A[z],"}"];
A[UnderoverscriptBox[x_,y_,z_]] := StringJoin[A[x],"\\limits_{",A[y],"}^{",A[z],"}"];
A[SqrtBox[x_]] := StringJoin["\\sqrt{",A[x],"}"];
A[RadicalBox[x_,e_]] := StringJoin["\\sqrt[",A[e],"]{",A[x],"}"];
End[]
TeX[x_] := `Private`A[ToExpression[Box['x]]];
EndPackage[]
Begin["System`"]

$Headlist = {Exp, Log, Sin, Cos, Tan, Cot, Sec, ArcCosh, ArcTanh, Csc, ArcSin, ArcCos, ArcTan, ArcCot, ArcSec, ArcCsc, Sinh, Cosh, Tanh, Coth, Sech, Csch, ArcSinh, ArcSech, ArcCsch, ArcTanh}

(*Basic Properties/Formulas/Rules*)
$DC[f_] := x_ -> $D[f[x], x]
$D[a_ f_, x_] := a $D[f, x] /; FreeQ[a, x] && ! FreeQ[f, x]
$D[f_ + g_, x_] := $D[f, x] + $D[g, x]
$D[f_ g_, x_] := $D[f, x] g + f $D[g, x] /; ! FreeQ[f, x] && ! FreeQ[g, x]
$D[f_[g_], x_] := (g /. $DC[f]) $D[g, x] /; ! FreeQ[$Headlist, f] && g =!= x
$D[f_[g_], x_] := $Derivative[1][f][g] $D[g, x] /; FreeQ[$Headlist, f]
$D[f_[g__], x_] := $MultiD[f,g,x] /; Head[g]==List && FreeQ[$Headlist, f]
$D[g_^n_, x_] := n g^(n - 1) $D[g, x] /; FreeQ[n, x]
$D[E^g_, x_] := E^g $D[g, x] /; ! FreeQ[g, x]
$D[a_^g_, x_] := a^g Log[a] $D[g, x] /; FreeQ[a, x] && ! FreeQ[g, x]
$D[g_^h_, x_] := g^h ((h $D[g, x])/g + Log[g] $D[h, x]) /; ! FreeQ[g, x] && ! FreeQ[h, x]

(*Polynomials*)
$D[x_^n_, x_] := n x^(-1 + n) /; NumberQ[n]
$D[x_,x_]:=1
$D[a_, x_] := 0 /; FreeQ[a, x]

(*Exponential/Logarithm Functions*)
$D[a_^x_, x_] := a^x Log[a] /; FreeQ[a, x]
$D[E^x_, x_] := E^x
$D[Exp[x_], x_] := Exp[x]
$D[Log[x_], x_] := 1/x

(*Trig Functions*)
$D[Sin[x_], x_] := Cos[x]
$D[Cos[x_], x_] := -Sin[x]
$D[Tan[x_], x_] := Sec[x]^2 
$D[Cot[x_], x_] := -Csc[x]^2
$D[Sec[x_], x_] := Sec[x] Tan[x]
$D[Csc[x_], x_] := -Cot[x] Csc[x]

(*Inverse Trig Functions*)
$D[ArcSin[x_], x_] := 1/Sqrt[1 - x^2]
$D[ArcCos[x_], x_] := -(1/Sqrt[1 - x^2])
$D[ArcTan[x_], x_] := 1/(1 + x^2)
$D[ArcCot[x_], x_] := -(1/(1 + x^2))
$D[ArcSec[x_], x_] := 1/(Sqrt[1 - 1/x^2] x^2)
$D[ArcCsc[x_], x_] := -(1/(Sqrt[1 - 1/x^2] x^2))

(*Hyberbolic Trig Functions*)
$D[Sinh[x_], x_] := Cosh[x]
$D[Cosh[x_], x_] := Sinh[x]
$D[Tanh[x_], x_] := Sech[x]^2
$D[Coth[x_], x_] := -Csch[x]^2
$D[Sech[x_], x_] := -Sech[x] Tanh[x]
$D[Csch[x_], x_] := -Coth[x] Csch[x]
$D[ArcSinh[x_], x_] := 1/Sqrt[1 + x^2]
$D[ArcSech[x_], x_] := -(1/(x Sqrt[(1 - x)/(1 + x)] (1 + x)))
$D[ArcCsch[x_], x_] := -(1/(Sqrt[1 + 1/x^2] x^2))
$D[ArcTanh[x_], x_] := 1/(1 - x^2)
$D[ArcCosh[x_], x_] := 1/(Sqrt[-1 + x] Sqrt[1 + x])
$D[ArcTanh[x_], x_] := 1/(1 - x^2)

(*Others*)
$D[x_^x_, x_] := x^x (1 + Log[x])

End[]
(* ::Package:: *)

Begin["System`"]

(*Range.cpp*)
CProc["musystem",Range]

SetAttributes[Range, {Listable, Protected}]

Range[x_]:=Range[1, x, 1]
Range[x_, y_]:=Range[x, y, 1]

Range::range = "Range specification in `1` does not have appropriate bounds."
Range::overflow = "Range specification in `1` have too large bounds to progress."

End[]
BeginPackage["Summation`"]
Begin["`Private`"]
DownValuesDefaultType[0]
A[a_, {i_, n_}] := a * n /; FreeQ[a, i]
A[i_, {i_, n_}] := 1/2 n (1 + n)
A[i_^2, {i_, n_}] := 1/6 n (1 + n) (1 + 2 n)
(*A[a_, {i_, m_, n_}] := a * (n - m + 1) /; FreeQ[a, i]
A[i_, {i_, m_, n_}] := 1/2 n (1 + n) - 1/2 m (1 + m)
A[i_^2, {i_, m_, n_}] := 1/6 n (1 + n) (1 + 2 n) - 1/6 m (1 + m) (1 + 2 m)*)
A[1/k_^2,{k_,1,Infinity}]:=Pi^2/6
A[a_. q_^k_,{k_,0,Infinity}]:=a/(1 - q)
A[(a_ +k_ r_)q_^k_,{k_,0,Infinity}]:=(a - a*q + q*r)/(-1 + q)^2
A[(-1)^(k_+1)1/k_,{k_,1,Infinity}]:=Log[2]
A[(-1)^(k_+1)1/(2k_-1),{k_,1,Infinity}]:=Pi/4
A[1/((4k_-1)(4k_+1)),{k_,1,Infinity}]:=(4 - Pi)/8
A[(-1)^(k_+1)1/k_,{k_,1,Infinity}]:=Log[2]
A[(-1)^(k_+1)1/k_^2,{k_,1,Infinity}]:=Pi^2/12
A[1/(2k_-1)^2,{k_,1,Infinity}]:=Pi^2/8
A[(-1)^k_/(2k_+1)^2,{k_,0,Infinity}]:=Catalan
A[(-1)^(k_+1)/(2k_-1)^3,{k_,1,Infinity}]:=Pi^3/32
A[1/(2k_-1)^4,{k_,1,Infinity}]:=Pi^4/96
A[(-1)^(k_+1)/(2k_-1)^5,{k_,1,Infinity}]:=(5*Pi^5)/1536
A[(-1)^(k_+1) k_/(k_+1)^2,{k_,1,Infinity}]:=Pi^2/12 - Log[2]
A[1/(k_ (2k_+1)),{k_,1,Infinity}]:=2 - Log[4]
A[Gamma[k_+1/2]/(k_^2 Gamma[k_]),{k_,1,Infinity}]:=Sqrt[Pi]*Log[4]
A[1/(4k_^2-1),{k_,1,Infinity}]:=1/2
A[1/(4k_^2-1)^2,{k_,1,Infinity}]:=(-8 + Pi^2)/16
A[1/(4k_^2-1)^3,{k_,1,Infinity}]:=1/2 - (3*Pi^2)/64
A[1/(4k_^2-1)^4,{k_,1,Infinity}]:=(-384 + 30*Pi^2 + Pi^4)/768
A[1/(k_ (4k_^2-1)),{k_,1,Infinity}]:=-1 + Log[4]
A[1/(k_ (9k_^2-1)),{k_,1,Infinity}]:=(3*(-1 + Log[3]))/2
A[1/(k_ (36k_^2-1)),{k_,1,Infinity}]:=-3 + (3*Log[3])/2 + Log[4]
A[k_/(4k_^2-1)^2,{k_,1,Infinity}]:=1/8
A[1/(k_ (4k_^2-1)^2),{k_,1,Infinity}]:=3/2 - Log[4]
A[(12k_^2-1)/(k_ (4k_^2-1)^2),{k_,1,Infinity}]:=Log[4]
A[1/(k_ (2k_+1)^2),{k_,1,Infinity}]:=4 - Pi^2/4 - Log[4]
A[1/((2k_-1)(2k_+1)),{k_,1,Infinity}]:=1/2
A[x_, {i_, m_, n_}] := A[x, {i, n}] - A[x, {i, m - 1}]
DownValuesDefaultType[1]
End[]
(*SetAttributes[Sum, {HoldAll}]*)
SetAttributes[Sum, {HoldFirst}]
Sum[x_, {i_, lst_List}] := Plus@@Table[x, {i, lst}]
Sum[x_, {i_, m_Integer, n_Integer}] := Plus@@Table[x, {i, m, n}]
Sum[x_, {i_, n_Integer}] := Plus@@Table[x, {i, n}]
Sum[x_, {i_, m_, n_}] := `Private`A[x, {i, m, n}]
Sum[x_, {i_, n_}] := `Private`A[x, {i, n}]
EndPackage[]
(* ::Package:: *)

(* Begin["System`"] *)

SetAttributes[All,Protected]
SetAttributes[None,Protected]

CProc["musystem",COper,CInstall,Complex,CUninstall,Box,Defer,Timing,MatchQ,MemberQ,ReplaceRepeated, Replace,ReplaceAll,OddQ,EvenQ,SetAttributes,Pretty,StringJoin,Join,Attributes,NumberQ,AtomQ,IntegerQ,SymbolQ,StringQ,Clear,BeginPackage,EndPackage,Begin,End,Evaluate,Unevaluated,Dispatch,Length,Path,Head,Context, Contexts,ContextPath,Apply,Map,Unset,FullForm,ToString,ToExpression, Exit,Quit,Set,SetDelayed,Hold,Run,Array,Table,Do, N,IntegerPart,Floor,Ceiling,Round,Expand,Variables,Coefficient, Exponent,CoefficientList,FromCoefficientList,StringLength, Set,Property,SetDelayed,CompoundExpression,Power,Mod]
CProc["musystem", Increment, PreIncrement, Decrement, PreDecrement]
CProc["musystem", Quiet, DownValues, UpValues, Information, Protect, Unprotect, ListQ, NumericQ, Rest, Prepend, Dimensions, LeafCount, Min, Max]
CProc["musystem", (*Abort, Interrupt, AbortProtect, CheckAbort,*) Catch, Throw, Sow, Reap, Map, ConstantArray]
CProc["musystem", Part,Extract,First,Last,Most,Rest,Take,Drop,Depth,Scan,Level]
CProc["musystem", ReplacePart, Prepend,Append,Reverse,Distribute, Symbols, List, Range, Count, Union, Verbose,DownValuesDefaultType]
CProc["musystem",Pipe,Buffer,File,Link,Read,Write,Server,Request,Parse]
CProc["musystem", TraceRule]
(*Block.cpp*)
CProc["musystem",If,For,While,Flatten,FlattenAll,With,Block,Module,Order,Compare]
(*Inequality.cpp*)
CProc["musystem",SameQ,Less,Equal,Greater,UnsameQ,GreaterEqual,Unequal,LessEqual,FreeQ,And,Or,Not,Inequality]
(*Input.cpp*)
CProc["musystem",Input,Get,ReadList]
(*Print.cpp*)
CProc["musystem",Print,Put,PutAppend]
(*Differential.cpp*)
CProc["musystem",D,$MultiD]
COper["musystem",Function,Derivative,$Derivative]

SetAttributes[Information, {HoldAll, Protected, ReadProtected}]
SetAttributes[Increment, {HoldFirst, Protected, ReadProtected}]
SetAttributes[Decrement, {HoldFirst, Protected, ReadProtected}]
SetAttributes[PreIncrement, {HoldFirst, Protected, ReadProtected}]
SetAttributes[PreDecrement, {HoldFirst, Protected, ReadProtected}]
SetAttributes[Defer,{HoldAll,Protected,ReadProtected}]
SetAttributes[Map,{Protected}]
SetAttributes[Part,{NHoldRest,Protected,ReadProtected}]
SetAttributes[Extract,{NHoldRest,Protected}]
SetAttributes[First,Protected]
SetAttributes[Last,Protected]
SetAttributes[Most,Protected]
SetAttributes[Rest,Protected]
SetAttributes[Take,{NHoldRest,Protected}]
SetAttributes[Drop,{NHoldRest,Protected}]
SetAttributes[Scan,Protected]
SetAttributes[Level,Protected]
SetAttributes[ReplacePart,Protected]
SetAttributes[Prepend,Protected]
SetAttributes[Append,Protected]
SetAttributes[Reverse,Protected]
SetAttributes[Distribute,Protected]
SetAttributes[Symbols,Protected]
SetAttributes[List,{Locked, Protected}]
SetAttributes[Range,{Listable,Protected}]
SetAttributes[Count,Protected]
SetAttributes[Union,{Flat, Protected}] (* Union has attribute OneIdentity in mathematica *)
SetAttributes[ConstantArray, Protected]
SetAttributes[Min, {Flat, NumericFunction, Orderless, Protected}]
SetAttributes[Max, {Flat, NumericFunction, Orderless, Protected, ReadProtected}]
SetAttributes[Function, Protected]
SetAttributes[TraceRule, {Protected, HoldAll}]
SetAttributes[Quiet, {Protected, HoldAll}]

Default[Plus] = 0
Default[Times] = 1
Default[Power] = 1

General::general = "Unknown message"
General::error = "`1`"
General::argx = "`1` called with `2` arguments; 1 argument is expected."
General::argt = "`1` called with `2` arguments; `3` or `4` arguments are expected."
General::argr = "`1` called with 1 argument; `2` arguments are expected."
General::argrx = "`1` called with `2` arguments; `3` arguments are expected."
General::argb = "`1` called with `2` arguments; between `3` and `4` arguments are expected."
General::argbu = "`1` called with 1 argument; between `2` and `3` arguments are expected."
General::opttf = "Value of option `1` -> `2` should be True or False."
General::level = "Level specification `1` is not of the form n, {n}, or {m, n}."
General::nonopt = "Options expected (instead of `1`) beyond position `2` in `3`. An option must be a rule or a list of rules."
General::optx = "Unknown option `1` in `2`."
General::atomicx = "Exception thrown in atomic context `1`, kernel in unstable state."
Message::name = "Message name `1` is not of the form symbol::name."


End[]

<< Path["Number/mUNumber.m"]
<< Path["Polynomial/mUPolynomial.m"]
<< Path["Matrix/mUMatrix.m"]

<< NotebookDirectory[] <> "Complex.m"
<< NotebookDirectory[] <> "Fraction.m"
<< NotebookDirectory[] <> "Utility.m"
<< NotebookDirectory[] <> "Simplify.m"
<< NotebookDirectory[] <> "Sum.m"
<< NotebookDirectory[] <> "D.m"
<< NotebookDirectory[] <> "Range.m"
<< NotebookDirectory[] <> "String.m"
(*<< NotebookDirectory[] <> "TeX.m"*)

<< Path["mULink/EmbednV.m"]
<< Path["Integrate/init.m"]
(*do some thing then Rubi will be loaded*)
Integrate[x,x]

Get[Calculus`CWD <> "Rubi/test/LoadTests.m"]
(* ::Package:: *)

RubiNotLoaded = True

(* Mathematica Raw Program *)
IntegrateU[f_,x_]:=Module[
	{e=f,ans},
	
	(*Get[CWD<>"/IntegralFunctions.m"];
	Get[CWD<>"/Rubi/init.m"];
	Get[CWD<>"/Albi/init.m"];*)
	
	If[RubiNotLoaded, Get[Calculus`CWD <> "Rubi/init.m"]; RubiNotLoaded = False];
	ans=Calculus`Rubi`Int[e,x];

	If[FreeQ[ans,Calculus`Rubi`Int], Return[ans],
		(*Print["Rubi Failed!"];*)
		ans=IintTable[e,x]
		(*ans=Calculus`Albi`Risch`pmint[e,x]*)
	];

	(*If[StringMatchQ[ToString[ans],"*Calculus`Albi`Risch*"],
		Print["Albi Failed!"];
		ans=IintTable[e,x],
		Return[ans]
	];*)
	If[ans=!="NotMatch",Return[ans],Return[$Failed]];
]


IntegrateList=
{
A[Sqrt[1+(2 x_)/(1+x_^2)]/(1+x_^2),x_] :> ((-1+x) Sqrt[1+(2 x)/(1+x^2)])/(1+x),
A[1/((1+x_^4) Sqrt[-x_^2+Sqrt[1+x_^4]]),x_] :> ArcCot[Sqrt[-x^2+Sqrt[1+x^4]]/x],
A[Sqrt[1+(2 x_)/(1+x_^2)],x_] :> (Sqrt[(1+x)^2/(1+x^2)] (1+x^2+Sqrt[1+x^2] ArcSinh[x]))/(1+x),
A[1/Sqrt[1+(2 x_)/(1+x_^2)],x_] :> ((1+x) (Sqrt[1+x^2]-ArcSinh[x]+Sqrt[2] Log[1+x]-Sqrt[2] Log[1-x+Sqrt[2] Sqrt[1+x^2]]))/(Sqrt[(1+x)^2/(1+x^2)] Sqrt[1+x^2]),
A[(x_^2+2 x_ Log[x_]+Log[x_]^2+(1+x_) Sqrt[x_+Log[x_]])/(x_^3+2 x_^2 Log[x_]+x_ Log[x_]^2),x_] :> Log[x]-2/Sqrt[x+Log[x]],
A[(Cos[x_]+Sin[x_])/(E^-x_+Sin[x_]),x_] :> Log[1+E^x Sin[x]],
A[E^Sin[x_] Sec[x_]^2 (x_ Cos[x_]^3-Sin[x_]),x_] :> E^Sin[x] (-1+x Cos[x]) Sec[x],
A[E^x_^x_ x_^(2 x_) (1+Log[x_]),x_] :> E^x^x (-1+x^x),
A[x_^(-2-1/x_) (1-Log[x_]),x_] :> -x^(-1/x),
A[(x_ Cos[x_]-Sin[x_])/(x_-Sin[x_])^2,x_] :> -(x/(-x+Sin[x])),
A[1/(Cos[x_]^(3/2) Sqrt[3 Cos[x_]+Sin[x_]]),x_] :> (2 Sqrt[3 Cos[x]+Sin[x]])/Sqrt[Cos[x]],
A[(Csc[x_] Sqrt[Cos[x_]+Sin[x_]])/Cos[x_]^(3/2),x_] :> (2 (Cos[x]+Sin[x]-ArcCoth[Sqrt[Cos[x]+Sqrt[Sin[x]^2]]/Sqrt[Cos[x]]] Sqrt[Cos[x]] Sqrt[Cos[x]+Sqrt[Sin[x]^2]]))/(Sqrt[Cos[x]] Sqrt[Cos[x]+Sin[x]]),
A[(-3+10 x_+4 x_^3-30 x_^5)/(3+x_+x_^4)^3-(3 (1+4 x_^3) (2-3 x_+5 x_^2+x_^4-5 x_^6))/(3+x_+x_^4)^4,x_] :> (2-3 x+5 x^2+x^4-5 x^6)/(3+x+x^4)^3,
A[1/(x_ Log[E^x_]),x_] :> (-Log[x]+Log[Log[E^x]])/(x-Log[E^x]),
A[Cot[x_]/Log[E^Sin[x_]],x_] :> (Log[Log[E^Sin[x]]]-Log[Sin[x]])/(-Log[E^Sin[x]]+Sin[x]),
A[x_/(Sqrt[-1+x_] Sqrt[1+x_] ArcCosh[x_]),x_] :> CoshIntegral[ArcCosh[x]],
A[(x_ Cosh[x_]-Sinh[x_])/(x_-Sinh[x_])^2,x_] :> -(x/(-x+Sinh[x]))
};

IintTable[f_,x_]:=Module[
    {},
    ret=A[f,x]//.IntegrateList;
    If[Head[ret]===A,Return["NotMatch"],Return[ret]];
	Return["NotMatch"]
];
(* ::Package:: *)

Unprotect[SinIntegral, CosIntegral, SinhIntegral, CoshIntegral, FresnelS, FresnelC];

(* evaluated for inexact z. *)
SinIntegral[z_] := Module[
	{x, y},
	x = Re[z];
	y = Im[z];
	Which[
		z == 0,	z,
		x + y < 0,	-SinIntegral[-z],
		y == 0,	Im[ExpIntegralE[1,I x]] + N[Pi/2,Precision[z]] + I y/x,
		x >= y,	-I/2 (ExpIntegralE[1, I z] - ExpIntegralE[1, -I z]) + N[Pi/2, Precision[z]],
		True,	I/2 (ExpIntegralEi[-I z] + ExpIntegralE[1,-I z])
	]
] /; (NumberQ[z] && Precision[z] < Infinity)

CosIntegral[z_] := Module[
	{x, y},
	x = Re[z];
	y = Im[z];
	Which[
		z == 0,	-Infinity,
		x + y < 0,	CosIntegral[-z] + If[y < 0, -I, I] N[Pi, Precision[z]],
		y == 0,	-Re[ExpIntegralE[1, I x]] + I y/x,
		x >= y,	-(ExpIntegralE[1, I z] + ExpIntegralE[1, -I z])/2,
		True,	(ExpIntegralEi[-I z] - ExpIntegralE[1, -I z])/2 + I N[Pi/2, Precision[z]]
	]
] /; (NumberQ[z] && Precision[z] < Infinity)

SinhIntegral[z_] := Module[
	{shi = -I SinIntegral[I z]},
	If[Head[z] === Real, Re[shi], shi]
] /; (NumberQ[z] && Precision[z] < Infinity)

CoshIntegral[z_] := Module[
	{chi},
	If[z == 0, Return[-Infinity]];
	chi = CosIntegral[I z] + If[Re[z] < 0 && Im[z] >= 0, 3I, -I] * N[Pi/2, Precision[z]];
	If[Head[z] === Real && z > 0, Re[chi], chi]
] /; (NumberQ[z] && Precision[z] < Infinity)

FresnelS[z_] := Module[
	{ipiz2 = N[Pi, Precision[z]] I z^2/2},
	If[Head[z] === Real,
	    z Im[Hypergeometric1F1[1/2, 3/2, ipiz2]],
	    -I z (Hypergeometric1F1[1/2, 3/2, ipiz2] - Hypergeometric1F1[1/2, 3/2, -ipiz2])/2
	]
] /; (NumberQ[z] && Precision[z] < Infinity)

FresnelC[z_] := Module[
	{ipiz2 = N[Pi, Precision[z]] I z^2/2},
	If[Head[z] === Real,
	    z Re[Hypergeometric1F1[1/2, 3/2, ipiz2]],
	    z (Hypergeometric1F1[1/2, 3/2, ipiz2] + Hypergeometric1F1[1/2, 3/2, -ipiz2])/2
	]
] /; (NumberQ[z] && Precision[z] < Infinity)

SinIntegral[0]:=0
CosIntegral[0]:=-Infinity
SinhIntegral[0]:=0
CoshIntegral[0]:=-Infinity
FresnelS[0]:=0
FresnelC[0]:=0

(* rules for DirectedInfinity *)
SinIntegral[DirectedInfinity[d_]] :=
	Switch[d,
	    1, 	Pi/2,
	    I,	DirectedInfinity[I],
	    -1,	-Pi/2,
	    -I,	DirectedInfinity[-I]
	] /; MemberQ[{1, I, -1, -I}, d]

CosIntegral[DirectedInfinity[d_]] :=
	Switch[d,
	    1, 	0,
	    I,	DirectedInfinity[1] + I Pi/2,
	    -1,	-I Pi,
	    -I,	DirectedInfinity[1] - I Pi/2
	] /; MemberQ[{1, I, -1, -I}, d]

SinhIntegral[DirectedInfinity[d_]] :=
	Switch[d,
	    1, 	DirectedInfinity[1],
	    I,	I Pi/2,
	    -1,	DirectedInfinity[-1],
	    -I,	-I Pi/2
	] /; MemberQ[{1, I, -1, -I}, d]

CoshIntegral[DirectedInfinity[d_]] :=
	Switch[d,
	    1, 	DirectedInfinity[1],
	    I,	I Pi/2,
	    -1,	DirectedInfinity[1] + I Pi,
	    -I,	-I Pi/2
	] /; MemberQ[{1, I, -1, -I}, d]

FresnelS[DirectedInfinity[d_]] :=
	Switch[d,
	    1, 	1/2,
	    I,	-I/2,
	    -1,	-1/2,
	    -I,	I/2
	] /; MemberQ[{1, I, -1, -I}, d]

FresnelC[DirectedInfinity[d_]] :=
	Switch[d,
	    1, 	1/2,
	    I,	I/2,
	    -1,	-1/2,
	    -I,	-I/2
	] /; MemberQ[{1, I, -1, -I}, d]

(* rules for Derivative *)
(*SinIntegral/: SinIntegral' := Sin[#]/# &
CosIntegral/: CosIntegral' := Cos[#]/# &
SinhIntegral/: SinhIntegral' := Sinh[#]/# &
CoshIntegral/: CoshIntegral' := Cosh[#]/# &
FresnelS/: FresnelS' := Sin[Pi/2 #^2]&
FresnelC/: FresnelC' := Cos[Pi/2 #^2]&*)
SinIntegral' := Sin[#]/# &
CosIntegral' := Cos[#]/# &
SinhIntegral' := Sinh[#]/# &
CoshIntegral' := Cosh[#]/# &
FresnelS' := Sin[Pi/2 #^2]&
FresnelC' := Cos[Pi/2 #^2]&

Attributes[SinIntegral] = {Listable, NumericFunction, ReadProtected};
Attributes[CosIntegral] = {Listable, NumericFunction, ReadProtected};
Attributes[SinhIntegral] = {Listable, NumericFunction, ReadProtected};
Attributes[CoshIntegral] = {Listable, NumericFunction, ReadProtected};
Attributes[FresnelS] = {Listable, NumericFunction, ReadProtected};
Attributes[FresnelC] = {Listable, NumericFunction, ReadProtected};

Protect[SinIntegral, CosIntegral, SinhIntegral, CoshIntegral, FresnelS, FresnelC];


(* :Tests:

d1[z_] := Chop[1 - SinIntegral[z] / NIntegrate[Sin[t]/t, {t, 0, z},
		PrecisionGoal -> 13, Method -> DoubleExponential]];
d2[z_] := Chop[1 - SinhIntegral[z] / NIntegrate[Sinh[t]/t, {t, 0, z},
		PrecisionGoal -> 13, Method -> DoubleExponential]];
d3[z_] := Chop[1 - CosIntegral[z] / (N[EulerGamma] + Log[z] +
		NIntegrate[(Cos[t] - 1)/t, {t, 0, z},
			PrecisionGoal -> 13, Method -> DoubleExponential])];
d4[z_] := Chop[1 - CoshIntegral[z] / (N[EulerGamma] + Log[z] +
		NIntegrate[(Cosh[t] - 1)/t, {t, 0, z},
			PrecisionGoal -> 13, Method -> DoubleExponential])];
d5[z_] := Chop[1 - FresnelS[z] / NIntegrate[Sin[Pi/2 t^2], {t, 0, z},
		PrecisionGoal -> 13, Method -> DoubleExponential]];
d6[z_] := Chop[1 - FresnelC[z] / NIntegrate[Cos[Pi/2 t^2], {t, 0, z},
		PrecisionGoal -> 13, Method -> DoubleExponential]];

Do[zz = Random[Complex, {-20-20I, 20+20I}];
	Print[{zz, d1[zz], d2[zz], d3[zz], d4[zz], d5[zz], d6[zz]}], {20}];
Do[zz = Random[Real, {-20, 20}];
	Print[{zz, d1[zz], d2[zz], d3[zz], d4[zz], d5[zz], d6[zz]}], {20}];
Do[zz = Random[Real, {-20, 20}]I;
	Print[{zz, d1[zz], d2[zz], d3[zz], d4[zz], d5[zz], d6[zz]}], {20}];*)
(* ::Package:: *)

BeginPackage["Calculus`"]
D`usage="";
CWD::usage="Current Work Directory";
IntegrateU::usage="IntegrateU[f[x],x] returns the integral";


(* Special Functions *)
Unprotect[SinIntegral, CosIntegral, SinhIntegral, CoshIntegral, FresnelC, FresnelS];
SinIntegral::usage = "SinIntegral[x] gives the sine integral
Integrate[Sin[t]/t, {t, 0, x}].";
CosIntegral::usage = "CosIntegral[x] gives the cosine integral
EulerGamma + Log[x] + Integrate[(Cos[t] - 1)/t, {t, 0, x}].";
SinhIntegral::usage = "SinhIntegral[x] gives the hyperbolic sine integral
Integrate[Sinh[t]/t, {t, 0, x}].";
CoshIntegral::usage = "CoshIntegral[x] gives the hyperbolic cosine integral
EulerGamma + Log[x] + Integrate[(Cosh[t] - 1)/t, {t, 0, x}].";
FresnelS::usage = "FresnelS[x] gives the Fresnel integral
S[x] = Integrate[Sin[Pi t^2/2], {t, 0, x}].";
FresnelC::usage = "FresnelC[x] gives the Fresnel integral
C[x] = Integrate[Cos[Pi t^2/2], {t, 0, x}].";


Begin["`Private`"]
(*\:7531\:4e8eNotebookDirectory[]\:63d0\:53d6\:7684\:662f\:6700\:521d\:6267\:884c\:7684\:6587\:4ef6\:6240\:5728\:5b50\:76ee\:5f55\:ff0c\:6545\:624b\:5de5\:8bbe\:7f6eCWD\:6765\:786e\:5b9a\:5b50\:76ee\:5f55*)
CWD = NotebookDirectory[];
Get[CWD<>"Integrate.m"];
End[];

(*emove[CWD];*)
EndPackage[];

(*IntegrateU[x,x]
IntegrateU[Sqrt[1+(2 x)/(1+x^2)],x]*)

(*\:4e0d\:501f\:52a9Rubi\:53ef\:4ee5\:8ba1\:7b97\:51fa\:6765\:7684\:79ef\:5206*)
(*IntegrateU[(x^4- 3 x^2 + 6)/(x^6 - 5 x^4 + 5 x^2 + 4),x]*)

If[System`mU===True,
	System`Integrate=Calculus`IntegrateU
]
(* ::Package:: *)

(*\:7279\:6b8a\:51fd\:6570in Rubi3*)
CoshIntegral
Erf
Erfc
Erfi
ExpIntegralE
ExpIntegralEi
FresnelS
FresnelC
Gamma
LogGamma
LogIntegral
PolyGamma
PolyLog
ProductLog
SinhIntegral
Zeta
(*MORE Systematically listed in: tutorial/SpecialFunctions*)
(*http://www.math.com/tables/integrals/specialfuns.htm\:7ed9\:51fa\:4e86\:8fd9\:4e9b\:7279\:6b8a\:51fd\:6570\:7684\:5177\:4f53\:5b9a\:4e49*)
(* ::Package:: *)

BeginPackage["Calculus`Rubi`"]
Int::usage="Int[f[x],x] returns the integral";


Begin["`Private`"]
(* Edit ShowSteps and SimplifyFlag in ShowStep.m *)
Get[Calculus`CWD<>"Rubi/original/LoadRules.m"];
If[ShowSteps, StepFunction[Int]];
End[];


EndPackage[];


(*Int[E^x,x]
Int[x^4*(1-x^2)^(-5/2),x]
Int[x^(1/2)*(1+x)^(5/2),x]
Int[Log[3*(4*(5+6*x)^7)^2],x]
Int[(x^3)^(-1/3),x]
Int[x E^x,x]*)

(*Int[(a+b*Sqrt[x])^20/Sqrt[x],x]*)
(*Int[(1-2 Sqrt[x])^20/Sqrt[x],x]*)
(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* Note: Clear[func] also eliminates 2-D display of functions like Integrate. *) 
ClearDownValues[func_Symbol] := (
  Unprotect[func];
  DownValues[func]={};
  Protect[func])


SetDownValues[func_Symbol,lst_List] := (
  Unprotect[func];
  DownValues[func]=Take[lst,Min[529,Length[lst]]];
  Scan[Function[ReplacePart[ReplacePart[#,#[[1,1]],1],SetDelayed,0]],Drop[lst,Min[529,Length[lst]]]];
  Protect[func])


(* MoveDownValues[func1,func2] moves func1's DownValues to func2, and deletes them from func1. *)
MoveDownValues[func1_Symbol,func2_Symbol] := Module[{lst},
  SetDownValues[func2,ReplaceAll[DownValues[func1],{func1->func2}]];
  ClearDownValues[func1]]


Map2[func_,lst1_,lst2_] :=
  ReapList[Do[Sow[func[lst1[[i]],lst2[[i]]]],{i,Length[lst1]}]]


ReapList[u_] :=
  Module[{lst=Reap[u][[2]]},
  If[lst==={}, lst, lst[[1]]]]

SetAttributes[ReapList,HoldFirst]


(* MapAnd[f,l] applies f to the elements of list l until False is returned; else returns True *)
MapAnd[f_,lst_] :=
  Catch[Scan[Function[If[f[#],Null,Throw[False]]],lst];True]

MapAnd[f_,lst_,x_] :=
  Catch[Scan[Function[If[f[#,x],Null,Throw[False]]],lst];True]


(* MapOr[f,l] applies f to the elements of list l until True is return; else returns False *)
MapOr[f_,lst_] :=
  Catch[Scan[Function[If[f[#],Throw[True],Null]],lst];False]


(* If u is a sum, MapSum[f,u,x] applies f to the terms of u; else it applies f to u. *)
(* MapSum[f_,u_,x_Symbol] :=
  If[SumQ[u],
    Map[Function[f[#,x]],u],
  f[u,x]] *)


(* NotIntegrableQ[u,x] returns True if u is definitely not integrable wrt x; else it returns 
	False if u is, or might be, integrable wrt x. *)
NotIntegrableQ[u_,x_Symbol] :=
  MatchQ[u,x^m_*Log[a_+b_.*x]^n_ /; FreeQ[{a,b},x] && IntegersQ[m,n] && m<0 && n<0] ||
  MatchQ[u,f_[x^m_.*Log[a_.+b_.*x]] /; FreeQ[{a,b},x] && IntegerQ[m] && (TrigQ[f] || HyperbolicQ[f])]


(* ZeroQ[u1,u2,...] returns True if u1, u2, ... are all 0; else returns False *)
ZeroQ[u_] := PossibleZeroQ[u]
NonzeroQ[u_] := Not[PossibleZeroQ[u]]

ZeroQ[u__] := Catch[Scan[Function[If[ZeroQ[#],Null,Throw[False]]],{u}];True]


(* OneQ[u1,u2,...] returns True if u1, u2, ... are all 1; else returns False *)
OneQ[u_] := PossibleZeroQ[u-1]

OneQ[u__] := Catch[Scan[Function[If[OneQ[#],Null,Throw[False]]],{u}];True]


(* RealNumericQ[u] returns True if u is a real numeric quantity, else returns False. *)
RealNumericQ[u_] := NumericQ[u] && PossibleZeroQ[Im[N[u]]]


(* ImaginaryNumericQ[u] returns True if u is an imaginary numeric quantity, else returns False. *)
ImaginaryNumericQ[u_] :=
  NumericQ[u] && PossibleZeroQ[Re[N[u]]] && Not[PossibleZeroQ[Im[N[u]]]]


(* PositiveQ[u] returns True if u is a positive numeric quantity, else returns False. *)
PositiveQ[u_] :=
  Module[{v=Simplify[u]},
  RealNumericQ[v] && Re[N[v]]>0]


(* PositiveOrZeroQ[u] returns True if u is a nonpositive numeric quantity, else returns False. *)
PositiveOrZeroQ[u_] :=
  Module[{v=Simplify[u]},
  RealNumericQ[v] && Re[N[v]]>=0]


(* NegativeQ[u] returns True if u is a negative numeric quantity, else returns False. *)
NegativeQ[u_] :=
  Module[{v=Simplify[u]},
  RealNumericQ[v] && Re[N[v]]<0]


(* NegativeQ[u] returns True if u is a negative numeric quantity, else returns False. *)
NegativeOrZeroQ[u_] :=
  Module[{v=Simplify[u]},
  RealNumericQ[v] && Re[N[v]]<=0]


(* IntegerQ[u] returns True if u is an explicit integer; else returns False. *)

(* IntegersQ[u_+m_*(n_+v_)] := RationalQ[m] && RationalQ[n] && IntegerQ[m*n] && IntegerQ[u+m*v]; *)
IntegersQ[u__] := Catch[Scan[Function[If[IntegerQ[#],Null,Throw[False]]],{u}];True];


(* FractionQ[u] returns True if u is an explicit fraction; else returns False. *)
FractionQ[u_] :=
  If[ListQ[u],
    MapAnd[FractionQ,u],
  Head[u]===Rational]

FractionQ[u__] := Catch[Scan[Function[If[FractionQ[#],Null,Throw[False]]],{u}];True]


(* RationalQ[u] returns True if u is an explicit integers or fractions; else returns False. *)
RationalQ[u_+m_*(n_+v_)] :=
  RationalQ[m] && RationalQ[n] && RationalQ[u+m*v]

RationalQ[u_] :=
  If[ListQ[u],
    u==={} || (RationalQ[First[u]] && RationalQ[Rest[u]]),
  IntegerQ[u] || Head[u]===Rational]

RationalQ[u__] := Catch[Scan[Function[If[RationalQ[#],Null,Throw[False]]],{u}];True]


(* Delete this!!! *)

(* HalfIntegerQ[u] returns True if u is a fraction with a denominator of 2; else returns False *)
HalfIntegerQ[u_] :=
  If[ListQ[u],
    MapAnd[HalfIntegerQ,u],
  FractionQ[u] && Denominator[u]==2]


(* FractionOrNegativeQ[u] returns True if u is a fraction or negative number; else returns False *)
FractionOrNegativeQ[u_] :=
  If[ListQ[u],
    MapAnd[FractionOrNegativeQ,u],
  FractionQ[u] || IntegerQ[u] && u<0]

FractionOrNegativeQ[u__] := Catch[Scan[Function[If[FractionOrNegativeQ[#],Null,Throw[False]]],{u}];True]


(* SqrtNumberQ[u] returns True if u^2 is a rational number; else it returns False. *)
SqrtNumberQ[m_^n_] :=
  IntegerQ[n] && SqrtNumberQ[m] || HalfIntegerQ[n] && RationalQ[m]

SqrtNumberQ[u_*v_] :=
  SqrtNumberQ[u] && SqrtNumberQ[v]

SqrtNumberQ[u_] :=
  RationalQ[u] || u===I


SqrtNumberSumQ[u_] :=
  SumQ[u] && SqrtNumberQ[First[u]] && SqrtNumberQ[Rest[u]]


(* AbsurdNumberQ[u] returns True if u is a real-valued absurd number (a rational number, a
   positive rational number raised to a fractional power, or a product of absurd numbers); 
   else returns False. *)
(* AbsurdNumberQ[u_^v_] :=
  RationalQ[u] && u>0 && FractionQ[v]

AbsurdNumberQ[u_*v_] :=
  AbsurdNumberQ[u] && AbsurdNumberQ[v]

AbsurdNumberQ[u_] :=
  RationalQ[u] *)


(* AlgebraicNumberQ[u] returns True if u is a real-valued algebraic number (a rational number,
   an algebraic number raised to an integer power, a positive algebraic number raised to a 
   fractional power, or a product or sum of algebraic numbers); else returns False. *)
(* AlgebraicNumberQ[u_] :=
  MapAnd[AlgebraicNumberQ,u] /;
ListQ[u]

AlgebraicNumberQ[u_^v_] :=
  AlgebraicNumberQ[u] && (IntegerQ[v] || PositiveQ[u] && FractionQ[v])

AlgebraicNumberQ[u_*v_] :=
  AlgebraicNumberQ[u] && AlgebraicNumberQ[v]

AlgebraicNumberQ[u_+v_] :=
  AlgebraicNumberQ[u] && AlgebraicNumberQ[v]

AlgebraicNumberQ[u_] :=
  RationalQ[u] *)


FalseQ[u_] :=
  u===False


NotFalseQ[u_] :=
  u=!=False


SumQ[u_] :=
  Head[u]===Plus

NonsumQ[u_] :=
  Head[u]=!=Plus

ProductQ[u_] :=
  Head[u]===Times

PowerQ[u_] :=
  Head[u]===Power

IntegerPowerQ[u_] :=
  PowerQ[u] && IntegerQ[u[[2]]]

PositiveIntegerPowerQ[u_] :=
  PowerQ[u] && IntegerQ[u[[2]]] && u[[2]]>0

FractionalPowerQ[u_] :=
  PowerQ[u] && FractionQ[u[[2]]]

RationalPowerQ[u_] :=
  PowerQ[u] && RationalQ[u[[2]]]

SqrtQ[u_] :=
  PowerQ[u] && u[[2]]===1/2

ExpQ[u_] :=
  PowerQ[u] && u[[1]]===E

ImaginaryQ[u_] :=\
  Head[u]===Complex && Re[u]===0


FractionalPowerFreeQ[u_] :=
  If[AtomQ[u],
    True,
  If[FractionalPowerQ[u] && Not[AtomQ[u[[1]]]],
    False,
  Catch[Scan[Function[If[FractionalPowerFreeQ[#],Null,Throw[False]]],u];True]]]


ComplexFreeQ[u_] :=
  If[AtomQ[u],
    Head[u]=!=Complex,
  Catch[Scan[Function[If[ComplexFreeQ[#],Null,Throw[False]]],u];True]]


LogQ[u_] :=
  Head[u]===Log


SinQ[u_] :=
  Head[u]===Sin

CosQ[u_] :=
  Head[u]===Cos

TanQ[u_] :=
  Head[u]===Tan

CotQ[u_] :=
  Head[u]===Cot

SecQ[u_] :=
  Head[u]===Sec

CscQ[u_] :=
  Head[u]===Csc


SinhQ[u_] :=
  Head[u]===Sinh

CoshQ[u_] :=
  Head[u]===Cosh

TanhQ[u_] :=
  Head[u]===Tanh

CothQ[u_] :=
  Head[u]===Coth

SechQ[u_] :=
  Head[u]===Sech

CschQ[u_] :=
  Head[u]===Csch


(* TrigQ[u] returns True if u or the head of u is a trig function; else returns False *)
TrigQ[u_] :=
  MemberQ[{Sin,Cos,Tan,Cot,Sec,Csc},If[AtomQ[u],u,Head[u]]]

(* InverseTrigQ[u] returns True if u or the head of u is an inverse trig function; else returns False *)
InverseTrigQ[u_] :=
  MemberQ[{ArcSin,ArcCos,ArcTan,ArcCot,ArcSec,ArcCsc},If[AtomQ[u],u,Head[u]]]

(* HyperbolicQ[u] returns True if u or the head of u is a trig function; else returns False *)
HyperbolicQ[u_] :=
  MemberQ[{Sinh,Cosh,Tanh,Coth,Sech,Csch},If[AtomQ[u],u,Head[u]]]

(* InverseHyperbolicQ[u] returns True if u or the head of u is an inverse trig function; else returns False *)
InverseHyperbolicQ[u_] :=
  MemberQ[{ArcSinh,ArcCosh,ArcTanh,ArcCoth,ArcSech,ArcCsch},If[AtomQ[u],u,Head[u]]]


SinCosQ[f_] :=
  MemberQ[{Sin,Cos,Sec,Csc},f]


SinhCoshQ[f_] :=
  MemberQ[{Sinh,Cosh,Sech,Csch},f]


CalculusFunctions={D,Integrate,Sum,Product,Int,Dif,Subst};

(* CalculusQ[u] returns True if the head of u is a calculus function; else returns False *)
CalculusQ[u_] :=
  MemberQ[CalculusFunctions,Head[u]]

CalculusFreeQ[u_,x_] :=
  If[AtomQ[u],
    True,
  If[CalculusQ[u] && u[[2]]===x || Head[u]===Pattern || Head[u]===Defer,
    False,
  Catch[Scan[Function[If[CalculusFreeQ[#,x],Null,Throw[False]]],u];True]]]


SubstQ[u_] :=
  Head[u]===Subst


(* InverseFunctionQ[u] returns True if u is a call on an inverse function; else returns False. *)
InverseFunctionQ[u_] :=
  LogQ[u] || InverseTrigQ[u] && Length[u]==1 || InverseHyperbolicQ[u] || Head[u]===Mods


(* If u is free of inverse or calculus functions involving x,
	InverseFunctionFreeQ[u,x] returns true; else it returns False. *)
TrigHyperbolicFreeQ[u_,x_Symbol] :=
  If[AtomQ[u],
    True,
  If[TrigQ[u] || HyperbolicQ[u] || CalculusQ[u],
    FreeQ[u,x],
  Catch[Scan[Function[If[TrigHyperbolicFreeQ[#,x],Null,Throw[False]]],u];True]]]


(* If u is free of inverse or calculus functions involving x,
	InverseFunctionFreeQ[u,x] returns true; else it returns False. *)
InverseFunctionFreeQ[u_,x_Symbol] :=
  If[AtomQ[u],
    True,
  If[InverseFunctionQ[u] || CalculusQ[u],
(*  If[Head[u]===ArcTan && TanQ[u[[1]]] || Head[u]===ArcCot && CotQ[u[[1]]] ||
       Head[u]===ArcTanh && TanhQ[u[[1]]] || Head[u]===ArcCoth && CothQ[u[[1]]],
      InverseFunctionFreeQ[u[[1,1]],x], *)
    FreeQ[u,x],
  Catch[Scan[Function[If[InverseFunctionFreeQ[#,x],Null,Throw[False]]],u];True]]]


(* ElementaryExpressionQ[u] returns True if u is a sum, product, or power and all the operands
	are elementary expressions; or if u is a call on a trig, hyperbolic, or inverse function
	and all the arguments are elementary expressions; else it returns False. *)
(* ElementaryFunctionQ[u_] :=
  If[AtomQ[u],
    True,
  If[SumQ[u] || ProductQ[u] || PowerQ[u] || TrigQ[u] || HyperbolicQ[u] || InverseFunctionQ[u],
    Catch[Scan[Function[If[ElementaryFunctionQ[#],Null,Throw[False]]],u];True],
  False]] *)


(* If u is an expression of the form -v, NegativeCoefficientQ[u] returns True; else False. *)
NegativeCoefficientQ[u_] :=
  If[SumQ[u],
(*  MapAnd[NegativeCoefficientQ,u], *)
    NegativeCoefficientQ[First[u]],
  MatchQ[u, m_*v_. /; RationalQ[m] && m<0]]


(* Real[u] returns True if u is a real-valued quantity, else returns False. *)
RealQ[u_] :=
  MapAnd[RealQ,u] /;
ListQ[u]

RealQ[u_] :=
  PossibleZeroQ[Im[N[u]]] /;
NumericQ[u]

RealQ[u_^v_] :=
  RealQ[u] && RealQ[v] && (IntegerQ[v] || PositiveOrZeroQ[u])  

RealQ[u_*v_] :=
  RealQ[u] && RealQ[v]

RealQ[u_+v_] :=
  RealQ[u] && RealQ[v]

RealQ[f_[u_]] :=
  If[MemberQ[{Sin,Cos,Tan,Cot,Sec,Csc,ArcTan,ArcCot,Erf},f],
    RealQ[u],
  If[MemberQ[{ArcSin,ArcCos},f],
    LE[-1,u,1],
  If[f===Log,
    PositiveOrZeroQ[u],
  False]]]

RealQ[u_] :=
  False


(* If u is not 0 and has a positive form, PosQ[u] returns True, else it returns False. *)
PosQ[u_] :=
  If[RationalQ[u],
    u>0,
  If[NumberQ[u],
    If[PossibleZeroQ[Re[u]],
      Im[u]>0,
    Re[u]>0],
  If[NumericQ[u],
    Module[{v=N[u]},
    If[PossibleZeroQ[Re[v]],
      Im[v]>0,
    Re[v]>0]],
  If[ProductQ[u],
    If[PosQ[First[u]],
      PosQ[Rest[u]],
    NegQ[Rest[u]]],
  If[SumQ[u],
    Module[{v=Together[u]},
    If[SumQ[v],
      PosQ[First[v]],
    PosQ[v]]],
  True]]]]]


NegQ[u_] :=
  If[PossibleZeroQ[u],
    False,
  Not[PosQ[u]]]


LeadTerm[u_] :=
  If[SumQ[u],
    First[u],
  u]


RemainingTerms[u_] :=
  If[SumQ[u],
    Rest[u],
  0]


(* LeadFactor[u] returns the leading factor of u. *)
LeadFactor[u_] :=
  If[ProductQ[u],
    LeadFactor[First[u]],
  If[ImaginaryQ[u],
    If[Im[u]===1,
      u,
    LeadFactor[Im[u]]],
  u]]


(* RemainingFactors[u] returns the remaining factors of u. *)
RemainingFactors[u_] :=
  If[ProductQ[u],
    RemainingFactors[First[u]]*Rest[u],
  If[ImaginaryQ[u],
    If[Im[u]===1,
      1,
    I*RemainingFactors[Im[u]]],
  1]]


(* LeadBase[u] returns the base of the leading factor of u. *)
LeadBase[u_] :=
  Module[{v=LeadFactor[u]},
  If[PowerQ[v],
    v[[1]],
  v]]


(* LeadDegree[u] returns the degree of the leading factor of u. *)
LeadDegree[u_] :=
  Module[{v=LeadFactor[u]},
  If[PowerQ[v],
    v[[2]],
  1]]


(* If v^n is a factor of u, FindFactor[u,v] returns the list {n,u/v^n}; else it returns False. *)
(* FindFactor[u_,v_] :=
  If[u===1,
    False,
  If[LeadBase[u]===v,
    {LeadDegree[u], RemainingFactors[u]},
  Module[{lst=FindFactor[RemainingFactors[u],v]},
  If[FalseQ[lst],
    False,
  {lst[[1]], LeadFactor[u]*lst[[2]]}]]]] *)


(* LT[u,v] returns True if u and v are real-valued numeric quantities and u<v, else returns False *)
LT[u_,v_] :=
  RealNumericQ[u] && RealNumericQ[v] && Re[N[u]]<Re[N[v]]

LT[u_,v_,w_] :=
  LT[u,v] && LT[v,w]


(* LE[u,v] returns True if u and v are real-valued numeric quantities and u<=v, else returns False *)
LE[u_,v_] :=
  RealNumericQ[u] && RealNumericQ[v] && Re[N[u]]<=Re[N[v]]

LE[u_,v_,w_] :=
  LE[u,v] && LE[v,w]


(* GT[u,v] returns True if u and v are real-valued numeric quantities and u>v, else returns False *)
GT[u_,v_] :=
  RealNumericQ[u] && RealNumericQ[v] && Re[N[u]]>Re[N[v]]

GT[u_,v_,w_] :=
  GT[u,v] && GT[v,w]


(* GE[u,v] returns True if u and v are real-valued numeric quantities and u>=v, else returns False *)
GE[u_,v_] :=
  RealNumericQ[u] && RealNumericQ[v] && Re[N[u]]>=Re[N[v]]

GE[u_,v_,w_] :=
  GE[u,v] && GE[v,w]


IndependentQ[u_,x_Symbol] :=
  FreeQ[u,x]


(* SplitFreeFactors[u,x] returns the list {v,w} where v is the product of the factors of u free of x
	and w is the product of the other factors. *)
(* Compare with the more active function ConstantFactor. *)
SplitFreeFactors[u_,x_Symbol] :=
  If[ProductQ[u],
    Map[Function[If[FreeQ[#,x],{#,1},{1,#}]],u],
  If[FreeQ[u,x],
    {u,1},
  {1,u}]]


(* SplitFreeTerms[u,x] returns the list {v,w} where v is the sum of the terms of u free of x
	and w is the sum of the other terms. *)  
SplitFreeTerms[u_,x_Symbol] :=
  If[SumQ[u],
    Map[Function[SplitFreeTerms[#,x]],u],
  If[FreeQ[u,x],
    {u,0},
  {0,u}]]


(* If u (x) is a sum of the form a+b*v+c*w+..., SplitFactorsOfTerms[u,x] returns the list
	{{1,a},{b,v},{c,w},...}, where v, w, ... are regularized wrt x. *)
SplitFactorsOfTerms[u_,x_Symbol] :=
  Module[{lst=SplitFreeTerms[u,x],v,w},
  v=lst[[1]];
  w=lst[[2]];
  ( If[ZeroQ[w],
      lst={},
    If[SumQ[w],
      lst=Map[Function[SplitFreeFactors[#,x]],Apply[List,w]];
      lst=Map[Function[Prepend[SplitFreeFactors[Regularize[#[[2]],x],x],#[[1]]]],lst];
      lst=Map[Function[{#[[1]]*#[[2]],#[[3]]}],lst],
    lst=SplitFreeFactors[w,x];
    lst=Prepend[SplitFreeFactors[Regularize[lst[[2]],x],x],lst[[1]]];
    lst={{lst[[1]]*lst[[2]],lst[[3]]}}]] );
  If[ZeroQ[v],
    lst,
  Prepend[lst,{1,v}]]]


(* u is a sum.  SplitMonomialTerms[u,x] returns the list {v,w} where v is the sum of the 
	monomial terms of u and w is the sum of the other terms. *)  
SplitMonomialTerms[u_,x_Symbol] :=
  Map[Function[If[FreeQ[#,x] || MatchQ[#,a_.*x^n_. /; FreeQ[{a,n},x]], {#,0}, {0,#}]], u]


(* If u (x) is equivalent to an expression of the form a+b*x where b is not 0, LinearQ[u,x]
	returns True; else it returns False. *)
LinearQ[u_,x_Symbol] :=
  PolynomialQ[u,x] && Exponent[u,x]===1


(* If u is polynomial in x of degree 2, QuadraticQ[u,x] returns True; else it returns False. *)
QuadraticQ[u_,x_Symbol] :=
  PolynomialQ[u,x] && Exponent[u,x]===2


(* If u (x) is equivalent to an expression of the form x^n, MonomialQ[u,x] returns True;
	else it returns False.  Note that not all monomials are polynomials. *)
MonomialQ[u_,x_Symbol] :=
  MatchQ[u,x^n_. /; FreeQ[n,x]]


(* If u (x) is equivalent to an expression of the form a+b*x^n, BinomialQ[u,x] returns True;
	else it returns False.  Note that not all binomials are polynomials. *)
BinomialQ[u_,x_Symbol] :=
  NotFalseQ[BinomialTest[u,x]]


(* If u (x) is a sum and each term is free of x or an expression of the form a*x^n,
	MonomialSumQ[u,x] returns True; else it returns False. *)
MonomialSumQ[u_,x_Symbol] :=
  SumQ[u] && Catch[
	Scan[Function[If[FreeQ[#,x] || MonomialQ[SplitFreeFactors[#,x][[2]],x], Null, Throw[False]]],u];
    True]


(* If u (x) is an expression of the form a*x^n where n is zero or a positive integer,
	PolynomialTermQ[u,x] returns True; else it returns False. *)
PolynomialTermQ[u_,x_Symbol] :=
  FreeQ[u,x] || MatchQ[u,a_.*x^n_. /; FreeQ[a,x] && IntegerQ[n] && n>0]


(* u (x) is a sum.  PolynomialTerms[u,x] returns the sum of the polynomial terms of u (x). *)
PolynomialTerms[u_,x_Symbol] :=
  Map[Function[If[PolynomialTermQ[#,x],#,0]],u]


(* u (x) is a sum.  NonpolynomialTerms[u,x] returns the sum of the nonpolynomial terms of u (x). *)
NonpolynomialTerms[u_,x_Symbol] :=
  Map[Function[If[PolynomialTermQ[#,x],0,#]],u]


(* If u (x) is equivalent to an expression of the form a+b*x^n where a,b and n are free of x,
	BinomialTest[u,x] returns the list {a,b,n}; else it returns False.
	Note that not all binomials are polynomials. *)
BinomialTest[u_,x_Symbol] :=
  If[u===x,
    {0,1,1},
  If[FreeQ[u,x],
    {0,u,0},
  If[PowerQ[u],
    If[u[[1]]===x && FreeQ[u[[2]],x],
      {0,1,u[[2]]},
    False],
  Module[{lst1,lst2},
  If[ProductQ[u],
    lst1=BinomialTest[First[u],x];
    If[FalseQ[lst1],
      False,
    lst2=BinomialTest[Rest[u],x];
    If[FalseQ[lst2],
      False,
    Module[{a,b,c,d,m,n},
    {a,b,m}=lst1;
    {c,d,n}=lst2;
    If[m===0,
      {b*c,b*d,n},
    If[n===0,
      {a*d,b*d,m},
    If[a===0,
      If[c===0,
        {0,b*d,m+n},
      If[m+n===0,
        {b*d,b*c,m},
      False]],
    If[c===0,
      If[m+n===0,
        {b*d,a*d,n},
      False],
    False]]]]]]],  
  If[SumQ[u],
    lst1=BinomialTest[First[u],x];
    If[FalseQ[lst1],
      False,
    lst2=BinomialTest[Rest[u],x];
    If[FalseQ[lst2],
      False,
    Module[{a,b,c,d,m,n},
    {a,b,m}=lst1;
    {c,d,n}=lst2;
    If[m===0,
      {b+c,d,n},
    If[n===0,
      {a+d,b,m},
    If[m===n,
      {a+c,b+d,m},
    False]]]]]],
  False]]]]]]


(* If u (x) is equivalent to a polynomial raised to an integer power greater than 1,
	PerfectPowerTest[u,x] returns u (x) as an expanded polynomial raised to the power;
	else it returns False. *)
PerfectPowerTest[u_,x_Symbol] :=
  If[PolynomialQ[u,x],
    Module[{lst=FactorSquareFreeList[u],gcd=0,v=1},
    If[lst[[1]]==={1,1},
      lst=Rest[lst]];
    Scan[Function[gcd=GCD[gcd,#[[2]]]],lst];
    If[gcd>1,
      Scan[Function[v=v*#[[1]]^(#[[2]]/gcd)],lst];
      Expand[v]^gcd,
    False]],
  False]


(* If u (x) can be square free factored, SquareFreeFactorTest[u,x] returns u (x) in
	factored form; else it returns False. *)
(* SquareFreeFactorTest[u_,x_Symbol] :=
  If[PolynomialQ[u,x],
    Module[{v=FactorSquareFree[u]},
    If[PowerQ[v] || ProductQ[v],
      v,
    False]],
  False] *)


(* If u (x) is a polynomial or rational function of x, RationalFunctionQ[u,x] returns True;
	else it returns False. *)
RationalFunctionQ[u_,x_Symbol] :=
  If[AtomQ[u],
    True,
  If[IntegerPowerQ[u],
    RationalFunctionQ[u[[1]],x],
  If[ProductQ[u] || SumQ[u],
    Catch[Scan[Function[If[RationalFunctionQ[#,x],Null,Throw[False]]],u];True],
  If[FreeQ[u,x],
    True,
  False]]]]


(* Assuming u is a rational function of x, RationalFunctionExponents[u,x] returns a list of the
	exponent of the numerator of u and the exponent of the denominator of u. *)
RationalFunctionExponents[u_,x_Symbol] :=
  If[PolynomialQ[u,x],
    {Exponent[u,x],0},
  If[IntegerPowerQ[u],
    If[u[[2]]>0,
      u[[2]]*RationalFunctionExponents[u[[1]],x],
    (-u[[2]])*Reverse[RationalFunctionExponents[u[[1]],x]]],
  If[ProductQ[u],
    RationalFunctionExponents[First[u],x]+RationalFunctionExponents[Rest[u],x],
  If[SumQ[u],
    Module[{v=Together[u]},
    If[SumQ[v],
      Module[{lst1,lst2},
      lst1=RationalFunctionExponents[First[u],x];
      lst2=RationalFunctionExponents[Rest[u],x];
      {Max[lst1[[1]]+lst2[[2]],lst2[[1]]+lst1[[2]]],lst1[[2]]+lst2[[2]]}],
    RationalFunctionExponents[v,x]]],
  {0,0}]]]]    


(* If u (x) is an algebraic function of x, AlgebraicFunctionQ[u,x] returns True; else False. *)
AlgebraicFunctionQ[u_,x_Symbol] :=
  If[AtomQ[u] || FreeQ[u,x],
    True,
  If[RationalPowerQ[u],
    AlgebraicFunctionQ[u[[1]],x],
  If[ProductQ[u] || SumQ[u],
    Catch[Scan[Function[If[AlgebraicFunctionQ[#,x],Null,Throw[False]]],u];True],
  False]]]


(* If u is equivalent to an expression of the form (a+b*x)/(c+d*x), QuotientOfLinearsQ[u,x]
	returns True; else it returns False. *) 
QuotientOfLinearsQ[a_*u_,x_] :=
  QuotientOfLinearsQ[u,x] /;
FreeQ[a,x]

QuotientOfLinearsQ[a_+u_,x_] :=
  QuotientOfLinearsQ[u,x] /;
FreeQ[a,x]

QuotientOfLinearsQ[1/u_,x_] :=
  QuotientOfLinearsQ[u,x]

QuotientOfLinearsQ[u_,x_] :=
  True /;
LinearQ[u,x]

QuotientOfLinearsQ[u_/v_,x_] :=
  True /;
LinearQ[u,x] && LinearQ[v,x]

QuotientOfLinearsQ[u_,x_] :=
  u===x || FreeQ[u,x]


(* If u is equivalent to an expression of the form (a+b*x)/(c+d*x), QuotientOfLinearsParts[u,x] 
	returns the list {a, b, c, d}. *)
QuotientOfLinearsParts[a_*u_,x_] :=
  Apply[Function[{a*#1, a*#2, #3, #4}], QuotientOfLinearsParts[u,x]] /;
FreeQ[a,x]

QuotientOfLinearsParts[a_+u_,x_] :=
  Apply[Function[{#1+a*#3, #2+a*#4, #3, #4}], QuotientOfLinearsParts[u,x]] /;
FreeQ[a,x]

QuotientOfLinearsParts[1/u_,x_] :=
  Apply[Function[{#3, #4, #1, #2}], QuotientOfLinearsParts[u,x]]

QuotientOfLinearsParts[u_,x_] :=
  {Coefficient[u,x,0], Coefficient[u,x,1], 1, 0} /;
LinearQ[u,x]

QuotientOfLinearsParts[u_/v_,x_] :=
  {Coefficient[u,x,0], Coefficient[u,x,1], Coefficient[v,x,0], Coefficient[v,x,1]} /;
LinearQ[u,x] && LinearQ[v,x]

QuotientOfLinearsParts[u_,x_] :=
  If[u===x,
    {0, 1, 1, 0},
  If[FreeQ[u,x],
    {u, 0, 1, 0},
  Print["QuotientOfLinearParts error!"];
  {u, 0, 1, 0}]]


(* u (x) is an improper fraction if it is an expression of the form w (v (x))/t(v (x)) where w (x)
	and t (x) are polynomials in x and the degree of w (x) is greater than or equal the degree
	of t (x). *)


(* If u/v is an improper fraction, ImproperFractionQ[u,v,x] returns True; else it returns False. *)
(* ImproperFractionQ[u_,v_,x_Symbol] :=
  Module[{lst1=PolynomialFunctionOf[u,x],lst2=PolynomialFunctionOf[v,x]},
  lst1[[1]]===lst2[[1]] && Exponent[lst1[[2]],x]>=Exponent[lst2[[2]],x]] *)


(* If u/v is an improper rational function where v is of the form fraction a+b*x+c*x^2 or a+b*x^n,
	ImproperRationalFunctionQ[u,v,x] returns True; else it returns False. *)
ImproperRationalFunctionQ[u_,v_,x_Symbol] :=
  PolynomialQ[u,x] && 
  PolynomialQ[v,x] &&
  Not[MatchQ[u,(a_.+b_.*x)^n_. /; FreeQ[{a,b},x] && IntegerQ[n]] &&
	  MatchQ[v,(a_.+b_.*x)^n_. /; FreeQ[{a,b},x] && IntegerQ[n]]] &&
  (QuadraticQ[v,x] && Exponent[u,x]>=2 ||
	MatchQ[v,a_+b_.*x^n_. /; FreeQ[{a,b},x] && IntegerQ[n] && 0<n<=Exponent[u,x]])


(* If u is an improper fraction, ExpandImproperFraction[u,x] returns the list {q,a,r}
	where q is the integral part of u and a*r is the proper fractional part of u;
	else it returns False. *)
ExpandImproperFraction[u_,x_Symbol] :=
  Module[{tmp},
  If[NotFalseQ[tmp=ExpandImproperFraction[Numerator[u],Denominator[u],x]],
    tmp,
  If[NotFalseQ[tmp=ExpandImproperFraction[SmartNumerator[u],SmartDenominator[u],x]],
    tmp,
  If[FunctionOfQ[Sin[x],u,x],
    tmp=Regularize[SubstFor[Sin[x],u,x],x];
    If[NotFalseQ[tmp=ExpandImproperFraction[Numerator[tmp],Denominator[tmp],x]],
      Subst[tmp,x,Sin[x]],
    False],
  If[FunctionOfQ[Cos[x],u,x],
    tmp=Regularize[SubstFor[Cos[x],u,x],x];
    If[NotFalseQ[tmp=ExpandImproperFraction[Numerator[tmp],Denominator[tmp],x]],
      Subst[tmp,x,Cos[x]],
    False],
  If[FunctionOfQ[Sinh[x],u,x],
    tmp=Regularize[SubstFor[Sinh[x],u,x],x];
    If[NotFalseQ[tmp=ExpandImproperFraction[Numerator[tmp],Denominator[tmp],x]],
      Subst[tmp,x,Sinh[x]],
    False],
  If[FunctionOfQ[Cosh[x],u,x],
    tmp=Regularize[SubstFor[Cosh[x],u,x],x];
    If[NotFalseQ[tmp=ExpandImproperFraction[Numerator[tmp],Denominator[tmp],x]],
      Subst[tmp,x,Cosh[x]],
    False],
  False]]]]]]]

ExpandImproperFraction[u_,v_,x_Symbol] :=
  Module[{lst1,lst2},
  lst1=PolynomialFunctionOf[u,x];
  lst2=PolynomialFunctionOf[v,x];
  If[lst1[[1]]===lst2[[1]] && Exponent[lst1[[2]],x]>=Exponent[lst2[[2]],x],
    ReplaceAll[PolynomialDivide[lst1[[2]],lst2[[2]],x],x->lst1[[1]]],
  False]]


(* PolynomialDivide[u,v,x] returns the list {q,a,r} where q is the integral part of u/v and
	a*r is the proper fractional part of u/v; else it returns False. *)
PolynomialDivide[u_,v_,x_Symbol] :=
  Prepend[SplitFreeFactors[Regularize[PolynomialRemainder[u,v,x]/v,x],x],
		PolynomialQuotient[u,v,x]]


SmartNumerator[u_] :=
  If[MemberQ[{Cot,Sec,Csc,Coth,Sech,Csch},Head[u]],
    1,
  If[PowerQ[u] && IntegerQ[u[[2]]] && MemberQ[{Cot,Sec,Csc,Coth,Sech,Csch},Head[u[[1]]]],
    1,
  If[PowerQ[u] && RationalQ[u[[2]]] && u[[2]]<0,
    1,
  If[ProductQ[u],
    Map[SmartNumerator,u],
  u]]]]


SmartDenominator[u_] :=
  If[MemberQ[{Cot,Sec,Csc,Coth,Sech,Csch},Head[u]],
    1/u,
  If[PowerQ[u] && IntegerQ[u[[2]]] && MemberQ[{Cot,Sec,Csc,Coth,Sech,Csch},Head[u[[1]]]],
    1/u,
  If[PowerQ[u] && RationalQ[u[[2]]] && u[[2]]<0,
    1/u,
  If[ProductQ[u],
    Map[SmartDenominator,u],
  1]]]]


(* PolynomialFunctionOf[u,x] returns the list {v (x),w (x)} where w (v (x)) equals u (x), w (x) is
	a polynomial in x, and v (x) is minimal *)
PolynomialFunctionOf[u_,x_Symbol] :=
  If[AtomQ[u],
    If[u===x,
      {x,x},
    {1,u}],
  If[PositiveIntegerPowerQ[u],
    Module[{lst=PolynomialFunctionOf[u[[1]],x]},
    {lst[[1]],lst[[2]]^u[[2]]}],
  If[ProductQ[u],
    Module[{lst1=PolynomialFunctionOf[First[u],x],lst2=PolynomialFunctionOf[Rest[u],x]},
    If[lst1[[1]]===1,
      {lst2[[1]],lst1[[2]]*lst2[[2]]},
    If[lst2[[1]]===1,
      {lst1[[1]],lst1[[2]]*lst2[[2]]},
    If[lst1[[1]]===lst2[[1]], 
      {lst1[[1]],lst1[[2]]*lst2[[2]]},
    {u,x}]]]],
  If[SumQ[u],
    Module[{lst1=PolynomialFunctionOf[First[u],x],lst2=PolynomialFunctionOf[Rest[u],x]},
    If[lst1[[1]]===1,
      {lst2[[1]],lst1[[2]]+lst2[[2]]},
    If[lst2[[1]]===1,
      {lst1[[1]],lst1[[2]]+lst2[[2]]},
    If[lst1[[1]]===lst2[[1]], 
      {lst1[[1]],lst1[[2]]+lst2[[2]]},
    {u,x}]]]],
  If[FreeQ[u,x],
    {1,u},
  {u,x}]]]]]


(* Dist[u,v] returns the sum of u times each term of v, provided v is free of Int. *) 
Dist[u_,v_] := 
  If[SumQ[v],
    Map[Function[u*#],v],
  u*v]


(* If lst is a list of n terms, CommonNumericFactors[lst] returns a n+1-element list whose first
	element is the product of the numeric factors common to all terms of lst, and whose remaining
	elements are quotients of each term divided by the numeric common factor. *)
CommonNumericFactors [lst_] :=
  Module[{num=Apply[GCD,Map[NumericFactor,lst]]},
  Prepend[Map[Function[#/num],lst],num]]


NumericFactor[u_] :=
  If[NumberQ[u],
    If[ZeroQ[Im[u]],
      u,
    If[ZeroQ[Re[u]],
      Im[u],
    1]],
  If[PowerQ[u],
    If[RationalQ[u[[1]]] && FractionQ[u[[2]]],
      If[u[[2]]>0,
        1/Denominator[u[[1]]],
      1/Denominator[1/u[[1]]]],
    1],
  If[ProductQ[u],
    NumericFactor[First[u]]*NumericFactor[Rest[u]],
  1]]]


NonnumericFactors[u_] :=
  If[NumberQ[u],
    If[ZeroQ[Im[u]],
      1,    
    If[ZeroQ[Re[u]],
      I,
    u]],
  If[PowerQ[u],
    If[RationalQ[u[[1]]] && FractionQ[u[[2]]],
      u/NumericFactor[u],
    u],
  If[ProductQ[u],
    NonnumericFactors[First[u]]*NonnumericFactors[Rest[u]],
  u]]]


(* ContentFactor[expn] returns expn with the content of sum factors factored out. *)
(* Basis: a*b+a*c == a*(b+c) *)
ContentFactor[expn_] :=
  If[AtomQ[expn],
    expn,
  If[ProductQ[expn],
    Map[ContentFactor,expn],
  If[SumQ[expn],
    Module[{lst=CommonFactors[Apply[List,expn]]},
    If[lst[[1]]===1 || lst[[1]]===-1,
      expn,
    lst[[1]]*Apply[Plus,Rest[lst]]]],
  expn]]]


(* If lst is a list of n terms, CommonFactors[lst] returns a n+1-element list whose first
	element is the product of the factors common to all terms of lst, and whose remaining
	elements are quotients of each term divided by the common factor. *)
CommonFactors [lst_] :=
  Module[{lst1,lst2,lst3,lst4,common,base,num},
  lst1=Map[NonnumericFactors,lst];
  lst2=Map[NumericFactor,lst];
  num=Apply[GCD,lst2];
  ( If[MapAnd[Function[#<0],lst2],
      num=-num] );
  common=num;
  lst2=Map[Function[#/num],lst2];
  While[True,
    lst3=Map[LeadFactor,lst1];
    ( If[Apply[SameQ,lst3],
        common=common*lst3[[1]];
        lst1=Map[RemainingFactors,lst1],
      If[MapAnd[Function[LogQ[#] && IntegerQ[First[#]] && First[#]>0],lst3] &&
           MapAnd[RationalQ,lst4=Map[Function[FullSimplify[#/First[lst3]]],lst3]],
        num=Apply[GCD,lst4];
        common=common*Log[(First[lst3][[1]])^num];
        lst2=Map2[Function[#1*#2/num],lst2,lst4];
        lst1=Map[RemainingFactors,lst1],
      lst4=Map[LeadDegree,lst1];
      If[Apply[SameQ,Map[LeadBase,lst1]] && MapAnd[RationalQ,lst4],
        num=Smallest[lst4];
        base=LeadBase[lst1[[1]]];
        ( If[num!=0,
            common=common*base^num] );
        lst2=Map2[Function[#1*base^(#2-num)],lst2,lst4];
        lst1=Map[RemainingFactors,lst1],
      If[Length[lst1]==2 && ZeroQ[LeadBase[lst1[[1]]]+LeadBase[lst1[[2]]]] && 
         NonzeroQ[lst1[[1]]-1] && IntegerQ[lst4[[1]]] && FractionQ[lst4[[2]]],
        num=Min[lst4];
        base=LeadBase[lst1[[2]]];
        ( If[num!=0,
            common=common*base^num] );
        lst2={lst2[[1]]*(-1)^lst4[[1]],lst2[[2]]};
        lst2=Map2[Function[#1*base^(#2-num)],lst2,lst4];
        lst1=Map[RemainingFactors,lst1],
      If[Length[lst1]==2 && ZeroQ[LeadBase[lst1[[1]]]+LeadBase[lst1[[2]]]] && 
         NonzeroQ[lst1[[2]]-1] && IntegerQ[lst4[[2]]] && FractionQ[lst4[[1]]],
        num=Min[lst4];
        base=LeadBase[lst1[[1]]];
        ( If[num!=0,
            common=common*base^num] );
        lst2={lst2[[1]],lst2[[2]]*(-1)^lst4[[2]]};
        lst2=Map2[Function[#1*base^(#2-num)],lst2,lst4];
        lst1=Map[RemainingFactors,lst1],
      num=MostMainFactorPosition[lst3];
      lst2=ReplacePart[lst2,lst3[[num]]*lst2[[num]],num];      
      lst1=ReplacePart[lst1,RemainingFactors[lst1[[num]]],num]]]]]] );
    If[MapAnd[Function[#===1],lst1],
      Return[Prepend[lst2,common]]]]]


MostMainFactorPosition[lst_List] :=
  Module[{factor=1,num=1},
  Do[If[FactorOrder[lst[[i]],factor]>0,factor=lst[[i]];num=i],{i,Length[lst]}];
  num]


FactorOrder[u_,v_] :=
  If[u===1,
    If[v===1,
      0,
    -1],
  If[v===1,
    1,
  Order[u,v]]]


Smallest[num1_,num2_] :=
  If[num1>0,
    If[num2>0,
      Min[num1,num2],
    0],
  If[num2>0,
    0,
  Max[num1,num2]]]

Smallest[lst_List] :=
  Module[{num=lst[[1]]},
  Scan[Function[num=Smallest[num,#]],Rest[lst]];
  num]


(* MonomialFactor[u,x] returns the list {n,v} where x^n*v==u and n is free of x. *)
MonomialFactor[u_,x_Symbol] :=
  If[AtomQ[u],
    If[u===x,
      {1,1},
    {0,u}],
  If[PowerQ[u],
    If[IntegerQ[u[[2]]],
      Module[{lst=MonomialFactor[u[[1]],x]},
      {lst[[1]]*u[[2]],lst[[2]]^u[[2]]}],
    If[u[[1]]===x && FreeQ[u[[2]],x],
      {u[[2]],1},
    {0,u}]],
  If[ProductQ[u],
    Module[{lst1=MonomialFactor[First[u],x],lst2=MonomialFactor[Rest[u],x]},
    {lst1[[1]]+lst2[[1]],lst1[[2]]*lst2[[2]]}],
  If[SumQ[u],
    Module[{lst,deg},
    lst=Map[Function[MonomialFactor[#,x]],Apply[List,u]];
    deg=lst[[1,1]];
    Scan[Function[deg=MinimumDegree[deg,#[[1]]]],Rest[lst]];
    If[ZeroQ[deg] || RationalQ[deg] && deg<0,
      {0,u},
    {deg,Apply[Plus,Map[Function[x^(#[[1]]-deg)*#[[2]]],lst]]}]],    
  {0,u}]]]]


MinimumDegree[deg1_,deg2_] :=
  If[RationalQ[deg1],
    If[RationalQ[deg2],
      Min[deg1,deg2],
    deg1],
  If[RationalQ[deg2],
    deg2,
  Module[{deg=Simplify[deg1-deg2]},
  If[RationalQ[deg],
    If[deg>0,
      deg2,
    deg1],
  If[OrderedQ[{deg1,deg2}],
    deg1,
  deg2]]]]]


(* ConstantFactor[u,x] returns a 2-element list of the factors of u[x] free of x and the 
	factors not free of u[x].  Common constant factors of the terms of sums are also collected. *)
(* Compare with the more passive function SplitFreeFactors. *)
ConstantFactor[u_,x_Symbol] :=
  If[FreeQ[u,x],
    {u,1},
  If[AtomQ[u],
    {1,u},
  If[PowerQ[u] && FreeQ[u[[2]],x],
    Module[{lst=ConstantFactor[u[[1]],x],tmp},
    If[IntegerQ[u[[2]]],
      {lst[[1]]^u[[2]],lst[[2]]^u[[2]]},
    tmp=PositiveFactors[lst[[1]]];
    If[tmp===1,
      {1,u},
    {tmp^u[[2]],(NonpositiveFactors[lst[[1]]]*lst[[2]])^u[[2]]}]]],
  If[ProductQ[u],
    Module[{lst=Map[Function[ConstantFactor[#,x]],Apply[List,u]]},
    {Apply[Times,Map[First,lst]],Apply[Times,Map[Function[#[[2]]],lst]]}],
  If[SumQ[u],
    Module[{lst1=Map[Function[ConstantFactor[#,x]],Apply[List,u]]},
    If[Apply[SameQ,Map[Function[#[[2]]],lst1]],
      {Apply[Plus,Map[First,lst1]],lst1[[1,2]]},
    Module[{lst2=CommonFactors[Map[First,lst1]]},
    {First[lst2],Apply[Plus,Map2[Times,Rest[lst2],Map[Function[#[[2]]],lst1]]]}]]],
  {1,u}]]]]]


(* PositiveFactors[u] returns the positive factors of u *)
PositiveFactors[u_] :=
  If[ZeroQ[u],
    1,
  If[RationalQ[u],
    Abs[u],
  If[PositiveQ[u],
    u,
  If[ProductQ[u],
    Map[PositiveFactors,u],
  1]]]]


(* NonpositiveFactors[u] returns the nonpositive factors of u *)
NonpositiveFactors[u_] :=
  If[ZeroQ[u],
    u,
  If[RationalQ[u],
    Sign[u],
  If[PositiveQ[u],
    1,
  If[ProductQ[u],
    Map[NonpositiveFactors,u],
  u]]]]


(* If u (x) is equivalent to an expression of the form f (a+b*x) and not the case that a==0 and
	b==1, FunctionOfLinear[u,x] returns the list {f (x),a,b}; else it returns False. *)
FunctionOfLinear[u_,x_Symbol] :=
  Module[{lst=FunctionOfLinear[u,False,False,x,False]},
  If[FalseQ[lst] || FalseQ[lst[[1]]] || lst[[1]]===0 && lst[[2]]===1,
    False,
  {FunctionOfLinearSubst[u,lst[[1]],lst[[2]],x],lst[[1]],lst[[2]]}]]


FunctionOfLinear[u_,a_,b_,x_,flag_] :=
  If[FreeQ[u,x],
    {a,b},
  If[CalculusQ[u],
    False,
  If[LinearQ[u,x],
    If[FalseQ[a],
      {Coefficient[u,x,0],Coefficient[u,x,1]},
    Module[{lst=CommonFactors[{b,Coefficient[u,x,1]}]},
    If[ZeroQ[Coefficient[u,x,0]] && Not[flag],
      {0,lst[[1]]},
    If[ZeroQ[b*Coefficient[u,x,0]-a*Coefficient[u,x,1]],
      {a/lst[[2]],lst[[1]]},
    {0,1}]]]],
  If[PowerQ[u] && FreeQ[u[[1]],x],
    FunctionOfLinear[Log[u[[1]]]*u[[2]],a,b,x,False],
  Module[{lst},
  If[ProductQ[u] && NonzeroQ[(lst=MonomialFactor[u,x])[[1]]],
    If[False && IntegerQ[lst[[1]]] && lst[[1]]!=-1 && FreeQ[lst[[2]],x],
      If[RationalQ[LeadFactor[lst[[2]]]] && LeadFactor[lst[[2]]]<0,
        FunctionOfLinear[DivideDegreesOfFactors[-lst[[2]],lst[[1]]]*x,a,b,x,False],
      FunctionOfLinear[DivideDegreesOfFactors[lst[[2]],lst[[1]]]*x,a,b,x,False]],
    False],
  lst={a,b};
  Catch[
  Scan[Function[lst=FunctionOfLinear[#,lst[[1]],lst[[2]],x,SumQ[u]];
			If[lst===False,Throw[False]]],u];
  lst]]]]]]]


FunctionOfLinearSubst[u_,a_,b_,x_] :=
  If[FreeQ[u,x],
    u,
  If[LinearQ[u,x],
    Module[{tmp=Coefficient[u,x,1]},
    tmp=If[tmp===b, 1, tmp/b];
    Coefficient[u,x,0]-a*tmp+tmp*x],
  If[PowerQ[u] && FreeQ[u[[1]],x],
    E^FullSimplify[FunctionOfLinearSubst[Log[u[[1]]]*u[[2]],a,b,x]],
  Module[{lst},
  If[ProductQ[u] && NonzeroQ[(lst=MonomialFactor[u,x])[[1]]],
    If[RationalQ[LeadFactor[lst[[2]]]] && LeadFactor[lst[[2]]]<0,
      -FunctionOfLinearSubst[DivideDegreesOfFactors[-lst[[2]],lst[[1]]]*x,a,b,x]^lst[[1]],
    FunctionOfLinearSubst[DivideDegreesOfFactors[lst[[2]],lst[[1]]]*x,a,b,x]^lst[[1]]],
  Map[Function[FunctionOfLinearSubst[#,a,b,x]],u]]]]]]


(* DivideDegreesOfFactors[u,n] returns the product of the base of the factors of u raised to
	the degree of the factors divided by n. *)
DivideDegreesOfFactors[u_,n_] :=
  If[ProductQ[u],
    Map[Function[LeadBase[#]^(LeadDegree[#]/n)],u],
  LeadBase[u]^(LeadDegree[u]/n)]


(* If u is a function of an inverse linear binomial of the form 1/(a+b*x), 
	FunctionOfInverseLinear[u,x] returns the list {a,b}; else it returns False. *)
FunctionOfInverseLinear[u_,x_Symbol] :=
  FunctionOfInverseLinear[u,Null,x]

FunctionOfInverseLinear[u_,lst_,x_] :=
  If[FreeQ[u,x],
    lst,
  If[u===x,
    False,
  If[QuotientOfLinearsQ[u,x],
    Module[{tmp=Drop[QuotientOfLinearsParts[u,x],2]},
    If[tmp[[2]]===0,
      False,
    If[lst===Null,
      tmp,
    If[ZeroQ[lst[[1]]*tmp[[2]]-lst[[2]]*tmp[[1]]],
      lst,
    False]]]],
  If[CalculusQ[u],
    False,
  Module[{tmp=lst},Catch[
  Scan[Function[If[FalseQ[tmp=FunctionOfInverseLinear[#,tmp,x]],Throw[False]]],u];
  tmp]]]]]]


(* If u is a function of f^(a+b*x), FunctionOfExponentialOfLinear[u,x] returns the list {v,a,b,f} 
	where v of f^(a+b*x) equals u; else it returns False. *)
FunctionOfExponentialOfLinear[u_,x_Symbol] :=
  Module[{lst=FunctionOfExponentialOfLinear[u,x,False,False,False],a,b,f},
  If[FalseQ[lst] || FalseQ[lst[[1]]],
    False,
  a=lst[[1]];
  b=lst[[2]];
  f=lst[[3]];
  ( If[MatchQ[u,v_*g_^(c_.+d_*x) /; FreeQ[{c,d,g},x] && NumericFactor[d]<0] && NumericFactor[b]>0,
      a=-a;
      b=-b] );
  {FunctionOfExponentialOfLinearSubst[u,a,b,f,x],a,b,f}]]


(* If u is a function of f^(a+b*x), FunctionOfExponentialOfLinear[u,x,False,False,False] 
	returns the list {a, b, f}; else it returns False. *)
FunctionOfExponentialOfLinear[u_,x_,a_,b_,f_] :=
  If[FreeQ[u,x],
    {a,b,f},
  If[u===x || CalculusQ[u],
    False,
  If[PowerQ[u] && FreeQ[u[[1]],x] && LinearQ[u[[2]],x],
    FunctionOfExponentialOfLinearAux[a,b,f,Coefficient[u[[2]],x,0],Coefficient[u[[2]],x,1],u[[1]]],
  If[HyperbolicQ[u] && LinearQ[u[[1]],x],
    FunctionOfExponentialOfLinearAux[a,b,f,Coefficient[u[[1]],x,0],Coefficient[u[[1]],x,1],E],
  Module[{lst},
  If[PowerQ[u] && FreeQ[u[[1]],x] && SumQ[u[[2]]],
    lst=FunctionOfExponentialOfLinear[u[[1]]^First[u[[2]]],x,a,b,f];
    If[lst===False,
      False,
    FunctionOfExponentialOfLinear[u[[1]]^Rest[u[[2]]],x,lst[[1]],lst[[2]],lst[[3]]]],
  lst={a,b,f};
  Catch[Scan[Function[
    lst=FunctionOfExponentialOfLinear[#,x,lst[[1]],lst[[2]],lst[[3]]];
    If[lst===False,Throw[False]]],u];
  lst]]]]]]]


FunctionOfExponentialOfLinearAux[a_,b_,f_,c_,d_,g_] :=
  If[FalseQ[a],
    {c,d,g},
  If[ZeroQ[Log[f]*NonnumericFactors[b]-Log[g]*NonnumericFactors[d]],
    Module[{gcd=GCD[NumericFactor[b],NumericFactor[d]]},
    ( If[NumericFactor[b]<0 && NumericFactor[d]<0,
        gcd=-gcd] );
    If[gcd==NumericFactor[b],
      {a,b,f},
    If[gcd==NumericFactor[d],
      {c,d,g},
    {0,gcd*NonnumericFactors[b],f}]]],
  False]]


(* u is a function of f^(a+b*x).  FunctionOfExponentialOfLinearSubst[u,a,b,f,x] returns u 
	with f^(a+b*x) replaced by x. *)
FunctionOfExponentialOfLinearSubst[u_,a_,b_,f_,x_] :=
  If[FreeQ[u,x],
    u,
  If[PowerQ[u] && FreeQ[u[[1]],x] && LinearQ[u[[2]],x],
    Module[{c,d,g},
    c=Coefficient[u[[2]],x,0];
    d=Coefficient[u[[2]],x,1];
    g=u[[1]];
    g^(c-a*d/b)*x^(d*Log[g]/(b*Log[f]))],
  If[HyperbolicQ[u] && LinearQ[u[[1]],x],
    Module[{c,d,tmp},
    c=Coefficient[u[[1]],x,0];
    d=Coefficient[u[[1]],x,1];
    tmp=E^(c-a*d/b)*x^(d/(b*Log[f]));
    If[SinhQ[u],
      tmp/2-1/(2*tmp),
    If[CoshQ[u],
      tmp/2+1/(2*tmp),
    If[TanhQ[u],    
      (tmp-1/tmp)/(tmp+1/tmp),
    If[CothQ[u],    
      (tmp+1/tmp)/(tmp-1/tmp),
    If[SechQ[u],
      2/(tmp+1/tmp),
    2/(tmp-1/tmp)]]]]]],
  If[PowerQ[u] && FreeQ[u[[1]],x] && SumQ[u[[2]]],
    FunctionOfExponentialOfLinearSubst[u[[1]]^First[u[[2]]],a,b,f,x]*
    FunctionOfExponentialOfLinearSubst[u[[1]]^Rest[u[[2]]],a,b,f,x],
  Map[Function[FunctionOfExponentialOfLinearSubst[#,a,b,f,x]],u]]]]]


(* If u is a function of trig functions of a linear function of x, 
    FunctionOfTrigOfLinearQ[u,x] returns True; else it returns False. *)
FunctionOfTrigOfLinearQ[u_,x_Symbol] :=
  Not[MemberQ[{Null, False}, FunctionOfTrig[u,Null,x]]] && 
    RecognizedFunctionOfTrigQ[SubstInertSineForTrigOfLinear[u,x],x]

(* If u is a function of trig functions of v where v is a linear function of x, 
	FunctionOfTrig[u,x] returns v; else it returns False. *)
FunctionOfTrig[u_,x_Symbol] :=
  Module[{v=FunctionOfTrig[u,Null,x]},
  If[v===Null, False, v]]

FunctionOfTrig[u_,v_,x_] :=
  If[AtomQ[u],
    If[u===x,
      False,
    v],
  If[TrigQ[u] && LinearQ[u[[1]],x],
    If[v===Null,
      u[[1]],
    Module[{a=Coefficient[v,x,0],b=Coefficient[v,x,1],
			c=Coefficient[u[[1]],x,0],d=Coefficient[u[[1]],x,1]},
    If[ZeroQ[a*d-b*c] && RationalQ[b/d],
      a/Numerator[b/d]+b*x/Numerator[b/d],
    False]]],
  If[CalculusQ[u],
    False,
  Module[{w=v},Catch[
  Scan[Function[If[FalseQ[w=FunctionOfTrig[#,w,x]],Throw[False]]],u];
  w]]]]]


(* u is a function of the insert sine function of x.  If u can be put in the
form (sin (c+d*x)^j)^m*(A+B*sin (c+d*x)^k+C*sin (c+d*x)^(2*k))*(a+b*sin (c+d*x)^k)^n
where 2*m and 2*n are integers and j^2=k^2=1, RecognizedFunctionOfTrigQ[u,x]
returns True; else it returns False. *)
RecognizedFunctionOfTrigQ[u_,x_Symbol] :=
  MatchQ[u,(a_.+b_.*sin[c_.+d_.*x]^k_.)^n_. /; 
    FreeQ[{a,b,c,d,n},x] && k^2===1] ||
  MatchQ[u,(A_.+B_.*sin[c_.+d_.*x]^i_.)*(a_.+b_.*sin[c_.+d_.*x]^k_.)^n_. /; 
    FreeQ[{a,b,c,d,A,B,n},x] && i^2===1 && k^2===1] ||
  MatchQ[u,(A_.+C_.*sin[c_.+d_.*x]^i2_)*(a_.+b_.*sin[c_.+d_.*x]^k_.)^n_. /; 
    FreeQ[{a,b,c,d,A,C,n},x] && i2^2===4 && k^2===1] ||
  MatchQ[u,(A_.+B_.*sin[c_.+d_.*x]^i_.+C_.*sin[c_.+d_.*x]^i2_)*(a_.+b_.*sin[c_.+d_.*x]^k_.)^n_. /; 
    FreeQ[{a,b,c,d,A,B,C,n},x] && i^2===1 && k^2===1 && i2===2*i] ||

  MatchQ[u,(sin[c_.+d_.*x]^j_.)^m_.*(A_.+B_.*sin[c_.+d_.*x]^k_.) /; 
    FreeQ[{c,d,A,B,m},x] && j^2===1 && k^2===1] ||
  MatchQ[u,(sin[c_.+d_.*x]^j_.)^m_.*(A_.+C_.*sin[c_.+d_.*x]^k2_) /; 
    FreeQ[{c,d,A,C,m},x] && j^2===1 && k2^2===4] ||
  MatchQ[u,(sin[c_.+d_.*x]^j_.)^m_.*(A_.+B_.*sin[c_.+d_.*x]^k_.+C_.*sin[c_.+d_.*x]^k2_) /; 
    FreeQ[{c,d,A,B,C,m},x] && j^2===1 && k^2===1 && k2===2*k] ||

  MatchQ[u,(sin[c_.+d_.*x]^j_.)^m_.*(a_.+b_.*sin[c_.+d_.*x]^k_.)^n_. /; 
    FreeQ[{a,b,c,d,m,n},x] && j^2===1 && k^2===1] ||
  MatchQ[u,(sin[c_.+d_.*x]^j_.)^m_.*(A_.+B_.*sin[c_.+d_.*x]^i_.)*(a_.+b_.*sin[c_.+d_.*x]^k_.)^n_. /; 
    FreeQ[{a,b,c,d,A,B,m,n},x] && i^2===1 && j^2===1 && k^2===1] ||
  MatchQ[u,(sin[c_.+d_.*x]^j_.)^m_.*(A_.+C_.*sin[c_.+d_.*x]^i2_)*(a_.+b_.*sin[c_.+d_.*x]^k_.)^n_. /; 
    FreeQ[{a,b,c,d,A,C,m,n},x] && i2^2===4 && j^2===1 && k^2===1] ||
  MatchQ[u,(sin[c_.+d_.*x]^j_.)^m_.*(A_.+B_.*sin[c_.+d_.*x]^i_.+C_.*sin[c_.+d_.*x]^i2_)*(a_.+b_.*sin[c_.+d_.*x]^k_.)^n_. /; 
    FreeQ[{a,b,c,d,A,B,C,m,n},x] && i^2===1 && j^2===1 && k^2===1 && i2===2*i]


(* If u is a function of hyperbolic trig functions of v where v is linear in x, 
	FunctionOfHyperbolic[u,x] returns v; else it returns False. *)
FunctionOfHyperbolic[u_,x_Symbol] :=
  Module[{v=FunctionOfHyperbolic[u,Null,x]},
  If[v===Null, False, v]]

FunctionOfHyperbolic[u_,v_,x_] :=
  If[AtomQ[u],
    If[u===x,
      False,
    v],
  If[HyperbolicQ[u] && LinearQ[u[[1]],x],
    If[v===Null,
      u[[1]],
    Module[{a=Coefficient[v,x,0],b=Coefficient[v,x,1],
			c=Coefficient[u[[1]],x,0],d=Coefficient[u[[1]],x,1]},
    If[ZeroQ[a*d-b*c] && RationalQ[b/d],
      a/Numerator[b/d]+b*x/Numerator[b/d],
    False]]],
  If[CalculusQ[u],
    False,
  Module[{w=v},Catch[
  Scan[Function[If[FalseQ[w=FunctionOfHyperbolic[#,w,x]],Throw[False]]],u];
  w]]]]]


(* v is a function of x.
	If u is a function of v, FunctionOfQ[v,u,x] returns True; else it returns False. *)
FunctionOfQ[v_,u_,x_Symbol,PureFlag_:False] :=
  If[FreeQ[u,x],
    False,
  If[AtomQ[v],
    True,
  If[PowerQ[v] && FreeQ[v[[2]],x] (* && NonzeroQ[v[[2]]+1] *),
    FunctionOfPowerQ[u,v[[1]],v[[2]],x],
  If[PureFlag,
    If[SinQ[v] || CscQ[v],
      PureFunctionOfSinQ[u,v[[1]],x],
    If[CosQ[v] || SecQ[v],
      PureFunctionOfCosQ[u,v[[1]],x],
    If[TanQ[v],
      PureFunctionOfTanQ[u,v[[1]],x],
    If[CotQ[v],
      PureFunctionOfCotQ[u,v[[1]],x],
    If[SinhQ[v] || CschQ[v],
      PureFunctionOfSinhQ[u,v[[1]],x],
    If[CoshQ[v] || SechQ[v],
      PureFunctionOfCoshQ[u,v[[1]],x],
    If[TanhQ[v],
      PureFunctionOfTanhQ[u,v[[1]],x],
    If[CothQ[v],
      PureFunctionOfCothQ[u,v[[1]],x],
    FunctionOfExpnQ[u,v,x]]]]]]]]],
  If[SinQ[v] || CscQ[v],
    FunctionOfSinQ[u,v[[1]],x],
  If[CosQ[v] || SecQ[v],
    FunctionOfCosQ[u,v[[1]],x],
  If[TanQ[v] || CotQ[v],
    FunctionOfTanQ[u,v[[1]],x],
  If[SinhQ[v] || CschQ[v],
    FunctionOfSinhQ[u,v[[1]],x],
  If[CoshQ[v] || SechQ[v],
    FunctionOfCoshQ[u,v[[1]],x],
  If[TanhQ[v] || CothQ[v],
    FunctionOfTanhQ[u,v[[1]],x],
  FunctionOfExpnQ[u,v,x]]]]]]]]]]]


FunctionOfExpnQ[u_,v_,x_] :=
  If[u===v,
    True,
  If[AtomQ[u],
    u=!=x,
  If[CalculusQ[u],
    False,
  Catch[Scan[Function[If[FunctionOfExpnQ[#,v,x],Null,Throw[False]]],u];True]]]]


FunctionOfPowerQ[u_,bas_,deg_,x_] :=
  If[AtomQ[u],
    u=!=x,
  If[CalculusQ[u],
    False,
  If[PowerQ[u] && ZeroQ[u[[1]]-bas] && FreeQ[u[[2]],x],
    If[RationalQ[deg],
      If[RationalQ[u[[2]]],
        IntegerQ[u[[2]]/deg] && (deg>0 || u[[2]]<0),
      False],
    IntegerQ[Simplify[u[[2]]/deg]]],
  Catch[Scan[Function[If[FunctionOfPowerQ[#,bas,deg,x],Null,Throw[False]]],u];True]]]]


(* If func[w]^m is a factor of u where m is odd and w is an integer multiple of v, 
	FindTrigFactor[func1,func2,u,v,True] returns the list {w,u/func[w]^n}; else it returns False. *)
(* If func[w]^m is a factor of u where m is odd and w is an integer multiple of v not equal to v, 
	FindTrigFactor[func1,func2,u,v,False] returns the list {w,u/func[w]^n}; else it returns False. *)
FindTrigFactor[func1_,func2_,u_,v_,flag_] :=
  If[u===1,
    False,
  If[(Head[LeadBase[u]]===func1 || Head[LeadBase[u]]===func2) && 
		OddQ[LeadDegree[u]] && 
		IntegerQuotientQ[LeadBase[u][[1]],v] && 
		(flag || NonzeroQ[LeadBase[u][[1]]-v]),
    {LeadBase[u][[1]], RemainingFactors[u]},
  Module[{lst=FindTrigFactor[func1,func2,RemainingFactors[u],v,flag]},
  If[FalseQ[lst],
    False,
  {lst[[1]], LeadFactor[u]*lst[[2]]}]]]]


(* If u is a pure function of Sin[v] and/or Csc[v], PureFunctionOfSinQ[u,v,x] returns True; 
	else it returns False. *)
PureFunctionOfSinQ[u_,v_,x_] :=
  If[AtomQ[u],
    u=!=x,
  If[CalculusQ[u],
    False,
  If[TrigQ[u] && ZeroQ[u[[1]]-v],
    SinQ[u] || CscQ[u],
  Catch[Scan[Function[If[Not[PureFunctionOfSinQ[#,v,x]],Throw[False]]],u];True]]]]


(* If u is a pure function of Cos[v] and/or Sec[v], PureFunctionOfCosQ[u,v,x] returns True; 
	else it returns False. *)
PureFunctionOfCosQ[u_,v_,x_] :=
  If[AtomQ[u],
    u=!=x,
  If[CalculusQ[u],
    False,
  If[TrigQ[u] && ZeroQ[u[[1]]-v],
    CosQ[u] || SecQ[u],
  Catch[Scan[Function[If[Not[PureFunctionOfCosQ[#,v,x]],Throw[False]]],u];True]]]]


(* If u is a pure function of Tan[v] and/or Cot[v], PureFunctionOfTanQ[u,v,x] returns True; 
	else it returns False. *)
PureFunctionOfTanQ[u_,v_,x_] :=
  If[AtomQ[u],
    u=!=x,
  If[CalculusQ[u],
    False,
  If[TrigQ[u] && ZeroQ[u[[1]]-v],
    TanQ[u] || CotQ[u],
  Catch[Scan[Function[If[Not[PureFunctionOfTanQ[#,v,x]],Throw[False]]],u];True]]]]


(* If u is a pure function of Cot[v], PureFunctionOfCotQ[u,v,x] returns True; 
	else it returns False. *)
PureFunctionOfCotQ[u_,v_,x_] :=
  If[AtomQ[u],
    u=!=x,
  If[CalculusQ[u],
    False,
  If[TrigQ[u] && ZeroQ[u[[1]]-v],
    CotQ[u],
  Catch[Scan[Function[If[Not[PureFunctionOfCotQ[#,v,x]],Throw[False]]],u];True]]]]


(* If u is a function of Sin[v], FunctionOfSinQ[u,v,x] returns True; else it returns False. *)
FunctionOfSinQ[u_,v_,x_] :=
  If[AtomQ[u],
    u=!=x,
  If[CalculusQ[u],
    False,
  If[TrigQ[u] && IntegerQuotientQ[u[[1]],v],
    If[OddQuotientQ[u[[1]],v],
(* Basis: If m odd, Sin[m*v]^n is a function of Sin[v]. *)
      SinQ[u] || CscQ[u],
(* Basis: If m even, Cos[m*v]^n is a function of Sin[v]. *)
    CosQ[u] || SecQ[u]],
  If[IntegerPowerQ[u] && TrigQ[u[[1]]] && IntegerQuotientQ[u[[1,1]],v],
    If[EvenQ[u[[2]]],
(* Basis: If m integer and n even, Trig[m*v]^n is a function of Sin[v]. *)
      True,
    FunctionOfSinQ[u[[1]],v,x]],
  If[ProductQ[u],
    If[CosQ[u[[1]]] && SinQ[u[[2]]] && ZeroQ[u[[1,1]]-v/2] && ZeroQ[u[[2,1]]-v/2],
      FunctionOfSinQ[Drop[u,2],v,x],
    Module[{lst},
    lst=FindTrigFactor[Sin,Csc,u,v,False];
    If[NotFalseQ[lst] && EvenQuotientQ[lst[[1]],v],
(* Basis: If m even and n odd, Sin[m*v]^n == Cos[v]*u where u is a function of Sin[v]. *)
      FunctionOfSinQ[Cos[v]*lst[[2]],v,x],
    lst=FindTrigFactor[Cos,Sec,u,v,False];
    If[NotFalseQ[lst] && OddQuotientQ[lst[[1]],v],
(* Basis: If m odd and n odd, Cos[m*v]^n == Cos[v]*u where u is a function of Sin[v]. *)
      FunctionOfSinQ[Cos[v]*lst[[2]],v,x],
    lst=FindTrigFactor[Tan,Cot,u,v,True];
    If[NotFalseQ[lst],
(* Basis: If m integer and n odd, Tan[m*v]^n == Cos[v]*u where u is a function of Sin[v]. *)
      FunctionOfSinQ[Cos[v]*lst[[2]],v,x],
    Catch[Scan[Function[If[Not[FunctionOfSinQ[#,v,x]],Throw[False]]],u];True]]]]]],
  Catch[Scan[Function[If[Not[FunctionOfSinQ[#,v,x]],Throw[False]]],u];True]]]]]]


(* If u is a function of Cos[v], FunctionOfCosQ[u,v,x] returns True; else it returns False. *)
FunctionOfCosQ[u_,v_,x_] :=
  If[AtomQ[u],
    u=!=x,
  If[CalculusQ[u],
    False,
  If[TrigQ[u] && IntegerQuotientQ[u[[1]],v],
(* Basis: If m integer, Cos[m*v]^n is a function of Cos[v]. *)
    CosQ[u] || SecQ[u],
  If[IntegerPowerQ[u] && TrigQ[u[[1]]] && IntegerQuotientQ[u[[1,1]],v],
    If[EvenQ[u[[2]]],
(* Basis: If m integer and n even, Trig[m*v]^n is a function of Cos[v]. *)
      True,
    FunctionOfCosQ[u[[1]],v,x]],
  If[ProductQ[u],
    Module[{lst},
    lst=FindTrigFactor[Sin,Csc,u,v,False];
    If[NotFalseQ[lst],
(* Basis: If m integer and n odd, Sin[m*v]^n == Sin[v]*u where u is a function of Cos[v]. *)
      FunctionOfCosQ[Sin[v]*lst[[2]],v,x],
    lst=FindTrigFactor[Tan,Cot,u,v,True];
    If[NotFalseQ[lst],
(* Basis: If m integer and n odd, Tan[m*v]^n == Sin[v]*u where u is a function of Cos[v]. *)
      FunctionOfCosQ[Sin[v]*lst[[2]],v,x],
    Catch[Scan[Function[If[Not[FunctionOfCosQ[#,v,x]],Throw[False]]],u];True]]]],
  Catch[Scan[Function[If[Not[FunctionOfCosQ[#,v,x]],Throw[False]]],u];True]]]]]]


(* If u is a function of the form f[Tan[v],Cot[v]] where f is independent of x,
	FunctionOfTanQ[u,v,x] returns True; else it returns False. *)
FunctionOfTanQ[u_,v_,x_] :=
  If[AtomQ[u],
    u=!=x,
  If[CalculusQ[u],
    False,
  If[TrigQ[u] && IntegerQuotientQ[u[[1]],v],
    TanQ[u] || CotQ[u] || EvenQuotientQ[u[[1]],v],
  If[PowerQ[u] && EvenQ[u[[2]]] && TrigQ[u[[1]]] && IntegerQuotientQ[u[[1,1]],v],
    True,
  If[ProductQ[u],
    Module[{lst=ReapList[Scan[Function[If[Not[FunctionOfTanQ[#,v,x]],Sow[#]]],u]]},
    If[lst==={},
      True,
    Length[lst]==2 && OddTrigPowerQ[lst[[1]],v,x] && OddTrigPowerQ[lst[[2]],v,x]]],
  Catch[Scan[Function[If[Not[FunctionOfTanQ[#,v,x]],Throw[False]]],u];True]]]]]]

OddTrigPowerQ[u_,v_,x_] :=
  If[SinQ[u] || CosQ[u] || SecQ[u] || CscQ[u],
    OddQuotientQ[u[[1]],v],
  If[PowerQ[u],
    OddQ[u[[2]]] && OddTrigPowerQ[u[[1]],v,x],
  If[ProductQ[u],
    Module[{lst=ReapList[Scan[Function[If[Not[FunctionOfTanQ[#,v,x]],Sow[#]]],u]]},
    If[lst==={},
      True,
    Length[lst]==1 && OddTrigPowerQ[lst[[1]],v,x]]],
(*If[SumQ[u],
    Catch[Scan[Function[If[Not[OddTrigPowerQ[#,v,x]],Throw[False]]],u];True], *)
  False]]]


(* u is a function of the form f[Tan[v],Cot[v]] where f is independent of x.
FunctionOfTanWeight[u,v,x] returns a nonnegative number if u is best considered a function
of Tan[v]; else it returns a negative number. *)
FunctionOfTanWeight[u_,v_,x_] :=
  If[AtomQ[u],
    0,
  If[CalculusQ[u],
    0,
  If[TrigQ[u] && IntegerQuotientQ[u[[1]],v],
    If[TanQ[u] && ZeroQ[u[[1]]-v],
      1,
    If[CotQ[u] && ZeroQ[u[[1]]-v],
      -1,
    0]],
  If[PowerQ[u] && EvenQ[u[[2]]] && TrigQ[u[[1]]] && IntegerQuotientQ[u[[1,1]],v],
    If[TanQ[u[[1]]] || CosQ[u[[1]]] || SecQ[u[[1]]],
      1,
    -1],
  If[ProductQ[u],
    If[Catch[Scan[Function[If[Not[FunctionOfTanQ[#,v,x]],Throw[False]]],u];True],
      Apply[Plus,Map[Function[FunctionOfTanWeight[#,v,x]],Apply[List,u]]],
    0],
  Apply[Plus,Map[Function[FunctionOfTanWeight[#,v,x]],Apply[List,u]]]]]]]]


(* If u (x) is equivalent to an expression of the form f (Sin[v],Cos[v],Tan[v],Cot[v],Sec[v],Csc[v])
	where f is independent of x, FunctionOfTrigQ[u,v,x] returns True; else it returns False. *)
FunctionOfTrigQ[u_,v_,x_Symbol] :=
  If[AtomQ[u],
    u=!=x,
  If[CalculusQ[u],
    False,
  If[TrigQ[u] && IntegerQuotientQ[u[[1]],v],
    True,
  Catch[
    Scan[Function[If[Not[FunctionOfTrigQ[#,v,x]],Throw[False]]],u];
    True]]]]


(* If u is a pure function of Sinh[v] and/or Csch[v], PureFunctionOfSinhQ[u,v,x] returns True; 
	else it returns False. *)
PureFunctionOfSinhQ[u_,v_,x_] :=
  If[AtomQ[u],
    u=!=x,
  If[CalculusQ[u],
    False,
  If[HyperbolicQ[u] && ZeroQ[u[[1]]-v],
    SinhQ[u] || CschQ[u],
  Catch[Scan[Function[If[Not[PureFunctionOfSinhQ[#,v,x]],Throw[False]]],u];True]]]]


(* If u is a pure function of Cosh[v] and/or Sech[v], PureFunctionOfCoshQ[u,v,x] returns True; 
	else it returns False. *)
PureFunctionOfCoshQ[u_,v_,x_] :=
  If[AtomQ[u],
    u=!=x,
  If[CalculusQ[u],
    False,
  If[HyperbolicQ[u] && ZeroQ[u[[1]]-v],
    CoshQ[u] || SechQ[u],
  Catch[Scan[Function[If[Not[PureFunctionOfCoshQ[#,v,x]],Throw[False]]],u];True]]]]


(* If u is a pure function of Tanh[v] and/or Coth[v], PureFunctionOfTanhQ[u,v,x] returns True; 
	else it returns False. *)
PureFunctionOfTanhQ[u_,v_,x_] :=
  If[AtomQ[u],
    u=!=x,
  If[CalculusQ[u],
    False,
  If[HyperbolicQ[u] && ZeroQ[u[[1]]-v],
    TanhQ[u] || CothQ[u],
  Catch[Scan[Function[If[Not[PureFunctionOfTanhQ[#,v,x]],Throw[False]]],u];True]]]]


(* If u is a pure function of Coth[v], PureFunctionOfCothQ[u,v,x] returns True; 
	else it returns False. *)
PureFunctionOfCothQ[u_,v_,x_] :=
  If[AtomQ[u],
    u=!=x,
  If[CalculusQ[u],
    False,
  If[HyperbolicQ[u] && ZeroQ[u[[1]]-v],
    CothQ[u],
  Catch[Scan[Function[If[Not[PureFunctionOfCothQ[#,v,x]],Throw[False]]],u];True]]]]


(* If u is a function of Sinh[v], FunctionOfSinhQ[u,v,x] returns True; else it returns False. *)
FunctionOfSinhQ[u_,v_,x_] :=
  If[AtomQ[u],
    u=!=x,
  If[CalculusQ[u],
    False,
  If[HyperbolicQ[u] && IntegerQuotientQ[u[[1]],v],
    If[OddQuotientQ[u[[1]],v],
(* Basis: If m odd, Sinh[m*v]^n is a function of Sinh[v]. *)
      SinhQ[u] || CschQ[u],
(* Basis: If m even, Cos[m*v]^n is a function of Sinh[v]. *)
    CoshQ[u] || SechQ[u]],
  If[IntegerPowerQ[u] && HyperbolicQ[u[[1]]] && IntegerQuotientQ[u[[1,1]],v],
    If[EvenQ[u[[2]]],
(* Basis: If m integer and n even, Hyper[m*v]^n is a function of Sinh[v]. *)
      True,
    FunctionOfSinhQ[u[[1]],v,x]],
  If[ProductQ[u],
    If[CoshQ[u[[1]]] && SinhQ[u[[2]]] && ZeroQ[u[[1,1]]-v/2] && ZeroQ[u[[2,1]]-v/2],
      FunctionOfSinhQ[Drop[u,2],v,x],
    Module[{lst},
    lst=FindTrigFactor[Sinh,Csch,u,v,False];
    If[NotFalseQ[lst] && EvenQuotientQ[lst[[1]],v],
(* Basis: If m even and n odd, Sinh[m*v]^n == Cosh[v]*u where u is a function of Sinh[v]. *)
      FunctionOfSinhQ[Cosh[v]*lst[[2]],v,x],
    lst=FindTrigFactor[Cosh,Sech,u,v,False];
    If[NotFalseQ[lst] && OddQuotientQ[lst[[1]],v],
(* Basis: If m odd and n odd, Cosh[m*v]^n == Cosh[v]*u where u is a function of Sinh[v]. *)
      FunctionOfSinhQ[Cosh[v]*lst[[2]],v,x],
    lst=FindTrigFactor[Tanh,Coth,u,v,True];
    If[NotFalseQ[lst],
(* Basis: If m integer and n odd, Tanh[m*v]^n == Cosh[v]*u where u is a function of Sinh[v]. *)
      FunctionOfSinhQ[Cosh[v]*lst[[2]],v,x],
    Catch[Scan[Function[If[Not[FunctionOfSinhQ[#,v,x]],Throw[False]]],u];True]]]]]],
  Catch[Scan[Function[If[Not[FunctionOfSinhQ[#,v,x]],Throw[False]]],u];True]]]]]]


(* If u is a function of Cosh[v], FunctionOfCoshQ[u,v,x] returns True; else it returns False. *)
FunctionOfCoshQ[u_,v_,x_] :=
  If[AtomQ[u],
    u=!=x,
  If[CalculusQ[u],
    False,
  If[HyperbolicQ[u] && IntegerQuotientQ[u[[1]],v],
(* Basis: If m integer, Cosh[m*v]^n is a function of Cosh[v]. *)
    CoshQ[u] || SechQ[u],
  If[IntegerPowerQ[u] && HyperbolicQ[u[[1]]] && IntegerQuotientQ[u[[1,1]],v],
    If[EvenQ[u[[2]]],
(* Basis: If m integer and n even, Hyper[m*v]^n is a function of Cosh[v]. *)
      True,
    FunctionOfCoshQ[u[[1]],v,x]],
  If[ProductQ[u],
    Module[{lst},
    lst=FindTrigFactor[Sinh,Csch,u,v,False];
    If[NotFalseQ[lst],
(* Basis: If m integer and n odd, Sinh[m*v]^n == Sinh[v]*u where u is a function of Cosh[v]. *)
      FunctionOfCoshQ[Sinh[v]*lst[[2]],v,x],
    lst=FindTrigFactor[Tanh,Coth,u,v,True];
    If[NotFalseQ[lst],
(* Basis: If m integer and n odd, Tanh[m*v]^n == Sinh[v]*u where u is a function of Cosh[v]. *)
      FunctionOfCoshQ[Sinh[v]*lst[[2]],v,x],
    Catch[Scan[Function[If[Not[FunctionOfCoshQ[#,v,x]],Throw[False]]],u];True]]]],
  Catch[Scan[Function[If[Not[FunctionOfCoshQ[#,v,x]],Throw[False]]],u];True]]]]]]


(* If u is a function of the form f[Tanh[v],Coth[v]] where f is independent of x,
	FunctionOfTanhQ[u,v,x] returns True; else it returns False. *)
FunctionOfTanhQ[u_,v_,x_] :=
  If[AtomQ[u],
    u=!=x,
  If[CalculusQ[u],
    False,
  If[HyperbolicQ[u] && IntegerQuotientQ[u[[1]],v],
    TanhQ[u] || CothQ[u] || EvenQuotientQ[u[[1]],v],
  If[PowerQ[u] && EvenQ[u[[2]]] && HyperbolicQ[u[[1]]] && IntegerQuotientQ[u[[1,1]],v],
    True,
  If[ProductQ[u],
    Module[{lst=ReapList[Scan[Function[If[Not[FunctionOfTanhQ[#,v,x]],Sow[#]]],u]]},
    If[lst==={},
      True,
    Length[lst]==2 && OddHyperbolicPowerQ[lst[[1]],v,x] && OddHyperbolicPowerQ[lst[[2]],v,x]]],
  Catch[Scan[Function[If[Not[FunctionOfTanhQ[#,v,x]],Throw[False]]],u];True]]]]]]

OddHyperbolicPowerQ[u_,v_,x_] :=
  If[SinhQ[u] || CoshQ[u] || SechQ[u] || CschQ[u],
    OddQuotientQ[u[[1]],v],
  If[PowerQ[u],
    OddQ[u[[2]]] && OddHyperbolicPowerQ[u[[1]],v,x],
  If[ProductQ[u],
    Module[{lst=ReapList[Scan[Function[If[Not[FunctionOfTanhQ[#,v,x]],Sow[#]]],u]]},
    If[lst==={},
      True,
    Length[lst]==1 && OddHyperbolicPowerQ[lst[[1]],v,x]]],
(*If[SumQ[u],
    Catch[Scan[Function[If[Not[OddHyperbolicPowerQ[#,v,x]],Throw[False]]],u];True], *)
  False]]]


(* u is a function of the form f[Tanh[v],Coth[v]] where f is independent of x.
FunctionOfTanhWeight[u,v,x] returns a nonnegative number if u is best considered a function
of Tanh[v]; else it returns a negative number. *)
FunctionOfTanhWeight[u_,v_,x_] :=
  If[AtomQ[u],
    0,
  If[CalculusQ[u],
    0,
  If[HyperbolicQ[u] && IntegerQuotientQ[u[[1]],v],
    If[TanhQ[u] && ZeroQ[u[[1]]-v],
      1,
    If[CothQ[u] && ZeroQ[u[[1]]-v],
      -1,
    0]],
  If[PowerQ[u] && EvenQ[u[[2]]] && HyperbolicQ[u[[1]]] && IntegerQuotientQ[u[[1,1]],v],
    If[TanhQ[u[[1]]] || CoshQ[u[[1]]] || SechQ[u[[1]]],
      1,
    -1],
  If[ProductQ[u],
    If[Catch[Scan[Function[If[Not[FunctionOfTanhQ[#,v,x]],Throw[False]]],u];True],
      Apply[Plus,Map[Function[FunctionOfTanhWeight[#,v,x]],Apply[List,u]]],
    0],
  Apply[Plus,Map[Function[FunctionOfTanhWeight[#,v,x]],Apply[List,u]]]]]]]]


(* If u (x) is equivalent to a function of the form f (Sinh[v],Cosh[v],Tanh[v],Coth[v],Sech[v],Csch[v])
	where f is independent of x, FunctionOfHyperbolicQ[u,v,x] returns True; else it returns False. *)
FunctionOfHyperbolicQ[u_,v_,x_Symbol] :=
  If[AtomQ[u],
    u=!=x,
  If[CalculusQ[u],
    False,
  If[HyperbolicQ[u] && IntegerQuotientQ[u[[1]],v],
    True,
  Catch[Scan[Function[If[FunctionOfHyperbolicQ[#,v,x],Null,Throw[False]]],u];True]]]]


(* If u/v is an integer, IntegerQuotientQ[u,v] returns True; else it returns False. *)
IntegerQuotientQ[u_,v_] :=
  u===v || ZeroQ[u-v] || IntegerQ[u/v]

(* If u/v is odd, OddQuotientQ[u,v] returns True; else it returns False. *)
OddQuotientQ[u_,v_] :=
  u===v || ZeroQ[u-v] || OddQ[u/v]

(* If u/v is even, EvenQuotientQ[u,v] returns True; else it returns False. *)
EvenQuotientQ[u_,v_] :=
  EvenQ[u/v]


(* If all occurrences of x in u (x) are in dense polynomials, FunctionOfDensePolynomialsQ[u,x]
	returns True; else it returns False. *)
FunctionOfDensePolynomialsQ[u_,x_Symbol] :=
  If[FreeQ[u,x],
    True,
  If[PolynomialQ[u,x],
    Length[Exponent[u,x,List]]>1,
  Catch[
  Scan[Function[If[FunctionOfDensePolynomialsQ[#,x],Null,Throw[False]]],u];
  True]]]


(* If u (x) is equivalent to an expression of the form f (Log[a*x^n]), FunctionOfLog[u,x] returns
	the list {f (x),a*x^n,n}; else it returns False. *)
FunctionOfLog[u_,x_Symbol] :=
  Module[{lst=FunctionOfLog[u,False,False,x]},
  If[FalseQ[lst] || FalseQ[lst[[2]]],
    False,
  lst]]


FunctionOfLog[u_,v_,n_,x_] :=
  If[AtomQ[u],
    If[u===x,
      False,
    {u,v,n}],
  If[CalculusQ[u],
    False,
  Module[{lst},
  If[LogQ[u] && NotFalseQ[lst=BinomialTest[u[[1]],x]] && ZeroQ[lst[[1]]],
    If[FalseQ[v] || u[[1]]===v,
      {x,u[[1]],lst[[3]]},
    False],
  lst={0,v,n};
  Catch[
    {Map[Function[lst=FunctionOfLog[#,lst[[2]],lst[[3]],x];
				  If[lst===False,Throw[False],lst[[1]]]],
			u],lst[[2]],lst[[3]]}]]]]]


(* If m is an integer, u is an expression of the form f[(c*x)^n] and g=GCD[m,n]>1,
   PowerVariableExpn[u,m,x] returns the list {x^(m/g)*f[(c*x)^(n/g)],g,c}; else it returns False. *)
PowerVariableExpn[u_,m_,x_Symbol] :=
  If[IntegerQ[m],
    Module[{lst=PowerVariableDegree[u,m,1,x]},
    If[FalseQ[lst],
      False,
    {x^(m/lst[[1]])*PowerVariableSubst[u,lst[[1]],x], lst[[1]], lst[[2]]}]],
  False]


PowerVariableDegree[u_,m_,c_,x_Symbol] :=
  If[FreeQ[u,x],
    {m, c},
  If[AtomQ[u] || CalculusQ[u],
    False,
  If[PowerQ[u] && FreeQ[u[[1]]/x,x],
    If[ZeroQ[m] || m===u[[2]] && c===u[[1]]/x,
      {u[[2]], u[[1]]/x},
    If[IntegerQ[u[[2]]] && IntegerQ[m] && GCD[m,u[[2]]]>1 && c===u[[1]]/x,
      {GCD[m,u[[2]]], c},
    False]],
  Catch[Module[{lst={m, c}},
  Scan[Function[lst=PowerVariableDegree[#,lst[[1]],lst[[2]],x];If[lst===False,Throw[False]]],u];
  lst]]]]]


PowerVariableSubst[u_,m_,x_Symbol] :=
  If[FreeQ[u,x] || AtomQ[u] ||CalculusQ[u],
    u,
  If[PowerQ[u] && FreeQ[u[[1]]/x,x],
    x^(u[[2]]/m),
  Map[Function[PowerVariableSubst[#,m,x]],u]]]


(*
Euler substitution #2:
  If u is an expression of the form f (Sqrt[a+b*x+c*x^2],x), f (x,x) is a rational function, and
	PosQ[c], FunctionOfSquareRootOfQuadratic[u,x] returns the 3-element list {
		f ((a*Sqrt[c]+b*x+Sqrt[c]*x^2)/(b+2*Sqrt[c]*x),(-a+x^2)/(b+2*Sqrt[c]*x))*
		  (a*Sqrt[c]+b*x+Sqrt[c]*x^2)/(b+2*Sqrt[c]*x)^2,
		Sqrt[c]*x+Sqrt[a+b*x+c*x^2], 2 };

Euler substitution #1:
  If u is an expression of the form f (Sqrt[a+b*x+c*x^2],x), f (x,x) is a rational function, and
	PosQ[a], FunctionOfSquareRootOfQuadratic[u,x] returns the two element list {
		f ((c*Sqrt[a]-b*x+Sqrt[a]*x^2)/(c-x^2),(-b+2*Sqrt[a]*x)/(c-x^2))*
		  (c*Sqrt[a]-b*x+Sqrt[a]*x^2)/(c-x^2)^2,
		(-Sqrt[a]+Sqrt[a+b*x+c*x^2])/x, 1 };

Euler substitution #3:
  If u is an expression of the form f (Sqrt[a+b*x+c*x^2],x), f (x,x) is a rational function, and
	NegQ[a] and NegQ[c], FunctionOfSquareRootOfQuadratic[u,x] returns the two element list {
		-Sqrt[b^2-4*a*c]*
		f (-Sqrt[b^2-4*a*c]*x/(c-x^2),-(b*c+c*Sqrt[b^2-4*a*c]+(-b+Sqrt[b^2-4*a*c])*x^2)/(2*c*(c-x^2)))*
		  x/(c-x^2)^2,
		2*c*Sqrt[a+b*x+c*x^2]/(b-Sqrt[b^2-4*a*c]+2*c*x), 3 };

  else it returns False. *)

FunctionOfSquareRootOfQuadratic[u_,x_Symbol] :=
  If[MatchQ[u,x^m_.*(a_+b_.*x^n_.)^p_ /; FreeQ[{a,b,m,n,p},x]],
    False,
  Module[{tmp=FunctionOfSquareRootOfQuadratic[u,False,x]},
  If[FalseQ[tmp] || FalseQ[tmp[[1]]],
    False,
  tmp=tmp[[1]];
  Module[{a=Coefficient[tmp,x,0],b=Coefficient[tmp,x,1],c=Coefficient[tmp,x,2],sqrt,q,r},
  If[ZeroQ[a] && ZeroQ[b] || ZeroQ[b^2-4*a*c],
    False,
  If[PosQ[c],
    sqrt=Rt[c,2];
    q=a*sqrt+b*x+sqrt*x^2;
    r=b+2*sqrt*x;
    {Simplify[SquareRootOfQuadraticSubst[u,q/r,(-a+x^2)/r,x]*q/r^2],
     Simplify[sqrt*x+Sqrt[tmp]],
     2},
  If[PosQ[a],
    sqrt=Rt[a,2];
    q=c*sqrt-b*x+sqrt*x^2;
    r=c-x^2;
    {Simplify[SquareRootOfQuadraticSubst[u,q/r,(-b+2*sqrt*x)/r,x]*q/r^2],
     Simplify[(-sqrt+Sqrt[tmp])/x],
     1},
  sqrt=Rt[b^2-4*a*c,2];
  r=c-x^2;
  {Simplify[-sqrt*SquareRootOfQuadraticSubst[u,-sqrt*x/r,-(b*c+c*sqrt+(-b+sqrt)*x^2)/(2*c*r),x]*x/r^2],
   FullSimplify[2*c*Sqrt[tmp]/(b-sqrt+2*c*x)],
   3}]]]]]]]


FunctionOfSquareRootOfQuadratic[u_,v_,x_Symbol] :=
  If[AtomQ[u] || FreeQ[u,x],
    {v},
  If[PowerQ[u] && FreeQ[u[[2]],x],
    If[FractionQ[u[[2]]] && Denominator[u[[2]]]==2 && PolynomialQ[u[[1]],x] && Exponent[u[[1]],x]==2,
      If[(FalseQ[v] || u[[1]]===v),
        {u[[1]]},
      False],
    FunctionOfSquareRootOfQuadratic[u[[1]],v,x]],
  If[ProductQ[u] || SumQ[u],
    Catch[Module[{lst={v}},
    Scan[Function[lst=FunctionOfSquareRootOfQuadratic[#,lst[[1]],x];If[lst===False,Throw[False]]],u];
    lst]],
  False]]]


(* SquareRootOfQuadraticSubst[u,vv,xx,x] returns u with fractional powers replaced by vv raised
	to the power and x replaced by xx. *)
SquareRootOfQuadraticSubst[u_,vv_,xx_,x_Symbol] :=
  If[AtomQ[u] || FreeQ[u,x],
    If[u===x,
      xx,
    u],
  If[PowerQ[u] && FreeQ[u[[2]],x],
    If[FractionQ[u[[2]]] && Denominator[u[[2]]]==2 && PolynomialQ[u[[1]],x] && Exponent[u[[1]],x]==2,
      vv^Numerator[u[[2]]],
    SquareRootOfQuadraticSubst[u[[1]],vv,xx,x]^u[[2]]],
  Map[Function[SquareRootOfQuadraticSubst[#,vv,xx,x]],u]]]


RegularizeSubst[u_,x_,w_] :=
  Module[{lst=ConstantFactor[Regularize[Subst[u,x,w],x],x]},
  lst[[1]]*lst[[2]]]


(* Subst[u,v,w] returns u with all nondummy occurences of v replaced by w *)
Subst[u_,v_,w_] :=
  If[u===v,
    w,
  If[AtomQ[u],
    u,
  If[PowerQ[u],
    If[PowerQ[v] && u[[1]]===v[[1]] && SumQ[u[[2]]],
      Subst[u[[1]]^First[u[[2]]],v,w]*Subst[u[[1]]^Rest[u[[2]]],v,w],
    Subst[u[[1]],v,w]^Subst[u[[2]],v,w]],
  If[SubstQ[u] && (u[[2]]===v || FreeQ[u[[1]],v]),
    Subst[u[[1]],u[[2]],Subst[u[[3]],v,w]],
  Map[Function[Subst[#,v,w]],u]]]]] /;
AtomQ[u] || SubstQ[u] && (u[[2]]===v || FreeQ[u[[1]],v]) ||
	Not[CalculusQ[u] && Not[FreeQ[v,u[[2]]]] || MemberQ[{Pattern,Defer,Hold,HoldForm},Head[u]]]


(* u is a function v.  SubstFor[v,u,x] returns f (x). *)
SubstFor[v_,u_,x_] :=
  If[AtomQ[v],
    Subst[u,v,x],
  If[PowerQ[v] && FreeQ[v[[2]],x] (* && NonzeroQ[v[[2]]+1] *),
    SubstForPower[u,v[[1]],v[[2]],x],

  If[SinQ[v],
    SubstForTrig[u,x,Sqrt[1-x^2],v[[1]],x],
  If[CosQ[v],
    SubstForTrig[u,Sqrt[1-x^2],x,v[[1]],x],
  If[TanQ[v],
    SubstForTrig[u,x/Sqrt[1+x^2],1/Sqrt[1+x^2],v[[1]],x],
  If[CotQ[v],
    SubstForTrig[u,1/Sqrt[1+x^2],x/Sqrt[1+x^2],v[[1]],x],
  If[SecQ[v],
    SubstForTrig[u,1/Sqrt[1-x^2],1/x,v[[1]],x],
  If[CscQ[v],
    SubstForTrig[u,1/x,1/Sqrt[1-x^2],v[[1]],x],

  If[SinhQ[v],
    SubstForHyperbolic[u,x,Sqrt[1+x^2],v[[1]],x],
  If[CoshQ[v],
    SubstForHyperbolic[u,Sqrt[-1+x^2],x,v[[1]],x],
  If[TanhQ[v],
    SubstForHyperbolic[u,x/Sqrt[1-x^2],1/Sqrt[1-x^2],v[[1]],x],
  If[CothQ[v],
    SubstForHyperbolic[u,1/Sqrt[-1+x^2],x/Sqrt[-1+x^2],v[[1]],x],
  If[SechQ[v],
    SubstForHyperbolic[u,1/Sqrt[-1+x^2],1/x,v[[1]],x],
  If[CschQ[v],
    SubstForHyperbolic[u,1/x,1/Sqrt[1+x^2],v[[1]],x],

  SubstForExpn[u,v,x]]]]]]]]]]]]]]]


SubstForExpn[u_,v_,x_] :=
  If[u===v,
    x,
  If[AtomQ[u],
    u,
  Map[Function[SubstForExpn[#,v,x]],u]]]


SubstForPower[u_,bas_,deg_,x_] :=
  If[AtomQ[u],
    u,
  If[PowerQ[u] && ZeroQ[u[[1]]-bas] && FreeQ[u[[2]],x] && IntegerQ[Simplify[u[[2]]/deg]]
		(* && (u[[2]]/deg>0 || FractionQ[deg]) *),
    x^(u[[2]]/deg),
  Map[Function[SubstForPower[#,bas,deg,x]],u]]]


(* u (v) is an expression of the form f (Sin[v],Cos[v],Tan[v],Cot[v],Sec[v],Csc[v]). *)
(* SubstForTrig[u,sin,cos,v,x] returns the expression f (sin,cos,sin/cos,cos/sin,1/cos,1/sin). *)
SubstForTrig[u_,sin_,cos_,v_,x_] :=
  If[AtomQ[u],
    u,
  If[TrigQ[u] && IntegerQuotientQ[u[[1]],v],
    If[u[[1]]===v || ZeroQ[u[[1]]-v],
      If[SinQ[u],
        sin,
      If[CosQ[u],
        cos,
      If[TanQ[u],
        sin/cos,
      If[CotQ[u],
        cos/sin,
      If[SecQ[u],
        1/cos,
      1/sin]]]]],
    Map[Function[SubstForTrig[#,sin,cos,v,x]],
			ReplaceAll[TrigExpand[Head[u][u[[1]]/v*x]],x->v]]],
  If[ProductQ[u] && CosQ[u[[1]]] && SinQ[u[[2]]] && ZeroQ[u[[1,1]]-v/2] && ZeroQ[u[[2,1]]-v/2],
    sin/2*SubstForTrig[Drop[u,2],sin,cos,v,x],
  Map[Function[SubstForTrig[#,sin,cos,v,x]],u]]]]


(* u (v) is an expression of the form f (Sinh[v],Cosh[v],Tanh[v],Coth[v],Sech[v],Csch[v]). *)
(* SubstForHyperbolic[u,sinh,cosh,v,x] returns the expression
		f (sinh,cosh,sinh/cosh,cosh/sinh,1/cosh,1/sinh). *)
SubstForHyperbolic[u_,sinh_,cosh_,v_,x_] :=
  If[AtomQ[u],
    u,
  If[HyperbolicQ[u] && IntegerQuotientQ[u[[1]],v],
    If[u[[1]]===v || ZeroQ[u[[1]]-v],
      If[SinhQ[u],
        sinh,
      If[CoshQ[u],
        cosh,
      If[TanhQ[u],
        sinh/cosh,
      If[CothQ[u],
        cosh/sinh,
      If[SechQ[u],
        1/cosh,
      1/sinh]]]]],
    Map[Function[SubstForHyperbolic[#,sinh,cosh,v,x]],
			ReplaceAll[TrigExpand[Head[u][u[[1]]/v*x]],x->v]]],
  If[ProductQ[u] && CoshQ[u[[1]]] && SinhQ[u[[2]]] && ZeroQ[u[[1,1]]-v/2] && ZeroQ[u[[2,1]]-v/2],
    sinh/2*SubstForHyperbolic[Drop[u,2],sinh,cosh,v,x],
  Map[Function[SubstForHyperbolic[#,sinh,cosh,v,x]],u]]]]


(* If u has a subexpression of the form (a+b*x)^(m/n) where m and n>1 are integers, 
	SubstForFractionalPowerOfLinear[u,x] returns the list {v,n,a+b*x,1/b} where v is u
	with subexpressions of the form (a+b*x)^(m/n) replaced by x^m and x replaced
	by -a/b+x^n/b, and all times x^(n-1); else it returns False. *)
SubstForFractionalPowerOfLinear[u_,x_Symbol] :=
  Module[{lst=FractionalPowerOfLinear[u,1,False,x],n,a,b,tmp},
  If[FalseQ[lst] || FalseQ[lst[[2]]],
    False,
  n=lst[[1]];
  a=Coefficient[lst[[2]],x,0];
  b=Coefficient[lst[[2]],x,1];
  tmp=x^(n-1)*SubstForFractionalPower[u,lst[[2]],n,-a/b+x^n/b,x];
  tmp=SplitFreeFactors[Regularize[tmp,x],x];
  {tmp[[2]],n,lst[[2]],tmp[[1]]/b}]]


(* If u has a subexpression of the form (a+b*x)^(m/n), 
	FractionalPowerOfLinear[u,1,False,x] returns {n,a+b*x}; else it returns False. *)
FractionalPowerOfLinear[u_,n_,v_,x_] :=
  If[AtomQ[u] || FreeQ[u,x],
    {n,v},
  If[CalculusQ[u],
    False,
  If[FractionalPowerQ[u] && LinearQ[u[[1]],x] && (FalseQ[v] || ZeroQ[u[[1]]-v]),
    {LCM[Denominator[u[[2]]],n],u[[1]]},
  Catch[Module[{lst={n,v}},
    Scan[Function[If[FalseQ[lst=FractionalPowerOfLinear[#,lst[[1]],lst[[2]],x]],Throw[False]]],u];
    lst]]]]]


(* If u has a subexpression of the form ((a+b*x)/(c+d*x))^(m/n) where m and n>1 are integers, 
	RootOfQuotientOfLinears[u,x] returns the list {v,n,(a+b*x)/(c+d*x),b*c-a*d} where v is u
	with subexpressions of the form ((a+b*x)/(c+d*x))^(m/n) replaced by x^m and x replaced
	by (-a+c*x^n)/(b-d*x^n), and all times x^(n-1)/(b-d*x^n)^2; else it returns False. *)
SubstForFractionalPowerOfQuotientOfLinears[u_,x_Symbol] :=
  Module[{lst=FractionalPowerOfQuotientOfLinears[u,1,False,x],n,a,b,c,d,tmp},
  If[FalseQ[lst] || FalseQ[lst[[2]]],
    False,
  n=lst[[1]];
  tmp=lst[[2]];
  lst=QuotientOfLinearsParts[tmp,x];
  a=lst[[1]];
  b=lst[[2]];
  c=lst[[3]];
  d=lst[[4]];
  If[ZeroQ[d],
    False,
  lst=x^(n-1)*SubstForFractionalPower[u,tmp,n,(-a+c*x^n)/(b-d*x^n),x]/(b-d*x^n)^2;
  lst=SplitFreeFactors[Regularize[lst,x],x];
  {lst[[2]],n,tmp,lst[[1]]*(b*c-a*d)}]]]


(* If the substitution x=v^(1/n) will not complicate algebraic subexpressions of u, 
	SubstForFractionalPowerQ[u,v,x] returns True; else it returns False. *)
SubstForFractionalPowerQ[u_,v_,x_Symbol] :=
  If[AtomQ[u] || FreeQ[u,x],
    True,
  If[FractionalPowerQ[u],
    SubstForFractionalPowerAuxQ[u,v,x],
  Catch[Scan[Function[If[Not[SubstForFractionalPowerQ[#,v,x]],Throw[False]]],u];True]]]

SubstForFractionalPowerAuxQ[u_,v_,x_] :=
  If[AtomQ[u],
    False,
  If[FractionalPowerQ[u] && ZeroQ[u[[1]]-v],
    True,
  Catch[Scan[Function[If[SubstForFractionalPowerAuxQ[#,v,x],Throw[True]]],u];False]]]


(* If u has a subexpression of the form ((a+b*x)/(c+d*x))^(m/n), 
	FractionalPowerOfQuotientOfLinears[u,1,False,x] returns {n,(a+b*x)/(c+d*x)}; else it returns False. *)
FractionalPowerOfQuotientOfLinears[u_,n_,v_,x_] :=
  If[AtomQ[u] || FreeQ[u,x],
    {n,v},
  If[CalculusQ[u],
    False,
  If[FractionalPowerQ[u] && QuotientOfLinearsQ[u[[1]],x] && (FalseQ[v] || ZeroQ[u[[1]]-v]),
    {LCM[Denominator[u[[2]]],n],u[[1]]},
  Catch[Module[{lst={n,v}},
    Scan[Function[If[FalseQ[lst=FractionalPowerOfQuotientOfLinears[#,lst[[1]],lst[[2]],x]],Throw[False]]],u];
    lst]]]]]


(* If u has a subexpression of the form g[a+b*x] where g is the inverse of the function h
	(i.e. h[g[x]] == x) and f[x,g[a+b*x]] equals u, SubstForInverseFunctionOfLinear[u,x] returns 
	the list {f[-a/b+h[x]/b,x]*h'[x], g[a+b*x], b} *)
SubstForInverseFunctionOfLinear[u_,x_Symbol] :=
  Module[{tmp=InverseFunctionOfLinear[u,x],h,a,b},
  If[FalseQ[tmp],
    False,
  h=InverseFunction[Head[tmp]];
  a=Coefficient[tmp[[1]],x,0];
  b=Coefficient[tmp[[1]],x,1];
  {SubstForInverseFunction[u,tmp,-a/b+h[x]/b,x]*D[h[x],x], tmp, b}]]


(* If u has a subexpression of the form g[a+b*x] where g is an inverse function, 
	InverseFunctionOfLinear[u,x] returns g[a+b*x]; else it returns False. *)
InverseFunctionOfLinear[u_,x_Symbol] :=
  If[AtomQ[u] || CalculusQ[u] || FreeQ[u,x],
    False,
  If[InverseFunctionQ[u] && LinearQ[u[[1]],x],
    u,
  Module[{tmp},
  Catch[
    Scan[Function[If[NotFalseQ[tmp=InverseFunctionOfLinear[#,x]],Throw[tmp]]],u];
    False]]]]


(* If u has a subexpression of the form g[(a+b*x)/(c+d*x)] where g is the inverse of function h 
	and f[x,g[(a+b*x)/(c+d*x)]] equals u, SubstForInverseFunctionOfQuotientOfLinears[u,x] returns 
	the list {f[(-a+c*h[x])/(b-d*h[x]),x]*h'[x]/(b-d*h[x])^2, g[(a+b*x)/(c+d*x)], b*c-a*d} *)
SubstForInverseFunctionOfQuotientOfLinears[u_,x_Symbol] :=
  Module[{tmp=InverseFunctionOfQuotientOfLinears[u,x],h,a,b,c,d,lst},
  If[FalseQ[tmp],
    False,
  h=InverseFunction[Head[tmp]];
  lst=QuotientOfLinearsParts[tmp[[1]],x];
  a=lst[[1]];
  b=lst[[2]];
  c=lst[[3]];
  d=lst[[4]];
  {SubstForInverseFunction[u,tmp,(-a+c*h[x])/(b-d*h[x]),x]*D[h[x],x]/(b-d*h[x])^2, tmp, b*c-a*d}]]


(* If u has a subexpression of the form g[(a+b*x)/(c+d*x)] where g is an inverse function, 
	InverseFunctionOfQuotientOfLinears[u,x] returns g[(a+b*x)/(c+d*x)]; else it returns False. *)
InverseFunctionOfQuotientOfLinears[u_,x_Symbol] :=
  If[AtomQ[u] || CalculusQ[u] || FreeQ[u,x],
    False,
  If[InverseFunctionQ[u] && QuotientOfLinearsQ[u[[1]],x],
    u,
  Module[{tmp},
  Catch[
    Scan[Function[If[NotFalseQ[tmp=InverseFunctionOfQuotientOfLinears[#,x]],Throw[tmp]]],u];
    False]]]]


(* SubstForFractionalPower[u,v,n,w,x] returns u with subexpressions equal to v^(m/n) replaced 
	by x^m and x replaced by w. *)
SubstForFractionalPower[u_,v_,n_,w_,x_Symbol] :=
  If[AtomQ[u],
    If[u===x,
      w,
    u],
  If[FractionalPowerQ[u] && ZeroQ[u[[1]]-v],
    x^(n*u[[2]]),
  Map[Function[SubstForFractionalPower[#,v,n,w,x]],u]]]


(* SubstForInverseFunction[u,v,w,x] returns u with subexpressions equal to v replaced by x 
	and x replaced by w. *)
SubstForInverseFunction[u_,v_,x_Symbol] :=
(*  Module[{a=Coefficient[v[[1]],0],b=Coefficient[v[[1]],1]},
  SubstForInverseFunction[u,v,-a/b+InverseFunction[Head[v]]/b,x]] *)
  SubstForInverseFunction[u,v,
		(-Coefficient[v[[1]],x,0]+InverseFunction[Head[v]][x])/Coefficient[v[[1]],x,1],x]

SubstForInverseFunction[u_,v_,w_,x_Symbol] :=
  If[AtomQ[u],
    If[u===x,
      w,
    u],
  If[Head[u]===Head[v] && ZeroQ[u[[1]]-v[[1]]],
    x,
  Map[Function[SubstForInverseFunction[#,v,w,x]],u]]]


(* If u is a function of an inverse linear binomial of the form f[1/(a+b*x)], 
	SubstForInverseLinear[u,x] returns the list {f[x],a+b*x,b}; else it returns False. *)
SubstForInverseLinear[u_,x_Symbol] :=
  Module[{lst=FunctionOfInverseLinear[u,x],a,b},
  If[FalseQ[lst],
    False,
  a=lst[[1]];
  b=lst[[2]];
  {RegularizeSubst[u,x,-a/b+1/(b*x)],a+b*x,b}]]


(* u is a function of trig functions of a linear function of x. *)
(* SubstInertSineForTrigOfLinear[u] returns u with the trig functions replaced with the inert sin function. *)
SubstInertSineForTrigOfLinear[u_,x_] :=
  If[AtomQ[u],
    u,
  If[TrigQ[u] && LinearQ[u[[1]],x],
    If[SinQ[u],
      sin[u[[1]]],
    If[CosQ[u],
      sin[u[[1]]+Pi/2],
    If[TanQ[u],
      sin[u[[1]]]/sin[u[[1]]+Pi/2],
    If[CotQ[u],
      sin[u[[1]]+Pi/2]/sin[u[[1]]],
    If[SecQ[u],
      sin[u[[1]]+Pi/2]^(-1),
    sin[u[[1]]]^(-1)]]]]],
  Map[Function[SubstInertSineForTrigOfLinear[#,x]],u]]]


TryTanSubst[u_,x_Symbol] :=
  FalseQ[FunctionOfLinear[u,x]] &&
  Not[MatchQ[u,r_.*(s_+t_)^n_. /; IntegerQ[n] && n>0]] &&
(*Not[MatchQ[u,Log[f_[x]^2] /; SinCosQ[f]]]  && *)
  Not[MatchQ[u,Log[v_]]]  &&
  Not[MatchQ[u,1/(a_+b_.*f_[x]^n_) /; SinCosQ[f] && IntegerQ[n] && n>2]] &&
  Not[MatchQ[u,f_[m_.*x]*g_[n_.*x] /; IntegersQ[m,n] && SinCosQ[f] && SinCosQ[g]]] &&
  Not[MatchQ[u,r_.*(a_.*s_^m_)^p_ /; FreeQ[{a,m,p},x] && Not[m===2 && (s===Sec[x] || s===Csc[x])]]] &&
  u===ExpnExpand[u,x]


TryPureTanSubst[u_,x_Symbol] :=
  Not[MatchQ[u,Log[v_]]] &&
  Not[MatchQ[u,f_[v_]^2 /; LinearQ[v,x]]] &&
  Not[MatchQ[u,ArcTan[a_.*Tan[v_]] /; FreeQ[a,x]]] &&
  Not[MatchQ[u,ArcTan[a_.*Cot[v_]] /; FreeQ[a,x]]] &&
  Not[MatchQ[u,ArcCot[a_.*Tan[v_]] /; FreeQ[a,x]]] &&
  Not[MatchQ[u,ArcCot[a_.*Cot[v_]] /; FreeQ[a,x]]] &&
  u===ExpnExpand[u,x]


TryTanhSubst[u_,x_Symbol] :=
  FalseQ[FunctionOfLinear[u,x]] &&
  Not[MatchQ[u,r_.*(s_+t_)^n_. /; IntegerQ[n] && n>0]] &&
(*Not[MatchQ[u,Log[f_[x]^2] /; SinhCoshQ[f]]]  && *)
  Not[MatchQ[u,Log[v_]]]  &&
  Not[MatchQ[u,1/(a_+b_.*f_[x]^n_) /; SinhCoshQ[f] && IntegerQ[n] && n>2]] &&
  Not[MatchQ[u,f_[m_.*x]*g_[n_.*x] /; IntegersQ[m,n] && SinhCoshQ[f] && SinhCoshQ[g]]] &&
  Not[MatchQ[u,r_.*(a_.*s_^m_)^p_ /; FreeQ[{a,m,p},x] && Not[m===2 && (s===Sech[x] || s===Csch[x])]]] &&
  u===ExpnExpand[u,x]


TryPureTanhSubst[u_,x_Symbol] :=
  Not[MatchQ[u,Log[v_]]]  &&
  Not[MatchQ[u,ArcTanh[a_.*Tanh[v_]] /; FreeQ[a,x]]] &&
  Not[MatchQ[u,ArcTanh[a_.*Coth[v_]] /; FreeQ[a,x]]] &&
  Not[MatchQ[u,ArcCoth[a_.*Tanh[v_]] /; FreeQ[a,x]]] &&
  Not[MatchQ[u,ArcCoth[a_.*Coth[v_]] /; FreeQ[a,x]]] &&
  u===ExpnExpand[u,x]


(* If u is easy to differentiate wrt x and the derivative divides v wrt x, returns the quotient;
   else it returns False. *)
DerivativeDivides[u_,v_,x_Symbol] :=
  If[If[PolynomialQ[u,x], PolynomialQ[v,x] && Exponent[v,x]==Exponent[u,x]-1, EasyDQ[u,x]],
    Module[{w=Block[{ShowSteps=False}, D[u,x]]},
    If[ZeroQ[w],
      False,
    w=Simplify[v/w];
    If[FreeQ[w,x],
      w,
    False]]],
  False]


(* If u is easy to differentiate wrt x, returns True; else it returns False. *)
EasyDQ[u_,x_Symbol] :=
  If[AtomQ[u] || FreeQ[u,x] || Length[u]==0,
    True,
  If[CalculusQ[u],
    False,
  If[Length[u]==1,
    EasyDQ[u[[1]],x],
  If[RationalFunctionQ[u,x] && RationalFunctionExponents[u,x]==={1,1},
    True,
  If[ProductQ[u],
    If[FreeQ[First[u],x],
      EasyDQ[Rest[u],x],
    If[FreeQ[Rest[u],x],
      EasyDQ[First[u],x],
    False]],
  If[SumQ[u],
    EasyDQ[First[u],x] && EasyDQ[Rest[u],x],
  If[Length[u]==2,
    If[FreeQ[u[[1]],x],
      EasyDQ[u[[2]],x],
    If[FreeQ[u[[2]],x],
      EasyDQ[u[[1]],x],
    False]],
  False]]]]]]]


DownValues[Rt]={};


Rt[u_^m_,n_Integer] :=
  1/Rt[u^-m,n] /;
RationalQ[m] && m<0

Rt[v_.*u_^w_,n_Integer] :=
  Module[{m=Numerator[NumericFactor[w]]},
  Rt[v,n]*Rt[u^(w/m),n/GCD[m,n]]^(m/GCD[m,n]) /;
 m>1] /;
Not[NegativeOrZeroQ[v]]

(* Rt[u_*v_^m_,n_Integer] :=
  Rt[-u,n]/Rt[-v^-m,n] /;
RationalQ[m] && m<0 && NegativeQ[u] *)


Rt[u_,n_Integer] :=
  Map[Function[Rt[#,n]],u] /;
ProductQ[u] && OddQ[n]

Rt[u_,n_Integer] :=
  Catch[
  Do[If[PositiveQ[u[[i]]],
       Throw[Rt[u[[i]],n]*Rt[Delete[u,i],n]]],
    {i,1,Length[u]}];
  Do[If[NegativeQ[u[[i]]] && NonzeroQ[u[[i]]+1],
       Throw[Rt[-u[[i]],n]*Rt[-Delete[u,i],n]]],
    {i,1,Length[u]}];
  If[u[[1]]===-1,
    Do[If[SumQ[u[[i]]] && (NegQ[u[[i,1]]] || NegQ[u[[i,2]]]),
         Throw[Rt[Dist[-1,u[[i]]],n]*Rt[-Delete[u,i],n]]],
      {i,2,Length[u]}];
    Do[If[AtomQ[u[[i]]],
         Throw[Rt[-u[[i]],n]*Rt[-Delete[u,i],n]]],
      {i,2,Length[u]}];
    Rt[-u[[2]],n]*Rt[Drop[u,2],n],
  Do[If[Not[FreeQ[Delete[u,i],Rt[-u[[i]],n]]],
       Throw[Rt[-u[[i]],n]*Rt[-Delete[u,i],n]]],
    {i,1,Length[u]}];
  Map[Function[Rt[#,n]],u]]] /;
ProductQ[u] && EvenQ[n] && Not[u[[1]]===-1 && Length[u]==2]


(* Note: These simplification rules required because not always done by Simplify! See Warts.m
	for examples of the problem. *)

(* Basis: 1-Sin[z]^2 == Cos[z]^2 *)
Rt[u_.*(a_+b_.*Sin[v_]^2)^m_.,n_Integer] :=
  Rt[u*(a*Cos[v]^2)^m,n] /;
ZeroQ[a+b]

(* Basis: 1-Cos[z]^2 == Sin[z]^2 *)
Rt[u_.*(a_+b_.*Cos[v_]^2)^m_.,n_Integer] :=
  Rt[u*(a*Sin[v]^2)^m,n] /;
ZeroQ[a+b]

(* Basis: 1+Sinh[z]^2 == Cosh[z]^2 *)
Rt[u_.*(a_+b_.*Sinh[v_]^2)^m_.,n_Integer] :=
  Rt[u*(a*Cosh[v]^2)^m,n] /;
ZeroQ[a-b]

(* Basis: 1-Cosh[z]^2 == -Sinh[z]^2 *)
Rt[u_.*(a_+b_.*Cosh[v_]^2)^m_.,n_Integer] :=
  Rt[u*(b*Sinh[v]^2)^m,n] /;
ZeroQ[a+b]


Rt[u_,n_] :=
  -Rt[-u,n] /;
OddQ[n] && NegativeQ[u]

Rt[u_,n_Integer] :=
  Module[{v=Simplify[u]},
  If[LeafCount[Together[v]]<LeafCount[v], v=Together[v]];
  If[v=!=u,
    Rt[v,n],
  u^(1/n)]]


(* Rt[u_,n_Integer] :=
  If[AtomQ[u],
    u^(1/n),
  If[PowerQ[u],
    If[RationalQ[u[[2]]],
      If[u[[2]]<0,
        1/Rt[u[[1]]^-u[[2]],n],
      If[Numerator[u[[2]]]>1,
        Module[{gcd=GCD[Numerator[u[[2]]],n]},
        Rt[u[[1]]^(1/Denominator[u[[2]]]),n/gcd]^(Numerator[u[[2]]]/gcd)],
      u^(1/n)]],
    u^(1/n)],
  If[ProductQ[u],
    If[OddQ[n],
      Map[Function[Rt[#,n]],u],
    If[NegativeQ[First[u]],
      If[First[u]===-1,
        If[PowerQ[Rest[u]] && OddQ[Rest[u][[2]]],
          If[Rest[u][[2]]<0,
            1/Rt[(-Rest[u][[1]])^-Rest[u][[2]],n],
          Module[{gcd=GCD[Rest[u][[2]],n]},
          Rt[Rest[u][[1]],n/gcd]^(Rest[u][[2]]/gcd)]],
        u^(1/n)],
      Rt[-First[u],n]*Rt[-Rest[u],n]],
    u^(1/n)]], *)


 (* u is a monomial sum in x.  IntegrateMonomialSum[u,x] returns the antiderivative of u wrt x
	with the antiderivative of the constants terms of u collected into a single term times x. *)
IntegrateMonomialSum[u_,x_Symbol] :=
  Module[{lst=Map[Function[If[FreeQ[#,x],{#,0},{0,#*x*If[Exponent[#,x]===-1,Log[x],1/(Exponent[#,x]+1)]}]],u]},
  lst[[1]]*x + lst[[2]]]
(* ::Package:: *)

(* ::Title:: *)
(*Integration Simplification Functions*)


(* ::Section:: *)
(*Distribution Function*)


(* Dist[u,v] returns the sum of u times each term of v, provided v is free of Int. *) 
DownValues[Dist]={};
UpValues[Dist]={};

Dist[0,v_] :=
  (Print["*** Warning ***:  Dist[0,",v,"]"]; 0);

Dist[1,v_] := v

Dist[u_,v_] := -Dist[-u,v] /;
NumericFactor[u]<0

(*
Unprotect[Plus]
(*Dist /: *)Dist[u_,v_]+Dist[w_,v_] := 
  If[ZeroQ[u+w],
    0,
  Dist[u+w,v]]

(*Dist /: *)Dist[u_,v_]-Dist[w_,v_] := 
  If[ZeroQ[u-w],
    0,
  Dist[u-w,v]]
Protect[Plus]

Unprotect[Times]
(*Dist /: *)w_*Dist[u_,v_] := Dist[w*u,v] /; w=!=-1
Protect[Times]
*)

Dist[u_,Dist[v_,w_]] := Dist[Sim[u*v],w]

Dist[u_,v_] := Map[Function[Dist[u,#]],v] /;
  SumQ[v]

Dist[u_,v_] := DistSimp[u*v] /;
  FreeQ[v,Int]

Dist[u_,v_*w_] := Dist[Sim[u*v],w] /;
  FreeQ[v,Int]

Dist[u_,v_] := DistSimp[u*v] /;
  ShowSteps=!=True


(* Basis: If n is an integer, (a+b*z)^m*(b+a/z)^n == (a+b*z)^(m+n)/z^n *)
DistSimp[u_*(a_+b_.*f_[v_])^m_*(b_+a_.*g_[v_])^n_.] :=
  u*(a+b*f[v])^(m+n)/f[v]^n /;
TrigQ[f] && TrigQ[g] && f[v]===1/g[v] && RationalQ[m] && IntegerQ[n]

DistSimp[u_] := u


(* ::Section::Closed:: *)
(*Simplification Functions*)


(* ::Subsection::Closed:: *)
(*Regularize*)


Regularize[u_,x_Symbol] :=
  If[RecognizedFormQ[u,x],
    u,
(* NormalForm[NormalForm[NormalForm[u,x],x],x]] *)
  NormalForm[NormalForm[NormalForm[Simplify[u],x],x],x]]
(* Simp[NormalForm[Simplify[u],x]]] *)


(* ::Subsection::Closed:: *)
(*RecognizedFormQ*)


(* If u (x) is a form recognized by the integrator, RecognizedFormQ[u,x] returns True, else False *)
RecognizedFormQ[u_,x_Symbol] :=
  FreeQ[u,x] ||
  MonomialQ[u,x] ||
(*  MonomialSumQ[u,x] || *)
  MatchQ[u,a_*v_ /; FreeQ[a,x] && RecognizedFormQ[v,x]] ||
  MatchQ[u,f_[a_.+b_.*x]^n_. /; FreeQ[{a,b,f},x] && IntegerQ[n]] ||
  MatchQ[u,(a_+b_.*x^n_.)^p_. /; FreeQ[{a,b,n,p},x] && IntegerQ[n] && n>0] ||
  MatchQ[u,x^m_.*(a_+b_.*x^n_.)^p_. /; FreeQ[{a,b,m,n,p},x] && IntegerQ[n] && n>0] ||
  MatchQ[u,(a_.+b_.*x)^m_.*(c_.+d_.*x)^n_. /; FreeQ[{a,b,c,d,m,n},x]] ||
  MatchQ[u,x^p_.*(a_.+b_.*x)^m_.*(c_.+d_.*x)^n_. /; FreeQ[{a,b,c,d,m,n,p},x]] ||

  MatchQ[u,x^m_.*(b_.*x+c_.*x^2)^n_ /; FreeQ[{b,c,m,n},x] && Not[IntegerQ[n]]] ||
  MatchQ[u,(a_.+b_.*x+c_.*x^2)^n_. /; FreeQ[{a,b,c,n},x]] ||
  MatchQ[u,x^m_.*(a_+b_.*x+c_.*x^2)^n_. /; FreeQ[{a,b,c,m,n},x]] ||
  MatchQ[u,(d_+e_.*x)/(a_+b_.*x+c_.*x^2) /; FreeQ[{a,b,c,d,e},x]] ||
  MatchQ[u,x^m_.*(d_+e_.*x)/(a_+b_.*x+c_.*x^2) /; FreeQ[{a,b,c,d,e},x]] ||

  MatchQ[u,v_*(a_+b_.*x) /; FreeQ[{a,b},x] && FunctionOfQ[a*x+b*x^2/2,v,x]] ||
  MatchQ[u,(a_.*v_^m_.+b_.*v_^n_.)/(c_.*v_^m_.+d_.*v_^n_.) /; FreeQ[{a,b,c,d,m,n},x]]


(* ::Subsection::Closed:: *)
(*NormalForm*)


(* NormalForm[u,x] returns u[x] in normal form. *)
DownValues[NormalForm]={};

(* Expansion rules *)

(* NormalForm[c_*(a_+b_.*x_^n_.),x_Symbol] :=
  a*c + b*c*x^n /;
FreeQ[{a,b,c,n},x] *)

(* Basis: If n is odd, -m*(-z+w)^n == m*(z-w)^n *)
NormalForm[m_*u_^n_,x_Symbol] :=
  NormalForm[-m*Map[Function[-#],u]^n,x] /;
RationalQ[m] && m<0 && OddQ[n] && SumQ[u] && NegativeCoefficientQ[u]

(* Basis: If m and n are odd, (-z+w)^m*(-r+s)^n == (z-w)^m*(r-s)^n *)
NormalForm[u_^m_*v_^n_,x_Symbol] :=
  NormalForm[Map[Function[-#],u]^m*Map[Function[-#],v]^n,x] /;
OddQ[{m,n}] && SumQ[u] && SumQ[v] && NegativeCoefficientQ[u] && NegativeCoefficientQ[v]

NormalForm[u_,x_Symbol] :=
  Coefficient[u,x,0] + Coefficient[u,x,1]*x /;
LinearQ[u,x]

(* NormalForm[u_,x_Symbol] :=
  Module[{lst=BinomialTest[u,x]},
  lst[[1]] + lst[[2]]*x^lst[[3]] /;
 Not[FalseQ[lst]]] *)

(* NormalForm[a_*(b_+u_),x_Symbol] :=
  a*b + NormalForm[a*u,x] /;
FreeQ[{a,b},x] *)

NormalForm[a_*u_,x_Symbol] :=
  NormalForm[Map[Function[a*#],u],x] /;
FreeQ[a,x] && SumQ[u]

NormalForm[b_.*x_*(c_+d_.*x_),x_Symbol] :=
  b*c*x + b*d*x^2 /;
FreeQ[{b,c,d},x]

NormalForm[a_+b_.*x_^n_.*(c_+d_.*x_^n_.),x_Symbol] :=
  a + b*c*x^n + b*d*x^(2*n) /;
FreeQ[{a,b,c,d,n},x]

NormalForm[c_+d_.*(a_+b_.*x_^n_.)^2,x_Symbol] :=
  c + a^2*d + 2*a*b*d*x^n + b^2*d*x^(2*n) /;
FreeQ[{a,b,c,d,n},x]

NormalForm[c_.+e_.*x_^n_.+d_.*(a_+b_.*x_^n_.)^2,x_Symbol] :=
  c + a^2*d + (e+2*a*b*d)*x^n + b^2*d*x^(2*n) /;
FreeQ[{a,b,c,d,e,n},x]

NormalForm[a_+b_.*f_^(e_.+g_.*x_)*(c_+d_.*f_^(e_.+g_.*x_)),x_Symbol] :=
  a + b*c*f^(e+g*x) + b*d*f^(2*e+2*g*x) /;
FreeQ[{a,b,c,d,e,f,g},x]

NormalForm[c_.*x_^m_.*(a_+b_.*x_^n_.),x_Symbol] :=
  c*(b+a*x^m) /;
FreeQ[{a,b,c,m,n},x] && ZeroQ[m+n]

NormalForm[f_[c_.*x_^m_.*(a_+b_.*x_^n_.)^p_],x_Symbol] :=
  f[c*(b+a/x^n)^p] /;
FreeQ[{a,b,c,f,m,n},x] && IntegerQ[p] && ZeroQ[m+n*p]

NormalForm[(e_.*(a_+b_.*x_)*(c_+d_.*x_))^n_,x_Symbol] :=
  (a*c*e+(a*d*e+b*c*e)*x+b*d*e*x^2)^n /;
FreeQ[{a,b,c,d,e},x] && FractionQ[n]


(* Expand quadratic polynomials *) 
(* NormalForm[c_+d_.*(a_+b_.*x_^n_)^2,x_Symbol] :=
  c + a^2*d + 2*a*b*d*x^n + b^2*d*x^(2*n) /;
FreeQ[{a,b,c,d,n},x]

NormalForm[c_+e_.*x_^n_+d_.*(a_+b_.*x_^n_)^2,x_Symbol] :=
  c + a^2*d + (e+2*a*b*d)*x^n + b^2*d*x^(2*n) /;
FreeQ[{a,b,c,d,e,n},x] *)

NormalForm[f_[u_],x_Symbol] :=
  f[ExpandPolynomial[u,x]] /;
FreeQ[f,x] && QuadraticPolynomialQ[u,x]

NormalForm[f_^u_,x_Symbol] :=
  f^ExpandPolynomial[u,x] /;
FreeQ[f,x] && QuadraticPolynomialQ[u,x]

(* NormalForm[u_^n_,x_Symbol] :=
  ExpandPolynomial[u,x]^n /;
FreeQ[n,x] && QuadraticPolynomialQ[u,x] *)

NormalForm[u_.*f_^v_*g_^w_,x_Symbol] :=
  u*E^Sum[(Log[f]*Coefficient[v,x,k]+Log[g]*Coefficient[w,x,k])*x^k,{k,0,2}] /;
FreeQ[{f,g},x] && PolynomialQ[v,x] && 1<=Exponent[v,x]<=2 && 
				  PolynomialQ[w,x] && 1<=Exponent[w,x]<=2


NormalForm[u_.*f_^(a_.+b_.*x_^n_.)*g_^(c_.+d_.*x_^n_.),x_Symbol] :=
  u*E^(a*Log[f]+c*Log[g]+(b*Log[f]+d*Log[g])*x^n) /;
FreeQ[{a,b,c,d,f,g,n},x]


QuadraticPolynomialQ[u_,x_Symbol] :=
  PolynomialQ[u,x] && Exponent[u,x]<=2 && Not[MatchQ[u,a_.*v_^2 /; FreeQ[a,x]]]


ExpandPolynomial[u_,x_Symbol] :=
  Module[{k},
  Sum[Coefficient[u,x,k]*x^k,{k,0,Exponent[u,x]}]]


(* Factoring rules *)
NormalForm[(a_.*x_^m_.+b_.*x_^n_.)^p_,x_Symbol] :=
  (x^m*(a+b*x^(n-m)))^p /;
FreeQ[{a,b},x] && RationalQ[{m,n,p}] && m<=n && Not[2*m==n==2]

NormalForm[u_.+a_.*v_+b_.*v_,x_Symbol] :=
  u+(a+b)*v /;
FreeQ[{a,b},x] && Not[FreeQ[v,x]]

NormalForm[u_^n_,x_Symbol] :=
  Module[{v=Together[u]},
  v^n /;
 Not[SumQ[v]]] /;
SumQ[u] && FractionQ[n] && Not[MonomialSumQ[u,x]]

(* NormalForm[u_*Cos[v_]^n_.*Sin[v_]^n_.,x_Symbol] :=
  u*Sin[2*v]^n/2^n /;
IntegerQ[n] && Not[FreeQ[v,x]] *)

NormalForm[Cos[2*u_]*Sec[u_]^2,x_Symbol] :=
  1-Tan[u]^2 /;
Not[FreeQ[u,x]]

(* Basis: (a^2-b^2)/(a+b)^2 == (a-b)/(a+b) *)
(* Note: Necessary because Mathematica does not simplify (1+x^2)/(1+I*x)^2 to (1-I*x)/(1+I*x) *)
NormalForm[u_. (c_+d_)/(a_+b_)^2,x_Symbol] :=
  NormalForm[u*(a-b)/(a+b),x] /;
ZeroQ[c-a^2] && ZeroQ[d+b^2]

NormalForm[u_,x_Symbol] :=
  If[AtomQ[u],
    u,
  If[MatchQ[u,a_.+b_.*x^n_. /; FreeQ[{a,b,n},x]],
    u,
  If[MatchQ[u,a_.+b_.*x^n_.+c_.*x^m_. /; FreeQ[{a,b,c,m,n},x] && 2*n===m],
    u,
  Module[{tmp},
  tmp=MonomialFactor[u,x];
  If[NonzeroQ[tmp[[1]]] (* && Not[NegativeQ[tmp[[1]]]] *),
    x^tmp[[1]]*NormalForm[tmp[[2]],x],
  Map[Function[NormalForm[#,x]],u]]]]]]


(* ::Subsection::Closed:: *)
(*SimplifyExpression*)


DownValues[SimplifyExpression]={}


(* Note: These rules are only applied if an integration rule other than partial fraction 
	expansion should be used to integrate the expression. *)


(* Derivation: Algebraic simplification *)
(* Basis: If p is an integer, (a+b*x^n)^p == x^(n*p)*(b+a*x^(-n))^p *)
SimplifyExpression[x_^m_*(a_+b_.*x_^n_)^p_.,x_Symbol] :=
  x^(m+n*p)*(b+a*x^(-n))^p /;
FreeQ[{a,b},x] && IntegersQ[m,n,p] && n<0 && (m+n*p+1==0 || p<-1 && -n>1 && -n<=m+n*p<-2*n-1)


(* Basis: a*x+b*x^m+c*x^n == x*(a+b*x^(m-1)+c*x^(n-1)) *)
SimplifyExpression[1/(a_.*x_+b_.*x_^m_+c_.*x_^n_),x_Symbol] :=
  1/(x*(a+b*x^(m-1)+c*x^(n-1))) /;
FreeQ[{a,b,c},x] && IntegersQ[m,n] && m>2 && n-1==2*(m-1)


(* Basis: (e^2-a^2*f-a^2*g*x^2)/(-a*f-a*g*x^2+e*Sqrt[f+g*x^2]) == a+e/Sqrt[f+g*x^2] *)
SimplifyExpression[(a_.+b_.*x_^2)/(c_+d_.*x_^2+e_.*Sqrt[f_+g_.*x_^2]), x_Symbol] :=
  -c/f+e/Sqrt[f+g*x^2] /;
FreeQ[{a,b,c,d,e,f,g},x] && ZeroQ[c*g-f*d] && ZeroQ[b+d^2/g] && ZeroQ[a-e^2+c^2/f]


(* Basis: 1/(x*(a/x+b+c*x)) == 1/(a+b*x+c*x^2) *) 
SimplifyExpression[1/(x_*(a_./x_+b_+c_.*x_)),x_Symbol] :=
  1/(a+b*x+c*x^2) /;
FreeQ[{a,b,c},x]

(* Basis: 1/(x^2*(a/x^2+b/x+c)) == 1/(a+b*x+c*x^2) *) 
SimplifyExpression[1/(x_^2*(a_./x_^2+b_./x_+c_)),x_Symbol] :=
  1/(a+b*x+c*x^2) /;
FreeQ[{a,b,c},x]

(* Basis: x^m/(a*x^m+b*x^(m+1)+c*x^(m+2)) == 1/(a+b*x+c*x^2) *) 
SimplifyExpression[x_^m_./(a_.*x_^m_.+b_.*x_^p_.+c_.*x_^q_.),x_Symbol] :=
  1/(a+b*x+c*x^2) /;
FreeQ[{a,b,c},x] && IntegersQ[m,p,q] && p==m+1 && q==m+2


SimplifyExpression[u_,x_Symbol] :=
  If[MatchQ[u,w_.*(a_.+b_.*v_)^m_.*(c_.+d_.*v_)^n_. /; 
		FreeQ[{a,b,c,d},x] && IntegersQ[m,n] && m<0 && n<0],
    u,
  Module[{v},
  v=Regularize[u,x];
  If[SimplerExpressionQ[v,u,x],
    v,
  v=Regularize[Cancel[u],x];
  If[SimplerExpressionQ[v,u,x],
    v,
  u]]]]


(* If u is a significantly simpler expression than v, SimplerExpressionQ[u,v,x] returns True; 
	else it returns False. *)
SimplerExpressionQ[u_,v_,x_] :=
  SmartLeafCount[u] <= 2/3*SmartLeafCount[v] ||
(*Count[u,x,Infinity] < Count[v,x,Infinity] || *)
(*RecognizedFormQ[u,x] && Not[RecognizedFormQ[v,x]] || *)
  PolynomialQ[Numerator[u],x] && PolynomialQ[Denominator[u],x] && 
    PolynomialQ[Numerator[v],x] && PolynomialQ[Denominator[v],x] && 
    Exponent[Numerator[u],x]<Exponent[Numerator[v],x] && 
    Exponent[Denominator[u],x]<Exponent[Denominator[v],x] && 
	SmartLeafCount[u] <= SmartLeafCount[v]+5


(* SmartLeafCount[u] returns the number of atoms in u and, unlike LeafCount, treats rational
	and complex numbers as atoms. *)
SmartLeafCount[u_] :=
  If[AtomQ[u],
    1,
  Apply[Plus,Map[SmartLeafCount,Apply[List,u]]]+1]


(* ::Subsection::Closed:: *)
(*TrigSimplify*)


(* Note: It may be necessary for TrigSimplify to know and use the independent variable ??? *)


(* TrigSimplify[u] returns a bottom-up trig simplification of u. *)
TrigSimplify[u_] :=
  If[AtomQ[u],
    u,
  If[Head[u]===If,
    u,
  TrigSimplifyAux[Map[TrigSimplify,u]]]]

DownValues[TrigSimplifyAux]={}


(* Basis: a*z^m+b*z^n == z^m*(a+b*z^(n-m)) *)
TrigSimplifyAux[u_.*(a_.*v_^m_.+b_.*v_^n_.)^p_] :=
  u*v^(m*p)*TrigSimplifyAux[a+b*v^(n-m)]^p /;
(TrigQ[v] || HyperbolicQ[v]) && IntegerQ[p] && RationalQ[{m,n}] && m<n


(* ::Subsubsection::Closed:: *)
(*Circular trig function simplification rules*)


(* Basis: Sin[z]^2+Cos[z]^2 == 1 *)
TrigSimplifyAux[u_.*Cos[z_]^2+v_.*Sin[z_]^2+w_.] :=
  u+w /;
u===v

(* Basis: Sec[z]^2-Tan[z]^2 == 1 *)
TrigSimplifyAux[u_.*Sec[z_]^2+v_.*Tan[z_]^2+w_.] :=
  u+w /;
u===-v

(* Basis: Csc[z]^2-Cot[z]^2 == 1 *)
TrigSimplifyAux[u_.*Csc[z_]^2+v_.*Cot[z_]^2+w_.] :=
  u+w /;
u===-v


(* Basis: 1-Sin[z]^2 == Cos[z]^2 *)
TrigSimplifyAux[u_+v_.*Sin[z_]^2+w_.] :=
  u*Cos[z]^2+w /;
u===-v

(* Basis: 1-Cos[z]^2 == Sin[z]^2 *)
TrigSimplifyAux[u_+v_.*Cos[z_]^2+w_.] :=
  u*Sin[z]^2+w /;
u===-v

(* Basis: 1+Tan[z]^2 == Sec[z]^2 *)
TrigSimplifyAux[u_+v_.*Tan[z_]^2+w_.] :=
  u*Sec[z]^2+w /;
u===v

(* Basis: 1+Cot[z]^2 == Csc[z]^2 *)
TrigSimplifyAux[u_+v_.*Cot[z_]^2+w_.] :=
  u*Csc[z]^2+w /;
u===v

(* Basis: -1+Sec[z]^2 == Tan[z]^2 *)
TrigSimplifyAux[u_+v_.*Sec[z_]^2+w_.] :=
  v*Tan[z]^2+w /;
u===-v

(* Basis: -1+Csc[z]^2 == Cot[z]^2 *)
TrigSimplifyAux[u_+v_.*Csc[z_]^2+w_.] :=
  v*Cot[z]^2+w /;
u===-v


(* Basis: If a^2-b^2==0, Sin[z]^2/(a+b*Cos[z]) == 1/a-Cos[z]/b *)
TrigSimplifyAux[u_.*Sin[v_]^2/(a_+b_.*Cos[v_])] :=
  u*(1/a - Cos[v]/b) /;
ZeroQ[a^2-b^2]

(* Basis: If a^2-b^2==0, Cos[z]^2/(a+b*Sin[z]) == 1/a-Sin[z]/b *)
TrigSimplifyAux[u_.*Cos[v_]^2/(a_+b_.*Sin[v_])] :=
  u*(1/a - Sin[v]/b) /;
ZeroQ[a^2-b^2]


(* Basis: If n is an integer, Tan[z]^n/(a+b*Tan[z]^n) == 1/(b+a*Cot[z]^n) *)
TrigSimplifyAux[u_.*Tan[v_]^n_./(a_+b_.*Tan[v_]^n_.)] :=
  u/(b+a*Cot[v]^n) /;
IntegerQ[n] && n>0 && NonsumQ[a]

(* Basis: If n is an integer, Cot[z]^n/(a+b*Cot[z]^n) == 1/(b+a*Tan[z]^n) *)
TrigSimplifyAux[u_.*Cot[v_]^n_./(a_+b_.*Cot[v_]^n_.)] :=
  u/(b+a*Tan[v]^n) /;
IntegerQ[n] && n>0 && NonsumQ[a]

(* Basis: If n is an integer, Sec[z]^n/(a+b*Sec[z]^n) == 1/(b+a*Cos[z]^n) *)
TrigSimplifyAux[u_.*Sec[v_]^n_./(a_+b_.*Sec[v_]^n_.)] :=
  u/(b+a*Cos[v]^n) /;
IntegerQ[n] && n>0 && NonsumQ[a]

(* Basis: If n is an integer, Csc[z]^n/(a+b*Csc[z]^n) == 1/(b+a*Sin[z]^n) *)
TrigSimplifyAux[u_.*Csc[v_]^n_./(a_+b_.*Csc[v_]^n_.)] :=
  u/(b+a*Sin[v]^n) /;
IntegerQ[n] && n>0 && NonsumQ[a]


(* Basis: Csc[z]+Cot[z] == Cot[z/2] *)
TrigSimplifyAux[(a_.*Csc[v_]+b_.*Cot[v_])^n_] :=
  a^n*Cot[v/2]^n /;
EvenQ[n] && ZeroQ[a-b]

(* Basis: Csc[z]-Cot[z] == Tan[z/2] *)
TrigSimplifyAux[(a_.*Csc[v_]+b_.*Cot[v_])^n_] :=
  a^n*Tan[v/2]^n /;
EvenQ[n] && ZeroQ[a+b]


(* Basis: Sin[z]*(a+b*Cot[z]) == a*Sin[z] + b*Cos[z] *)
(* TrigSimplifyAux[u_*Sin[v_]^m_.*(a_.+b_.*Cot[v_]^2)^p_.] :=
  u*(b*Cos[v]^2+a*Sin[v]^2)^p /;
IntegersQ[m,p] && m==2*p *)

(* Basis: a+b*Cot[z] == (b*Cos[z]+a*Sin[z])/Sin[z] *)
TrigSimplifyAux[u_.*Sin[v_]^m_.*(a_.+b_.*Cot[v_]^n_.)^p_.] :=
  u*Sin[v]^(m-n*p)*(b*Cos[v]^n+a*Sin[v]^n)^p /;
IntegersQ[m,n,p]

(* Basis: Cos[z]*(a+b*Tan[z]) == a*Cos[z] + b*Sin[z] *)
(* TrigSimplifyAux[u_*Cos[v_]^m_.*(a_.+b_.*Tan[v_]^2)^p_.] :=
  u*(b*Sin[v]^2+a*Cos[v]^2)^p /;
IntegersQ[m,p] && m==2*p *)

(* Basis: a+b*Tan[z] == (b*Sin[z]+a*Cos[z])/Cos[z] *)
TrigSimplifyAux[u_.*Cos[v_]^m_.*(a_.+b_.*Tan[v_]^n_.)^p_.] :=
  u*Cos[v]^(m-n*p)*(b*Sin[v]^n+a*Cos[v]^n)^p /;
IntegersQ[m,n,p]

(* Basis: (a+b*Tan[z])/Sec[z] == a*Cos[z] + b*Sin[z] *)
TrigSimplifyAux[u_*Sec[v_]^m_.*(a_.+b_.*Tan[v_]^2)^p_.] :=
  u*(b*Sin[v]^2+a*Cos[v]^2)^p /;
IntegersQ[m,p] && m+2*p==0

(* Basis: (a+b*Cot[z])/Csc[z] == a*Sin[z] + b*Cos[z] *)
TrigSimplifyAux[u_*Csc[v_]^m_.*(a_.+b_.*Cot[v_]^2)^p_.] :=
  u*(b*Cos[v]^2+a*Sin[v]^2)^p /;
IntegersQ[m,p] && m+2*p==0


(* Basis: a+b*Tan[z]+c*Sec[z] == (c+b*Sin[z]+a*Cos[z])/Cos[z] *)
TrigSimplifyAux[u_.*Cos[v_]^m_.*(a_.+b_.*Tan[v_]^n_.+c_.*Sec[v_]^n_.)^p_.] :=
  u*Cos[v]^(m-n*p)*(c+b*Sin[v]^n+a*Cos[v]^n)^p /;
IntegersQ[m,n,p]

(* Basis: a+b*Tan[z]+c*Sec[z] == Sec[z]*(c+b*Sin[z]+a*Cos[z]) *)
TrigSimplifyAux[u_.*Sec[v_]^m_.*(a_.+b_.*Tan[v_]^n_.+c_.*Sec[v_]^n_.)^p_.] :=
  u*Sec[v]^(m+n*p)*(c+b*Sin[v]^n+a*Cos[v]^n)^p /;
IntegersQ[m,n,p]

(* Basis: a+b*Cot[z]+c*Csc[z] == (c+b*Cos[z]+a*Sin[z])/Sin[z] *)
TrigSimplifyAux[u_.*Sin[v_]^m_.*(a_.+b_.*Cot[v_]^n_.+c_.*Csc[v_]^n_.)^p_.] :=
  u*Sin[v]^(m-n*p)*(c+b*Cos[v]^n+a*Sin[v]^n)^p /;
IntegersQ[m,n,p]

(* Basis: a+b*Cot[z]+c*Csc[z] == Csc[z]*(c+b*Cos[z]+a*Sin[z]) *)
TrigSimplifyAux[u_.*Csc[v_]^m_.*(a_.+b_.*Cot[v_]^n_.+c_.*Csc[v_]^n_.)^p_.] :=
  u*Csc[v]^(m+n*p)*(c+b*Cos[v]^n+a*Sin[v]^n)^p /;
IntegersQ[m,n,p]


(* Basis: If n is an integer, Tan[z]^n/(a+b*Sec[z]^n) == Sin[z]^n/(b+a*Cos[z]^n) *)
TrigSimplifyAux[u_.*Tan[v_]^n_./(a_+b_.*Sec[v_]^n_.)] :=
  u*Sin[v]^n/(b+a*Cos[v]^n) /;
IntegerQ[n] && n>0 && NonsumQ[a]

(* Basis: If n is an integer, Cot[z]^n/(a+b*Csc[z]^n) == Cos[z]^n/(b+a*Sin[z]^n) *)
TrigSimplifyAux[u_.*Cot[v_]^n_./(a_+b_.*Csc[v_]^n_.)] :=
  u*Cos[v]^n/(b+a*Sin[v]^n) /;
IntegerQ[n] && n>0 && NonsumQ[a]


(* Basis: If n is an integer, Sin[z]^(-n)*(a*Cos[z]^n+b*Sin[z]^n) == b+a*Cot[z]^n *)
TrigSimplifyAux[Sin[v_]^m_.*(a_.*Cos[v_]^n_.+b_.*Sin[v_]^n_.)^p_] :=
  (b+a*Cot[v]^n)^p /;
IntegersQ[m,n,p] && n>0 && p<0 && m==-n*p

(* Basis: If n is an integer, Cos[z]^(-n)*(a*Cos[z]^n+b*Sin[z]^n) == a+b*Tan[z]^n *)
TrigSimplifyAux[Cos[v_]^m_.*(a_.*Cos[v_]^n_.+b_.*Sin[v_]^n_.)^p_] :=
  (a+b*Tan[v]^n)^p /;
IntegersQ[m,n,p] && n>0 && p<0 && m==-n*p


(* Basis: If a^2+b^2=0, 1/(a*Cos[z] + b*Sin[z]) == Cos[z]/a + Sin[z]/b *)
TrigSimplifyAux[(a_.*Cos[v_]+b_.*Sin[v_])^n_] :=
  (Cos[v]/a + Sin[v]/b)^(-n) /;
IntegerQ[n] && n<0 && ZeroQ[a^2+b^2]


(* ::Subsubsection::Closed:: *)
(*Hyperbolic trig function simplification rules*)


(* Basis: Cosh[z]^2-Sinh[z]^2 == 1 *)
TrigSimplifyAux[u_.*Cosh[z_]^2+v_.*Sinh[z_]^2+w_.] :=
  u+w /;
u===-v

(* Basis: Sech[z]^2+Tanh[z]^2 == 1 *)
TrigSimplifyAux[u_.*Sech[z_]^2+v_.*Tanh[z_]^2+w_.] :=
  u+w /;
u===v

(* Basis: Coth[z]^2-Csch[z]^2 == 1 *)
TrigSimplifyAux[u_.*Coth[z_]^2+v_.*Csch[z_]^2+w_.] :=
  u+w /;
u===-v


(* Basis: 1+Sinh[z]^2 == Cosh[z]^2 *)
TrigSimplifyAux[u_+v_.*Sinh[z_]^2+w_.] :=
  u*Cosh[z]^2+w /;
u===v

(* Basis: -1+Cosh[z]^2 == Sinh[z]^2 *)
TrigSimplifyAux[u_+v_.*Cosh[z_]^2+w_.] :=
  v*Sinh[z]^2+w /;
u===-v

(* Basis: 1-Tanh[z]^2 == Sech[z]^2 *)
TrigSimplifyAux[u_+v_.*Tanh[z_]^2+w_.] :=
  u*Sech[z]^2+w /;
u===-v

(* Basis: -1+Coth[z]^2 == Csch[z]^2 *)
TrigSimplifyAux[u_+v_.*Coth[z_]^2+w_.] :=
  v*Csch[z]^2+w /;
u===-v

(* Basis: 1-Sech[z]^2 == Tanh[z]^2 *)
TrigSimplifyAux[u_+v_.*Sech[z_]^2+w_.] :=
  u*Tanh[z]^2+w /;
u===-v

(* Basis: 1+Csch[z]^2 == Coth[z]^2 *)
TrigSimplifyAux[u_+v_.*Csch[z_]^2+w_.] :=
  u*Coth[z]^2+w /;
u===v


(* Basis: If a^2-b^2==0, Sinh[z]^2/(a+b*Cosh[z]) == -1/a+Cosh[z]/b *)
TrigSimplifyAux[u_.*Sinh[v_]^2/(a_+b_.*Cosh[v_])] :=
  u*(-1/a + Cosh[v]/b) /;
ZeroQ[a^2-b^2]

(* Basis: If a^2+b^2==0, Cosh[z]^2/(a+b*Sinh[z]) == 1/a+Sinh[z]/b *)
TrigSimplifyAux[u_.*Cosh[v_]^2/(a_+b_.*Sinh[v_])] :=
  u*(1/a + Sinh[v]/b) /;
ZeroQ[a^2+b^2]


(* Basis: If n is an integer, Tanh[z]^n/(a+b*Tanh[z]^n) == 1/(b+a*Coth[z]^n) *)
TrigSimplifyAux[u_.*Tanh[v_]^n_./(a_+b_.*Tanh[v_]^n_.)] :=
  u/(b+a*Coth[v]^n) /;
IntegerQ[n] && n>0 && NonsumQ[a]

(* Basis: If n is an integer, Coth[z]^n/(a+b*Coth[z]^n) == 1/(b+a*Tanh[z]^n) *)
TrigSimplifyAux[u_.*Coth[v_]^n_./(a_+b_.*Coth[v_]^n_.)] :=
  u/(b+a*Tanh[v]^n) /;
IntegerQ[n] && n>0 && NonsumQ[a]

(* Basis: If n is an integer, Sech[z]^n/(a+b*Sech[z]^n) == 1/(b+a*Cosh[z]^n) *)
TrigSimplifyAux[u_.*Sech[v_]^n_./(a_+b_.*Sech[v_]^n_.)] :=
  u/(b+a*Cosh[v]^n) /;
IntegerQ[n] && n>0 && NonsumQ[a]

(* Basis: If n is an integer, Csch[z]^n/(a+b*Csch[z]^n) == 1/(b+a*Sinh[z]^n) *)
TrigSimplifyAux[u_.*Csch[v_]^n_./(a_+b_.*Csch[v_]^n_.)] :=
  u/(b+a*Sinh[v]^n) /;
IntegerQ[n] && n>0 && NonsumQ[a]


(* Basis: Csch[z]+Coth[z] == Coth[z/2] *)
TrigSimplifyAux[(a_.*Csch[v_]+b_.*Coth[v_])^n_] :=
  a^n*Coth[v/2]^n /;
EvenQ[n] && ZeroQ[a-b]

(* Basis: Csch[z]-Coth[z] == -Tanh[z/2] *)
TrigSimplifyAux[(a_.*Csch[v_]+b_.*Coth[v_])^n_] :=
  b^n*Tanh[v/2]^n /;
EvenQ[n] && ZeroQ[a+b]


(* Basis: Sinh[z]*(a+b*Coth[z]) == a*Sinh[z] + b*Cosh[z] *)
(* TrigSimplifyAux[u_*Sinh[v_]^m_.*(a_.+b_.*Coth[v_]^2)^p_.] :=
  u*(b*Cosh[v]^2+a*Sinh[v]^2)^p /;
IntegersQ[m,p] && m==2*p *)

(* Basis: a+b*Coth[z] == (b*Cosh[z]+a*Sinh[z])/Sinh[z] *)
TrigSimplifyAux[u_.*Sinh[v_]^m_.*(a_.+b_.*Coth[v_]^n_.)^p_.] :=
  u*Sinh[v]^(m-n*p)*(b*Cosh[v]^n+a*Sinh[v]^n)^p /;
IntegersQ[m,n,p]

(* Basis: Cosh[z]*(a+b*Tanh[z]) == a*Cosh[z] + b*Sinh[z] *)
(* TrigSimplifyAux[u_*Cosh[v_]^m_.*(a_.+b_.*Tanh[v_]^2)^p_.] :=
  u*(b*Sinh[v]^2+a*Cosh[v]^2)^p /;
IntegersQ[m,p] && m==2*p *)

(* Basis: a+b*Tanh[z] == (b*Sinh[z]+a*Cosh[z])/Cosh[z] *)
TrigSimplifyAux[u_.*Cosh[v_]^m_.*(a_.+b_.*Tanh[v_]^n_.)^p_.] :=
  u*Cosh[v]^(m-n*p)*(b*Sinh[v]^n+a*Cosh[v]^n)^p /;
IntegersQ[m,n,p]

(* Basis: (a+b*Tanh[z])/Sech[z] == a*Cosh[z] + b*Sinh[z] *)
TrigSimplifyAux[u_*Sech[v_]^m_.*(a_.+b_.*Tanh[v_]^2)^p_.] :=
  u*(b*Sinh[v]^2+a*Cosh[v]^2)^p /;
IntegersQ[m,p] && m+2*p==0

(* Basis: (a+b*Coth[z])/Csch[z] == a*Sinh[z] + b*Cosh[z] *)
TrigSimplifyAux[u_*Csch[v_]^m_.*(a_.+b_.*Coth[v_]^2)^p_.] :=
  u*(b*Cosh[v]^2+a*Sinh[v]^2)^p /;
IntegersQ[m,p] && m+2*p==0


(* Basis: a+b*Tanh[z]+c*Sech[z] == (c+b*Sinh[z]+a*Cosh[z])/Cosh[z] *)
TrigSimplifyAux[u_.*Cosh[v_]^m_.*(a_.+b_.*Tanh[v_]^n_.+c_.*Sech[v_]^n_.)^p_.] :=
  u*Cosh[v]^(m-n*p)*(c+b*Sinh[v]^n+a*Cosh[v]^n)^p /;
IntegersQ[m,n,p]

(* Basis: a+b*Tanh[z]+c*Sech[z] == Sech[z]*(c+b*Sinh[z]+a*Cosh[z]) *)
TrigSimplifyAux[u_.*Sech[v_]^m_.*(a_.+b_.*Tanh[v_]^n_.+c_.*Sech[v_]^n_.)^p_.] :=
  u*Sech[v]^(m+n*p)*(c+b*Sinh[v]^n+a*Cosh[v]^n)^p /;
IntegersQ[m,n,p]

(* Basis: a+b*Coth[z]+c*Csch[z] == (c+b*Cosh[z]+a*Sinh[z])/Sinh[z] *)
TrigSimplifyAux[u_.*Sinh[v_]^m_.*(a_.+b_.*Coth[v_]^n_.+c_.*Csch[v_]^n_.)^p_.] :=
  u*Sinh[v]^(m-n*p)*(c+b*Cosh[v]^n+a*Sinh[v]^n)^p /;
IntegersQ[m,n,p]

(* Basis: a+b*Coth[z]+c*Csch[z] == Csch[z]*(c+b*Cosh[z]+a*Sinh[z]) *)
TrigSimplifyAux[u_.*Csch[v_]^m_.*(a_.+b_.*Coth[v_]^n_.+c_.*Csch[v_]^n_.)^p_.] :=
  u*Csch[v]^(m+n*p)*(c+b*Cosh[v]^n+a*Sinh[v]^n)^p /;
IntegersQ[m,n,p]


(* Basis: If n is an integer, Tanh[z]^n/(a+b*Sech[z]^n) == Sinh[z]^n/(b+a*Cosh[z]^n) *)
TrigSimplifyAux[u_.*Tanh[v_]^n_./(a_+b_.*Sech[v_]^n_.)] :=
  u*Sinh[v]^n/(b+a*Cosh[v]^n) /;
IntegerQ[n] && n>0 && NonsumQ[a]

(* Basis: If n is an integer, Coth[z]^n/(a+b*Csch[z]^n) == Cosh[z]^n/(b+a*Sinh[z]^n) *)
TrigSimplifyAux[u_.*Coth[v_]^n_./(a_+b_.*Csch[v_]^n_.)] :=
  u*Cosh[v]^n/(b+a*Sinh[v]^n) /;
IntegerQ[n] && n>0 && NonsumQ[a]


(* Basis: If n is an integer, Sinh[z]^(-n)*(a*Cosh[z]^n+b*Sinh[z]^n) == b+a*Coth[z]^n *)
TrigSimplifyAux[Sinh[v_]^m_.*(a_.*Cosh[v_]^n_.+b_.*Sinh[v_]^n_.)^p_] :=
  (b+a*Coth[v]^n)^p /;
IntegersQ[m,n,p] && n>0 && p<0 && m==-n*p

(* Basis: If n is an integer, Cosh[z]^(-n)*(a*Cosh[z]^n+b*Sinh[z]^n) == a+b*Tanh[z]^n *)
TrigSimplifyAux[Cosh[v_]^m_.*(a_.*Cosh[v_]^n_.+b_.*Sinh[v_]^n_.)^p_] :=
  (a+b*Tanh[v]^n)^p /;
IntegersQ[m,n,p] && n>0 && p<0 && m==-n*p


(* Basis: If a^2-b^2=0, 1/(a*Cosh[z] + b*Sinh[z]) == Cosh[z]/a - Sinh[z]/b *)
TrigSimplifyAux[(a_.*Cosh[v_]+b_.*Sinh[v_])^n_] :=
  (Cosh[v]/a - Sinh[v]/b)^(-n) /;
IntegerQ[n] && n<0 && ZeroQ[a^2-b^2]


TrigSimplifyAux[u_] := u


(* ::Subsection::Closed:: *)
(*SmartTrigExpand*)


(* ::Subsubsection::Closed:: *)
(*Circular trig function expansion rules*)


(* Basis: If n>0 is even, Sin[n*z] == 
	Sum[(-1)^k*2^(2*k+1)*Binomial[n/2+k,n/2-k-1]*Cos[z]*Sin[z]^(2*k+1),{k,0,n/2-1}] *)
(* SmartTrigExpand[Sin[n_*u_],x_Symbol] :=
  Sum[(-1)^k*2^(2*k+1)*Binomial[n/2+k,n/2-k-1]*Cos[u]*Sin[u]^(2*k+1),
	{k,0,n/2-1}] /;
EvenQ[n] && n>1 && Not[FreeQ[u,x]]

(* Basis: If n>0 is odd, Sin[n*z] == 
	Sum[(-1)^k*2^(2*k)*n/((n+1)/2+k)*Binomial[(n+1)/2+k,(n+1)/2-k-1]*Sin[z]^(2*k+1),{k,0,(n-1)/2}] *)
SmartTrigExpand[Sin[n_*u_],x_Symbol] :=
  Sum[(-1)^k*2^(2*k)*n/((n+1)/2+k)*Binomial[(n+1)/2+k,(n+1)/2-k-1]*Sin[u]^(2*k+1),
	{k,0,(n-1)/2}] /;
OddQ[n] && n>1 && Not[FreeQ[u,x]] *)


(* Basis: If n>0 is even, Cos[n*z] == 
	Sum[(-1)^(n/2+k)*2^(2*k)*n/(n+2*k)*Binomial[n/2+k,n/2-k]*Cos[z]^(2*k),{k,0,n/2}] *)
(* SmartTrigExpand[Cos[n_*u_],x_Symbol] :=
  Sum[(-1)^(n/2+k)*2^(2*k)*n/(n+2*k)*Binomial[n/2+k,n/2-k]*Cos[u]^(2*k),
	{k,0,n/2}] /;
EvenQ[n] && n>1 && Not[FreeQ[u,x]]

(* Basis: If n>0 is odd, Cos[n*z] == 
	Sum[(-1)^((n+1)/2+k-1)*2^(2*k)*n/((n+1)/2+k)*Binomial[(n+1)/2+k,(n+1)/2-k-1]*Cos[z]^(2*k+1),{k,0,(n-1)/2}] *)
SmartTrigExpand[Cos[n_*u_],x_Symbol] :=
  Sum[(-1)^((n+1)/2+k-1)*2^(2*k)*n/((n+1)/2+k)*Binomial[(n+1)/2+k,(n+1)/2-k-1]*Cos[u]^(2*k+1),
	{k,0,(n-1)/2}] /;
OddQ[n] && n>1 && Not[FreeQ[u,x]] *)


(* Basis: If n>0 is even, Sec[z]*Sin[n*z] == 
		Sum[(-1)^(k+n/2)*2*Sin[(2*k-1)*z], {k,1,n/2}] *)
SmartTrigExpand[Sec[u_]*Sin[n_*u_],x_Symbol] :=
  Sum[(-1)^(k+n/2)*2*Sin[(2*k-1)*u], {k,1,n/2}] /;
EvenQ[n] && n>1 && Not[FreeQ[u,x]]

(* Basis: If n>0 is odd, Sec[z]*Sin[n*z] == 
		(-1)^((n-1)/2)*Tan[z] + Sum[(-1)^(k+(n-1)/2)*2*Sin[2*k*z], {k,1,(n-1)/2}] *)
SmartTrigExpand[Sec[u_]*Sin[n_*u_],x_Symbol] :=
  (-1)^((n-1)/2)*Tan[u] + Sum[(-1)^(k+(n-1)/2)*2*Sin[2*k*u], {k,1,(n-1)/2}] /;
OddQ[n] && n>1 && Not[FreeQ[u,x]]


(* Basis: If n>0 is even, Csc[z]*Cos[n*z] == 
		Csc[z] - Sum[2*Sin[(2*k-1)*z], {k,1,n/2}] *)
SmartTrigExpand[Csc[u_]*Cos[n_*u_],x_Symbol] :=
  Csc[u] - Sum[2*Sin[(2*k-1)*u], {k,1,n/2}] /;
EvenQ[n] && n>1 && Not[FreeQ[u,x]]

(* Basis: If n>0 is odd, Csc[z]*Cos[n*z] == 
		Cot[z] - Sum[2*Sin[2*k*z], {k,1,(n-1)/2}] *)
SmartTrigExpand[Csc[u_]*Cos[n_*u_],x_Symbol] :=
  Cot[u] - Sum[2*Sin[2*k*u], {k,1,(n-1)/2}] /;
OddQ[n] && n>1 && Not[FreeQ[u,x]]


(* ::Subsubsection::Closed:: *)
(*Hyperbolic trig function expansion rules*)


(* Basis: If n>0 is even, Sinh[n*z] == 
	Sum[2^(2*k+1)*Binomial[n/2+k,n/2-k-1]*Cosh[z]*Sinh[z]^(2*k+1),{k,0,n/2-1}] *)
(* SmartTrigExpand[Sinh[n_*u_],x_Symbol] :=
  Sum[2^(2*k+1)*Binomial[n/2+k,n/2-k-1]*Cosh[u]*Sinh[u]^(2*k+1),{k,0,n/2-1}] /;
EvenQ[n] && n>1 && Not[FreeQ[u,x]]

(* Basis: If n>0 is odd, Sinh[n*z] == 
	Sum[2^(2*k)*n/((n+1)/2+k)*Binomial[(n+1)/2+k,(n+1)/2-k-1]*Sinh[z]^(2*k+1),{k,0,(n-1)/2}] *)
SmartTrigExpand[Sinh[n_*u_],x_Symbol] :=
  Sum[2^(2*k)*n/((n+1)/2+k)*Binomial[(n+1)/2+k,(n+1)/2-k-1]*Sinh[u]^(2*k+1),{k,0,(n-1)/2}] /;
OddQ[n] && n>1 && Not[FreeQ[u,x]] *)


(* Basis: If n>0 is even, Cosh[n*z] == 
	Sum[(-1)^(n/2+k)*2^(2*k)*n/(n+2*k)*Binomial[n/2+k,n/2-k]*Cosh[z]^(2*k),{k,0,n/2}] *)
(* SmartTrigExpand[Cosh[n_*u_],x_Symbol] :=
  Sum[(-1)^(n/2+k)*2^(2*k)*n/(n+2*k)*Binomial[n/2+k,n/2-k]*Cosh[u]^(2*k),{k,0,n/2}] /;
EvenQ[n] && n>1 && Not[FreeQ[u,x]]

(* Basis: If n>0 is odd, Cosh[n*z] == 
	Sum[(-1)^((n+1)/2+k-1)*2^(2*k)*n/((n+1)/2+k)*Binomial[(n+1)/2+k,(n+1)/2-k-1]*Cosh[z]^(2*k+1),{k,0,(n-1)/2}] *)
SmartTrigExpand[Cosh[n_*u_],x_Symbol] :=
  Sum[(-1)^((n+1)/2+k-1)*2^(2*k)*n/((n+1)/2+k)*Binomial[(n+1)/2+k,(n+1)/2-k-1]*Cosh[u]^(2*k+1),
	{k,0,(n-1)/2}] /;
OddQ[n] && n>1 && Not[FreeQ[u,x]] *)


(* Basis: If n>0 is even, Sech[z]*Sinh[n*z] == 
		Sum[(-1)^(k+n/2)*2*Sinh[(2*k-1)*z], {k,1,n/2}] *)
SmartTrigExpand[Sech[u_]*Sinh[n_*u_],x_Symbol] :=
  Sum[(-1)^(k+n/2)*2*Sinh[(2*k-1)*u], {k,1,n/2}] /;
EvenQ[n] && n>1 && Not[FreeQ[u,x]]

(* Basis: If n>0 is odd, Sech[z]*Sinh[n*z] == 
		(-1)^((n-1)/2)*Tanh[z] + Sum[(-1)^(k+(n-1)/2)*2*Sinh[2*k*z], {k,1,(n-1)/2}] *)
SmartTrigExpand[Sech[u_]*Sinh[n_*u_],x_Symbol] :=
  (-1)^((n-1)/2)*Tanh[u] + Sum[(-1)^(k+(n-1)/2)*2*Sinh[2*k*u], {k,1,(n-1)/2}] /;
OddQ[n] && n>1 && Not[FreeQ[u,x]]


(* Basis: If n>0 is even, Csch[z]*Cosh[n*z] == 
		Csch[z] + Sum[2*Sinh[(2*k-1)*z], {k,1,n/2}] *)
SmartTrigExpand[Csch[u_]*Cosh[n_*u_],x_Symbol] :=
  Csch[u] + Sum[2*Sinh[(2*k-1)*u], {k,1,n/2}] /;
EvenQ[n] && n>1 && Not[FreeQ[u,x]]

(* Basis: If n>0 is odd, Csch[z]*Cosh[n*z] == 
		Coth[z] + Sum[2*Sinh[2*k*z], {k,1,(n-1)/2}] *)
SmartTrigExpand[Csch[u_]*Cosh[n_*u_],x_Symbol] :=
  Coth[u] + Sum[2*Sinh[2*k*u], {k,1,(n-1)/2}] /;
OddQ[n] && n>1 && Not[FreeQ[u,x]]


(* Basis: If n>0 is even, Csch[z]^2*Cosh[n*z] == 
		n + Csch[z]^2 + Sum[4*(n/2-k)*Cosh[2*k*z], {k,1,n/2}] *)
SmartTrigExpand[Csch[u_]^2*Cosh[n_*u_],x_Symbol] :=
  n + Csch[u]^2 + Sum[4*(n/2-k)*Cosh[2*k*u], {k,1,n/2}] /;
EvenQ[n] && n>1 && Not[FreeQ[u,x]]

(* Basis: If n>0 is odd, Csch[z]^2*Cosh[n*z] == 
		Coth[z]*Csch[z] + Sum[4*((n+1)/2-k)*Cosh[(2*k-1)*z], {k,1,(n+1)/2}] *)
SmartTrigExpand[Csch[u_]^2*Cosh[n_*u_],x_Symbol] :=
  Coth[u]*Csch[u] + Sum[4*((n+1)/2-k)*Cosh[(2*k-1)*u], {k,1,(n+1)/2}] /;
OddQ[n] && n>1 && Not[FreeQ[u,x]]


(* Basis: If n>0 is odd, Csch[z]^3*Cosh[n*z] == 
	(n^2-1)*Coth[z]/2 + Coth[z]*Csch[z]^2 + Sum[8*Binomial[(n+1)/2-k,2]*Sinh[2*k*z], {k,1,(n-3)/2}] *)
SmartTrigExpand[Csch[u_]^3*Cosh[n_*u_],x_Symbol] :=
  (n^2-1)*Coth[u]/2 + Coth[u]*Csch[u]^2 + 
	Sum[8*Binomial[(n+1)/2-k,2]*Sinh[2*k*u], {k,1,(n-3)/2}] /;
OddQ[n] && n>1 && Not[FreeQ[u,x]]


(* ::Subsubsection::Closed:: *)
(*Products and powers of trig function expansion rules*)


SmartTrigExpand[u_^n_,x_Symbol] :=
  Module[{tmp=SmartTrigExpand[u,x]},
  Expand[tmp^n,x] /;
 SumQ[tmp]] /;
NonsumQ[u] && IntegerQ[n] && n>1


SmartTrigExpand[u_*v_,x_Symbol] :=
  Module[{tmp1=SmartTrigExpand[u,x], tmp2=SmartTrigExpand[v,x]},
  Distribute[tmp1*tmp2] /;
 SumQ[tmp1] || SumQ[tmp2]] /;
NonsumQ[u] && NonsumQ[v]


(* TrigExpand[u] returns a bottom-up trig multiple-angle expansion of u. *)
SmartTrigExpand[u_,x_Symbol] :=
  u


(* ::Subsection::Closed:: *)
(*Sim*)


Sim[u_] := Together[u]


Sim[u_,x_] := 
  If[SumQ[u],
    Module[{tmp1=0,tmp2=0,lst},
    Scan[Function[lst=SplitFreeFactors[#,x];If[lst[[2]]===1,tmp1+=#,tmp2=tmp2+Together[lst[[1]]]*lst[[2]]]],u];
    Together[tmp1]+tmp2],
  Module[{lst=SplitFreeFactors[u,x]},
  Together[lst[[1]]]*lst[[2]]]]


(* ::Subsection::Closed:: *)
(*Simp*)


(* ::Subsubsection::Closed:: *)
(*Bottom-up simplification routine*)


SimpFlag=True;


SimpLite[u_,x_] := 
  If[SimpFlag,
    Simp[u],
  If[SumQ[u],
    Module[{tmp1=0,tmp2=0,lst},
    Scan[Function[lst=SplitFreeFactors[SimpLiteTerm[#],x];If[lst[[2]]===1,tmp1+=#,tmp2+=SimpAux[TogetherFix[Together[lst[[1]]]]]*lst[[2]]]],u];
    SimpAux[TogetherFix[Together[tmp1]]]+tmp2],
  Module[{lst=SplitFreeFactors[SimpLiteTerm[u],x]},
  SimpAux[TogetherFix[Together[lst[[1]]]]]*lst[[2]]]]]


(* Basis: If m is an integer, (a+b*z)^m/z^m == (b+a/z)^m *)
SimpLiteTerm[u_.*(a_+b_.*f_[v_])^m_.*g_[v_]^m_.] :=
  SimpLiteTerm[u*(b+a*g[v])^m] /;
TrigQ[f] && TrigQ[g] && f[v]===1/g[v] && IntegerQ[m]

SimpLiteTerm[u_] := u


TogetherFix[u_.*v_^n_.] :=
  If[EvenQ[n],
    TogetherFix[u]*(-v)^n,
  TogetherFix[-u]*(-v)^n] /;
IntegerQ[n] && SumQ[v] && MatchQ[First[v], m_*w_. /; RationalQ[m] && m<0]

TogetherFix[u_./(a_*v_.+a_^n_.*w_.)] :=
  TogetherFix[u/a]/(v+a^(n-1)*w) /;
IntegerQ[n] && n>0

TogetherFix[u_] := u


(* Simp[expn] returns a bottom-up simplification of expn. *)
Simp[expn_] :=
  If[AtomQ[expn],
    expn,
  If[Head[expn]===If || Head[expn]===Int || Head[expn]===Dif,
    expn,
  SimpAux[Map[Simp,expn]]]]


DownValues[SimpAux]={};
SimpAux[expn_] :=
  expn


SimpAux[expn_] :=
  Module[{tmp=ContentFactor[expn],lst,i=1,j},
  If[tmp=!=expn,
    tmp=Simp[tmp];
    If[ProductQ[tmp],
      ContentFactor[tmp],
    tmp],
  lst=Apply[List,expn];
  If[Length[lst]>=4 && 
     RationalQ[lst[[1]]] && 
     PowerQ[lst[[2]]] && RationalQ[lst[[2,1]]] && RationalQ[lst[[2,2]]] &&
     SqrtNumberSumQ[lst[[3]]] &&
     PowerQ[lst[[4]]] && SqrtNumberSumQ[lst[[4,1]]] && RationalQ[lst[[4,2]]],
    lst=Join[{lst[[3]],lst[[4]],lst[[1]],lst[[2]]}, Drop[lst,4]]];
  If[Length[lst]>=3 && 
     PowerQ[lst[[1]]] && RationalQ[lst[[1,1]]] && RationalQ[lst[[1,2]]] && 
     SqrtNumberSumQ[lst[[2]]] && 
     PowerQ[lst[[3]]] && SqrtNumberSumQ[lst[[3,1]]] && RationalQ[lst[[3,2]]],
    lst=Join[{lst[[2]],lst[[3]],lst[[1]]}, Drop[lst,3]]];
  While[True,
    If[i==Length[lst],
      Break[],
    j=i+1;
    While[True,
      If[j>Length[lst],
        i++;
        Break[],
      tmp=SimpProduct[lst[[i]],lst[[j]]];
      If[tmp=!=lst[[i]]*lst[[j]],
        If[ProductQ[tmp],
          lst[[i]]=First[tmp];
          lst[[j]]=Rest[tmp];
          Break[],
        lst[[i]]=tmp;
        lst=Delete[lst,j];
        i=1;
        Break[]],
      tmp=SimpProduct[lst[[j]],lst[[i]]];
      If[tmp=!=lst[[j]]*lst[[i]],
        If[ProductQ[tmp],
          lst[[i]]=First[tmp];
          lst[[j]]=Rest[tmp];
          Break[],
        lst[[i]]=tmp;
        lst=Delete[lst,j];
        i=1;
        Break[]],
      j++]]]]]];
  tmp=Apply[Times,lst];
  If[ProductQ[tmp],
    ContentFactor[tmp],
  tmp]]] /;
ProductQ[expn]


SimpAux[expn_] :=
  Module[{lst=Apply[List,expn],i=1,j,tmp},
  While[True,
    If[i==Length[lst],
      Break[],
    j=i+1;
    While[True,
      If[j>Length[lst],
        i++;
        Break[],
      tmp=SimpSum[lst[[i]],lst[[j]]];
      If[tmp=!=lst[[i]]+lst[[j]],
        If[SumQ[tmp],
          lst[[i]]=First[tmp];
          lst[[j]]=Rest[tmp];
          Break[],
        lst[[i]]=tmp;
        lst=Delete[lst,j];
        i=1;
        Break[]],
      tmp=SimpSum[lst[[j]],lst[[i]]];
      If[tmp=!=lst[[j]]+lst[[i]],
        If[SumQ[tmp],
          lst[[i]]=First[tmp];
          lst[[j]]=Rest[tmp];
          Break[],
        lst[[i]]=tmp;
        lst=Delete[lst,j];
        i=1;
        Break[]],
      j++]]]]]];
  Apply[Plus,lst]] /;
SumQ[expn]


DownValues[SimpProduct]={};
SimpProduct[u_,v_] :=
  u*v


DownValues[SimpSum]={};
SimpSum[u_,v_] :=
  u+v


(* ::Subsubsection::Closed:: *)
(*Integer powers of squareroot numbers simplification rules*)


(* Basis: 1/(a+b) == a/(a^2-b^2) - b/(a^2-b^2) *)
SimpAux[(a_+b_)^m_] :=
  SimpAux[(a/(a^2-b^2)-b/(a^2-b^2))^(-m)] /;
IntegerQ[m] && m<0 && SqrtNumberQ[a] && SqrtNumberQ[b]


(* Basis: If m is an integer, and a and b are squareroot numbers, 
	(a+b)^m == a^m+m*a^(m-1)*b+... == c+d, where c and d are squareroot numbers *)
SimpAux[u_^m_] :=
  Expand[u^m] /;
IntegerQ[m] && m>0 && SqrtNumberSumQ[u]


(* ::Subsubsection::Closed:: *)
(*Fractional powers of squareroot numbers simplification rules*)


(* Basis: If z<0, z^m == (-1)^m*(-z)^m *)
SimpAux[u_^m_] :=
  (-1)^m*SimpAux[(-u)^m] /;
FractionQ[m] && SqrtNumberSumQ[u] && NegativeQ[u]


(* Basis: If z>0, z^(m/n) == (z^m)^(1/n) *)
SimpAux[u_^m_] :=
  SimpAux[Expand[u^Denominator[1/m]]^(1/Numerator[1/m])] /;
FractionQ[m] && Denominator[1/m]>1 && SqrtNumberSumQ[u] && PositiveQ[u]


(* Basis: If m>0, (m*a+m*b)^n == m^n*(a+b)^n *)
SimpAux[(a_+b_)^m_] :=
  Module[{tmp=CommonNumericFactors[{a,b}]},
  tmp=Abs[NumericFactor[tmp[[1]]^(1/Denominator[m])]];
  tmp^Numerator[m]*SimpAux[(a/tmp^Denominator[m]+b/tmp^Denominator[m])^m] /;
 tmp!=1 ] /;
FractionQ[m] && Denominator[1/m]==1 && SqrtNumberQ[a] && SqrtNumberQ[b]


(* Basis: 1/(a+b) == a/(a^2-b^2) - b/(a^2-b^2) *)
SimpAux[(a_+b_)^m_] :=
  Module[{tmp1=Abs[Numerator[NumericFactor[(a^2-b^2)^(1/Denominator[m])]]],tmp2},
  tmp2=(a^2-b^2)/tmp1^Denominator[m];
  tmp1^Numerator[m]*SimpAux[(a/tmp2-b/tmp2)^(-m)] /;
 IntegerQ[a^2/tmp2^2] && IntegerQ[b^2/tmp2^2] && (tmp2^2==1 && m<0 || tmp2^2>1)] /;
FractionQ[m] && Denominator[1/m]==1 && SqrtNumberQ[a] && SqrtNumberQ[b] && PositiveQ[a^2-b^2] &&
IntegerQ[a^2] && IntegerQ[b^2]


(* Basis: c*(a+b) == c*a+c*b *)
SimpAux[(c_*(a_+b_))^m_] :=
  SimpAux[(c*a+c*b)^m] /;
FractionQ[m] && SqrtNumberQ[a] && SqrtNumberQ[b] && SqrtNumberQ[c]


(* Basis: If a,b>=0, Sqrt[a+b] == Sqrt[(a+Sqrt[a^2-b^2])/2] + Sqrt[(a-Sqrt[a^2-b^2])/2] *)
SimpAux[(a_+b_)^m_] :=
  Module[{q=Sqrt[a^2-b^2]},
  SimpAux[(Sqrt[(a+q)/2] + Sqrt[(a-q)/2])^(2*m)] /;
 RationalQ[q]] /;
EvenQ[1/m] && RationalQ[a] && a>0 && SqrtNumberQ[b] && PositiveQ[b] && PositiveQ[a^2-b^2]


(* Basis: If a,b>=0, Sqrt[a-b] == Sqrt[(a+Sqrt[a^2-b^2])/2] - Sqrt[(a-Sqrt[a^2-b^2])/2] *)
SimpAux[(a_+b_)^m_] :=
  Module[{q=Sqrt[a^2-b^2]},
  SimpAux[(Sqrt[(a+q)/2] - Sqrt[(a-q)/2])^(2*m)] /;
 RationalQ[q]] /;
EvenQ[1/m] && RationalQ[a] && a>0 && SqrtNumberQ[b] && NegativeQ[b] && PositiveQ[a^2-b^2]


(* ::Subsubsection::Closed:: *)
(*Products of squareroot numbers simplification rules*)


(* Basis: c*(a+b) == c*a+c*b *)
SimpProduct[c_,a_+b_] :=
  c*a+c*b /;
SqrtNumberQ[a] && SqrtNumberQ[b] && SqrtNumberQ[c] (* && Not[RationalQ[c]] *)


(* Basis: (a+b)*(c+d) == a*c+a*d+b*c+b*d *)
SimpProduct[a_+b_,c_+d_] :=
  Module[{u=a*c+a*d+b*c+b*d},
  u /;
 SqrtNumberSumQ[u]] /;
SqrtNumberQ[a] && SqrtNumberQ[b] && SqrtNumberQ[c] && SqrtNumberQ[d]


SimpProduct[c_,u_^m_] :=
  -SimpProduct[-c,u^m] /;
RationalQ[m] && SqrtNumberSumQ[u] && SqrtNumberQ[c] && NegativeQ[c]


(* Basis: If z<0, then z^m == (-1)^m*(-z)^m *)
SimpProduct[u_^m_,v_^n_] :=
  (-1)^m*SimpProduct[(-u)^m,v^n] /;
RationalQ[{m,n}] && SqrtNumberSumQ[u] && SqrtNumberSumQ[v] && NegativeQ[u]


(* Basis: If c>0 and m real, c*z^m == (c^(1/m)*z)^m *)
SimpProduct[c_,(a_+b_)^m_] :=
  SimpAux[(a*c^(1/m)+b*c^(1/m))^m] /;
RationalQ[m] && SqrtNumberQ[a] && SqrtNumberQ[b] && SqrtNumberQ[c^(1/m)] && PositiveQ[c] && 
Not[RationalQ[c]]


(* Basis: If z,w>0, then z^m*w^n == (z^(m/GCD[m,n])*w^(n/GCD[m,n]))^GCD[m,n] *)
SimpProduct[u_^m_,v_] :=
  Module[{gcd=GCD[m,1],w},
  w=Expand[u^(m/gcd)*(-v)^(1/gcd)];
  -SimpAux[w^gcd] /;
 SqrtNumberQ[w] || SqrtNumberSumQ[NonnumericFactors[w]]] /;
RationalQ[m] && m>0 && SqrtNumberSumQ[u] && SqrtNumberSumQ[v] && PositiveQ[u] && NegativeQ[v]


(* Basis: If z,w>0, then z^m*w^n == (z^(m/GCD[m,n])*w^(n/GCD[m,n]))^GCD[m,n] *)
SimpProduct[u_^m_,v_] :=
  Module[{gcd=GCD[m,1],w},
  w=Simp[u^(m/gcd)*(-v)^(1/gcd)];
  -SimpAux[w^gcd] /;
 SqrtNumberQ[w] || SqrtNumberSumQ[NonnumericFactors[w]]] /;
RationalQ[m] && m<0 && SqrtNumberSumQ[u] && SqrtNumberSumQ[v] && PositiveQ[u] && NegativeQ[v]


(* Basis: If z,w>0, then z^m*w^n == (z^(m/GCD[m,n])*w^(n/GCD[m,n]))^GCD[m,n] *)
SimpProduct[u_^m_.,v_^n_.] :=
  Module[{gcd=GCD[m,n],w},
  w=Expand[u^(m/gcd)*v^(n/gcd)];
  SimpAux[w^gcd] /;
 SqrtNumberQ[w] || SqrtNumberSumQ[w]] /;
RationalQ[{m,n}] && m>0 && n>0 && SqrtNumberSumQ[u] && SqrtNumberSumQ[v] && PositiveQ[u] && 
PositiveQ[v]


(* Basis: If z,w>0, then z^m*w^n == (z^(m/GCD[m,n])*w^(n/GCD[m,n]))^GCD[m,n] *)
SimpProduct[u_^m_,v_^n_.] :=
  Module[{gcd=GCD[m,n],w},
  w=Simp[u^(m/gcd)*v^(n/gcd)];
  SimpAux[w^gcd] /;
 SqrtNumberQ[w] || SqrtNumberSumQ[w]] /;
RationalQ[{m,n}] && m<0 && n>0 && SqrtNumberSumQ[u] && SqrtNumberSumQ[v] && PositiveQ[u] && 
PositiveQ[v]


(* ::Subsubsection::Closed:: *)
(*Elementary operator simplification rules*)


(* Basis: If n is an integer, then z^n == (-1)^n*(-z)^n *)
SimpAux[u_^n_] :=
  (-1)^n*SimpAux[Map[Minus,u]^n] /;
SumQ[u] && IntegerQ[n] && NumericFactor[u[[1]]]<0


(* Basis: z == -(-z) *)
SimpProduct[u_,v_] :=
  -SimpAux[Map[Minus,u]*v] /;
SumQ[u] && NumericFactor[u[[1]]]<0 && Not[SqrtNumberSumQ[u] && SqrtNumberSumQ[v]]


(* Basis: If n is an integer, (m*a+m*b)^n == m^n*(a+b)^n *)
SimpAux[u_^n_] :=
  Module[{lst=CommonFactors[Apply[List,u]]},
  Simp[lst[[1]]^n]*SimpAux[Apply[Plus,Rest[lst]]^n] /;
 lst[[1]]=!=1] /;
SumQ[u] && IntegerQ[n]


(* Basis: If m>0, (m*a+m*b)^n == m^n*(a+b)^n *)
SimpAux[u_^n_] :=
  Module[{lst=CommonNumericFactors[Apply[List,u]]},
  lst[[1]]^n*SimpAux[Apply[Plus,Rest[lst]]^n] /;
 lst[[1]]=!=1] /;
SumQ[u] && Not[IntegerQ[n]] && Not[SqrtNumberSumQ[u]]


(* Basis: If n is an integer and a*d-b*c==0, (a+b)^m*(c+d)^n == (a+b)^(m+n)*(d/b)^n *)
SimpProduct[(a_+b_)^m_,(c_+d_)^n_.] :=
  Simp[(a+b)^(m+n)*(d/b)^n] /;
IntegerQ[n] && ZeroQ[a*d-b*c] && Not[SqrtNumberSumQ[a+b]]


(* Basis: If n is an integer, u^m*(-u)^n == (-1)^n*u^(m+n) *)
SimpProduct[u_^m_.,v_^n_.] :=
  (-1)^n*u^(m+n) /;
IntegerQ[n] && ZeroQ[u+v] && Not[RationalQ[u]] && 
	(Not[IntegerQ[m]] || SmartLeafCount[u]<=SmartLeafCount[v])


(* Basis: (a+b)*(a-b) == a^2-b^2 *)
SimpProduct[(a_+b_)^n_.,(c_+d_)^n_.] :=
  Simp[(a^2-b^2)^n] /;
ZeroQ[a-c] && ZeroQ[b+d] && IntegerQ[n]


(* Basis: a/(a+b)+b/(a+b) == 1 *)
SimpSum[a_/u_,b_/u_] :=
  1 /;
a+b===u


(* Basis: If a+b*c^2=0, a+b*(c+d)^2 == b*d*(2*c+d) *)
SimpSum[a_,b_.*(c_+d_)^2] :=
  Simp[b*d*(2*c+d)] /;
ZeroQ[a+b*c^2]


(* Put sum over a common denominator if a cancellation occurs. *)
(* Basis: a+b*(c+d)/(e+f) == (a*e+a*f+b*c+b*d)/(e+f) *)
SimpSum[a_,b_.*(c_.+d_)/(e_+f_)] :=
  SimpAux[ContentFactor[a*e+b*c]/(e+f)] /;
NonsumQ[a] && NonsumQ[b] && NonsumQ[c] && NonsumQ[d] && NonsumQ[e] && NonsumQ[f] && ZeroQ[a*f+b*d]


(* Basis: If p is an integer, v^m*(a+b*v^n)^p == v^(m+n*p)*(a/v^n+b)^p *)
SimpProduct[v_^m_.,(a_+b_.*v_^n_)^p_.] :=
  SimpAux[v^(m+n*p)*Simp[(a*v^(-n)+b)^p]] /;
IntegerQ[p] && RationalQ[{m,n}] && n<0 && Not[SqrtNumberSumQ[a+b*v^n]]


(* Basis: If n is an integer, c^m*(a+b)^n == (a*c^(m/n) + b*c^(m/n))^n *)
SimpProduct[c_^m_.,(a_.*c_^p_.+b_.*c_^q_.)^n_.] :=
  SimpAux[(a*c^(p+m/n) + b*c^(q+m/n))^n] /;
IntegerQ[n] && RationalQ[{m,p,q}]


(* Rules for combining similar terms of sums disguised by terms involving sums. *) 

(* Basis: u/Sqrt[n]+v*Sqrt[n] == (1+n*v/u)*u/Sqrt[n] *)
SimpSum[u_./Sqrt[n_],v_.*Sqrt[n_]] :=
  (1+n*NumericFactor[v]/NumericFactor[u])*u/Sqrt[n] /;
RationalQ[n] && NonnumericFactors[u]===NonnumericFactors[v]

(* Basis: u+v*(a+b) == (1+v*a/u)*u+v*b *)
SimpSum[u_,v_*(a_+b_)] :=
  Module[{tmp=SimpAux[v*a]},
  SimpAux[(1+NumericFactor[tmp]/NumericFactor[u])*u+SimpAux[v*b]] /;
 NonnumericFactors[tmp]===NonnumericFactors[u]] /;
NonsumQ[a] && NonsumQ[u] && NonsumQ[v]

(* Basis: u*(a+b)+v*(c+d) == u*((1+v*c/(u*a))*a+b) + v*d *)
SimpSum[u_.*(a_+b_),v_*(c_+d_)] :=
  Module[{tmp1=SimpAux[v*c], tmp2=SimpAux[u*a]},
  (tmp1=NumericFactor[tmp1]/NumericFactor[tmp2];
  If[IntegerQ[tmp1] || -2<tmp1<0,
    SimpAux[u*((1+tmp1)*a+b)+SimpAux[v*d]],
  SimpAux[SimpAux[u*b]+v*((1+1/tmp1)*c+d)]]) /;
 NonnumericFactors[tmp1]===NonnumericFactors[tmp2]] /;
NonsumQ[a] && NonsumQ[c] && NonsumQ[u] && NonsumQ[v]


(* ::Subsubsection::Closed:: *)
(*Exponential function simplification rules*)


(* Basis: E^(a*Log[z]+b) == z^a*E^b *)
SimpAux[E^(c_.*(a_.*Log[v_]+b_))] :=
  SimpAux[v^(a*c)]*SimpAux[E^(b*c)]


(* Basis: E^(2*I*ArcTan[z]) == -1+2/(1-I*z) *)
SimpAux[E^(Complex[0,n_]*ArcTan[v_])] :=
  Simp[(-1+2/(1-I*v))^(n/2)] /;
EvenQ[n] && n>0

(* Basis: E^(-2*I*ArcTan[z]) == -1+2/(1+I*z) *)
SimpAux[E^(Complex[0,n_]*ArcTan[v_])] :=
  Simp[(-1+2/(1+I*v))^(-n/2)] /;
EvenQ[n] && n<0

(* Basis: E^(2*I*ArcCot[z]) == 1-2/(1+I*z) *)
SimpAux[E^(Complex[0,n_]*ArcCot[v_])] :=
  Simp[(1-2/(1+I*v))^(n/2)] /;
EvenQ[n] && n>0

(* Basis: E^(-2*I*ArcCot[z]) == 1-2/(1-I*z) *)
SimpAux[E^(Complex[0,n_]*ArcCot[v_])] :=
  Simp[(1-2/(1-I*v))^(-n/2)] /;
EvenQ[n] && n<0


(* Basis: E^(2*ArcTanh[z]) == -1+2/(1-z) *)
SimpAux[E^(n_*ArcTanh[v_])] :=
  Simp[(-1+2/(1-v))^(n/2)] /;
EvenQ[n] && n>0

(* Basis: E^(-2*ArcTanh[z]) == -1+2/(1+z) *)
SimpAux[E^(n_*ArcTanh[v_])] :=
  Simp[(-1+2/(1+v))^(-n/2)] /;
EvenQ[n] && n<0

(* Basis: E^(2*ArcCoth[z]) == 1-2/(1-z) *)
SimpAux[E^(n_*ArcCoth[v_])] :=
  Simp[(1-2/(1-v))^(n/2)] /;
EvenQ[n] && n>0

(* Basis: E^(-2*ArcCoth[z]) == 1-2/(1+z) *)
SimpAux[E^(n_*ArcCoth[v_])] :=
  Simp[(1-2/(1+v))^(-n/2)] /;
EvenQ[n] && n<0


(* Basis: If m and n are odd, E^(n*ArcTanh[z])*(1-z^2)^(m/2) == (1-z)^((m-n)/2)*(1+z)^((m+n)/2) *)
SimpProduct[E^(n_.*ArcTanh[v_]),(1+w_)^m_] :=
  Simp[(1-v)^(m-n/2)*(1+v)^(m+n/2)] /;
OddQ[n] && HalfIntegerQ[m] && ZeroQ[v^2+w]

(* Basis: If m and n are odd, E^(n*ArcCoth[z])*(1-1/z^2)^(m/2) == (-1+z)^((m-n)/2)*(1+z)^((m+n)/2)/z^m *)
SimpProduct[E^(n_.*ArcCoth[v_]),(1+w_)^m_] :=
  Simp[(-1+v)^(m-n/2)*(1+v)^(m+n/2)/v^(2*m)] /;
OddQ[n] && HalfIntegerQ[m] && ZeroQ[v^2+1/w]


(* ::Subsubsection::Closed:: *)
(*Circular trig function simplification rules*)


(* Basis: Sin[z]^2+Cos[z]^2 == 1 *)
SimpSum[u_.*Cos[z_]^2,v_.*Sin[z_]^2] :=
  u /;
u===v

(* Basis: Sec[z]^2-Tan[z]^2 == 1 *)
SimpSum[u_.*Sec[z_]^2,v_.*Tan[z_]^2] :=
  u /;
u===-v

(* Basis: Csc[z]^2-Cot[z]^2 == 1 *)
SimpSum[u_.*Csc[z_]^2,v_.*Cot[z_]^2] :=
  u /;
u===-v


(* Basis: 1-Sin[z]^2 == Cos[z]^2 *)
SimpSum[u_,v_.*Sin[z_]^2] :=
  u*Cos[z]^2 /;
u===-v

(* Basis: 1-Cos[z]^2 == Sin[z]^2 *)
SimpSum[u_,v_.*Cos[z_]^2] :=
  u*Sin[z]^2 /;
u===-v

(* Basis: 1+Tan[z]^2 == Sec[z]^2 *)
SimpSum[u_,v_.*Tan[z_]^2] :=
  u*Sec[z]^2 /;
u===v

(* Basis: 1+Cot[z]^2 == Csc[z]^2 *)
SimpSum[u_,v_.*Cot[z_]^2] :=
  u*Csc[z]^2 /;
u===v

(* Basis: -1+Sec[z]^2 == Tan[z]^2 *)
SimpSum[u_,v_.*Sec[z_]^2] :=
  v*Tan[z]^2 /;
u===-v

(* Basis: -1+Csc[z]^2 == Cot[z]^2 *)
SimpSum[u_,v_.*Csc[z_]^2] :=
  v*Cot[z]^2 /;
u===-v


(* Basis: If a^2+b^2=0, 1/(a*Cos[z] + b*Sin[z]) == Cos[z]/a + Sin[z]/b *)
SimpAux[(a_.*Cos[v_]+b_.*Sin[v_])^n_] :=
  SimpAux[(Cos[v]/a + Sin[v]/b)^(-n)] /;
IntegerQ[n] && n<0 && ZeroQ[a^2+b^2]


(* ::Subsubsection::Closed:: *)
(*Hyperbolic trig function simplification rules*)


(* Basis: Cosh[z]^2-Sinh[z]^2 == 1 *)
SimpSum[u_.*Cosh[z_]^2,v_.*Sinh[z_]^2] :=
  u /;
u===-v

(* Basis: Sech[z]^2+Tanh[z]^2 == 1 *)
SimpSum[u_.*Sech[z_]^2,v_.*Tanh[z_]^2] :=
  u /;
u===v

(* Basis: Coth[z]^2-Csch[z]^2 == 1 *)
SimpSum[u_.*Coth[z_]^2,v_.*Csch[z_]^2] :=
  u /;
u===-v


(* Basis: 1+Sinh[z]^2 == Cosh[z]^2 *)
SimpSum[u_,v_.*Sinh[z_]^2] :=
  u*Cosh[z]^2 /;
u===v

(* Basis: -1+Cosh[z]^2 == Sinh[z]^2 *)
SimpSum[u_,v_.*Cosh[z_]^2] :=
  v*Sinh[z]^2 /;
u===-v

(* Basis: 1-Tanh[z]^2 == Sech[z]^2 *)
SimpSum[u_,v_.*Tanh[z_]^2] :=
  u*Sech[z]^2 /;
u===-v

(* Basis: -1+Coth[z]^2 == Csch[z]^2 *)
SimpSum[u_,v_.*Coth[z_]^2] :=
  v*Csch[z]^2 /;
u===-v

(* Basis: 1-Sech[z]^2 == Tanh[z]^2 *)
SimpSum[u_,v_.*Sech[z_]^2] :=
  u*Tanh[z]^2 /;
u===-v

(* Basis: 1+Csch[z]^2 == Coth[z]^2 *)
SimpSum[u_,v_.*Csch[z_]^2] :=
  u*Coth[z]^2 /;
u===v


(* Basis: If a^2-b^2=0, 1/(a*Cosh[z] + b*Sinh[z]) == Cosh[z]/a - Sinh[z]/b *)
SimpAux[(a_.*Cosh[v_]+b_.*Sinh[v_])^n_] :=
  SimpAux[(Cosh[v]/a - Sinh[v]/b)^(-n)] /;
IntegerQ[n] && n<0 && ZeroQ[a^2-b^2]


(* ::Subsubsection::Closed:: *)
(*Ugly function simplification rules*)


(* Factor out common factors of ugly functions from a sum *) 
SimpSum[u_.*f_[a_]^n_.,v_.*f_[a_]^n_.] :=
  SimpAux[Simp[Simplify[u+v]]*f[a]^n] /;
MemberQ[{Erf, Erfc, Erfi, FresnelS, FresnelC, 
ExpIntegralEi, SinIntegral, CosIntegral, SinhIntegral, CoshIntegral, LogIntegral},f]

SimpSum[u_.*f_[a_,b_]^n_.,v_.*f_[a_,b_]^n_.] :=
  SimpAux[Simp[Simplify[u+v]]*f[a,b]^n] /;
MemberQ[{Int, Gamma, PolyLog, EllipticF, EllipticE},f]

SimpSum[u_.*f_[a_,b_,c_]^n_.,v_.*f_[a_,b_,c_]^n_.] :=
  SimpAux[Simp[Simplify[u+v]]*f[a,b,c]^n] /;
MemberQ[{EllipticPi},f]


(* ::Section::Closed:: *)
(*Expansion Functions*)


(* ::Subsection::Closed:: *)
(*ExpandIntegrandQ*)


(* If the integrand x^m*(a+b*x^n)^p should be expanded, ExpandIntegrandQ[m,n,p] returns True;
	else it returns False. *)
ExpandIntegrandQ[m_,n_,p_] :=
  IntegerQ[p] && p>0 && NonzeroQ[m-n+1] &&
	If[ZeroQ[n-1],
	   Not[IntegerQ[m]] || m<0 && Not[m+p+2<=0<=m+2*p+2] || p<=m+2,
	p==2 || Not[IntegerQ[(m+1)/n]] || Not[0<(m+1)/n<=3] && Not[(m+1)/n<=-(p+1)]]


(* ::Subsection::Closed:: *)
(*ExpandExpression*)


ExpnExpand[u_,x_Symbol] :=
  ExpnExpandAux[ExpandExpression[u,x],x]


(* Basis: e/x + f/(c+d*x) == (c*e + (d*e+f)*x)/(x*(c+d*x)) *)
ExpnExpandAux[u_.+e_./x_+f_./(c_+d_.*x_),x_Symbol] :=
  ExpnExpandAux[u,x]+c*e/(x*(c+d*x)) /;
FreeQ[{c,d,e,f},x] && ZeroQ[d*e+f]

(* Basis: e/(a+b*x) + f/(c+d*x) == (c*e+a*f + (d*e+b*f)*x)/(a*c + (b*c+a*d)*x + b*d*x^2) *)
ExpnExpandAux[u_.+e_./(a_+b_.*x_)+f_./(c_+d_.*x_),x_Symbol] :=
  ExpnExpandAux[u,x]+(c*e+a*f)/(a*c+b*d*x^2) /;
FreeQ[{a,b,c,d,e,f},x] && ZeroQ[d*e+b*f] && ZeroQ[b*c+a*d]

ExpnExpandAux[u_,x_Symbol] :=
  u


DownValues[ExpandExpression]={};


(* ::Subsubsection:: *)
(*Algebraic expansion rules*)


(* ExpandExpression[a_,x_Symbol] :=
  a /;
FreeQ[a,x]

ExpandExpression[a_*u_,x_Symbol] :=
  Dist[a,ExpandExpression[u,x]] /;
FreeQ[a,x] && Not[MatchQ[u,b_*v_ /; FreeQ[b,x]]] *)


(* Derivation: Algebraic simplification *)
(* Basis: a+b*x^n == x^n*(b+a/x^n) *)
ExpandExpression[u_.*(a_+b_.*x_^n_.)^p_,x_Symbol] :=
  ExpandExpression[u*x^(n*p)*(b+a/x^n)^p,x] /;
FreeQ[{a,b},x] && IntegersQ[n,p] && n<0


(* Derivation: Algebraic simplification *)
(* Basis: a*z^p+b*z^q == z^p*(a+b*z^(q-p)) *)
ExpandExpression[u_.*(a_.*x_^p_.+b_.*x_^q_.)^n_,x_Symbol] :=
  ExpandExpression[u*x^(n*p)*(a+b*x^(q-p))^n,x] /;
FreeQ[{a,b},x] && IntegersQ[n,p,q] && q-p>=0


(* Note: These rule is necessary because if a or b contains fractional powers, Apart rationalizes 
	denominator resulting in hard to integrate terms in partial fraction expansion. *)
ExpandExpression[u_.*(a_.+d_.*c_^m_+b_.*v_)^p_,x_Symbol] :=
  Module[{tmp},
  ReplaceAll[ExpandExpression[u*(a+d*tmp+b*v)^p,x],{tmp->c^m}]] /;
FreeQ[{a,b,c,d},x] && IntegerQ[p] && p<0 && FractionQ[m] && Not[FreeQ[v,x]]

ExpandExpression[u_.*(a_.+b_.*c_^m_*v_)^p_,x_Symbol] :=
  Module[{tmp},
  ReplaceAll[ExpandExpression[u*(a+b*tmp*v)^p,x],{tmp->c^m}]] /;
FreeQ[{a,b,c},x] && IntegerQ[p] && p<0 && FractionQ[m] && Not[FreeQ[v,x]]


(* Note: This rule necessary because if a+b*x^n is factorable, Apart factors denominator 
	resulting in hard to integrate terms in partial fraction expansion. *)
ExpandExpression[(c_.+d_.*x_^m_.)^q_.*(a_+b_.*x_^n_)^p_,x_Symbol] :=
  Module[{aa,bb},
  RegularizeTerm[ReplaceAll[Apart[(c+d*x^m)^q*(aa+bb*x^n)^p,x],{aa->a,bb->b}],x]] /;
FreeQ[{a,b,c,d},x] && IntegersQ[m,n,p,q] && p<0 && n>1 && (m>=n || m<0) && q>0


(* Derivation: Algebraic expansion *)
(* Basis: (a+b*z)/(c+d*z) == a/c + (b*c-a*d)*z/(c*(c+d*z)) *)
ExpandExpression[x_^m_*(a_+b_.*x_^n_.)/(c_+d_.*x_^n_.),x_Symbol] :=
  a*x^m/c + Dist[(b*c-a*d)/c, ExpandExpression[x^(m+n)/(c+d*x^n),x]] /;
FreeQ[{a,b,c,d},x] && IntegersQ[m,n] && n>0 && m<0


(* Derivation: Algebraic simplification *)
(* Basis: a*z^p+b*z^q+c*z^r == z^p*(a+b*z^(q-p)+c*z^(r-p)) *) 
(* ExpandExpression[u_.*(a_.*x_^p_.+b_.*x_^q_.+c_.*x_^r_.)^n_,x_Symbol] :=
  ExpandExpression[u*x^(n*p)*(a+b*x^(q-p)+c*x^(r-p))^n,x] /;
FreeQ[{a,b,c},x] && IntegersQ[n,p,q,r] && q-p>=0 && r-p>=0 *)


(* Derivation: Algebraic simplification *)
(* Basis: b^2/(4*c)+b*z+c*z^2 == (b/2+c*z)^2/c *)
ExpandExpression[u_.*(a_+b_.*x_^k_.+c_.*x_^j_)^n_,x_Symbol] :=
  ExpandExpression[u*(b/2+c*x^k)^(2*n)/c^n,x] /;
FreeQ[{a,b,c,j,k},x] && IntegersQ[n,k,j] && j==2*k && n<0 && ZeroQ[b^2-4*a*c]


(* Derivation: Algebraic normalization *)
ExpandExpression[u_^n_,x_Symbol] :=
  (Coefficient[u,x,0] + Coefficient[u,x,1]*x + Coefficient[u,x,2]*x^2)^n /;
RationalQ[n] && n<0 && PolynomialQ[u,x] && Exponent[u,x]==2 && 
Not[MatchQ[u,a_.+b_.*x+c_.*x^2 /; FreeQ[{a,b,c},x]]]


(* Derivation: Algebraic expansion *)
(* Basis: (c+d*x+e*x^2+f*x^3)/(a+b*x^4) == (c+e*x^2)/(a+b*x^4) + d*x/(a+b*x^4) + f*x^3/(a+b*x^4) *)
(* Note: Distributes denominator over terms in the numerator whose degrees+1 have a common 
	divisor with 4 making them easily integrable. *)
ExpandExpression[u_/(a_+b_.*x_^4),x_Symbol] :=
  (Coefficient[u,x,0]+Coefficient[u,x,2]*x^2)/(a+b*x^4) + 
  Coefficient[u,x,1]*x/(a+b*x^4) + 
  Coefficient[u,x,3]*x^3/(a+b*x^4) /;
FreeQ[{a,b},x] && PolynomialQ[u,x] && Exponent[u,x]<4


(* Note: Unlike Apart, the following rule does not expand (a+b*x)^n. *)
ExpandExpression[(a_.+b_.*x_)^m_*(c_+d_.*x_)^n_,x_Symbol] :=
  Map[Function[RegularizeSubst[#,x,a+b*x]], Apart[x^m*(c-a*d/b+d/b*x)^n,x]] /;
FreeQ[{a,b,c,d},x] && IntegersQ[m,n] && m>1 && n<0 (* && NonzeroQ[b*c-a*d] *)


ExpandExpression[x_^m_.*(a_.+b_.*x_)^n_*(c_+d_.*x_)^n_,x_Symbol] :=
  ExpandExpression[x^m*(a*c+(b*c+a*d)*x+b*d*x^2)^n,x] /;
FreeQ[{a,b,c,d},x] && IntegersQ[m,n] && n<0


(* Note: This rule is necessary because if a+b*x+c*x^2 is factorable, Apart factors denominator 
	resulting in hard to integrate terms in partial fraction expansion. *)
(* ExpandExpression[x_^m_.*(a_+b_.*x_^k_.+c_.*x_^j_)^p_,x_Symbol] :=
  ReplaceAll[Apart[x^m*(aa+bb*x^k+cc*x^j)^p,x],{aa->a,bb->b,cc->c}] /;
FreeQ[{a,b},x] && IntegersQ[m,p,j,k] && j===2*k && p<0 && k>0 && (m>=j || m<0) *)


(* ::Subsubsection::Closed:: *)
(*Circular trig expansion rules*)


ExpandExpression[(A_+u_+B_.*Sin[c_.+d_.*x_])*(a_.+b_.*Sin[c_.+d_.*x_])^n_,x_Symbol] :=
  (A+B*Sin[c+d*x])*(a+b*Sin[c+d*x])^n + ExpandExpression[u*(a+b*Sin[c+d*x])^n,x] /;
FreeQ[{a,b,c,d,A,B},x] && RationalQ[n] && Not[FreeQ[u,x]]

ExpandExpression[(A_+u_+B_.*Cos[c_.+d_.*x_])*(a_.+b_.*Cos[c_.+d_.*x_])^n_,x_Symbol] :=
  (A+B*Cos[c+d*x])*(a+b*Cos[c+d*x])^n + ExpandExpression[u*(a+b*Cos[c+d*x])^n,x] /;
FreeQ[{a,b,c,d,A,B},x] && RationalQ[n] && Not[FreeQ[u,x]]


ExpandExpression[Sin[v_]^n_,x_Symbol] :=
  Expand[TrigReduce[Sin[v]^n],x] /;
IntegerQ[n] && n>1

ExpandExpression[Cos[v_]^n_,x_Symbol] :=
  Expand[TrigReduce[Cos[v]^n],x] /;
IntegerQ[n] && n>1


(* Basis: Sin[z]^2/(c+d*Cos[z]^2) == -1/d + (c+d)/(d*(c+d*Cos[z]^2)) *)
ExpandExpression[Sin[v_]^n_/(c_.+d_.*Cos[v_]^2),x_Symbol] :=
  -Sin[v]^(n-2)/d + Dist[(c+d)/d,ExpandExpression[Sin[v]^(n-2)/(c+d*Cos[v]^2),x]] /;
FreeQ[{c,d},x] && EvenQ[n] && n>1

(* Basis: Cos[z]^2/(c+d*Sin[z]^2) == -1/d + (c+d)/(d*(c+d*Sin[z]^2)) *)
ExpandExpression[Cos[v_]^n_/(c_.+d_.*Sin[v_]^2),x_Symbol] :=
  -Cos[v]^(n-2)/d + Dist[(c+d)/d,ExpandExpression[Cos[v]^(n-2)/(c+d*Sin[v]^2),x]] /;
FreeQ[{c,d},x] && EvenQ[n] && n>1


(* Basis: (a+b*Sin[z]^2)/(c+d*Cos[z]^2) == -b/d + (b*c+(a+b)*d)/(d*(c+d*Cos[z]^2)) *)
ExpandExpression[(a_+b_.*Sin[v_]^2)/(c_.+d_.*Cos[v_]^2),x_Symbol] :=
  -b/d + (b*c+(a+b)*d)/(d*(c+d*Cos[v]^2)) /;
FreeQ[{a,b,c,d},x]

(* Basis: (a+b*Cos[z]^2)/(c+d*Sin[z]^2) == -b/d + (b*c+(a+b)*d)/(d*(c+d*Sin[z]^2)) *)
ExpandExpression[(a_+b_.*Cos[v_]^2)/(c_.+d_.*Sin[v_]^2),x_Symbol] :=
  -b/d + (b*c+(a+b)*d)/(d*(c+d*Sin[v]^2)) /;
FreeQ[{a,b,c,d},x]


(* Basis: If n is an integer, 
	Tan[z]^n/(a*Sin[z]^n+b*Cos[z]^n) == Sec[z]^n/a - b/(a*(a*Sin[z]^n+b*Cos[z]^n)) *)
ExpandExpression[Tan[v_]^n_./(a_.*Sin[v_]^n_.+b_.*Cos[v_]^n_.),x_Symbol] :=
  Sec[v]^n/a - b/(a*(a*Sin[v]^n+b*Cos[v]^n)) /;
FreeQ[{a,b},x] && IntegerQ[n]

(* Basis: If n is an integer, 
	Cot[z]^n/(a*Sin[z]^n+b*Cos[z]^n) == Csc[z]^n/b - a/(b*(a*Sin[z]^n+b*Cos[z]^n)) *)
ExpandExpression[Cot[v_]^n_./(a_.*Sin[v_]^n_.+b_.*Cos[v_]^n_.),x_Symbol] :=
  Csc[v]^n/b - a/(b*(a*Sin[v]^n+b*Cos[v]^n)) /;
FreeQ[{a,b},x] && IntegerQ[n]


(* Basis: If n is an integer, 
	Sec[z]^n/(a+b*Cot[z]^n) == Sec[z]^n/a - b/(a*(a*Sin[z]^n+b*Cos[z]^n)) *)
ExpandExpression[Sec[v_]^n_./(a_+b_.*Cot[v_]^n_.),x_Symbol] :=
  Sec[v]^n/a - b/(a*(a*Sin[v]^n+b*Cos[v]^n)) /;
FreeQ[{a,b},x] && IntegerQ[n]

(* Basis: If n is an integer, 
	Csc[z]^n/(a+b*Tan[z]^n) == Csc[z]^n/a - b/(a*(b*Sin[z]^n+a*Cos[z]^n)) *)
ExpandExpression[Csc[v_]^n_./(a_+b_.*Tan[v_]^n_.),x_Symbol] :=
  Csc[v]^n/a - b/(a*(b*Sin[v]^n+a*Cos[v]^n)) /;
FreeQ[{a,b},x] && IntegerQ[n]


(* Basis: If a^2+b^2=0, 1/(a+b*Tan[z]) == Cos[z]^2/a + Cos[z]*Sin[z]/b *)
ExpandExpression[u_*(a_+b_.*Tan[v_])^n_,x_Symbol] :=
  ExpandExpression[u*(Cos[v]^2/a + Cos[v]*Sin[v]/b)^(-n),x] /;
FreeQ[{a,b},x] && IntegerQ[n] && n<0 && ZeroQ[a^2+b^2]

(* Basis: If a^2+b^2=0, 1/(a+b*Cot[z]) == Sin[z]^2/a + Cos[z]*Sin[z]/b *)
ExpandExpression[u_*(a_+b_.*Cot[v_])^n_,x_Symbol] :=
  ExpandExpression[u*(Sin[v]^2/a + Cos[v]*Sin[v]/b)^(-n),x] /;
FreeQ[{a,b},x] && IntegerQ[n] && n<0 && ZeroQ[a^2+b^2]


ExpandExpression[u_*Sin[a_.+b_.*x_]*Cos[a_.+b_.*x_],x_Symbol] :=
  ExpandExpression[u*Sin[2*a+2*b*x]/2,x] /;
FreeQ[{a,b},x]


ExpandExpression[u_*Sec[a_.+b_.*x_]*Csc[a_.+b_.*x_],x_Symbol] :=
  ExpandExpression[2*u*Csc[2*a+2*b*x],x] /;
FreeQ[{a,b},x]


(* Basis: Cos[z]*Sin[z] ==  Sin[2*z]/2 *)
(* ExpandExpression[x_^m_.*Cos[u_]*Sin[u_],x_Symbol] :=
  ExpandExpression[x^m*Sin[Dist[2,u]]/2,x] /;
RationalQ[m] *)

(* Basis: Cos[z]*Sin[z] ==  Sin[2*z]/2 *)
ExpandExpression[v_*Cos[u_]*Sin[u_],x_Symbol] :=
  ExpandExpression[v*Sin[Dist[2,u]]/2,x] /;
MatchQ[v,x^m_ /; RationalQ[m]] || MatchQ[v,f_^w_ /; FreeQ[f,x] && LinearQ[w,x]]


(* ::Subsubsection::Closed:: *)
(*Hyperbolic trig expansion rules*)


ExpandExpression[(A_+u_+B_.*Sinh[c_.+d_.*x_])*(a_.+b_.*Sinh[c_.+d_.*x_])^n_,x_Symbol] :=
  (A+B*Sinh[c+d*x])*(a+b*Sinh[c+d*x])^n + Expand[u*(a+b*Sinh[c+d*x])^n,x] /;
FreeQ[{a,b,c,d,A,B},x] && RationalQ[n] && Not[FreeQ[u,x]]

ExpandExpression[(A_+u_+B_.*Cosh[c_.+d_.*x_])*(a_.+b_.*Cosh[c_.+d_.*x_])^n_,x_Symbol] :=
  (A+B*Cosh[c+d*x])*(a+b*Cosh[c+d*x])^n + Expand[u*(a+b*Cosh[c+d*x])^n,x] /;
FreeQ[{a,b,c,d,A,B},x] && RationalQ[n] && Not[FreeQ[u,x]]


(* Note: Temporary variable z used because TrigReduce expands hyperbolic functions of sums
	having numeric terms! *) 
ExpandExpression[Sinh[v_]^n_,x_Symbol] :=
  Module[{z},
  Expand[NormalForm[Subst[TrigReduce[Sinh[z]^n],z,v],x],x]] /;
IntegerQ[n] && n>1

ExpandExpression[x_^m_.*Sinh[v_]^n_.,x_Symbol] :=
  Module[{z},
  Expand[x^m*NormalForm[Subst[TrigReduce[Sinh[z]^n],z,v],x],x]] /;
FreeQ[m,x] && IntegerQ[n] && n>0

ExpandExpression[Cosh[v_]^n_,x_Symbol] :=
  Module[{z},
  Expand[NormalForm[Subst[TrigReduce[Cosh[z]^n],z,v],x],x]] /;
IntegerQ[n] && n>1

ExpandExpression[x_^m_.*Cosh[v_]^n_.,x_Symbol] :=
  Module[{z},
  Expand[x^m*NormalForm[Subst[TrigReduce[Cosh[z]^n],z,v],x],x]] /;
FreeQ[m,x] && IntegerQ[n] && n>0


(* Basis: Sinh[z]^2/(c+d*Cosh[z]^2) == 1/d - (c+d)/(d*(c+d*Cosh[z]^2)) *)
ExpandExpression[Sinh[v_]^n_/(c_.+d_.*Cosh[v_]^2),x_Symbol] :=
  Sinh[v]^(n-2)/d - Dist[(c+d)/d,ExpandExpression[Sinh[v]^(n-2)/(c+d*Cosh[v]^2),x]] /;
FreeQ[{c,d},x] && EvenQ[n] && n>1

(* Basis: Cosh[z]^2/(c+d*Sinh[z]^2) == 1/d - (c-d)/(d*(c+d*Sinh[z]^2)) *)
ExpandExpression[Cosh[v_]^n_/(c_.+d_.*Sinh[v_]^2),x_Symbol] :=
  Cosh[v]^(n-2)/d - Dist[(c-d)/d,ExpandExpression[Cosh[v]^(n-2)/(c+d*Sinh[v]^2),x]] /;
FreeQ[{c,d},x] && EvenQ[n] && n>1


(* Basis: (a+b*Sinh[z]^2)/(c+d*Cosh[z]^2) == b/d - (b*c-(a-b)*d)/(d*(c+d*Cosh[z]^2)) *)
ExpandExpression[(a_+b_.*Sinh[v_]^2)/(c_.+d_.*Cosh[v_]^2),x_Symbol] :=
  b/d - (b*c-(a-b)*d)/(d*(c+d*Cosh[v]^2)) /;
FreeQ[{a,b,c,d},x]

(* Basis: (a+b*Cosh[z]^2)/(c+d*Sinh[z]^2) == b/d - (b*c-(a+b)*d)/(d*(c+d*Sinh[z]^2)) *)
ExpandExpression[(a_+b_.*Cosh[v_]^2)/(c_.+d_.*Sinh[v_]^2),x_Symbol] :=
  b/d - (b*c-(a+b)*d)/(d*(c+d*Sinh[v]^2)) /;
FreeQ[{a,b,c,d},x]


(* Basis: If n is an integer, 
	Tanh[z]^n/(a*Sinh[z]^n+b*Cosh[z]^n) == Sech[z]^n/a - b/(a*(a*Sinh[z]^n+b*Cosh[z]^n)) *)
ExpandExpression[Tanh[v_]^n_./(a_.*Sinh[v_]^n_.+b_.*Cosh[v_]^n_.),x_Symbol] :=
  Sech[v]^n/a - b/(a*(a*Sinh[v]^n+b*Cosh[v]^n)) /;
FreeQ[{a,b},x] && IntegerQ[n]

(* Basis: If n is an integer, 
	Coth[z]^n/(a*Sinh[z]^n+b*Cosh[z]^n) == Csch[z]^n/b - a/(b*(a*Sinh[z]^n+b*Cosh[z]^n)) *)
ExpandExpression[Coth[v_]^n_./(a_.*Sinh[v_]^n_.+b_.*Cosh[v_]^n_.),x_Symbol] :=
  Csch[v]^n/b - a/(b*(a*Sinh[v]^n+b*Cosh[v]^n)) /;
FreeQ[{a,b},x] && IntegerQ[n]


(* Basis: If n is an integer, 
	Sech[z]^n/(a+b*Coth[z]^n) == Sech[z]^n/a - b/(a*(a*Sinh[z]^n+b*Cosh[z]^n)) *)
ExpandExpression[Sech[v_]^n_./(a_+b_.*Coth[v_]^n_.),x_Symbol] :=
  Sech[v]^n/a - b/(a*(a*Sinh[v]^n+b*Cosh[v]^n)) /;
FreeQ[{a,b},x] && IntegerQ[n]

(* Basis: If n is an integer, 
	Csch[z]^n/(a+b*Tanh[z]^n) == Csch[z]^n/a - b/(a*(b*Sinh[z]^n+a*Cosh[z]^n)) *)
ExpandExpression[Csch[v_]^n_./(a_+b_.*Tanh[v_]^n_.),x_Symbol] :=
  Csch[v]^n/a - b/(a*(b*Sinh[v]^n+a*Cosh[v]^n)) /;
FreeQ[{a,b},x] && IntegerQ[n]


(* Basis: If a^2-b^2=0, 1/(a+b*Tanh[z]) == Cosh[z]^2/a - Cosh[z]*Sinh[z]/b *)
ExpandExpression[u_*(a_+b_.*Tanh[v_])^n_,x_Symbol] :=
  ExpandExpression[u*(Cosh[v]^2/a - Cosh[v]*Sinh[v]/b)^(-n),x] /;
FreeQ[{a,b},x] && IntegerQ[n] && n<0 && ZeroQ[a^2-b^2]

(* Basis: If a^2-b^2=0, 1/(a+b*Coth[z]) == -Sinh[z]^2/a + Cosh[z]*Sinh[z]/b *)
ExpandExpression[u_*(a_+b_.*Coth[v_])^n_,x_Symbol] :=
  ExpandExpression[u*(-Sinh[v]^2/a + Cosh[v]*Sinh[v]/b)^(-n),x] /;
FreeQ[{a,b},x] && IntegerQ[n] && n<0 && ZeroQ[a^2-b^2]


ExpandExpression[u_*Sinh[a_.+b_.*x_]*Cosh[a_.+b_.*x_],x_Symbol] :=
  ExpandExpression[u*Sinh[2*a+2*b*x]/2,x] /;
FreeQ[{a,b},x]


ExpandExpression[u_*Sech[a_.+b_.*x_]*Csch[a_.+b_.*x_],x_Symbol] :=
  ExpandExpression[2*u*Csch[2*a+2*b*x],x] /;
FreeQ[{a,b},x]


(* Basis: Cosh[z]*Sinh[z] ==  Sinh[2*z]/2 *)
(* ExpandExpression[x_^m_.*Cosh[u_]*Sinh[u_],x_Symbol] :=
  ExpandExpression[x^m*Sinh[Dist[2,u]]/2,x] /;
RationalQ[m] *)

ExpandExpression[v_*Cosh[u_]*Sinh[u_],x_Symbol] :=
  ExpandExpression[v*Sinh[Dist[2,u]]/2,x] /;
MatchQ[v,x^m_ /; RationalQ[m]] || MatchQ[v,f_^w_ /; FreeQ[f,x] && LinearQ[w,x]]


(* ::Subsubsection:: *)
(*Partial fraction expansion rules*)


(* Fractional powers of sums are removed because Apart does wierd things with them!!! *)
ExpandExpression[u_.*v_^n_,x_Symbol] :=
  Module[{w=ExpandExpression[u,x]},
  If[SumQ[w],
    Map[Function[RegularizeTerm[#*v^n,x]],w],
  w*v^n]] /;
(* Not[SumFreeQ[v]] && *) FractionQ[n] && (n<0 || n>1)


SumFreeQ[u_] :=
  If[AtomQ[u],
    True,
  If[SumQ[u],
    False,
  Catch[
    Scan[Function[If[SumFreeQ[#],Null,Throw[False]]],u];
    True]]]


(* Derivation: Algebraic expansion *)
ExpandExpression[u_,x_Symbol] :=
  If[SumQ[u] ||
  	MatchQ[u, c_./(a_+b_.*x^n_.) /; 
		FreeQ[{a,b,c},x] && IntegerQ[n]] ||
	  MatchQ[u, c_.*x^m_.*(a_+b_.*x^n_.)^p_. /; 
		FreeQ[{a,b,c},x] && IntegersQ[m,n,p] && ( (* p<0 || *) ZeroQ[m-n+1])] ||
	  MatchQ[u, c_.*x^m_.*(v_+b_.*x^n_.)^p_. /; 
		FreeQ[{b,c},x] && Not[AlgebraicFunctionQ[v,x]] && IntegersQ[m,n,p] && p<0 && 0<n<=m] ||
      MatchQ[u, x^m_*f_[a_.+b_.*x]^n_. /; 
		FreeQ[{a,b,m,n},x] && MemberQ[{Tan,Cot,Tanh,Coth},f] && Not[IntegerQ[m] && m>0]] ||
      MatchQ[u, f_[a_.+b_.*x+c_.*x^2]/x /; 
		FreeQ[{a,b,c},x] && MemberQ[{Sin,Cos,Sinh,Cosh},f]] ||
      MatchQ[u, (a_+b_.*f_[c_.+d_.*x]^2)^n_ /; 
		FreeQ[{a,b},x] && MemberQ[{Sin,Cos,Sinh,Cosh},f] && IntegerQ[n]],
    u,
  Module[{tmp,lst},
  tmp = FindKernel[u,x];
  If[NotFalseQ[tmp] && FunctionOfKernelQ[u,tmp,x],
    Subst[ExpandExpression[Subst[u,tmp,x],x],x,tmp],

  tmp = FunctionOfTrigQ[u,x,x];
  If[tmp && (ContainsQ[u,Sin,x] || ContainsQ[u,Csc,x]) && FunctionOfQ[Sin[x],u,x],
    ExpandTrigExpression[u,Sin[x],x],
  If[tmp && (ContainsQ[u,Cos,x] || ContainsQ[u,Sec,x]) && FunctionOfQ[Cos[x],u,x],
    ExpandTrigExpression[u,Cos[x],x],
  If[tmp && (ContainsQ[u,Tan,x] || ContainsQ[u,Cot,x]) && FunctionOfQ[Tan[x],u,x],
    ExpandTrigExpression[u,Tan[x],x],

  tmp = FunctionOfHyperbolicQ[u,x,x];
  If[tmp && (ContainsQ[u,Sinh,x] || ContainsQ[u,Csch,x]) && FunctionOfQ[Sinh[x],u,x],
    ExpandTrigExpression[u,Sinh[x],x],
  If[tmp && (ContainsQ[u,Cosh,x] || ContainsQ[u,Sech,x]) && FunctionOfQ[Cosh[x],u,x],
    ExpandTrigExpression[u,Cosh[x],x],
  If[tmp && (ContainsQ[u,Tanh,x] || ContainsQ[u,Coth,x]) && FunctionOfQ[Tanh[x],u,x],
    ExpandTrigExpression[u,Tanh[x],x],

  Module[{v},
  If[AlgebraicFunctionQ[u,x] && Not[RationalFunctionQ[u,x]],
    If[GoodExpansionQ[u,v=ExpandExpressionAux[u,x],x],
      RegularizeTerm[v,x],
    u],
  If[GoodExpansionQ[u,v=Apart[u,x],x],
    RegularizeTerm[v,x],
  If[GoodExpansionQ[u,v=Apart[u],x],
    RegularizeTerm[v,x],
  If[GoodExpansionQ[u,v=ExpandExpressionAux[u,x],x],
    RegularizeTerm[v,x],
  If[TrigHyperbolicFreeQ[u,x],
    v=Apart[u,x];
    RegularizeTerm[If[GoodExpansionQ[u,v,x],v,u],x],

  tmp=TryTrigReduceQ[u];
  If[tmp, lst=SplitFreeFactors[TrigReduce[u],x]];
  If[tmp && GoodExpansionQ[u,v=Apart[lst[[2]],x],x],
    Map[Function[RegularizeTerm[lst[[1]]*#,x]],v],
  If[tmp && GoodExpansionQ[u,v=Apart[lst[[2]]],x],
    Map[Function[RegularizeTerm[lst[[1]]*#,x]],v],
  If[tmp && GoodExpansionQ[u,v=ExpandExpressionAux[lst[[2]],x],x],
    Map[Function[RegularizeTerm[lst[[1]]*#,x]],v],

  v=SmartTrigExpand[u,x];
  If[SumQ[v],
    RegularizeTerm[v,x],
  v=TrigExpand[u]; 
(* Replace Simplify with TrigSimplify on the next line when TrigSimplify simplifies 
	a*Sin[x]^2+b*Cos[x]^2 to b+(a-b)*Sin[x]^2! *)
  If[SumQ[v] && SumQ[v=Simplify[v]],
    RegularizeTerm[v,x],
  v=Apart[u,x];
  RegularizeTerm[If[GoodExpansionQ[u,v,x],v,u],x]]]]]]]]]]]]]]]]]]]]]


(* If TrigReduce[u] will result in a linear expansion of trig functions, TryTrigReduceQ[u] returns True;
	else it returns False. *)
TryTrigReduceQ[u_] :=
  MatchQ[u,v_*f_[w_]^n_ /; IntegerQ[n] && MemberQ[{Sin,Cos,Sinh,Cosh},f]] (* &&
  Not[MatchQ[u,v_*f_[w_]^n_ /; IntegerQ[n] && MemberQ[{Tan,Cot,Sec,Csc,Tanh,Coth,Sech,Csch},f]]] *)


ExpandTrigExpression[u_,v_,x_Symbol] :=
  Module[{w=TrigSimplify[Subst[ExpandExpression[SubstFor[v,u,x],x],x,v]]},
  If[SumQ[w],
    Map[Function[ExpandTrigExpressionAux[#,x]],w],
  w]]

(* Note: Since TrigSimplify can result in a product (e.g. when integrating Tanh[x]^2/(a+b*Sinh[x])), 
	this function is called to distribute factors over a sum. *)
ExpandTrigExpressionAux[u_*v_,x_Symbol] :=
  Map[Function[u*#],v] /;
SumQ[v] && Not[FreeQ[u,x]] && Not[FreeQ[v,x]]

ExpandTrigExpressionAux[u_,x_Symbol] :=
  u


(* If v is a sum and the terms of v are all simpler than u, returns True; else it returns False. *) 
GoodExpansionQ[u_,v_,x_Symbol] :=
  If[SumQ[v],
    If[PolynomialQ[u,x],
      True,
    If[RationalFunctionQ[u,x],
      If[RationalFunctionQ[v,x],
        Module[{lst=RationalFunctionExponents[u,x]},
        Catch[
          Scan[Function[If[SimplerRationalFunctionQ[lst,RationalFunctionExponents[#,x]],Throw[False]]],v];
          True]],
      False],
    True]],
  False]

SimplerRationalFunctionQ[lst1_,lst2_] :=
  lst1[[1]]<=lst2[[1]] && lst1[[2]]<=lst2[[2]] && (lst1[[1]]<lst2[[1]] || lst1[[2]]<lst2[[2]])


(* Kludge until there is a rule for this type of integrand! *)
ExpandExpressionAux[(d_+e_.*x_^k_.)*(a_+b_.*x_^k_+c_.*x_^j_)^n_,x_Symbol] :=
  d*(a+b*x^k+c*x^j)^n + e*x^k*(a+b*x^k+c*x^j)^n /;
FreeQ[{a,b,c,d,e},x] && IntegersQ[n,k,j] && EvenQ[k] && j==2*k && n<-1

ExpandExpressionAux[u_*v_,x_Symbol] :=
  Map[Function[#*v],u] /;
SumQ[u] && Not[FreeQ[u,x]]

ExpandExpressionAux[u_^n_*v_.,x_Symbol] :=
  Module[{w=Expand[u^n,x]},
  Map[Function[#*v],w] /;
 SumQ[w]] /;
SumQ[u] && IntegerQ[n] && n>0 && Not[FreeQ[u,x]]


DownValues[RegularizeTerm]={};

(* Basis: a*u+b*u == (a+b)*u *)
RegularizeTerm[a_.*u_+b_.*u_+v_.,x_Symbol] :=
  RegularizeTerm[(a+b)*u+v,x] /;
FreeQ[{a,b},x]

(* Basis: e/(a+b*x) + f/(c+d*x) == (c*e+a*f + (d*e+b*f)*x)/(a*c + (b*c+a*d)*x + b*d*x^2) *)
(* RegularizeTerm[u_.+e_./(a_.+b_.*x_)+f_./(c_+d_.*x_),x_Symbol] :=
  RegularizeTerm[u+(c*e+a*f)/(a*c+(b*c+a*d)*x+b*d*x^2),x] /;
FreeQ[{a,b,c,d,e,f},x] && ZeroQ[d*e+b*f] && (ZeroQ[a] || ZeroQ[b*c+a*d]) *)

RegularizeTerm[c_.*u_/(a_+b_.*x_^n_),x_Symbol] :=
  If[PolynomialQ[u,x],
    Module[{k},
    Sum[RegularizeTerm[c*Coefficient[u,x,k]*x^k/(a+b*x^n),x],{k,0,Exponent[u,x]}]],    
  Map[Function[RegularizeTerm[c*#/(a+b*x^n),x]],u]] /;
FreeQ[{a,b,c},x] && IntegerQ[n] && n>0 && SumQ[u] && Not[FreeQ[u,x]]

RegularizeTerm[u_,x_Symbol] :=
  If[SumQ[u],
    Map[Function[RegularizeTerm[#,x]],u],
  Module[{lst1,lst2},
  lst1=SplitFreeFactors[NormalForm[u,x],x];
  lst2=SplitFreeFactors[Regularize[lst1[[2]],x],x];
  lst2={lst1[[1]]*lst2[[1]], lst2[[2]]};
  lst2={Simplify[Numerator[lst2[[1]]]] / Simplify[Denominator[lst2[[1]]]], lst2[[2]]};
  If[SumQ[lst2[[2]]],
    Map[Function[lst2[[1]]*#],lst2[[2]]],
  lst2[[1]] * lst2[[2]]]]]


ContainsQ[u_,f_,x_] :=
  Count[u, f[n_.*x] /; IntegerQ[n], Infinity] > 0


FunctionOfKernelQ[u_,v_,x_] :=
  If[u===v,
    True,
  If[AtomQ[u],
    u=!=x,
  Catch[
    Scan[Function[If[Not[FunctionOfKernelQ[#,v,x]],Throw[False]]],u];
    True]]]

(* If u contains a subexpression of the form f[v] where f is a function and v is an algebraic
	function of and dependent on x, FindKernel[u,x] returns f[v]; else it returns False. *)
FindKernel[u_,x_] :=
  If[AlgebraicFunctionQ[u,x],
    False,
  If[Length[u]===1 && AlgebraicFunctionQ[u[[1]],x],
    u,
  If[Length[u]===2 && AlgebraicFunctionQ[u[[1]],x] && FreeQ[u[[2]],x],
    u,
  If[Length[u]===2 && AlgebraicFunctionQ[u[[2]],x] && FreeQ[u[[1]],x],
    u,
  Module[{tmp},
  Catch[
    Scan[Function[If[NotFalseQ[tmp=FindKernel[#,x]], Throw[tmp]]],u];
    False]]]]]]


(* ::Section::Closed:: *)
(*Algebraic Simplification Rules*)


(* ::Subsection::Closed:: *)
(*Inverse Trig Function Simplification Rules*)


Unprotect[ArcSin,ArcCos,ArcTan,ArcCot,ArcSec,ArcCsc];

ArcSin[1/u_] := ArcCsc[u];
ArcCos[1/u_] := ArcSec[u];
ArcTan[1/u_] := ArcCot[u];
ArcCot[1/u_] := ArcTan[u];
ArcSec[1/u_] := ArcCos[u];
ArcCsc[1/u_] := ArcSin[u];

ArcSin[1/(u_*v_)] := ArcCsc[u*v];
ArcCos[1/(u_*v_)] := ArcSec[u*v];
ArcTan[1/(u_*v_)] := ArcCot[u*v];
ArcCot[1/(u_*v_)] := ArcTan[u*v];
ArcSec[1/(u_*v_)] := ArcCos[u*v];
ArcCsc[1/(u_*v_)] := ArcSin[u*v];

ArcSin[Cot[u_]] := ArcCsc[Tan[u]];
ArcCos[Cot[u_]] := ArcSec[Tan[u]];
ArcTan[Cot[u_]] := ArcCot[Tan[u]];
ArcCot[Cot[u_]] := ArcTan[Tan[u]];
ArcSec[Cot[u_]] := ArcCos[Tan[u]];
ArcCsc[Cot[u_]] := ArcSin[Tan[u]];

ArcSin[Sec[u_]] := ArcCsc[Cos[u]];
ArcCos[Sec[u_]] := ArcSec[Cos[u]];
ArcTan[Sec[u_]] := ArcCot[Cos[u]];
ArcCot[Sec[u_]] := ArcTan[Cos[u]];
ArcSec[Sec[u_]] := ArcCos[Cos[u]];
ArcCsc[Sec[u_]] := ArcSin[Cos[u]];

ArcSin[Csc[u_]] := ArcCsc[Sin[u]];
ArcCos[Csc[u_]] := ArcSec[Sin[u]];
ArcTan[Csc[u_]] := ArcCot[Sin[u]];
ArcCot[Csc[u_]] := ArcTan[Sin[u]];
ArcSec[Csc[u_]] := ArcCos[Sin[u]];
ArcCsc[Csc[u_]] := ArcSin[Sin[u]];

ArcSin[Coth[u_]] := ArcCsc[Tanh[u]];
ArcCos[Coth[u_]] := ArcSec[Tanh[u]];
ArcTan[Coth[u_]] := ArcCot[Tanh[u]];
ArcCot[Coth[u_]] := ArcTan[Tanh[u]];
ArcSec[Coth[u_]] := ArcCos[Tanh[u]];
ArcCsc[Coth[u_]] := ArcSin[Tanh[u]];

ArcSin[Sech[u_]] := ArcCsc[Cosh[u]];
ArcCos[Sech[u_]] := ArcSec[Cosh[u]];
ArcTan[Sech[u_]] := ArcCot[Cosh[u]];
ArcCot[Sech[u_]] := ArcTan[Cosh[u]];
ArcSec[Sech[u_]] := ArcCos[Cosh[u]];
ArcCsc[Sech[u_]] := ArcSin[Cosh[u]];

ArcSin[Csch[u_]] := ArcCsc[Sinh[u]];
ArcCos[Csch[u_]] := ArcSec[Sinh[u]];
ArcTan[Csch[u_]] := ArcCot[Sinh[u]];
ArcCot[Csch[u_]] := ArcTan[Sinh[u]];
ArcSec[Csch[u_]] := ArcCos[Sinh[u]];
ArcCsc[Csch[u_]] := ArcSin[Sinh[u]];

Protect[ArcSin,ArcCos,ArcTan,ArcCot,ArcSec,ArcCsc];


(* Unprotect[ArcTan,ArcCot];
ArcTan[Tan[u_]] := Pi*Mods[Distribute[u/Pi,Plus,Times]];
ArcCot[Tan[u_]] := Pi*Mods[1/2-Distribute[u/Pi,Plus,Times]];
Protect[ArcTan,ArcCot]; *)


(* ::Subsection::Closed:: *)
(*Inverse Hyperbolic Function Simplification Rules*)


Unprotect[ArcSinh,ArcCosh,ArcTanh,ArcCoth,ArcSech,ArcCsch];

ArcSinh[1/u_] := ArcCsch[u];
ArcCosh[1/u_] := ArcSech[u];
ArcTanh[1/u_] := ArcCoth[u];
ArcCoth[1/u_] := ArcTanh[u];
ArcSech[1/u_] := ArcCosh[u];
ArcCsch[1/u_] := ArcSinh[u];

ArcSinh[1/(u_*v_)] := ArcCsch[u*v];
ArcCosh[1/(u_*v_)] := ArcSech[u*v];
ArcTanh[1/(u_*v_)] := ArcCoth[u*v];
ArcCoth[1/(u_*v_)] := ArcTanh[u*v];
ArcSech[1/(u_*v_)] := ArcCosh[u*v];
ArcCsch[1/(u_*v_)] := ArcSinh[u*v];

ArcSinh[Coth[u_]] := ArcCsch[Tanh[u]];
ArcCosh[Coth[u_]] := ArcSech[Tanh[u]];
ArcTanh[Coth[u_]] := ArcCoth[Tanh[u]];
ArcCoth[Coth[u_]] := ArcTanh[Tanh[u]];
ArcSech[Coth[u_]] := ArcCosh[Tanh[u]];
ArcCsch[Coth[u_]] := ArcSinh[Tanh[u]];

ArcSinh[Sech[u_]] := ArcCsch[Cosh[u]];
ArcCosh[Sech[u_]] := ArcSech[Cosh[u]];
ArcTanh[Sech[u_]] := ArcCoth[Cosh[u]];
ArcCoth[Sech[u_]] := ArcTanh[Cosh[u]];
ArcSech[Sech[u_]] := ArcCosh[Cosh[u]];
ArcCsch[Sech[u_]] := ArcSinh[Cosh[u]];

ArcSinh[Csch[u_]] := ArcCsch[Sinh[u]];
ArcCosh[Csch[u_]] := ArcSech[Sinh[u]];
ArcTanh[Csch[u_]] := ArcCoth[Sinh[u]];
ArcCoth[Csch[u_]] := ArcTanh[Sinh[u]];
ArcSech[Csch[u_]] := ArcCosh[Sinh[u]];
ArcCsch[Csch[u_]] := ArcSinh[Sinh[u]];

ArcSinh[Cot[u_]] := ArcCsch[Tan[u]];
ArcCosh[Cot[u_]] := ArcSech[Tan[u]];
ArcTanh[Cot[u_]] := ArcCoth[Tan[u]];
ArcCoth[Cot[u_]] := ArcTanh[Tan[u]];
ArcSech[Cot[u_]] := ArcCosh[Tan[u]];
ArcCsch[Cot[u_]] := ArcSinh[Tan[u]];

ArcSinh[Sec[u_]] := ArcCsch[Cos[u]];
ArcCosh[Sec[u_]] := ArcSech[Cos[u]];
ArcTanh[Sec[u_]] := ArcCoth[Cos[u]];
ArcCoth[Sec[u_]] := ArcTanh[Cos[u]];
ArcSech[Sec[u_]] := ArcCosh[Cos[u]];
ArcCsch[Sec[u_]] := ArcSinh[Cos[u]];

ArcSinh[Csc[u_]] := ArcCsch[Sin[u]];
ArcCosh[Csc[u_]] := ArcSech[Sin[u]];
ArcTanh[Csc[u_]] := ArcCoth[Sin[u]];
ArcCoth[Csc[u_]] := ArcTanh[Sin[u]];
ArcSech[Csc[u_]] := ArcCosh[Sin[u]];
ArcCsch[Csc[u_]] := ArcSinh[Sin[u]];

Protect[ArcSinh,ArcCosh,ArcTanh,ArcCoth,ArcSech,ArcCsch];


(* Unprotect[ArcTanh,ArcCoth];
ArcTanh[Tanh[u_]] := I*Pi*Mods[Distribute[-I*u/Pi,Plus,Times]];
ArcCoth[Tanh[u_]] := -I*Pi*Mods[1/2-Distribute[-I*u/Pi,Plus,Times]];
Protect[ArcTanh,ArcCoth]; *)
(* ::Package:: *)

(* ShowSteps controls both the use of special definitions when defining rules AND the display of
	steps when simplify expressions. *) 
ShowSteps=False;
SimplifyFlag=True;


(* If func is a function defined using properly defined transformation rules,
   StepFunction[func] modifies the rules to display steps when the control
   variable ShowSteps is True. *)
StepFunction[func_] :=
  Block[{lst,num=0,ShowStep,SimplifyFlag},
  lst=Map[Function[ModifyRule[num++,#, SimplifyFlag]],DownValues[func]];
  ClearDownValues[func];
  SetDownValues[func,lst];
  Unprotect[func]]

StepFunction[func1_,func2_] :=
  Block[{lst,num=0,ShowStep,SimplifyFlag},
  lst=Map[Function[ModifyRule[num++,#, SimplifyFlag]],DownValues[func1]];
  ClearDownValues[func1];
  SetDownValues[func2,ReplaceAll[lst,{func1->func2}]]]


(* rule is a rule as an expression of the form RuleDelayed[lhs,rhs].
	flag has the value SimplifyFlag.  ModifyRule[rule,flag] 
	formats the rule's left hand side as a string (lhsStrg) in InputForm,
	formats the rule's conditions as a string (condStrg) in StandardForm,
	formats the rule's let statements as a string (letStrg) in StandardForm,
	splices the conditions string and let strings together as a string (condStrg) in StandardForm,
	formats the rule's right hand side as a string (rhsStrg) in InputForm,
	then it returns rule with the body replaced with the expression 
		ShowStep[num,condStrg,lhsStrg,rhsStrg,rhs] /; flag. *)
ModifyRule[num_,rule_RuleDelayed, flag_] :=
    Module[{lhsStrg,rhsStrg,condStrg,letStrg},
  If[Not[FreeQ[Hold[rule],ShowStep]] || 
     Not[FreeQ[Hold[rule],SubstInertSineForTrigOfLinear]] || 
     Not[FreeQ[Hold[rule],Defer]] || 
     Not[FreeQ[Hold[rule],Preprocess]],
    rule,
  lhsStrg=FormatLhs[rule];
  If[rule[[2,0]]===Condition,
    condStrg=FormatConditions[Extract[rule,{2,2},Defer]];
    If[rule[[2,1,0]]===Module || rule[[2,1,0]]===Block,
      letStrg=FormatLets[Extract[rule,{2,1,1},Defer]];
      If[rule[[2,1,2,0]]===Condition,
        condStrg=SpliceConditionString[condStrg,letStrg,FormatConditions[Extract[rule,{2,1,2,2},Defer]]];
		rhsStrg=FormatRhs[Extract[rule,{2,1,2,1},Defer]];
        WrapCondition[ReplacePart[rule, ShowStep[num,condStrg,lhsStrg,rhsStrg,Extract[rule,{2,1,2,1},Hold]], {2,1,2,1}], flag],
      condStrg=SpliceConditionString[condStrg,letStrg,""];
	  rhsStrg=FormatRhs[Extract[rule,{2,1,2},Defer]];
      WrapCondition[ReplacePart[rule, ShowStep[num,condStrg,lhsStrg,rhsStrg,Extract[rule,{2,1,2},Hold]], {2,1,2}], flag]],
    condStrg=SpliceConditionString[condStrg,"",""];
	rhsStrg=FormatRhs[Extract[rule,{2,1},Defer]];
    WrapCondition[ReplacePart[rule, ShowStep[num,condStrg,lhsStrg,rhsStrg,Extract[rule,{2,1},Hold]], {2,1}], flag]],
  If[rule[[2,0]]===Module || rule[[2,0]]===Block,
    letStrg=FormatLets[Extract[rule,{2,1},Defer]];
    If[rule[[2,2,0]]===Condition,
      condStrg=FormatConditions[Extract[rule,{2,2,2},Defer]];
      condStrg=SpliceConditionString["",letStrg,condStrg];
	  rhsStrg=FormatRhs[Extract[rule,{2,2,1},Defer]];
      WrapCondition[ReplacePart[rule, ShowStep[num,condStrg,lhsStrg,rhsStrg,Extract[rule,{2,2,1},Hold]], {2,2,1}], flag],
    condStrg=SpliceConditionString["",letStrg,""];
	rhsStrg=FormatRhs[Extract[rule,{2,2},Defer]];
    WrapCondition[ReplacePart[rule, ShowStep[num,condStrg,lhsStrg,rhsStrg,Extract[rule,{2,2},Hold]], {2,2}], flag]],
  rhsStrg=FormatRhs[Extract[rule,2,Defer]];
  WrapCondition[ReplacePart[rule, ShowStep[num,"",lhsStrg,rhsStrg,Extract[rule,2,Hold]], 2], flag]]]]]


WrapCondition[rule_RuleDelayed,condition_] :=
  ReplacePart[ReplacePart[rule,Append[Extract[rule,{2},Hold],condition],{2}],Condition,{2,0}]


(* rule is a rule as an expression of the form RuleDelayed[lhs,rhs].
	FormatLhs[rule] returns returns a string for the lhs of the rule in InputForm with the 
	pattern tags "_." and "_" removed from the dummy variable names. *) 
FormatLhs[rule_] :=
  Module[{lhs=Extract[rule,{1,1},Defer],conditions,func,var},
  ( If[rule[[2,0]]===Condition,
	  conditions=Extract[rule,{2,2},Defer];
	  If[conditions[[1,0]]===FunctionOfQ,
	    func=conditions[[1,1]];
	    var=conditions[[1,2]];
        lhs=ReplaceVariable[lhs,var,func],
	  If[conditions[[1,0]]===And && MemberQ[conditions,FunctionOfQ,{3},Heads->True],
	    func=conditions[[1,Position[conditions,FunctionOfQ,{3},1][[1,2]],1]];
	    var=conditions[[1,Position[conditions,FunctionOfQ,{3},1][[1,2]],2]];
        lhs=ReplaceVariable[lhs,var,func]]]] );
  DropDefer[StringReplace[ToString[lhs, InputForm],{"_Symbol"->"", "_."->"", "_"->""}]]]

(* ReplaceVariable[lhs,var,func] returns lhs with the var replaced by f[func] *)
ReplaceVariable[lhs_,var_,func_] :=
  Block[{f},
  If[PatternEqualQ[lhs[[1,1]],var],
    ReplacePart[lhs,f[func],{1,1}],
  If[PatternEqualQ[lhs[[1,1,1]],var],
    ReplacePart[lhs,f[func],{1,1,1}],
  If[PatternEqualQ[lhs[[1,1,2]],var],
    ReplacePart[lhs,f[func],{1,1,2}],
  If[PatternEqualQ[lhs[[1,1,3]],var],
    ReplacePart[lhs,f[func],{1,1,3}],
  Print["Function of expression variable not found: ",lhs," ",var," ",func];
  Abort[]]]]]]

PatternEqualQ[pattern_,var_] :=
  Head[pattern]===Pattern && pattern[[1]]===var


(* rhs is an expression of the form Defer[...] where ... is the right hand side of a rule.
	FormatRhs[rhs] returns a string for the rhs of the rule in InputForm. *)
FormatRhs[rhs_] :=
  Block[{SubstFor,Rt,f},
  DropDefer[ToString[ReplaceAll[rhs,{
		SubstFor[v_,u_,x_] -> f[x],
		Rt[u_,2] -> Sqrt[u],
		Rt[u_,n_] -> u^(1/n)
  }], InputForm]]]


(* strg is a string of the form "Defer[...]".  DropDefer[strg] returns the string "...", with 
	all occurrences of the string "Int[" replaced with "Integrate" and "Dif" with "D" so they will
	display using integral and differential signs when the string is converted to StandardForm. *)
DropDefer[strg_] :=
  StringDrop[StringDrop[StringReplace[StringReplace[strg,{
		"Int["->"Integrate[", 
		"Dif["->"D[", 
		"sin[(c) + (d)*(x)]^(-1)"->"Csc[c + d*x]", 
		"sin[(c) + (d)*(x)]^(-2)"->"Csc[c + d*x]^2", 
		"sin[Pi/2 + "->"Cos["}], 
		{"sin["->"Sin["}],6],-1]


(* conditions is an expression comprising the conditions on a rule.  FormatConditions[conditions]
	replaces expressions of the form Not[FalseQ[u]] with u in conditions,
	deletes expressions of the form FreeQ[u,x], FunctionOfQ[u,v,x] and EasyDQ[u,x] in conditions,
	replaces expressions of the form Rt[u,2] with Sqrt[u] and Rt[u,n] with u^(1/n) in conditions,
	and then returns the conditions as a string formatted in Mathematica's StandardForm. *)
FormatConditions[conditions_] :=
  If[conditions[[1,0]]===Not && conditions[[1,1,0]]===FalseQ,
    FormatConditions[Extract[conditions,{1,1,1},Defer]],
  If[conditions[[1,0]]===FreeQ,
    "",
  If[conditions[[1,0]]===And && MemberQ[conditions,FreeQ,{3},Heads->True],
    FormatConditions[DeleteCondition[FreeQ,conditions]],
  If[conditions[[1,0]]===FunctionOfQ,
    "",
  If[conditions[[1,0]]===And && MemberQ[conditions,FunctionOfQ,{3},Heads->True],
    FormatConditions[DeleteCondition[FunctionOfQ,conditions]],
  If[conditions[[1,0]]===EasyDQ,
    "",
  If[conditions[[1,0]]===And && MemberQ[conditions,EasyDQ,{3},Heads->True],
    FormatConditions[DeleteCondition[EasyDQ,conditions]],
  ToConditionString[conditions] <> ","]]]]]]]

DeleteCondition[func_,conditions_] :=
  If[Quiet[Head[Extract[conditions,{1,3},Defer]]===Extract],
    If[Position[conditions,func,{3},1][[1,2]]==1,
      Extract[conditions,{1,2},Defer],
    Extract[conditions,{1,1},Defer]],
  Delete[conditions,{1,Position[conditions,func,{3},1][[1,2]]}]] 


(* let is a body of a Module or Block statement.  FormatLets[let] returns the assignment as a
	string in the form "var=expression, then" formatted in Mathematica's StandardForm. *)
FormatLets[let_] :=
  If[MatchQ[let,Defer[{u_}]],
    If[let[[1,1,0]]===Set &&
		  let[[1,1,2,0]]===Block &&
		  Extract[let,{1,1,2,1},Defer]===Defer[{ShowSteps=False}],
      If[let[[1,1,2,2,0]]===Simplify,
        ToConditionString[Extract[let,{1,1,1},Defer]] <> "=" <>
        ToConditionString[Extract[let,{1,1,2,2,1},Defer]] <> ", then",
      ToConditionString[Extract[let,{1,1,1},Defer]] <> "=" <>
      ToConditionString[Extract[let,{1,1,2,2},Defer]] <> ", then"],
    ToConditionString[Extract[let,{1,1},Defer]] <> ", then"],
  ToConditionString[let] <> ", then"]


(* conditions is an expression comprising the conditions on a rule.  ToConditionString[conditions]
	replace calls in the conditions on the function Rt[u,2] with Sqrt[u] and Rt[u,n] with u^(1/n), 
	and then returns the conditions as a string formatted in Mathematica's StandardForm. *)
ToConditionString[conditions_] :=
  ToString[ReplaceAll[conditions,{
    Rt[u_,2]->Sqrt[u],
    Rt[u_,n_]->u^(1/n)
      }],StandardForm]


(* cond1, lets and cond2 are strings.  SpliceConditionString[cond1,lets,cond2] concatenates and
	returns the condition and let strings along with the "if" and "let" to make a human readable
	condition string. *)
SpliceConditionString[cond1_,lets_,cond2_] :=
  If[cond2==="",
    If[lets==="",
      If[cond1==="",
        "",
      "If " <> cond1],
    If[cond1==="",
      "Let " <> lets,
    "If " <> cond1 <> " let " <> lets]],
  If[lets==="",
    If[cond1==="",
      "If " <> cond2,
    "If " <> cond1 <> " if " <> cond2],
  If[cond1==="",
    "Let " <> lets <> " if " <> cond2,
  "If " <> cond1 <> " let " <> lets <> " if " <> cond2]]]  


(* condStrg, lhsStrg and rhsStrg are the strings required to display the rule being applied.
	rhs is the expression on the right side of the rule (i.e. the consequent of the rule).
	If ShowSteps is True, ShowStep[num,condStrg,lhsStrg,rhsStrg,rhs] displays the rule being applied, 
	sets SimplifyFlag to False to turn off further simplification, and release the hold on the rhs 
	of the rule. *)
ShowStep[condStrg_,lhsStrg_,rhsStrg_,rhs_] := (
  If[IntegerQ[StepCounter], StepCounter++];
  If[ShowSteps,
    Print["Rule: ",condStrg];
    Print["  ",ToExpression["Defer["<>lhsStrg<>"]"]," \[LongRightArrow] ",ToExpression["Defer["<>rhsStrg<>"]"]];
    Block[{SimplifyFlag=False},
    ReleaseHold[rhs]],
  ReleaseHold[rhs]] )

ShowStep[num_,condStrg_,lhsStrg_,rhsStrg_,rhs_] := (
  If[IntegerQ[StepCounter], StepCounter++];
  If[ShowSteps,
    Print["Rule ",num,": ",condStrg];
    Print["  ",ToExpression["Defer["<>lhsStrg<>"]"]," \[LongRightArrow] ",ToExpression["Defer["<>rhsStrg<>"]"]];
    Block[{SimplifyFlag=False},
    ReleaseHold[rhs]],
  ReleaseHold[rhs]] )


(* Note: Clear[func] also eliminates 2-D display of functions like Integrate. *) 
ClearDownValues[func_Symbol] := (
  Unprotect[func];
  DownValues[func]={};
  Protect[func])


SetDownValues[func_Symbol,lst_List] := (
  Unprotect[func];
  DownValues[func]=Take[lst,Min[529,Length[lst]]];
  Scan[Function[ReplacePart[ReplacePart[#,#[[1,1]],1],SetDelayed,0]],Drop[lst,Min[529,Length[lst]]]];
  Protect[func])
(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Code:: *)
Int[u_.*(a_.*v_^m_)^p_, x_Symbol] :=
  Module[{q=FractionalPart[p]},
  a^(p-q)*(a*v^m)^q/v^(m*q)*Int[u*v^(m*p),x]] /;
FreeQ[{a,m,p},x] && IntegerQ[m*p] && 
  Not[MatchQ[u*(a*v^m)^p,(Sec[c_.+d_.*x]^2)^p /; FreeQ[{c,d},x] && p>0]] && 
  Not[MatchQ[u*(a*v^m)^p,(Csc[c_.+d_.*x]^2)^p /; FreeQ[{c,d},x] && p>0]] && 
  Not[MatchQ[u*(a*v^m)^p,(Sech[c_.+d_.*x]^2)^p /; FreeQ[{c,d},x] && p>0]] && 
  Not[MatchQ[u*(a*v^m)^p,(-Csch[c_.+d_.*x]^2)^p /; FreeQ[{c,d},x] && p>0]]


(* ::Code:: *)
Int[u_.*(a_.*v_^m_.*w_^n_.)^p_, x_Symbol] :=
  Module[{q=FractionalPart[p]},
  a^(p-q)*(a*v^m*w^n)^q/(v^(m*q)*w^(n*q))*Int[u*v^(m*p)*w^(n*p),x]] /;
FreeQ[{a,m,n,p},x] && IntegerQ[m*p] && IntegerQ[n*p]


(* ::Code:: *)
Int[u_*x_^m_.,x_Symbol] :=
  Dist[1/(m+1),Subst[Int[Regularize[SubstFor[x^(m+1),u,x],x],x],x,x^(m+1)]] /;
FreeQ[m,x] && NonzeroQ[m+1] && FunctionOfQ[x^(m+1),u,x]


(* ::Code:: *)
Int[u_*Log[v_],x_Symbol] :=
  Module[{w=DerivativeDivides[v,u*(1-v),x]},
  w*PolyLog[2,1-v] /;
 Not[FalseQ[w]]]


(* ::Code:: *)
Int[u_*PolyLog[n_,v_],x_Symbol] :=
  Module[{w=DerivativeDivides[v,u*v,x]},
  w*PolyLog[n+1,v] /;
 Not[FalseQ[w]]] /;
FreeQ[n,x]


(* ::Code:: *)
If[ShowSteps,

Int[u_*f_[a1___,g_[b1___,h_[c1___,v_,c2___],b2___],a2___],x_Symbol] :=
  Module[{z=DerivativeDivides[v,u,x]},
  ShowStep["","Int[f[g[x]]*g'[x],x]","Subst[Int[f[x],x],x,g[x]]",Hold[
  Dist[z,Subst[Int[f[a1,g[b1,h[c1,x,c2],b2],a2],x],x,v]]]] /;
 Not[FalseQ[z]]] /;
SimplifyFlag && FreeQ[{a1,a2,b1,b2,c1,c2,f,g},x],

Int[u_*f_[a1___,g_[b1___,h_[c1___,v_,c2___],b2___],a2___],x_Symbol] :=
  Module[{z=DerivativeDivides[v,u,x]},
  Dist[z,Subst[Int[f[a1,g[b1,h[c1,x,c2],b2],a2],x],x,v]] /;
 Not[FalseQ[z]]] /;
SimplifyFlag && FreeQ[{a1,a2,b1,b2,c1,c2,f,g},x]]


(* ::Code:: *)
If[ShowSteps,

Int[u_*f_[a1___,g_[b1___,v_,b2___],a2___],x_Symbol] :=
  Module[{z=DerivativeDivides[v,u,x]},
  ShowStep["","Int[f[g[x]]*g'[x],x]","Subst[Int[f[x],x],x,g[x]]",Hold[
  Dist[z,Subst[Int[f[a1,g[b1,x,b2],a2],x],x,v]]]] /;
 Not[FalseQ[z]]] /;
SimplifyFlag && FreeQ[{a1,a2,b1,b2,f,g},x],

Int[u_*f_[a1___,g_[b1___,v_,b2___],a2___],x_Symbol] :=
  Module[{z=DerivativeDivides[v,u,x]},
  Dist[z,Subst[Int[f[a1,g[b1,x,b2],a2],x],x,v]] /;
 Not[FalseQ[z]]] /;
SimplifyFlag && FreeQ[{a1,a2,b1,b2,f,g},x]]


(* ::Code:: *)
If[ShowSteps,

Int[u_*f_[a1___,v_,a2___],x_Symbol] :=
  Module[{z=DerivativeDivides[v,u,x]},
  ShowStep["","Int[f[g[x]]*g'[x],x]","Subst[Int[f[x],x],x,g[x]]",Hold[
  Dist[z,Subst[Int[f[a1,x,a2],x],x,v]]]] /;
 Not[FalseQ[z]]] /;
SimplifyFlag && FreeQ[{a1,a2,f},x],

Int[u_*f_[a1___,v_,a2___],x_Symbol] :=
  Module[{z=DerivativeDivides[v,u,x]},
  Dist[z,Subst[Int[f[a1,x,a2],x],x,v]] /;
 Not[FalseQ[z]]] /;
SimplifyFlag && FreeQ[{a1,a2,f},x]]


(* ::Code:: *)
If[ShowSteps,

Int[u_*v_,x_Symbol] :=
  Module[{z=DerivativeDivides[v,u,x]},
  ShowStep["","Int[g[x]*g'[x],x]","Subst[Int[x,x],x,g[x]]",Hold[
  Dist[z,Subst[Int[x,x],x,v]]]] /;
 Not[FalseQ[z]]] /;
SimplifyFlag,

Int[u_*v_,x_Symbol] :=
  Module[{z=DerivativeDivides[v,u,x]},
  Dist[z,Subst[Int[x,x],x,v]] /;
 Not[FalseQ[z]]]]


(* ::Code:: *)
If[ShowSteps,

Int[u1_^n_*u2_^n_*v_,x_Symbol] :=
  Module[{w=DerivativeDivides[u1*u2,v,x]},
  ShowStep["If nonzero[n+1],","Int[f[x]^n*g[x]^n*D[f[x]*g[x],x],x]",
							  "f[x]^(n+1)*g[x]^(n+1)/(n+1)",Hold[
  w*u1^(n+1)*u2^(n+1)/(n+1)]] /;
 Not[FalseQ[w]]] /;
SimplifyFlag && FreeQ[n,x] && NonzeroQ[n+1] && (SumQ[v] || NonsumQ[u1*u2] || NonzeroQ[n-1]),

Int[u1_^n_*u2_^n_*v_,x_Symbol] :=
  Module[{w=DerivativeDivides[u1*u2,v,x]},
  w*u1^(n+1)*u2^(n+1)/(n+1) /;
 Not[FalseQ[w]]] /;
FreeQ[n,x] && NonzeroQ[n+1] && (SumQ[v] || NonsumQ[u1*u2] || NonzeroQ[n-1])]


(* ::Code:: *)
If[ShowSteps,

Int[x_^m_.*u_^n_.*v_,x_Symbol] :=
  Module[{w=DerivativeDivides[x*u,x^(m-n)*v,x]},
  ShowStep["If nonzero[n+1],","Int[f[x]^n*g[x]^n*D[f[x]*g[x],x],x]",
							  "f[x]^(n+1)*g[x]^(n+1)/(n+1)",Hold[
  w*x^(n+1)*u^(n+1)/(n+1)]] /;
 Not[FalseQ[w]]] /;
SimplifyFlag && FreeQ[n,x] && NonzeroQ[n+1] && (SumQ[v] || NonsumQ[u] || NonzeroQ[n-1]),

Int[x_^m_.*u_^n_.*v_,x_Symbol] :=
  Module[{w=DerivativeDivides[x*u,x^(m-n)*v,x]},
  w*x^(n+1)*u^(n+1)/(n+1) /;
 Not[FalseQ[w]]] /;
FreeQ[n,x] && NonzeroQ[n+1] && (SumQ[v] || NonsumQ[u] || NonzeroQ[n-1])]


(* ::Code:: *)
If[ShowSteps,

Int[x_^m_.*u_^n_.*v_,x_Symbol] :=
  Module[{w=DerivativeDivides[u,v,x]},
  ShowStep["If nonzero[n+1],","Int[x^m*f[x]^n*f'[x],x]",
				"x^m*f[x]^(n+1)/(n+1) - m/(n+1)*Int[x^(m-1)*f[x]^(n+1),x]",Hold[
  w*x^m*u^(n+1)/(n+1) -
    Dist[m/(n+1)*w,Int[x^(m-1)*u^(n+1),x]]]] /;
 Not[FalseQ[w]]] /;
SimplifyFlag && FreeQ[n,x] && NonzeroQ[n+1] && IntegerQ[m] && m>0 &&
	(SumQ[v] || NonsumQ[u] || NonzeroQ[n-1]),

Int[x_^m_.*u_^n_.*v_,x_Symbol] :=
  Module[{w=DerivativeDivides[u,v,x]},
  w*x^m*u^(n+1)/(n+1) -
    Dist[m/(n+1)*w,Int[x^(m-1)*u^(n+1),x]] /;
 Not[FalseQ[w]]] /;
FreeQ[n,x] && NonzeroQ[n+1] && IntegerQ[m] && m>0 && (SumQ[v] || NonsumQ[u] || NonzeroQ[n-1])]


(* ::Code:: *)
Int[u_*v_,x_Symbol] :=
  Module[{w=Block[{ShowSteps=False,StepCounter=Null}, Int[v,x]]},
  Subst[Int[Regularize[SubstFor[w,u,x],x],x],x,w] /;
 FunctionOfQ[w,u,x]] /;
SumQ[v] && PolynomialQ[v,x]


(* ::Code:: *)
Int[u_*(a_.+b_.*x_)^m_.,x_Symbol] :=
  Dist[1/(b*(m+1)),Subst[Int[Regularize[SubstFor[(a+b*x)^(m+1),u,x],x],x],x,(a+b*x)^(m+1)]] /;
FreeQ[{a,b,m},x] && NonzeroQ[m+1] && FunctionOfQ[(a+b*x)^(m+1),u,x] (* && NonsumQ[u] *)


(* ::Code:: *)
If[ShowSteps,

Int[u_/x_,x_Symbol] :=
  Module[{lst=PowerVariableExpn[u,0,x]},
  ShowStep["","Int[f[(c*x)^n]/x,x]","Subst[Int[f[x]/x,x],x,(c*x)^n]/n",Hold[
  Dist[1/lst[[2]],Subst[Int[Regularize[lst[[1]]/x,x],x],x,(lst[[3]]*x)^lst[[2]]]]]] /;
 Not[FalseQ[lst]] && NonzeroQ[lst[[2]]]] /;
SimplifyFlag && NonsumQ[u] && Not[RationalFunctionQ[u,x]],

Int[u_/x_,x_Symbol] :=
  Module[{lst=PowerVariableExpn[u,0,x]},
  Dist[1/lst[[2]],Subst[Int[Regularize[lst[[1]]/x,x],x],x,(lst[[3]]*x)^lst[[2]]]] /;
 Not[FalseQ[lst]] && NonzeroQ[lst[[2]]]] /;
NonsumQ[u] && Not[RationalFunctionQ[u,x]]]


(* ::Code:: *)
If[ShowSteps,

Int[u_*x_^m_.,x_Symbol] :=
  Module[{lst=PowerVariableExpn[u,m+1,x]},
  ShowStep["If g=GCD[m+1,n]>1,","Int[x^m*f[x^n],x]",
		"Subst[Int[x^((m+1)/g-1)*f[x^(n/g)],x],x,x^g]/g",Hold[
  Dist[1/lst[[2]],Subst[Int[Regularize[lst[[1]]/x,x],x],x,(lst[[3]]*x)^lst[[2]]]]]] /;
 NotFalseQ[lst] && NonzeroQ[lst[[2]]-m-1]] /;
SimplifyFlag && IntegerQ[m] && m!=-1 && NonsumQ[u] && (m>0 || Not[AlgebraicFunctionQ[u,x]]),

Int[u_*x_^m_.,x_Symbol] :=
  Module[{lst=PowerVariableExpn[u,m+1,x]},
  Dist[1/lst[[2]],Subst[Int[Regularize[lst[[1]]/x,x],x],x,(lst[[3]]*x)^lst[[2]]]] /;
 NotFalseQ[lst] && NonzeroQ[lst[[2]]-m-1]] /;
IntegerQ[m] && m!=-1 && NonsumQ[u] && (m>0 || Not[AlgebraicFunctionQ[u,x]])]


(* ::Code:: *)
Int[u_,x_Symbol] :=
  Int[NormalForm[Expand[TrigReduce[u],x],x],x] /;
ProductQ[u] && Catch[Scan[Function[If[Not[LinearSinCosQ[#,x]],Throw[False]]],u];True]


(* ::Code:: *)
LinearSinCosQ[u_^n_.,x_Symbol] :=
  IntegerQ[n] && n>0 && (SinQ[u] || CosQ[u]) && LinearQ[u[[1]],x]


(* ::Code:: *)
Int[u_,x_Symbol] :=
  Int[NormalForm[Expand[TrigReduce[u],x],x],x] /;
ProductQ[u] && Catch[Scan[Function[If[Not[LinearSinhCoshQ[#,x]],Throw[False]]],u];True]


(* ::Code:: *)
LinearSinhCoshQ[u_^n_.,x_Symbol] :=
  IntegerQ[n] && n>0 && (SinhQ[u] || CoshQ[u]) && LinearQ[u[[1]],x]


(* ::Code:: *)
Int[u_*Sin[c_.*(a_.+b_.*x_)],x_Symbol] :=
  -Dist[1/(b*c),Subst[Int[Regularize[SubstFor[Cos[c*(a+b*x)],u,x],x],x],x,Cos[c*(a+b*x)]]] /;
FreeQ[{a,b,c},x] && FunctionOfQ[Cos[c*(a+b*x)],u,x]


(* ::Code:: *)
Int[u_*Cos[c_.*(a_.+b_.*x_)],x_Symbol] :=
  Dist[1/(b*c),Subst[Int[Regularize[SubstFor[Sin[c*(a+b*x)],u,x],x],x],x,Sin[c*(a+b*x)]]] /;
FreeQ[{a,b,c},x] && FunctionOfQ[Sin[c*(a+b*x)],u,x]


(* ::Code:: *)
Int[u_*Tan[c_.*(a_.+b_.*x_)],x_Symbol] :=
  -Dist[1/(b*c),Subst[Int[Regularize[SubstFor[Cos[c*(a+b*x)],u,x]/x,x],x],x,Cos[c*(a+b*x)]]] /;
FreeQ[{a,b,c},x] && FunctionOfQ[Cos[c*(a+b*x)],u,x]


(* ::Code:: *)
Int[u_*Cot[c_.*(a_.+b_.*x_)],x_Symbol] :=
  Dist[1/(b*c),Subst[Int[Regularize[SubstFor[Sin[c*(a+b*x)],u,x]/x,x],x],x,Sin[c*(a+b*x)]]] /;
FreeQ[{a,b,c},x] && FunctionOfQ[Sin[c*(a+b*x)],u,x]


(* ::Code:: *)
Int[u_*Sec[c_.*(a_.+b_.*x_)]^n_,x_Symbol] :=
  Dist[1/(b*c),
    Subst[Int[Regularize[(1+x^2)^((n-2)/2)*SubstFor[Tan[c*(a+b*x)],u,x],x],x],x,Tan[c*(a+b*x)]]] /;
FreeQ[{a,b,c},x] && EvenQ[n] && FunctionOfQ[Tan[c*(a+b*x)],u,x] && NonsumQ[u]


(* ::Code:: *)
Int[u_*Csc[c_.*(a_.+b_.*x_)]^n_,x_Symbol] :=
  -Dist[1/(b*c),
    Subst[Int[Regularize[(1+x^2)^((n-2)/2)*SubstFor[Cot[c*(a+b*x)],u,x],x],x],x,Cot[c*(a+b*x)]]] /;
FreeQ[{a,b,c},x] && EvenQ[n] && FunctionOfQ[Cot[c*(a+b*x)],u,x] && NonsumQ[u]


(* ::Code:: *)
If[ShowSteps,

Int[u_,x_Symbol] :=
  Module[{v=FunctionOfTrig[u,x]},
  ShowStep["","Int[f[Sin[a+b*x]]*Cos[a+b*x],x]","Subst[Int[f[x],x],x,Sin[a+b*x]]/b",Hold[
  Dist[1/Coefficient[v,x,1],Subst[Int[Regularize[SubstFor[Sin[v],u/Cos[v],x],x],x],x,Sin[v]]]]] /;
 NotFalseQ[v] && FunctionOfQ[Sin[v],u/Cos[v],x]] /;
SimplifyFlag,

Int[u_,x_Symbol] :=
  Module[{v=FunctionOfTrig[u,x]},
  Dist[1/Coefficient[v,x,1],Subst[Int[Regularize[SubstFor[Sin[v],u/Cos[v],x],x],x],x,Sin[v]]] /;
 NotFalseQ[v] && FunctionOfQ[Sin[v],u/Cos[v],x]]]


(* ::Code:: *)
If[ShowSteps,

Int[u_,x_Symbol] :=
  Module[{v=FunctionOfTrig[u,x]},
  ShowStep["","Int[f[Cos[a+b*x]]*Sin[a+b*x],x]","-Subst[Int[f[x],x],x,Cos[a+b*x]]/b",Hold[
  -Dist[1/Coefficient[v,x,1],Subst[Int[Regularize[SubstFor[Cos[v],u/Sin[v],x],x],x],x,Cos[v]]]]] /;
 NotFalseQ[v] && FunctionOfQ[Cos[v],u/Sin[v],x]] /;
SimplifyFlag,

Int[u_,x_Symbol] :=
  Module[{v=FunctionOfTrig[u,x]},
  -Dist[1/Coefficient[v,x,1],Subst[Int[Regularize[SubstFor[Cos[v],u/Sin[v],x],x],x],x,Cos[v]]] /;
 NotFalseQ[v] && FunctionOfQ[Cos[v],u/Sin[v],x]]]


(* ::Code:: *)
Int[u_*Sec[a_.+b_.*x_]*Csc[a_.+b_.*x_],x_Symbol] :=
  Dist[1/b,Subst[Int[Regularize[SubstFor[Log[Tan[a+b*x]],u,x],x],x],x,Log[Tan[a+b*x]]]] /;
FreeQ[{a,b},x] && FunctionOfQ[Log[Tan[a+b*x]],u,x]


(* ::Code:: *)
Int[u_*Sec[a_.+b_.*x_]*Csc[a_.+b_.*x_],x_Symbol] :=
  -Dist[1/b,Subst[Int[Regularize[SubstFor[Log[Cot[a+b*x]],u,x],x],x],x,Log[Cot[a+b*x]]]] /;
FreeQ[{a,b},x] && FunctionOfQ[Log[Cot[a+b*x]],u,x]


(* ::Code:: *)
Int[u_*Cos[a_.+b_.*x_],x_Symbol] :=
  Dist[2/b,Subst[Int[Regularize[SubstFor[Cos[a/2+b/2*x]*Sin[a/2+b/2*x],u,x],x],x],x,
				Cos[a/2+b/2*x]*Sin[a/2+b/2*x]]] /;
NonsumQ[u] && FreeQ[{a,b},x] && FunctionOfQ[Cos[a/2+b/2*x]*Sin[a/2+b/2*x],u,x]


(* ::Code:: *)
Int[u_*Sinh[c_.*(a_.+b_.*x_)],x_Symbol] :=
  Dist[1/(b*c),Subst[Int[Regularize[SubstFor[Cosh[c*(a+b*x)],u,x],x],x],x,Cosh[c*(a+b*x)]]] /;
FreeQ[{a,b,c},x] && FunctionOfQ[Cosh[c*(a+b*x)],u,x]


(* ::Code:: *)
Int[u_*Cosh[c_.*(a_.+b_.*x_)],x_Symbol] :=
  Dist[1/(b*c),Subst[Int[Regularize[SubstFor[Sinh[c*(a+b*x)],u,x],x],x],x,Sinh[c*(a+b*x)]]] /;
FreeQ[{a,b,c},x] && FunctionOfQ[Sinh[c*(a+b*x)],u,x]


(* ::Code:: *)
Int[u_*Tanh[c_.*(a_.+b_.*x_)],x_Symbol] :=
  Dist[1/(b*c),Subst[Int[Regularize[SubstFor[Cosh[c*(a+b*x)],u,x]/x,x],x],x,Cosh[c*(a+b*x)]]] /;
FreeQ[{a,b,c},x] && FunctionOfQ[Cosh[c*(a+b*x)],u,x]


(* ::Code:: *)
Int[u_*Coth[c_.*(a_.+b_.*x_)],x_Symbol] :=
  Dist[1/(b*c),Subst[Int[Regularize[SubstFor[Sinh[c*(a+b*x)],u,x]/x,x],x],x,Sinh[c*(a+b*x)]]] /;
FreeQ[{a,b,c},x] && FunctionOfQ[Sinh[c*(a+b*x)],u,x]


(* ::Code:: *)
Int[u_*Sech[c_.*(a_.+b_.*x_)]^n_,x_Symbol] :=
  Dist[1/(b*c),
    Subst[Int[Regularize[(1-x^2)^((n-2)/2)*SubstFor[Tanh[c*(a+b*x)],u,x],x],x],x,Tanh[c*(a+b*x)]]] /;
FreeQ[{a,b,c},x] && EvenQ[n] && FunctionOfQ[Tanh[c*(a+b*x)],u,x] && NonsumQ[u]


(* ::Code:: *)
Int[u_*Csch[c_.*(a_.+b_.*x_)]^n_,x_Symbol] :=
  -Dist[1/(b*c),
    Subst[Int[Regularize[(-1+x^2)^((n-2)/2)*SubstFor[Coth[c*(a+b*x)],u,x],x],x],x,Coth[c*(a+b*x)]]] /;
FreeQ[{a,b,c},x] && EvenQ[n] && FunctionOfQ[Coth[c*(a+b*x)],u,x] && NonsumQ[u]


(* ::Code:: *)
If[ShowSteps,

Int[u_,x_Symbol] :=
  Module[{v=FunctionOfHyperbolic[u,x]},
  ShowStep["","Int[f[Sinh[a+b*x]]*Cosh[a+b*x],x]","Subst[Int[f[x],x],x,Sinh[a+b*x]]/b",Hold[
  Dist[1/Coefficient[v,x,1],Subst[Int[Regularize[SubstFor[Sinh[v],u/Cosh[v],x],x],x],x,Sinh[v]]]]] /;
 NotFalseQ[v] && FunctionOfQ[Sinh[v],u/Cosh[v],x]] /;
SimplifyFlag,

Int[u_,x_Symbol] :=
  Module[{v=FunctionOfHyperbolic[u,x]},
  Dist[1/Coefficient[v,x,1],Subst[Int[Regularize[SubstFor[Sinh[v],u/Cosh[v],x],x],x],x,Sinh[v]]] /;
 NotFalseQ[v] && FunctionOfQ[Sinh[v],u/Cosh[v],x]]]


(* ::Code:: *)
If[ShowSteps,

Int[u_,x_Symbol] :=
  Module[{v=FunctionOfHyperbolic[u,x]},
  ShowStep["","Int[f[Cosh[a+b*x]]*Sinh[a+b*x],x]","Subst[Int[f[x],x],x,Cosh[a+b*x]]/b",Hold[
  Dist[1/Coefficient[v,x,1],Subst[Int[Regularize[SubstFor[Cosh[v],u/Sinh[v],x],x],x],x,Cosh[v]]]]] /;
 NotFalseQ[v] && FunctionOfQ[Cosh[v],u/Sinh[v],x] (* && Not[FunctionOfQ[Tanh[v],u,x]] *)] /;
SimplifyFlag,

Int[u_,x_Symbol] :=
  Module[{v=FunctionOfHyperbolic[u,x]},
  Dist[1/Coefficient[v,x,1],Subst[Int[Regularize[SubstFor[Cosh[v],u/Sinh[v],x],x],x],x,Cosh[v]]] /;
 NotFalseQ[v] && FunctionOfQ[Cosh[v],u/Sinh[v],x] (* && Not[FunctionOfQ[Tanh[v],u,x]] *)]]


(* ::Code:: *)
Int[u_*Sech[a_.+b_.*x_]*Csch[a_.+b_.*x_],x_Symbol] :=
  Dist[1/b,Subst[Int[Regularize[SubstFor[Log[Tanh[a+b*x]],u,x],x],x],x,Log[Tanh[a+b*x]]]] /;
FreeQ[{a,b},x] && FunctionOfQ[Log[Tanh[a+b*x]],u,x]


(* ::Code:: *)
Int[u_*Sech[a_.+b_.*x_]*Csch[a_.+b_.*x_],x_Symbol] :=
  -Dist[1/b,Subst[Int[Regularize[SubstFor[Log[Coth[a+b*x]],u,x],x],x],x,Log[Coth[a+b*x]]]] /;
FreeQ[{a,b},x] && FunctionOfQ[Log[Coth[a+b*x]],u,x]


(* ::Code:: *)
Int[u_*Cosh[a_.+b_.*x_],x_Symbol] :=
  Dist[2/b,Subst[Int[Regularize[SubstFor[Cosh[a/2+b/2*x]*Sinh[a/2+b/2*x],u,x],x],x],x,
				Cosh[a/2+b/2*x]*Sinh[a/2+b/2*x]]] /;
NonsumQ[u] && FreeQ[{a,b},x] && FunctionOfQ[Cosh[a/2+b/2*x]*Sinh[a/2+b/2*x],u,x]


(* ::Code:: *)
If[ShowSteps,

Int[x_^m_.*u_^(-1+a_.*x_^m_.)*v_,x_Symbol] :=
  Module[{w=DerivativeDivides[u,v,x]},
  ShowStep["If m>0,","Int[x^m*f[x]^(-1+a*x^m)*f'[x],x]",
				"f[x]^(a*x^m)/a - m*Int[x^(m-1)*f[x]^(a*x^m)*Log[f[x]],x]",Hold[
  w*u^(a*x^m)/a -
    Dist[m*w,Int[x^(m-1)*u^(a*x^m)*Log[u],x]]]] /;
 Not[FalseQ[w]]] /;
SimplifyFlag && FreeQ[a,x] && RationalQ[m] && m>0,

Int[x_^m_.*u_^(-1+a_.*x_^m_.)*v_,x_Symbol] :=
  Module[{w=DerivativeDivides[u,v,x]},
  w*u^(a*x^m)/a -
    Dist[m*w,Int[x^(m-1)*u^(a*x^m)*Log[u],x]] /;
 Not[FalseQ[w]]] /;
FreeQ[a,x] && RationalQ[m] && m>0]


(* ::Code:: *)
(* If[ShowSteps,

Int[u_,x_Symbol] :=
  Module[{v=FunctionOfTrig[u,x]},
  ShowStep["","Int[f[Cot[a+b*x]],x]","-Subst[Int[f[x]/(1+x^2),x],x,Cot[a+b*x]]/b",Hold[
  -Dist[1/Coefficient[v,x,1],Subst[Int[Regularize[SubstFor[Cot[v],u,x]/(1+x^2),x],x],x,Cot[v]]]]] /;
 NotFalseQ[v] && FunctionOfQ[Cot[v],u,x]] /;
SimplifyFlag,

Int[u_,x_Symbol] :=
  Module[{v=FunctionOfTrig[u,x]},
  -Dist[1/Coefficient[v,x,1],Subst[Int[Regularize[SubstFor[Cot[v],u,x]/(1+x^2),x],x],x,Cot[v]]] /;
 NotFalseQ[v] && FunctionOfQ[Cot[v],u,x]]] *)


(* ::Code:: *)
(* If[ShowSteps,

Int[u_,x_Symbol] :=
  Module[{v=FunctionOfTrig[u,x]},
  ShowStep["","Int[f[Tan[a+b*x]],x]","Subst[Int[f[x]/(1+x^2),x],x,Tan[a+b*x]]/b",Hold[
  Dist[1/Coefficient[v,x,1],Subst[Int[Regularize[SubstFor[Tan[v],u,x]/(1+x^2),x],x],x,Tan[v]]]]] /;
 NotFalseQ[v] && FunctionOfQ[Tan[v],u,x]] /;
SimplifyFlag,

Int[u_,x_Symbol] :=
  Module[{v=FunctionOfTrig[u,x]},
  Dist[1/Coefficient[v,x,1],Subst[Int[Regularize[SubstFor[Tan[v],u,x]/(1+x^2),x],x],x,Tan[v]]] /;
 NotFalseQ[v] && FunctionOfQ[Tan[v],u,x]]] *)


(* ::Code:: *)
Int[u_,x_Symbol] :=
  Subst[Int[Regularize[SubstFor[Tan[x],u,x]/(1+x^2),x],x],x,Tan[x]] /;
FunctionOfQ[Tan[x],u,x] && FunctionOfTanWeight[u,x,x]>=0 && TryTanSubst[u,x]


(* ::Code:: *)
Int[u_,x_Symbol] :=
  -Subst[Int[Regularize[SubstFor[Cot[x],u,x]/(1+x^2),x],x],x,Cot[x]] /;
FunctionOfQ[Cot[x],u,x] && FunctionOfTanWeight[u,x,x]<0 && TryTanSubst[u,x]


(* ::Code:: *)
Int[u_,x_Symbol] :=
  Subst[Int[Regularize[SubstFor[Tanh[x],u,x]/(1-x^2),x],x],x,Tanh[x]] /;
FunctionOfQ[Tanh[x],u,x] && FunctionOfTanhWeight[u,x,x]>=0 && TryTanhSubst[u,x]


(* ::Code:: *)
Int[u_,x_Symbol] :=
  Subst[Int[Regularize[SubstFor[Coth[x],u,x]/(1-x^2),x],x],x,Coth[x]] /;
FunctionOfQ[Coth[x],u,x] && FunctionOfTanhWeight[u,x,x]<0 && TryTanhSubst[u,x]


(* ::Code:: *)
If[ShowSteps,

Int[u_,x_Symbol] :=
  Module[{lst=FunctionOfExponentialOfLinear[u,x]},
  If[lst[[4]]===E,
    ShowStep["","Int[f[E^(a+b*x)],x]","Subst[Int[f[x]/x,x],x,E^(a+b*x)]/b",Hold[
    Dist[1/lst[[3]],Subst[Int[Regularize[lst[[1]]/x,x],x],x,E^(lst[[2]]+lst[[3]]*x)]]]],
  ShowStep["","Int[g[f^(a+b*x)],x]","Subst[Int[g[x]/x,x],x,f^(a+b*x)]/(b*Log[f])",Hold[
  Dist[1/(lst[[3]]*Log[lst[[4]]]),
       Subst[Int[Regularize[lst[[1]]/x,x],x],x,lst[[4]]^(lst[[2]]+lst[[3]]*x)]]]]] /;
 Not[FalseQ[lst]]] /;
SimplifyFlag && 
Not[MatchQ[u,v_^n_. /; SumQ[v] && IntegerQ[n] && n>0]] &&
Not[MatchQ[u,v_^n_.*f_^(a_.+b_.*x) /; FreeQ[{a,b,f},x] && SumQ[v] && IntegerQ[n] && n>0]] &&
Not[MatchQ[u,1/(a_.+b_.*f_^(d_.+e_.*x)+c_.*f_^(g_.+h_.*x)) /; 
	FreeQ[{a,b,c,d,e,f,g,h},x] && ZeroQ[g-2*d] && ZeroQ[h-2*e]]] &&
FalseQ[FunctionOfHyperbolic[u,x]] (* && u===ExpnExpand[u,x] *),

Int[u_,x_Symbol] :=
  Module[{lst=FunctionOfExponentialOfLinear[u,x]},
  Dist[1/(lst[[3]]*Log[lst[[4]]]),
	   Subst[Int[Regularize[lst[[1]]/x,x],x],x,lst[[4]]^(lst[[2]]+lst[[3]]*x)]] /;
 Not[FalseQ[lst]]] /;
Not[MatchQ[u,v_^n_. /; SumQ[v] && IntegerQ[n] && n>0]] &&
Not[MatchQ[u,v_^n_.*f_^(a_.+b_.*x) /; FreeQ[{a,b,f},x] && SumQ[v] && IntegerQ[n] && n>0]] &&
Not[MatchQ[u,1/(a_.+b_.*f_^(d_.+e_.*x)+c_.*f_^(g_.+h_.*x)) /; 
	FreeQ[{a,b,c,d,e,f,g,h},x] && ZeroQ[g-2*d] && ZeroQ[h-2*e]]] &&
FalseQ[FunctionOfHyperbolic[u,x]] (* && u===ExpnExpand[u,x] *) ]


(* ::Code:: *)
Int[x_^m_.*f_^(a_.+b_.*x_^n_.),x_Symbol] :=
  -Subst[Int[f^(a+b*x^(-n))/x^(m+2),x],x,1/x] /;
FreeQ[{a,b,f},x] && IntegersQ[m,n] && n<0 && m<-1 && GCD[m+1,n]==1


(* ::Code:: *)
Int[x_^m_.*f_[a_.+b_.*x_^n_]^p_.,x_Symbol] :=
  -Subst[Int[f[a+b*x^(-n)]^p/x^(m+2),x],x,1/x] /;
FreeQ[{a,b,f,p},x] && IntegersQ[m,n] && n<0 && m<-1 && GCD[m+1,n]==1


(* ::Code:: *)
Int[u_*(a_+b_.*x_^n_)^m_,x_Symbol] :=
  (a+b*x^n)^m/(x^(m*n)*(b+a/x^n)^m)*Int[u*x^(m*n)*(b+a/x^n)^m,x] /;
FreeQ[{a,b},x] && FractionQ[m] && IntegerQ[n] && n<-1 && u===ExpnExpand[u,x]


(* ::Code:: *)
If[ShowSteps,

Int[u_,x_Symbol] :=
  Module[{lst=SubstForFractionalPowerOfLinear[u,x]},
  ShowStep["","Int[f[(a+b*x)^(1/n),x],x]",
			"n/b*Subst[Int[x^(n-1)*f[x,-a/b+x^n/b],x],x,(a+b*x)^(1/n)]",Hold[
  Dist[lst[[2]]*lst[[4]],Subst[Int[lst[[1]],x],x,lst[[3]]^(1/lst[[2]])]]]] /;
 NotFalseQ[lst] && SubstForFractionalPowerQ[u,lst[[3]],x]] /;
SimplifyFlag,

Int[u_,x_Symbol] :=
  Module[{lst=SubstForFractionalPowerOfLinear[u,x]},
  Dist[lst[[2]]*lst[[4]],Subst[Int[lst[[1]],x],x,lst[[3]]^(1/lst[[2]])]] /;
 NotFalseQ[lst] && SubstForFractionalPowerQ[u,lst[[3]],x]]]


(* ::Code:: *)
If[ShowSteps,

Int[u_,x_Symbol] :=
  Module[{lst=SubstForFractionalPowerOfQuotientOfLinears[u,x]},
  ShowStep["","Int[f[((a+b*x)/(c+d*x))^(1/n),x],x]",
"n*(b*c-a*d)*Subst[Int[x^(n-1)*f[x,(-a+c*x^n)/(b-d*x^n)]/(b-d*x^n)^2,x],x,((a+b*x)/(c+d*x))^(1/n)]",Hold[
  Dist[lst[[2]]*lst[[4]],Subst[Int[lst[[1]],x],x,lst[[3]]^(1/lst[[2]])]]]] /;
 NotFalseQ[lst]] /;
SimplifyFlag,

Int[u_,x_Symbol] :=
  Module[{lst=SubstForFractionalPowerOfQuotientOfLinears[u,x]},
  Dist[lst[[2]]*lst[[4]],Subst[Int[lst[[1]],x],x,lst[[3]]^(1/lst[[2]])]] /;
 NotFalseQ[lst]]]


(* ::Code:: *)
Int[u_*(a_+b_.*x_)^m_.,x_Symbol] :=
  Dist[1/b,Subst[Int[x^m*Regularize[SubstFor[a+b*x,u,x],x],x],x,a+b*x]] /;
FreeQ[{a,b,m},x] && FunctionOfQ[a+b*x,u,x]


(* ::Code:: *)
Int[x_^m_./(a_+b_.*(c_+d_.*x_)^n_), x_Symbol] :=
  Dist[1/d,Subst[Int[(-c/d+x/d)^m/(a+b*x^n),x],x,c+d*x]] /;
FreeQ[{a,b,c,d},x] && IntegersQ[m,n] && n>2


(* ::Code:: *)
Int[(e_+f_.*x_)^m_.*(a_+b_.*(c_+d_.*x_)^n_)^p_, x_Symbol] :=
  Dist[(f/d)^m/d,Subst[Int[x^m*(a+b*x^n)^p,x],x,c+d*x]] /;
FreeQ[{a,b,c,d,e,f},x] && IntegersQ[m,n,p] && ZeroQ[d*e-c*f]


(* ::Code:: *)
Int[(a_.+b_.*x_)^m_.*f_[c_.+d_.*x_]^p_.,x_Symbol] :=
  Dist[1/b,Subst[Int[x^m*f[c-a*d/b+d*x/b]^p,x],x,a+b*x]] /;
FreeQ[{a,b,c,d,m},x] && RationalQ[p] && Not[a===0 && b===1] &&
	MemberQ[{Sin,Cos,Sec,Csc,Sinh,Cosh,Sech,Csch},f]


(* ::Code:: *)
Int[(a_.+b_.*x_)^m_*(c_.+d_.*x_+e_.*x_^2)^n_,x_Symbol] :=
  Dist[1/b,Subst[Int[x^m*(c-a*d/b+a^2*e/b^2+(d/b-2*a*e/b^2)*x+e*x^2/b^2)^n,x],x,a+b*x]] /;
FreeQ[{a,b,c,d,e,m,n},x] && FractionQ[n] && Not[a===0 && b===1]


(* ::Code:: *)
Int[(u_+x_^p_.)^n_*v_,x_Symbol] :=
  Module[{z=DerivativeDivides[u,v,x]},
  z*(u+x^p)^(n+1)/(n+1) -
  Dist[z*p,Int[x^(p-1)*(u+x^p)^n,x]] /;
 Not[FalseQ[z]]] /;
IntegerQ[p] && RationalQ[n] && NonzeroQ[n+1] && Not[AlgebraicFunctionQ[v,x]]


(* ::Code:: *)
Int[x_^m_.*(u_+x_^p_.)^n_*v_,x_Symbol] :=
  Module[{z=DerivativeDivides[u,v,x]},
  z*x^m*(u+x^p)^(n+1)/(n+1) -
  Dist[z*p,Int[x^(m+p-1)*(u+x^p)^n,x]] -
  Dist[z*m/(n+1),Int[x^(m-1)*(u+x^p)^(n+1),x]] /;
 Not[FalseQ[z]]] /;
IntegersQ[m,p] && RationalQ[n] && NonzeroQ[n+1]


(* ::Code:: *)
Int[Log[u_],x_Symbol] :=
  x*Log[u] -
  Int[Regularize[x*D[u,x]/u,x],x] /;
InverseFunctionFreeQ[u,x]


(* ::Code:: *)
Int[Log[u_]/x_,x_Symbol] :=
  Module[{v=D[u,x]/u},
  Log[u]*Log[x] -
  Int[Regularize[Log[x]*v,x],x] /;
 RationalFunctionQ[v,x]] /;
Not[BinomialTest[u,x] && BinomialTest[u,x][[3]]^2===1]


(* ::Code:: *)
Int[Log[u_]/(a_+b_.*x_),x_Symbol] :=
  Module[{v=D[u,x]/u},
  Log[u]*Log[a+b*x]/b -
  Dist[1/b,Int[Regularize[Log[a+b*x]*v,x],x]] /;
 RationalFunctionQ[v,x]] /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[(a_.+b_.*x_)^m_.*Log[u_],x_Symbol] :=
  Module[{v=D[u,x]/u},
  (a+b*x)^(m+1)*Log[u]/(b*(m+1)) -
  Dist[1/(b*(m+1)),Int[Regularize[(a+b*x)^(m+1)*v,x],x]]] /;
FreeQ[{a,b,m},x] && NonzeroQ[m+1] && InverseFunctionFreeQ[u,x] && 
	Not[FunctionOfQ[x^(m+1),u,x]] && 
	FalseQ[PowerVariableExpn[u,m+1,x]]


(* ::Code:: *)
Int[v_*Log[u_],x_Symbol] :=
  Module[{w=Block[{ShowSteps=False,StepCounter=Null}, Int[v,x]]},  
  w*Log[u] -
    Int[Regularize[w*D[u,x]/u,x],x] /;
 InverseFunctionFreeQ[w,x]] /;
InverseFunctionFreeQ[u,x] && 
	Not[MatchQ[v, x^m_. /; FreeQ[m,x]]] &&
	FalseQ[FunctionOfLinear[v*Log[u],x]]


(* ::Code:: *)
Int[u_.*x_/(a_+b_.*x_^2),x_Symbol] :=
  Module[{q=Rt[-a/b,2]},
  Dist[q/2,Int[u/(a+b*q*x),x]] -
  Dist[q/2,Int[u/(a-b*q*x),x]]] /;
FreeQ[{a,b},x] && Not[MatchQ[u,r_*s_. /; SumQ[r]]] && Not[RationalFunctionQ[u,x]]


(* ::Code:: *)
Int[u_.*v_^m_./(a_+b_.*v_+c_.*w_),x_Symbol] :=
  Module[{q=Rt[b^2-4*a*c,2]},
  Dist[(1+b/q),Int[u*v^(m-1)/(b+q+2*c*v),x]] + Dist[(1-b/q),Int[u*v^(m-1)/(b-q+2*c*v),x]] /;
 NonzeroQ[q]] /;
FreeQ[{a,b,c},x] && RationalQ[m] && m==1 && ZeroQ[w-v^2] && 
Not[MatchQ[u,r_*s_. /; SumQ[r]]] && (Not[RationalFunctionQ[u,x]] || Not[RationalFunctionQ[v,x]])


(* ::Code:: *)
Int[(d_.+e_.*v_)/(a_+b_.*v_+c_.*w_),x_Symbol] :=
  Module[{q=Rt[b^2-4*a*c,2]},
    Dist[e+(b*e-2*c*d)/q,Int[1/(b+q+2*c*v),x]] + Dist[e-(b*e-2*c*d)/q,Int[1/(b-q+2*c*v),x]] /;
 NonzeroQ[q]] /;
FreeQ[{a,b,c,d,e},x] && ZeroQ[w-v^2] && NonzeroQ[2*c*d-b*e] && Not[RationalFunctionQ[v,x]]


(* ::Code:: *)
Int[u_./(a_+b_.*v_+c_.*w_),x_Symbol] :=
  Module[{q=Rt[b^2-4*a*c,2]},
  Dist[2*c/q,Int[u/(b-q+2*c*v),x]] - Dist[2*c/q,Int[u/(b+q+2*c*v),x]] /;
 NonzeroQ[q]] /;
FreeQ[{a,b,c},x] && ZeroQ[w-v^2] && Not[MatchQ[u,v^m_ /; RationalQ[m]]] &&
Not[MatchQ[u,r_*s_. /; SumQ[r]]] && (Not[RationalFunctionQ[u,x]] || Not[RationalFunctionQ[v,x]])


(* ::Code:: *)
Int[u_,x_Symbol] :=
  Module[{v=SimplifyExpression[u,x]},
  Int[v,x] /;
 v=!=u ]


(* ::Code:: *)
Int[u_.*(v_^m_.*w_^n_.*t_^q_.)^p_,x_Symbol] :=
  Int[u*v^(m*p)*w^(n*p)*t^(p*q),x] /;
FreeQ[p,x] && Not[PowerQ[v]] && Not[PowerQ[w]] && Not[PowerQ[t]] &&
	ZeroQ[Simplify[(v^m*w^n*t^q)^p-v^(m*p)*w^(n*p)*t^(p*q)]]


(* ::Code:: *)
Int[u_.*(v_^m_.*w_^n_.*t_^q_.)^p_,x_Symbol] :=
  Module[{r=Simplify[(v^m*w^n*t^q)^p/(v^(m*p)*w^(n*p)*t^(p*q))],lst},
  ( lst=SplitFreeFactors[v^(m*p)*w^(n*p)*t^(p*q),x];
  r*lst[[1]]*Int[Regularize[u*lst[[2]],x],x] ) /;
 NonzeroQ[r-1]] /;
FreeQ[p,x] && Not[PowerQ[v] || PowerQ[w] || PowerQ[t] || FreeQ[v,x] || FreeQ[w,x] || FreeQ[t,x]]


(* ::Code:: *)
Int[u_*x_^m_./(a_+b_.*x_^n_),x_Symbol] :=
  Module[{r=Numerator[Rt[-a/b,n]], s=Denominator[Rt[-a/b,n]]},
  Dist[r^(m+1)/(a*n*s^m), Sum[Int[u*(-1)^(2*k*(m+1)/n)/(r*(-1)^(2*k/n)-s*x),x],{k,1,n}]]] /;
FreeQ[{a,b},x] && IntegersQ[m,n] && 0<m<n && Not[AlgebraicFunctionQ[u,x]]


(* ::Code:: *)
Int[u_/(a_+b_.*x_^n_),x_Symbol] :=
  Module[{r=Numerator[Rt[-a/b,n]], s=Denominator[Rt[-a/b,n]]},
  Dist[r/(a*n), Sum[Int[u*(-1)^(2*k/n)/(r*(-1)^(2*k/n)-s*x),x],{k,1,n}]]] /;
FreeQ[{a,b},x] && OddQ[n] && n>1 && Not[AlgebraicFunctionQ[u,x]]


(* ::Code:: *)
Int[u_.*v_^m_/(a_+b_.*v_^n_),x_Symbol] :=
  Dist[1/(b*n),Sum[Int[Together[u/(v-Rt[-a/b,n]*(-1)^(2*k/n))],x],{k,1,n}]] /;
FreeQ[{a,b},x] && OddQ[n] && n>1 && ZeroQ[m-n+1] && 
  Not[AlgebraicFunctionQ[u,x] && AlgebraicFunctionQ[v,x]]


(* ::Code:: *)
Int[u_./(a_+b_.*v_^n_),x_Symbol] :=
  Dist[1/(a*n),Sum[Int[Together[u/(1-v/(Rt[-a/b,n]*(-1)^(2*k/n)))],x],{k,1,n}]] /;
FreeQ[{a,b},x] && OddQ[n] && n>1 && Not[AlgebraicFunctionQ[u,x] && AlgebraicFunctionQ[v,x]]


(* ::Code:: *)
Int[u_,x_Symbol] :=
  Module[{v=ExpnExpand[u,x]},
  Int[v,x] /;
 v=!=u ]


(* ::Code:: *)
If[ShowSteps, 

Int[u_,x_Symbol] :=
  Module[{lst=SubstForInverseLinear[u,x]},
  ShowStep["","Int[f[1/(a+b*x)],x]","-Subst[Int[f[x]/x^2,x],x,1/(a+b*x)]/b",Hold[
  -Dist[1/lst[[3]],Subst[Int[lst[[1]]/x^2,x],x,1/lst[[2]]]]]] /;
 NotFalseQ[lst]] /;
SimplifyFlag,

Int[u_,x_Symbol] :=
  Module[{lst=SubstForInverseLinear[u,x]},
  -Dist[1/lst[[3]],Subst[Int[lst[[1]]/x^2,x],x,1/lst[[2]]]] /;
 NotFalseQ[lst]]]


(* ::Code:: *)
If[ShowSteps,

Int[u_,x_Symbol] :=
  Module[{lst=FunctionOfLinear[u,x]},
  ShowStep["","Int[f[a+b*x],x]","Subst[Int[f[x],x],x,a+b*x]/b",Hold[
  Dist[1/lst[[3]],Subst[Int[lst[[1]],x],x,lst[[2]]+lst[[3]]*x]]]] /;
 Not[FalseQ[lst]]] /;
SimplifyFlag,

Int[u_,x_Symbol] :=
  Module[{lst=FunctionOfLinear[u,x]},
  Dist[1/lst[[3]],Subst[Int[lst[[1]],x],x,lst[[2]]+lst[[3]]*x]] /;
 Not[FalseQ[lst]]]]


(* ::Code:: *)
Int[u_./(a_+b_.*v_^n_),x_Symbol] :=
  Dist[2/(a*n),Sum[Int[Together[u/(1-v^2/(Rt[-a/b,n/2]*(-1)^(4*k/n)))],x],{k,1,n/2}]] /;
FreeQ[{a,b},x] && EvenQ[n] && n>2


(* ::Code:: *)
Int[u_.*(a_+b_.*v_^n_)^m_,x_Symbol] :=
  Dist[a^m,Int[u*Product[(1-(-1)^(4*k/n)*Rt[-b/a,n/2]*v^2)^m,{k,1,n/2}],x]] /;
FreeQ[{a,b},x] && IntegerQ[m] && m<-1 && EvenQ[n] && n>2 (* && NegQ[b/a] *)


(* ::Code:: *)
Int[u_.*(a_+b_.*v_^n_)^m_,x_Symbol] :=
  Dist[a^m,Int[u*Product[(1+(-1)^(2*k/n)*Rt[b/a,n]*v)^m,{k,1,n}],x]] /;
FreeQ[{a,b},x] && IntegerQ[m] && m<-1 && OddQ[n] && n>1


(* ::Code:: *)
Int[u_.*(a_+b_.*v_+c_.*w_)^m_,x_Symbol] :=
  Dist[1/(4*c)^m,Int[u*(b-Sqrt[b^2-4*a*c]+2*c*v)^m*(b+Sqrt[b^2-4*a*c]+2*c*v)^m,x]] /;
FreeQ[{a,b,c},x] && IntegerQ[m] && m<0 && ZeroQ[w-v^2]


(* ::Code:: *)
Int[u_,x_Symbol] :=
  Module[{v=NormalForm[u,x]},
  Int[v,x] /;
 Not[v===u]]


(* ::Code:: *)
Int[u_.*(a_.*v_^m_.)^p_, x_Symbol] :=
  Module[{q=FractionalPart[p]},
  q=a^(p-q)*(a*v^m)^q/v^(m*q);
  If[FreeQ[Simplify[q],x],
    Simplify[q]*Int[u*v^(m*p),x],
  q*Int[u*v^(m*p),x]]] /;
FreeQ[{a,m},x] && FractionQ[p] && Not[ZeroQ[a-1] && ZeroQ[m-1]]


(* ::Code:: *)
Int[u_.*(v_^m_)^p_,x_Symbol] :=
  Simplify[(v^m)^p/v^(m*p)]*Int[Regularize[u*v^(m*p),x],x] /;
FreeQ[p,x] && Not[PowerQ[v]]


(* ::Code:: *)
Int[u_.*(a_.*v_^m_.*w_^n_.)^p_, x_Symbol] :=
  Module[{q=FractionalPart[p]},
  q=a^(p-q)*(a*v^m*w^n)^q/(v^(m*q)*w^(n*q));
  If[FreeQ[Simplify[q],x],
    Simplify[q]*Int[u*v^(m*p)*w^(n*p),x],
  q*Int[u*v^(m*p)*w^(n*p),x]]] /;
FreeQ[a,x] && RationalQ[{m,n,p}]


(* ::Code:: *)
Int[u_.*(v_^m_.*w_^n_.)^p_,x_Symbol] :=
  Module[{r=Simplify[(v^m*w^n)^p/(v^(m*p)*w^(n*p))],lst},
  If[ZeroQ[r-1],
    Int[u*v^(m*p)*w^(n*p),x],
  lst=SplitFreeFactors[v^(m*p)*w^(n*p),x];
  r*lst[[1]]*Int[Regularize[u*lst[[2]],x],x]]] /;
FreeQ[p,x] && Not[PowerQ[v]] && Not[PowerQ[w]]


(* ::Code:: *)
Int[u_.*v_^m_*w_^n_,x_Symbol] :=
  Module[{q=Cancel[v/w]},
  (v^m*w^n)/q^m*Int[u*q^m,x] /;
 PolynomialQ[q,x]] /;
FractionQ[{m,n}] && m+n==0 && PolynomialQ[v,x] && PolynomialQ[w,x]


(* ::Code:: *)
If[ShowSteps,

Int[u_,x_Symbol] :=
  Module[{lst=SubstForFractionalPowerOfLinear[u,x]},
  ShowStep["","Int[f[(a+b*x)^(1/n),x],x]",
			"n/b*Subst[Int[x^(n-1)*f[x,-a/b+x^n/b],x],x,(a+b*x)^(1/n)]",Hold[
  Dist[lst[[2]]*lst[[4]],Subst[Int[lst[[1]],x],x,lst[[3]]^(1/lst[[2]])]]]] /;
 NotFalseQ[lst] (* && AlgebraicFunctionQ[lst[[1]],x] *) ] /;
SimplifyFlag,

Int[u_,x_Symbol] :=
  Module[{lst=SubstForFractionalPowerOfLinear[u,x]},
  Dist[lst[[2]]*lst[[4]],Subst[Int[lst[[1]],x],x,lst[[3]]^(1/lst[[2]])]] /;
 NotFalseQ[lst] (* && AlgebraicFunctionQ[lst[[1]],x] *) ]]


(* ::Code:: *)
Int[u_./(a_+b_.*v_^2),x_Symbol] :=
  Dist[1/2,Int[u/(a+b*Rt[-a/b,2]*v),x]] + Dist[1/2,Int[u/(a-b*Rt[-a/b,2]*v),x]] /;
FreeQ[{a,b},x] (* && Not[PositiveQ[-a/b]] *)


(* ::Code:: *)
Int[u_.*(a_+b_.*v_^2)^m_,x_Symbol] :=
  Dist[a^m,Int[u*(1+Rt[-b/a,2]*v)^m*(1-Rt[-b/a,2]*v)^m,x]] /;
FreeQ[{a,b},x] && IntegerQ[m] && (m<-1 || m==-1 && PositiveQ[-b/a])


(* ::Code:: *)
Int[u_.*f_^(a_+v_)*g_^(b_+w_),x_Symbol] :=
  Dist[f^a*g^b,Int[u*f^v*g^w,x]] /;
FreeQ[{a,b,f,g},x] && Not[MatchQ[v,c_+t_ /; FreeQ[c,x]]] && Not[MatchQ[w,c_+t_ /; FreeQ[c,x]]]


(* ::Code:: *)
Int[u_.*f_^(a_+v_),x_Symbol] :=
  Dist[f^a,Int[u*f^v,x]] /;
FreeQ[{a,f},x] && Not[MatchQ[v,b_+w_ /; FreeQ[b,x]]]


(* ::Code:: *)
Int[u_*(a_+b_.*Sin[c_.+d_.*x_])^n_,x_Symbol] :=
  Sqrt[a+b*Sin[c+d*x]]/(Cos[c/2+d*x/2]+a/b*Sin[c/2+d*x/2])*
    (Int[u*Cos[c/2+d*x/2]*(a+b*Sin[c+d*x])^(n-1/2),x] +
     a/b*Int[u*Sin[c/2+d*x/2]*(a+b*Sin[c+d*x])^(n-1/2),x]) /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2-b^2] && IntegerQ[n-1/2]


(* ::Code:: *)
Int[u_*(a_+b_.*Cos[c_.+d_.*x_])^n_,x_Symbol] :=
  Sqrt[a+b*Cos[c+d*x]]/Cos[c/2+d*x/2]*Int[u*Cos[c/2+d*x/2]*(a+b*Cos[c+d*x])^(n-1/2),x] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a-b] && IntegerQ[n-1/2]


(* ::Code:: *)
Int[u_*(a_+b_.*Cos[c_.+d_.*x_])^n_,x_Symbol] :=
  Sqrt[a+b*Cos[c+d*x]]/Sin[c/2+d*x/2]*Int[u*Sin[c/2+d*x/2]*(a+b*Cos[c+d*x])^(n-1/2),x] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a+b] && IntegerQ[n-1/2]


(* ::Code:: *)
Int[u_*(a_+b_.*Cos[d_.+e_.*x_]+c_.*Sin[d_.+e_.*x_])^n_,x_Symbol] :=
  Sqrt[a+b*Cos[d+e*x]+c*Sin[d+e*x]]/(c*Cos[d/2+e*x/2]+(a-b)*Sin[d/2+e*x/2])*
    Dist[c,Int[u*Cos[d/2+e*x/2]*(a+b*Cos[d+e*x]+c*Sin[d+e*x])^(n-1/2),x]] + 
  Sqrt[a+b*Cos[d+e*x]+c*Sin[d+e*x]]/(c*Cos[d/2+e*x/2]+(a-b)*Sin[d/2+e*x/2])*
    Dist[a-b,Int[u*Sin[d/2+e*x/2]*(a+b*Cos[d+e*x]+c*Sin[d+e*x])^(n-1/2),x]] /;
FreeQ[{a,b,c,d,e},x] && ZeroQ[a^2-b^2-c^2] && IntegerQ[n-1/2]


(* ::Code:: *)
If[ShowSteps,

Int[u_,x_Symbol] :=
  ShowStep["","Int[f[Sin[x],Cos[x]],x]",
			"2*Subst[Int[f[2*x/(1+x^2),(1-x^2)/(1+x^2)]/(1+x^2),x],x,Tan[x/2]]",Hold[
  Dist[2,
   Subst[Int[Regularize[SubstForTrig[u,2*x/(1+x^2),(1-x^2)/(1+x^2),x,x]/(1+x^2),x],x],x,Tan[x/2]]]]] /;
SimplifyFlag && FunctionOfTrigQ[u,x,x],

Int[u_,x_Symbol] :=
  Dist[2,
   Subst[Int[Regularize[SubstForTrig[u,2*x/(1+x^2),(1-x^2)/(1+x^2),x,x]/(1+x^2),x],x],x,Tan[x/2]]] /;
FunctionOfTrigQ[u,x,x]]


(* ::Code:: *)
If[ShowSteps,

Int[u_,x_Symbol] :=
  ShowStep["","Int[f[Sinh[x],Cosh[x]],x]",
			"2*Subst[Int[f[2*x/(1-x^2),(1+x^2)/(1-x^2)]/(1-x^2),x],x,Tanh[x/2]]",Hold[
  Dist[2,
   Subst[Int[Regularize[SubstForHyperbolic[u,2*x/(1-x^2),(1+x^2)/(1-x^2),x,x]/(1-x^2),x],x],x,Tanh[x/2]]]]] /;
SimplifyFlag && FunctionOfHyperbolicQ[u,x,x],

Int[u_,x_Symbol] :=
  Dist[2,
   Subst[Int[Regularize[SubstForHyperbolic[u,2*x/(1-x^2),(1+x^2)/(1-x^2),x,x]/(1-x^2),x],x],x,Tanh[x/2]]] /;
FunctionOfHyperbolicQ[u,x,x]]


(* ::Code:: *)
If[ShowSteps,

Int[u_,x_Symbol] :=
  Module[{lst=FunctionOfSquareRootOfQuadratic[u,x]},
  ShowStep["","Int[f[Sqrt[a+b*x+c*x^2],x],x]",
			"2*Subst[Int[f[(c*Sqrt[a]-b*x+Sqrt[a]*x^2)/(c-x^2),(-b+2*Sqrt[a]*x)/(c-x^2)]*
				(c*Sqrt[a]-b*x+Sqrt[a]*x^2)/(c-x^2)^2,x],x,(-Sqrt[a]+Sqrt[a+b*x+c*x^2])/x]",
			Hold[Dist[2,Subst[Int[lst[[1]],x],x,lst[[2]]]]]] /;
 Not[FalseQ[lst]] && lst[[3]]===1] /;
SimplifyFlag,

Int[u_,x_Symbol] :=
  Module[{lst=FunctionOfSquareRootOfQuadratic[u,x]},
  Dist[2,Subst[Int[lst[[1]],x],x,lst[[2]]]] /;
 Not[FalseQ[lst]]]]


(* ::Code:: *)
If[ShowSteps,

Int[u_,x_Symbol] :=
  Module[{lst=FunctionOfSquareRootOfQuadratic[u,x]},
  ShowStep["","Int[f[Sqrt[a+b*x+c*x^2],x],x]",
			"2*Subst[Int[f[(a*Sqrt[c]+b*x+Sqrt[c]*x^2)/(b+2*Sqrt[c]*x),(-a+x^2)/(b+2*Sqrt[c]*x)]*
				(a*Sqrt[c]+b*x+Sqrt[c]*x^2)/(b+2*Sqrt[c]*x)^2,x],x,Sqrt[c]*x+Sqrt[a+b*x+c*x^2]]",
			Hold[Dist[2,Subst[Int[lst[[1]],x],x,lst[[2]]]]]] /;
 Not[FalseQ[lst]] && lst[[3]]===2] /;
SimplifyFlag,

Int[u_,x_Symbol] :=
  Module[{lst=FunctionOfSquareRootOfQuadratic[u,x]},
  Dist[2,Subst[Int[lst[[1]],x],x,lst[[2]]]] /;
 Not[FalseQ[lst]]]]


(* ::Code:: *)
If[ShowSteps,

Int[u_,x_Symbol] :=
  Module[{lst=FunctionOfSquareRootOfQuadratic[u,x]},
  ShowStep["","Int[f[Sqrt[a+b*x+c*x^2],x],x]",
		   "-2*Sqrt[b^2-4*a*c]*Subst[Int[f[-Sqrt[b^2-4*a*c]*x/(c-x^2),
			  (b*c+c*Sqrt[b^2-4*a*c]+(-b+Sqrt[b^2-4*a*c])*x^2)/(-2*c*(c-x^2))]*x/(c-x^2)^2,x],
			   x,2*c*Sqrt[a+b*x+c*x^2]/(b-Sqrt[b^2-4*a*c]+2*c*x)]",
		   Hold[Dist[2,Subst[Int[lst[[1]],x],x,lst[[2]]]]]] /;
 Not[FalseQ[lst]] && lst[[3]]===3] /;
SimplifyFlag,

Int[u_,x_Symbol] :=
  Module[{lst=FunctionOfSquareRootOfQuadratic[u,x]},
  Dist[2,Subst[Int[lst[[1]],x],x,lst[[2]]]] /;
 Not[FalseQ[lst]]]]


(* ::Code:: *)
Int[u_*(1-(a_.+b_.*x_)^2)^n_.,x_Symbol] :=
  Module[{tmp=InverseFunctionOfLinear[u,x]},
  Dist[1/b,Subst[Int[Regularize[SubstForInverseFunction[u,tmp,x]*Cos[x]^(2*n+1),x],x],x,tmp]] /;
 NotFalseQ[tmp] && tmp===ArcSin[a+b*x]] /;
FreeQ[{a,b},x] && IntegerQ[2*n]


(* ::Code:: *)
Int[u_*(1-(a_.+b_.*x_)^2)^n_.,x_Symbol] :=
  Module[{tmp=InverseFunctionOfLinear[u,x]},
  -Dist[1/b,Subst[Int[Regularize[SubstForInverseFunction[u,tmp,x]*Sin[x]^(2*n+1),x],x],x,tmp]] /;
 NotFalseQ[tmp] && tmp===ArcCos[a+b*x]] /;
FreeQ[{a,b},x] && IntegerQ[2*n]


(* ::Code:: *)
Int[u_*(1+(a_.+b_.*x_)^2)^n_.,x_Symbol] :=
  Module[{tmp=InverseFunctionOfLinear[u,x]},
  Dist[1/b,Subst[Int[Regularize[SubstForInverseFunction[u,tmp,x]*Cosh[x]^(2*n+1),x],x],x,tmp]] /;
 NotFalseQ[tmp] && tmp===ArcSinh[a+b*x]] /;
FreeQ[{a,b},x] && IntegerQ[2*n]


(* ::Code:: *)
If[ShowSteps,

Int[u_,x_Symbol] :=
  Module[{lst=SubstForInverseFunctionOfLinear[u,x]},
  ShowStep["If h[g[x]]==x","Int[f[x,g[a+b*x]],x]",
	"Subst[Int[f[-a/b+h[x]/b,x]*h'[x],x],x,g[a+b*x]]/b",Hold[
  Dist[1/lst[[3]],Subst[Int[lst[[1]],x],x,lst[[2]]]]]] /;
 NotFalseQ[lst]] /;
SimplifyFlag && Not[NotIntegrableQ[u,x]],

Int[u_,x_Symbol] :=
  Module[{lst=SubstForInverseFunctionOfLinear[u,x]},
  Dist[1/lst[[3]],Subst[Int[lst[[1]],x],x,lst[[2]]]] /;
 NotFalseQ[lst]] /;
Not[NotIntegrableQ[u,x]]]


(* ::Code:: *)
If[ShowSteps,

Int[u_,x_Symbol] :=
  Module[{lst=SubstForInverseFunctionOfQuotientOfLinears[u,x]},
  ShowStep["If h[g[x]]==x","Int[f[x,g[(a+b*x)/(c+d*x)]],x]",
"(b*c-a*d)*Subst[Int[f[(-a+c*h[x])/(b-d*h[x]),x]*h'[x]/(b-d*h[x])^2,x],x,g[(a+b*x)/(c+d*x)]]",Hold[
  Dist[lst[[3]],Subst[Int[lst[[1]],x],x,lst[[2]]]]]] /;
 NotFalseQ[lst]] /;
SimplifyFlag && Not[NotIntegrableQ[u,x]],

Int[u_,x_Symbol] :=
  Module[{lst=SubstForInverseFunctionOfQuotientOfLinears[u,x]},
  Dist[lst[[3]],Subst[Int[lst[[1]],x],x,lst[[2]]]] /;
 NotFalseQ[lst]] /;
Not[NotIntegrableQ[u,x]]]



(* ::Package:: *)

(* ::Title:: *)
(*Debug Functions*)


nf[u_] := NormalForm[u,x]
rf[u_] := RecognizedFormQ[u,x]


ds := (ShowSteps=True; Null);
ns := (ShowSteps=False; Null);


sim[u_] := Simplify[u];
fsim[u_] := FullSimplify[u];


ee[u_] := ExpnExpand[u,x];
simp[u_] := Simp[u];
ts[u_] := TrigSimplify[u]


dx[u_] := D[u,x];
sdx[u_] := SimplifyD[u,x];
fsdx[u_] := FullSimplify[SimplifyD[u,x]]


dz[u_] := D[u,z];
sdz[u_] := SimplifyD[u,z];
fsdz[u_] := FullSimplify[SimplifyD[u,z]]


SimplifyD[u_,x_] := If[SumQ[u], Simplify[Map[Function[Simplify[D[#,x]]],u]], Simplify[D[u,x]]]


int[u_] := Int[u,x];
sint[u_] := (ShowSteps=False; Simplify[Int[u,x]]);
fsint[u_] := (ShowSteps=False; FullSimplify[Int[u,x]]);


ix[u_] := Integrate[u,x];
six[u_] := Simplify[Integrate[u,x]];
fsix[u_] := FullSimplify[Integrate[u,x]]


IndentedPrint[n_Integer,u_] :=
  (Print[StringJoin[MakeList[n," "]],u]; u)


Prt[u_] := (Print[u]; u)


MakeList[n_Integer,u_] :=
  If[n==0, {}, Append[MakeList[n-1,u],u]]


(* ::Subsection::Closed:: *)
(*Symmetric Mod Function Simplification Rules*)


Mods[u_] :=
  If[LeafCount[1/2-u]<LeafCount[u],
    ArcCot[Tan[Pi*(1/2-u)]]/Pi,
  ArcTan[Tan[Pi*u]]/Pi]


(* Mods[u] is the symmetric mod of u. *)
Mods[n_] :=
  1/2-Mod[1-2*n,2]/2 /;
NumericQ[n]


(* Mods'[u_] := 1 *)
(* ::Package:: *)

BeginPackage["Calculus`Rubi`"]

If[System`mU===True, DownValuesDefaultType[0]]
Unprotect[Int];
DownValues[Int]={};

Begin["`Private`"]

  RulesDirectory = (Calculus`CWD <> "Rubi/original/")
  Get[RulesDirectory<>"ShowStep.m"];
  Get[RulesDirectory<>"IntegrationUtilityFunctions.m"];
  Get[RulesDirectory<>"IntegrationSimplificationFunctions.m"];
  Get[RulesDirectory<>"DebugFunctions.m"];

  Get[RulesDirectory<>"RationalFunctions/RationalFunctionsOfLinears.m"];
  Get[RulesDirectory<>"RationalFunctions/RationalFunctionsOfBinomials.m"];
  Get[RulesDirectory<>"RationalFunctions/RationalFunctionsOfTrinomials.m"];

  Get[RulesDirectory<>"AlgebraicFunctions/AlgebraicFunctionsOfLinears.m"];
  Get[RulesDirectory<>"AlgebraicFunctions/AlgebraicFunctionsOfBinomials.m"];
  Get[RulesDirectory<>"AlgebraicFunctions/AlgebraicFunctionsOfTrinomials.m"];

  Get[RulesDirectory<>"ExponentialFunctions/ExponentialFunctions.m"];
  Get[RulesDirectory<>"ExponentialFunctions/ProductsOfExponentialAndTrigFunctions.m"];
  Get[RulesDirectory<>"ExponentialFunctions/ProductsOfExponentialAndHyperbolicFunctions.m"];
  Get[RulesDirectory<>"ExponentialFunctions/LogarithmFunctions.m"];

  Get[RulesDirectory<>"TrigFunctions/(sin^j)^m (a+a sin^k)^n.m"];
  Get[RulesDirectory<>"TrigFunctions/(sin^j)^m (a+b sin^k)^n.m"];
  Get[RulesDirectory<>"TrigFunctions/(sin^j)^m (A+B sin^k) (a+a sin^k)^n.m"];
  Get[RulesDirectory<>"TrigFunctions/(sin^j)^m (A+B sin^k) (a+b sin^k)^n.m"];
  Get[RulesDirectory<>"TrigFunctions/(sin^j)^m (A+B sin^k+C sin^(2k)) (a+a sin^k)^n.m"];
  Get[RulesDirectory<>"TrigFunctions/(sin^j)^m (A+B sin^k+C sin^(2k)) (a+b sin^k)^n.m"];
  Get[RulesDirectory<>"TrigFunctions/TrigNormalization.m"];
  Get[RulesDirectory<>"TrigFunctions/SineFunctions.m"];
  Get[RulesDirectory<>"TrigFunctions/TangentFunctions.m"];
  Get[RulesDirectory<>"TrigFunctions/SecantFunctions.m"];
  Get[RulesDirectory<>"TrigFunctions/RationalFunctionsOfSinesAndCosines.m"];
  Get[RulesDirectory<>"TrigFunctions/TwoTrigFunctions.m"];
  Get[RulesDirectory<>"TrigFunctions/TrigSubstitution.m"];

  Get[RulesDirectory<>"HyperbolicFunctions/HyperbolicSineFunctions.m"];
  Get[RulesDirectory<>"HyperbolicFunctions/HyperbolicTangentFunctions.m"];
  Get[RulesDirectory<>"HyperbolicFunctions/HyperbolicSecantFunctions.m"];
  Get[RulesDirectory<>"HyperbolicFunctions/RationalFunctionsOfHyperbolicSines.m"];
  Get[RulesDirectory<>"HyperbolicFunctions/RationalFunctionsOfHyperbolicSinesAndCosines.m"];
  Get[RulesDirectory<>"HyperbolicFunctions/TwoHyperbolicFunctions.m"];
  Get[RulesDirectory<>"HyperbolicFunctions/HyperbolicSubstitution.m"];

  Get[RulesDirectory<>"InverseTrigFunctions/InverseSineFunctions.m"];
  Get[RulesDirectory<>"InverseTrigFunctions/InverseCosineFunctions.m"];
  Get[RulesDirectory<>"InverseTrigFunctions/InverseTangentFunctions.m"];
  Get[RulesDirectory<>"InverseTrigFunctions/InverseCotangentFunctions.m"];
  Get[RulesDirectory<>"InverseTrigFunctions/InverseSecantFunctions.m"];
  Get[RulesDirectory<>"InverseTrigFunctions/InverseCosecantFunctions.m"];

  Get[RulesDirectory<>"InverseHyperbolicFunctions/InverseHyperbolicSineFunctions.m"];
  Get[RulesDirectory<>"InverseHyperbolicFunctions/InverseHyperbolicCosineFunctions.m"];
  Get[RulesDirectory<>"InverseHyperbolicFunctions/InverseHyperbolicTangentFunctions.m"];
  Get[RulesDirectory<>"InverseHyperbolicFunctions/InverseHyperbolicCotangentFunctions.m"];
  Get[RulesDirectory<>"InverseHyperbolicFunctions/InverseHyperbolicSecantFunctions.m"];
  Get[RulesDirectory<>"InverseHyperbolicFunctions/InverseHyperbolicCosecantFunctions.m"];

  Get[RulesDirectory<>"SpecialFunctions/ErrorFunctions.m"];
  Get[RulesDirectory<>"SpecialFunctions/FresnelIntegralFunctions.m"];
  Get[RulesDirectory<>"SpecialFunctions/ExponentialIntegralFunctions.m"];
  Get[RulesDirectory<>"SpecialFunctions/TrigIntegralFunctions.m"];
  Get[RulesDirectory<>"SpecialFunctions/HyperbolicIntegralFunctions.m"];
  Get[RulesDirectory<>"SpecialFunctions/LogarithmIntegralFunctions.m"];
  Get[RulesDirectory<>"SpecialFunctions/GammaFunctions.m"];
  Get[RulesDirectory<>"SpecialFunctions/ZetaFunctions.m"];
  Get[RulesDirectory<>"SpecialFunctions/PolylogarithmFunctions.m"];
  Get[RulesDirectory<>"SpecialFunctions/ProductLogarithmFunctions.m"];

  Get[RulesDirectory<>"MiscellaneousFunctions/CalculusFunctions.m"];

  Get[RulesDirectory<>"GeneralIntegrationRules.m"];
  RulesDirectory=.
End[]

If[System`mU===True, DownValuesDefaultType[1]]
EndPackage[]
(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Code:: *)
Int[1/(a_+b_.*x_^n_),x_Symbol] :=
  x/a - Dist[b/a,Int[1/(b+a*x^(-n)),x]] /;
FreeQ[{a,b},x] && FractionQ[n] && n<0


(* ::Code:: *)
Int[1/Sqrt[a_+b_.*x_^2],x_Symbol] :=
  ArcSinh[Rt[b,2]*x/Sqrt[a]]/Rt[b,2] /;
FreeQ[{a,b},x] && PositiveQ[a] && PosQ[b]


(* ::Code:: *)
Int[1/Sqrt[a_+b_.*x_^2],x_Symbol] :=
  ArcSin[Rt[-b,2]*x/Sqrt[a]]/Rt[-b,2] /;
FreeQ[{a,b},x] && PositiveQ[a] && NegQ[b]


(* ::Code:: *)
Int[1/Sqrt[a_+b_.*x_^2],x_Symbol] :=
  ArcTanh[Rt[b,2]*x/Sqrt[a+b*x^2]]/Rt[b,2] /;
FreeQ[{a,b},x] && Not[PositiveQ[a]] && PosQ[b]


(* ::Code:: *)
Int[1/Sqrt[a_+b_.*x_^2],x_Symbol] :=
  ArcTan[Rt[-b,2]*x/Sqrt[a+b*x^2]]/Rt[-b,2] /;
FreeQ[{a,b},x] && Not[PositiveQ[a]] && NegQ[b]


(* ::Code:: *)
Int[1/Sqrt[a_+b_.*x_^4],x_Symbol] :=
  EllipticF[ArcSin[Rt[-b/a,4]*x],-1]/(Sqrt[a]*Rt[-b/a,4]) /;
FreeQ[{a,b},x] && PositiveQ[a]


(* ::Code:: *)
Int[1/Sqrt[a_+b_.*x_^4],x_Symbol] :=
  Sqrt[(a+b*x^4)/a]/(Rt[-b/a,4]*Sqrt[a+b*x^4])*EllipticF[ArcSin[Rt[-b/a,4]*x],-1] /;
FreeQ[{a,b},x] && Not[PositiveQ[a]]


(* ::Code:: *)
Int[x_^2/Sqrt[a_+b_.*x_^4],x_Symbol] :=
  1/(Sqrt[a]*Rt[-b/a,4]^3)*EllipticE[ArcSin[Rt[-b/a,4]*x],-1] -
  1/(Sqrt[a]*Rt[-b/a,4]^3)*EllipticF[ArcSin[Rt[-b/a,4]*x],-1] /;
FreeQ[{a,b},x] && PositiveQ[a]


(* ::Code:: *)
Int[x_^2/Sqrt[a_+b_.*x_^4],x_Symbol] :=
  Sqrt[(a+b*x^4)/a]/(Rt[-b/a,4]^3*Sqrt[a+b*x^4])*EllipticE[ArcSin[Rt[-b/a,4]*x],-1] -
  Sqrt[(a+b*x^4)/a]/(Rt[-b/a,4]^3*Sqrt[a+b*x^4])*EllipticF[ArcSin[Rt[-b/a,4]*x],-1] /;
FreeQ[{a,b},x] && Not[PositiveQ[a]]


(* ::Code:: *)
Int[Sqrt[a_.+b_./x_^2],x_Symbol] :=
  -Subst[Int[Sqrt[a+b*x^2]/x^2,x],x,1/x] /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[(a_+b_.*x_^n_)^p_,x_Symbol] :=
  x*(a+b*x^n)^(p+1)/a /;
FreeQ[{a,b,n,p},x] && ZeroQ[n*(p+1)+1]


(* ::Code:: *)
Int[(a_+b_.*x_^n_)^p_,x_Symbol] :=
  x*(a+b*x^n)^p/(n*p+1) +
  Dist[a*n*p/(n*p+1),Int[(a+b*x^n)^(p-1),x]] /;
FreeQ[{a,b,n},x] && FractionQ[p] && p>0 && NonzeroQ[n*p+1]


(* ::Code:: *)
Int[(a_+b_.*x_^n_)^p_,x_Symbol] :=
  -x*(a+b*x^n)^(p+1)/(n*(p+1)*a) +
  Dist[(n*(p+1)+1)/(a*n*(p+1)),Int[(a+b*x^n)^(p+1),x]] /;
FreeQ[{a,b,n},x] && FractionQ[p] && p<-1


(* ::Code:: *)
Int[(a_+b_./x_)^p_,x_Symbol] :=
  x*(a+b/x)^(p+1)/a +
  Dist[b*p/a,Int[(a+b/x)^p/x,x]] /;
FreeQ[{a,b,p},x] && Not[IntegerQ[p]]


(* ::Code:: *)
Int[(a_+b_.*x_^n_)^p_,x_Symbol] :=
  Module[{q=Denominator[p]},
  Dist[q*a^(p+1/n)/n,
	Subst[Int[x^(q/n-1)/(1-b*x^q)^(p+1/n+1),x],x,x^(n/q)/(a+b*x^n)^(1/q)]]] /;
FreeQ[{a,b},x] && RationalQ[{p,n}] && -1<p<0 && IntegerQ[p+1/n]


(* ::Code:: *)
Int[(a_+b_.*(c_.*x_^n_)^m_)^p_.,x_Symbol] :=
  Dist[x/(c*x^n)^(1/n),Subst[Int[(a+b*x^(m*n))^p,x],x,(c*x^n)^(1/n)]] /;
FreeQ[{a,b,c,m,n,p},x] && IntegerQ[m*n]


(* ::Code:: *)
Int[x_^m_.*(a_.+b_.*x_^n_)^p_.,x_Symbol] :=
  Dist[1/(m+1),Subst[Int[(a+b*x^(n/(m+1)))^p,x],x,x^(m+1)]] /;
FreeQ[{a,b,m,n,p},x] && NonzeroQ[m+1] && IntegerQ[n/(m+1)] && n/(m+1)>1 && Not[IntegersQ[m,n,p]]


(* ::Code:: *)
Int[x_^m_.*(a_+b_.*x_^n_)^p_,x_Symbol] :=
  Int[x^(m+n*p)*(b+a/x^n)^p,x] /;
FreeQ[{a,b,m},x] && IntegerQ[p] && p<0 && FractionQ[n] && n<0


(* ::Code:: *)
Int[x_^m_.*(a_+b_.*x_^n_)^p_,x_Symbol] :=
  x^(m+1)*(a+b*x^n)^p/(m+1) -
  Dist[b*n*p/(m+1),Int[x^(m+n)*(a+b*x^n)^(p-1),x]] /;
FreeQ[{a,b},x] && IntegersQ[m,n] && FractionQ[p] && p>0 && (n>0 && m<-1 || 0<-n<=m+1)


(* ::Code:: *)
Int[x_^m_.*(a_+b_.*x_^n_)^p_,x_Symbol] :=
  x^(m-n+1)*(a+b*x^n)^(p+1)/(b*n*(p+1)) -
  Dist[(m-n+1)/(b*n*(p+1)),Int[x^(m-n)*(a+b*x^n)^(p+1),x]] /;
FreeQ[{a,b},x] && IntegersQ[m,n] && FractionQ[p] && p<-1 && (0<n<=m || m<=n<0) && NonzeroQ[m-n+1]


(* ::Code:: *)
Int[x_^m_.*(a_+b_.*x_^n_)^p_,x_Symbol] :=
  x^(m+1)*(a+b*x^n)^p/(m+n*p+1) +
  Dist[n*p*a/(m+n*p+1),Int[x^m*(a+b*x^n)^(p-1),x]] /;
FreeQ[{a,b,m,n,p},x] && FractionQ[p] && p>0 && NonzeroQ[m+n*p+1] &&
Not[IntegerQ[(m+1)/n] && (m+1)/n>0]


(* ::Code:: *)
Int[x_^m_.*(a_+b_.*x_^n_)^p_,x_Symbol] :=
  -x^(m+1)*(a+b*x^n)^(p+1)/(a*n*(p+1)) +
  Dist[(m+n*(p+1)+1)/(a*n*(p+1)),Int[x^m*(a+b*x^n)^(p+1),x]] /;
FreeQ[{a,b,m,n},x] && FractionQ[p] && p<-1 && NonzeroQ[m+n*(p+1)+1] && NonzeroQ[m-n+1]


(* ::Code:: *)
Int[x_^m_.*(a_+b_.*x_^n_.)^p_,x_Symbol] :=
  x^(m-n+1)*(a+b*x^n)^(p+1)/(b*(m+n*p+1)) -
  Dist[a*(m-n+1)/(b*(m+n*p+1)),Int[x^(m-n)*(a+b*x^n)^p,x]] /;
FreeQ[{a,b,m,n,p},x] && NonzeroQ[m+n*p+1] && NonzeroQ[m-n+1] && NonzeroQ[m+1] &&
Not[IntegersQ[m,n,p]] && 
	(IntegersQ[m,n] && (0<n<=m || m<=n<0) && (Not[RationalQ[p]] || -1<p<0) || 
 	IntegerQ[(m+1)/n] && 0<(m+1)/n && Not[FractionQ[n]] || 
     Not[RationalQ[m]] && RationalQ[m-n] || 
     RationalQ[n] && MatchQ[m,u_+q_ /; RationalQ[q] && (0<n<=q || n<0 && q<0)] || 
     MatchQ[m,u_+q_.*n /; RationalQ[q] && q>=1])


(* ::Code:: *)
Int[x_^m_.*(a_+b_.*x_^n_.)^p_,x_Symbol] :=
  x^(m+1)*(a+b*x^n)^(p+1)/(a*(m+1)) -
  Dist[b*(m+n*(p+1)+1)/(a*(m+1)),Int[x^(m+n)*(a+b*x^n)^p,x]] /;
FreeQ[{a,b,m,n,p},x] && NonzeroQ[m+1] && NonzeroQ[m+n*(p+1)+1] && Not[IntegersQ[m,n,p]] && 
	(IntegersQ[m,n] && (n>0 && m<-1 || 0<-n<=m+1) ||
     Not[RationalQ[m]] && RationalQ[m+n] ||
     RationalQ[n] && MatchQ[m,u_+q_ /; RationalQ[q] && (n>0 && q<0 || 0<-n<=q)] || 
     MatchQ[m,u_+q_*n /; RationalQ[q] && q<0])


(* ::Code:: *)
Int[x_^m_.*(a_+b_.*x_^n_)^p_,x_Symbol] :=
  Module[{q=Denominator[p]},
  q*a^(p+(m+1)/n)/n*
	Subst[Int[x^(q*(m+1)/n-1)/(1-b*x^q)^(p+(m+1)/n+1),x],x,x^(n/q)/(a+b*x^n)^(1/q)]] /;
FreeQ[{a,b},x] && RationalQ[{m,n,p}] && -1<p<0 && IntegerQ[p+(m+1)/n] && GCD[m+1,n]==1


(* ::Code:: *)
Int[(x_^m_.*(a_+b_.*x_^n_.))^p_,x_Symbol] :=
  (x^m*(a+b*x^n))^(p+1)/(b*n*(p+1)*x^(m*(p+1))) /;
FreeQ[{a,b,m,n,p},x] && ZeroQ[m*p-n+1] && NonzeroQ[p+1]


(* ::Code:: *)
Int[(x_^m_.*(a_+b_.*x_^n_.))^p_.,x_Symbol] :=
  -(x^m*(a+b*x^n))^(p+1)/(a*n*(p+1)*x^(m-1)) /;
FreeQ[{a,b,m,n,p},x] && ZeroQ[m*p+n*(p+1)+1] && NonzeroQ[p+1]


(* ::Code:: *)
Int[x_^q_.*(x_^m_.*(a_+b_.*x_^n_.))^p_,x_Symbol] :=
  (x^m*(a+b*x^n))^(p+1)/(b*n*(p+1)*x^(m*(p+1))) /;
FreeQ[{a,b,m,n,p},x] && ZeroQ[q+m*p-n+1] && NonzeroQ[p+1]


(* ::Code:: *)
Int[x_^q_.*(x_^m_.*(a_+b_.*x_^n_.))^p_.,x_Symbol] :=
  -(x^m*(a+b*x^n))^(p+1)/(a*n*(p+1)*x^(m-1-q)) /;
FreeQ[{a,b,m,n,p,q},x] && ZeroQ[q+m*p+n*(p+1)+1] && NonzeroQ[p+1]


(* ::Code:: *)
Int[(a_+b_.*x_^2)^m_.*(c_+d_.*x_^2)^n_,x_Symbol] :=
  Dist[(b/d)^m,Int[(c+d*x^2)^(n+m),x]] /;
FreeQ[{a,b,c,d,n},x] && ZeroQ[b*c-a*d] && IntegerQ[m]


(* ::Code:: *)
Int[1/((a_+b_.*x_^2)*Sqrt[c_+d_.*x_^2]),x_Symbol] :=
  ArcTanh[x*Rt[(a*d-b*c)/a,2]/Sqrt[c+d*x^2]]/(a*Rt[(a*d-b*c)/a,2]) /;
FreeQ[{a,b,c,d},x] && PosQ[(a*d-b*c)/a]


(* ::Code:: *)
Int[1/((a_+b_.*x_^2)*Sqrt[c_+d_.*x_^2]),x_Symbol] :=
  ArcTan[x*Rt[(b*c-a*d)/a,2]/Sqrt[c+d*x^2]]/(a*Rt[(b*c-a*d)/a,2]) /;
FreeQ[{a,b,c,d},x] && NegQ[(a*d-b*c)/a]


(* ::Code:: *)
Int[1/(Sqrt[a_+b_.*x_^2]*Sqrt[c_+d_.*x_^2]),x_Symbol] :=
  1/(Sqrt[a]*Sqrt[c]*Rt[-d/c,2])*EllipticF[ArcSin[Rt[-d/c,2]*x], b*c/(a*d)] /;
FreeQ[{a,b,c,d},x] && PositiveQ[a] && PositiveQ[c] &&
(PosQ[-c*d] && (NegQ[-a*b] || Not[RationalQ[Rt[-a*b,2]]]) || NegQ[-c*d] && NegQ[-a*b] &&
Not[RationalQ[Rt[a*b,2]]])


(* ::Code:: *)
Int[1/(Sqrt[a_+b_.*x_^2]*Sqrt[c_+d_.*x_^2]),x_Symbol] :=
  Sqrt[(a+b*x^2)/a]*Sqrt[(c+d*x^2)/c]/(Sqrt[a+b*x^2]*Sqrt[c+d*x^2])*Int[1/(Sqrt[1+b/a*x^2]*Sqrt[1+d/c*x^2]),x] /;
FreeQ[{a,b,c,d},x] && Not[PositiveQ[a] && PositiveQ[c]] &&
(PosQ[-c*d] && (NegQ[-a*b] || Not[RationalQ[Rt[-a*b,2]]]) || NegQ[-c*d] && NegQ[-a*b] &&
Not[RationalQ[Rt[a*b,2]]])


(* ::Code:: *)
Int[Sqrt[a_+b_.*x_^2]/Sqrt[c_+d_.*x_^2],x_Symbol] :=
  Sqrt[a]/(Sqrt[c]*Rt[-d/c,2])*EllipticE[ArcSin[Rt[-d/c,2]*x], b*c/(a*d)] /;
FreeQ[{a,b,c,d},x] && PositiveQ[a] && PositiveQ[c]


(* ::Code:: *)
Int[Sqrt[a_+b_.*x_^2]/Sqrt[c_+d_.*x_^2],x_Symbol] :=
  Sqrt[a+b*x^2]*Sqrt[(c+d*x^2)/c]/(Sqrt[c+d*x^2]*Sqrt[(a+b*x^2)/a])*Int[Sqrt[1+b/a*x^2]/Sqrt[1+d/c*x^2],x] /;
FreeQ[{a,b,c,d},x] && Not[PositiveQ[a] && PositiveQ[c]]


(* ::Code:: *)
Int[Sqrt[a_+b_.*x_^2]*Sqrt[c_+d_.*x_^2],x_Symbol] :=
  x/3*Sqrt[a+b*x^2]*Sqrt[c+d*x^2] + 
  Dist[(c*b+a*d)/(3*d),Int[Sqrt[c+d*x^2]/Sqrt[a+b*x^2],x]] - 
  Dist[c*(c*b-a*d)/(3*d),Int[1/(Sqrt[a+b*x^2]*Sqrt[c+d*x^2]),x]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[c*b+a*d] && NonzeroQ[c*b-a*d]


(* ::Code:: *)
Int[(a_+b_.*x_^2)^m_.*(c_+d_.*x_^2)^n_*(e_+f_.*x_^2)^p_,x_Symbol] :=
  Dist[(b/d)^m,Int[(c+d*x^2)^(m+n)*(e+f*x^2)^p,x]] /;
FreeQ[{a,b,c,d,e,f,n,p},x] && ZeroQ[b*c-a*d] && IntegerQ[m]


(* ::Code:: *)
Int[1/((a_+b_.*x_^2)*Sqrt[c_+d_.*x_^2]*Sqrt[e_+f_.*x_^2]),x_Symbol] :=
  1/(a*Sqrt[c]*Sqrt[e]*Rt[-d/c,2])*EllipticPi[b*c/(a*d), ArcSin[Rt[-d/c,2]*x], c*f/(e*d)] /;
FreeQ[{a,b,c,d,e,f},x] && PositiveQ[c] && PositiveQ[e] &&
(PosQ[-e*f] && (NegQ[-c*d] || Not[RationalQ[Rt[-c*d,2]]]) || NegQ[-e*f] && NegQ[-c*d] &&
Not[RationalQ[Rt[c*d,2]]])


(* ::Code:: *)
Int[1/((a_+b_.*x_^2)*Sqrt[c_+d_.*x_^2]*Sqrt[e_+f_.*x_^2]),x_Symbol] :=
  Sqrt[(c+d*x^2)/c]*Sqrt[(e+f*x^2)/e]/(Sqrt[c+d*x^2]*Sqrt[e+f*x^2])*
    Int[1/((a+b*x^2)*Sqrt[1+d/c*x^2]*Sqrt[1+f/e*x^2]),x] /;
FreeQ[{a,b,c,d,e,f},x] && Not[PositiveQ[c] && PositiveQ[e]] &&
(PosQ[-e*f] && (NegQ[-c*d] || Not[RationalQ[Rt[-c*d,2]]]) || NegQ[-e*f] && NegQ[-c*d] &&
Not[RationalQ[Rt[c*d,2]]])


(* ::Code:: *)
Int[Sqrt[e_+f_.*x_^2]/((a_+b_.*x_^2)*Sqrt[c_+d_.*x_^2]),x_Symbol] :=
  Dist[f/b,Int[1/(Sqrt[c+d*x^2]*Sqrt[e+f*x^2]),x]] + 
  Dist[(b*e-a*f)/b,Int[1/((a+b*x^2)*Sqrt[c+d*x^2]*Sqrt[e+f*x^2]),x]] /;
FreeQ[{a,b,c,d,e,f},x] && NonzeroQ[b*e-a*f]


(* ::Code:: *)
Int[Sqrt[c_+d_.*x_^2]*Sqrt[e_+f_.*x_^2]/(a_+b_.*x_^2),x_Symbol] :=
  Dist[d/b,Int[Sqrt[e+f*x^2]/Sqrt[c+d*x^2],x]] + 
  Dist[(b*c-a*d)/b,Int[Sqrt[e+f*x^2]/((a+b*x^2)*Sqrt[c+d*x^2]),x]] /;
FreeQ[{a,b,c,d,e,f},x] && NonzeroQ[b*c-a*d]


(* ::Code:: *)
Int[(e_.+f_.*x_^2)/(Sqrt[a_+b_.*x_^2]*Sqrt[c_+d_.*x_^2]),x_Symbol] :=
  Dist[f/b,Int[Sqrt[a+b*x^2]/Sqrt[c+d*x^2],x]] +
  Dist[(b*e-a*f)/b,Int[1/(Sqrt[a+b*x^2]*Sqrt[c+d*x^2]),x]] /;
FreeQ[{a,b,c,d,e,f},x] && NonzeroQ[b*e-a*f] &&
(PosQ[-c*d] && (NegQ[-a*b] || Not[RationalQ[Rt[-a*b,2]]]) || NegQ[-c*d] && NegQ[-a*b] &&
Not[RationalQ[Rt[a*b,2]]])


(* ::Code:: *)
Int[x_^2*Sqrt[a_+b_.*x_^2]/Sqrt[c_+d_.*x_^2],x_Symbol] :=
  x*Sqrt[a+b*x^2]*Sqrt[c+d*x^2]/(3*d) -
  Dist[1/(3*d),Int[(a*c+(2*b*c-a*d)*x^2)/(Sqrt[a+b*x^2]*Sqrt[c+d*x^2]),x]] /;
FreeQ[{a,b,c,d},x]


(* ::Code:: *)
Int[(a_.+b_.*x_^n_)^p_*(c_.+d_.*x_^n_)^q_.,x_Symbol] :=
  Dist[b/d,Int[(a+b*x^n)^(p-1)*(c+d*x^n)^(q+1),x]] /;
FreeQ[{a,b,c,d,n},x] && ZeroQ[a*d-b*c] && RationalQ[{p,q}] && p>0 && q<=-1


(* ::Code:: *)
Int[(a_.+b_.*x_^n_)^p_*(c_.+d_.*x_^n_)^q_.,x_Symbol] :=
  Dist[(a*d-b*c)/d,Int[(a+b*x^n)^(p-1)*(c+d*x^n)^q,x]] +
  Dist[b/d,Int[(a+b*x^n)^(p-1)*(c+d*x^n)^(q+1),x]] /;
FreeQ[{a,b,c,d,n},x] && NonzeroQ[a*d-b*c] && RationalQ[{p,q}] && p>0 && q<=-1 && 
IntegerQ[n] && n>0


(* ::Code:: *)
Int[(a_.+b_.*x_^n_)^p_.*(c_.+d_.*x_^n_)^q_.,x_Symbol] :=
  Dist[b/(b*c-a*d),Int[(a+b*x^n)^p*(c+d*x^n)^(q+1),x]] -
  Dist[d/(b*c-a*d),Int[(a+b*x^n)^(p+1)*(c+d*x^n)^q,x]] /;
FreeQ[{a,b,c,d,n},x] && NonzeroQ[b*c-a*d] && RationalQ[{p,q}] && p<-1 && q<=-1 && 
IntegerQ[n] && n>0


(* ::Code:: *)
Int[(a_.+b_.*x_^n_.)/(x_*(c_+d_.*x_^p_.)),x_Symbol] :=
  a*Log[x]/c +
  Dist[1/c,Int[x^(n-1)*(b*c-a*d*x^(p-n))/(c+d*x^p),x]] /;
FreeQ[{a,b,c,d},x] && FractionQ[{n,p}] && 0<n<=p


(* ::Code:: *)
Int[(a_.+b_.*x_^n_.)/(x_*(c_+d_.*x_^p_.)),x_Symbol] :=
  a*Log[x]/c +
  Dist[1/c,Int[x^(p-1)*(-a*d+b*c*x^(n-p))/(c+d*x^p),x]] /;
FreeQ[{a,b,c,d},x] && FractionQ[{n,p}] && 0<p<n


(* ::Code:: *)
Int[x_^m_*(a_.+b_.*x_^n_.)/(c_+d_.*x_^p_.),x_Symbol] :=
  a*x^(m+1)/(c*(m+1)) +
  Dist[1/c,Int[x^(m+n)*(b*c-a*d*x^(p-n))/(c+d*x^p),x]] /;
FreeQ[{a,b,c,d},x] && FractionQ[{m,n,p}] && m<-1 && 0<n<=p


(* ::Code:: *)
Int[x_^m_*(a_.+b_.*x_^n_.)/(c_+d_.*x_^p_.),x_Symbol] :=
  a*x^(m+1)/(c*(m+1)) +
  Dist[1/c,Int[x^(m+p)*(-a*d+b*c*x^(n-p))/(c+d*x^p),x]] /;
FreeQ[{a,b,c,d},x] && FractionQ[{m,n,p}] && m<-1 && 0<p<n


(* ::Code:: *)
Int[1/Sqrt[c_.*x_^2*(a_.+b_./x_)],x_Symbol] :=
  Int[1/Sqrt[b*c*x+a*c*x^2],x] /;
FreeQ[{a,b,c},x] && NegativeQ[b^2*c/a]


(* ::Code:: *)
Int[1/Sqrt[c_.*x_^2*(a_.+b_.*x_^n_.)],x_Symbol] :=
  -2/(n*Rt[a*c,2])*ArcTanh[Rt[a*c,2]*x/Sqrt[c*x^2*(a+b*x^n)]] /;
FreeQ[{a,b,c,n},x] && PosQ[a*c]


(* ::Code:: *)
Int[1/Sqrt[c_.*x_^2*(a_.+b_.*x_^n_.)],x_Symbol] :=
  -2/(n*Rt[-a*c,2])*ArcTan[Rt[-a*c,2]*x/Sqrt[c*x^2*(a+b*x^n)]] /;
FreeQ[{a,b,c,n},x] && NegQ[a*c]


(* ::Code:: *)
Int[1/Sqrt[c_.*x_^m_.*(a_.+b_.*x_^n_.)],x_Symbol] :=
  Int[1/Sqrt[c*x^2*(b+a*x^(m-2))],x] /;
FreeQ[{a,b,c,m,n},x] && ZeroQ[m+n-2]


(* ::Code:: *)
Int[1/Sqrt[c_.*(a_.*x_^p_+b_.*x_^2)],x_Symbol] :=
  Int[1/Sqrt[c*x^2*(b+a*x^(p-2))],x] /;
FreeQ[{a,b,c,p},x]


(* ::Code:: *)
Int[1/Sqrt[c_.*x_^m_.*(a_.*x_^p_.+b_.*x_^n_.)],x_Symbol] :=
  Int[1/Sqrt[c*x^2*(b+a*x^(m+p-2))],x] /;
FreeQ[{a,b,c,m,n,p},x] && ZeroQ[m+n-2]


(* ::Code:: *)
(* Int[(e_.*(a_.+b_.*x_)/(c_.+d_.*x_))^n_,x_Symbol] :=
  Dist[e*(b*c-a*d),Subst[Int[x^n/(b*e-d*x)^2,x],x,e*(a+b*x)/(c+d*x)]] /;
FreeQ[{a,b,c,d,e},x] && FractionQ[n] && NonzeroQ[b*c-a*d] *)


(* ::Code:: *)
(* Int[x_^m_.*(e_.*(a_.+b_.*x_)/(c_.+d_.*x_))^n_,x_Symbol] :=
  Dist[e*(b*c-a*d),Subst[Int[x^n*(-a*e+c*x)^m/(b*e-d*x)^(m+2),x],x,e*(a+b*x)/(c+d*x)]] /;
FreeQ[{a,b,c,d,e},x] && IntegerQ[m] && FractionQ[n] && NonzeroQ[b*c-a*d] *)


(* ::Code:: *)
(* Int[(f_+g_.*x_)^m_*(e_.*(a_.+b_.*x_)/(c_.+d_.*x_))^n_,x_Symbol] :=
  Dist[1/g,Subst[Int[x^m*(e*(a-b*f/g+b/g*x)/(c-d*f/g+d/g*x))^n,x],x,f+g*x]] /;
FreeQ[{a,b,c,d,e,f,g},x] && IntegerQ[m] && m<0 && FractionQ[n] && NonzeroQ[b*c-a*d] *)


(* ::Code:: *)
Int[Sqrt[a_.*x_+Sqrt[b_+c_.*x_^2]], x_Symbol] :=
  2*(2*a*x-Sqrt[b+c*x^2])*Sqrt[a*x+Sqrt[b+c*x^2]]/(3*a) /;
FreeQ[{a,b,c},x] && ZeroQ[c-a^2]


(* ::Code:: *)
Int[Sqrt[a_.*x_-Sqrt[b_+c_.*x_^2]], x_Symbol] :=
  2*(2*a*x+Sqrt[b+c*x^2])*Sqrt[a*x-Sqrt[b+c*x^2]]/(3*a) /;
FreeQ[{a,b,c},x] && ZeroQ[c-a^2]


(* ::Code:: *)
Int[Sqrt[a_+Sqrt[c_+b_.*x_^2]], x_Symbol] :=
  2*(-a^2+b*x^2+a*Sqrt[a^2+b*x^2])*Sqrt[a+Sqrt[a^2+b*x^2]]/(3*b*x) /;
FreeQ[{a,b,c},x] && ZeroQ[c-a^2]


(* ::Code:: *)
Int[Sqrt[a_-Sqrt[c_+b_.*x_^2]], x_Symbol] :=
  2*(-a^2+b*x^2-a*Sqrt[a^2+b*x^2])*Sqrt[a-Sqrt[a^2+b*x^2]]/(3*b*x) /;
FreeQ[{a,b,c},x] && ZeroQ[c-a^2]


(* ::Code:: *)
Int[u_./(a_.*x_^m_.+b_.*Sqrt[c_.*x_^n_]),x_Symbol] :=
  Int[u*(a*x^m-b*Sqrt[c*x^n])/(a^2*x^(2*m)-b^2*c*x^n),x] /;
FreeQ[{a,b,c,m,n},x]


(* ::Code:: *)
Int[u_.*(e_.*Sqrt[a_.+b_.*x_^n_.]+f_.*Sqrt[c_.+d_.*x_^n_.])^m_,x_Symbol] :=
  Dist[(a*e^2-c*f^2)^m,Int[u*(e*Sqrt[a+b*x^n]-f*Sqrt[c+d*x^n])^(-m),x]] /;
FreeQ[{a,b,c,d,e,f,n},x] && IntegerQ[m] && m<0 && ZeroQ[b*e^2-d*f^2]


(* ::Code:: *)
Int[u_.*(e_.*Sqrt[a_.+b_.*x_^n_.]+f_.*Sqrt[c_.+d_.*x_^n_.])^m_,x_Symbol] :=
  Dist[(b*e^2-d*f^2)^m,Int[u*x^(m*n)*(e*Sqrt[a+b*x^n]-f*Sqrt[c+d*x^n])^(-m),x]] /;
FreeQ[{a,b,c,d,e,f,n},x] && IntegerQ[m] && m<0 && ZeroQ[a*e^2-c*f^2]


(* ::Code:: *)
Int[u_./(a_+b_.*Sqrt[c_+d_.*x_^n_]),x_Symbol] :=
  Dist[-a/(b^2*d),Int[u/x^n,x]] +
  Dist[1/(b*d),Int[u*Sqrt[c+d*x^n]/x^n,x]] /;
FreeQ[{a,b,c,d,n},x] && ZeroQ[a^2-b^2*c]


(* ::Code:: *)
Int[u_./(a_.*x_^m_.+b_.*Sqrt[c_+d_.*x_^n_]),x_Symbol] :=
  Dist[-a/(b^2*c),Int[u*x^m,x]] +
  Dist[1/(b*c),Int[u*Sqrt[c+d*x^n],x]] /;
FreeQ[{a,b,c,d,m,n},x] && ZeroQ[n-2*m] && ZeroQ[a^2-b^2*d]


(* ::Code:: *)
Int[u_./(a_+b_.*x_^m_.+c_.*Sqrt[d_+e_.*x_^n_]),x_Symbol] :=
  Dist[1/(2*a),Int[u,x]] +
  Dist[1/(2*b),Int[u/x^m,x]] -
  Dist[c/(2*a*b),Int[u*Sqrt[d+e*x^n]/x^m,x]] /;
FreeQ[{a,b,c,d,m,n},x] && ZeroQ[n-2*m] && ZeroQ[a^2-c^2*d] && ZeroQ[b^2-c^2*e]


(* ::Code:: *)
Int[u_./(a_+b_.*x_^n_.+c_.*Sqrt[d_+e_.*x_^n_.]),x_Symbol] :=
  Dist[1/b,Int[u/x^n,x]] +
  Dist[a/b^2,Int[u/x^(2*n),x]] -
  Dist[c/b^2,Int[u*Sqrt[d+e*x^n]/x^(2*n),x]] /;
FreeQ[{a,b,c,d,n},x] && ZeroQ[a^2-c^2*d] && ZeroQ[2*a*b-c^2*e]


(* ::Code:: *)
(* Int[u_./(e_.*Sqrt[a_.+b_.*x_]+f_.*Sqrt[c_.+d_.*x_]),x_Symbol] :=
  Int[u*(e*Sqrt[a+b*x]-f*Sqrt[c+d*x])/(a*e^2-c*f^2+(b*e^2-d*f^2)*x),x] /;
FreeQ[{a,b,c,d,e,f},x] *)


(* ::Code:: *)
Int[u_./(a_.*x_+b_.*Sqrt[c_.+d_.*x_^2]),x_Symbol] :=
  Dist[a,Int[x*u/(-b^2*c+(a^2-b^2*d)*x^2),x]] -
  Dist[b,Int[u*Sqrt[c+d*x^2]/(-b^2*c+(a^2-b^2*d)*x^2),x]] /;
FreeQ[{a,b,c,d},x]


(* ::Code:: *)
Int[u_./(e_.*Sqrt[(a_.+b_.*x_^n_.)^p_.]+f_.*Sqrt[(a_.+b_.*x_^n_.)^q_.]),x_Symbol] :=
  Int[u*(e*Sqrt[(a+b*x^n)^p]-f*Sqrt[(a+b*x^n)^q])/(e^2*(a+b*x^n)^p-f^2*(a+b*x^n)^q),x] /;
FreeQ[{a,b,e,f},x] && IntegersQ[n,p,q]


(* ::Code:: *)
(* Int[u_./(v_+a_.*Sqrt[w_]),x_Symbol] :=
  Int[u*v/(v^2-a^2*w),x] -
  Dist[a,Int[u*Sqrt[w]/(v^2-a^2*w),x]] /;
FreeQ[a,x] && PolynomialQ[v,x] *)


(* ::Code:: *)
(* Int[u_./(a_.*x_+b_.*Sqrt[c_+d_.*x_]),x_Symbol] :=
  Int[(a*x*u-b*u*Sqrt[c+d*x])/(-b^2*c-b^2*d*x+a^2*x^2),x] /;
FreeQ[{a,b,c,d},x] *)


(* ::Code:: *)
Int[u_.*Sqrt[c_+d_.*x_^2]/(a_+b_.*x_),x_Symbol] :=
  a*Int[u/Sqrt[c+d*x^2],x] -
  b*Int[x*u/Sqrt[c+d*x^2],x] /;
FreeQ[{a,b,c,d},x] && ZeroQ[c-a^2] && ZeroQ[d+b^2]


(* ::Code:: *)
Int[Sqrt[b_.*x_^2+Sqrt[a_+c_.*x_^4]]/Sqrt[a_+c_.*x_^4],x_Symbol] :=
  ArcTanh[Rt[2*b,2]*x/Sqrt[b*x^2+Sqrt[a+c*x^4]]]/Rt[2*b,2] /;
FreeQ[{a,b,c},x] && ZeroQ[c-b^2] && PosQ[b]


(* ::Code:: *)
Int[Sqrt[b_.*x_^2+Sqrt[a_+c_.*x_^4]]/Sqrt[a_+c_.*x_^4],x_Symbol] :=
  ArcTan[Rt[-2*b,2]*x/Sqrt[b*x^2+Sqrt[a+c*x^4]]]/Rt[-2*b,2] /;
FreeQ[{a,b,c},x] && ZeroQ[c-b^2] && NegQ[b]


(* ::Code:: *)
Int[u_.*Sqrt[v_+Sqrt[a_+w_]]/Sqrt[a_+w_],x_Symbol] :=
  Dist[(1-I)/2, Int[u/Sqrt[Sqrt[a]-I*v],x]] +
  Dist[(1+I)/2, Int[u/Sqrt[Sqrt[a]+I*v],x]] /;
FreeQ[a,x] && ZeroQ[w-v^2] && PositiveQ[a] && Not[LinearQ[v,x]]


(* ::Code:: *)
If[ShowSteps,

Int[1/(a_+b_.*u_),x_Symbol] :=
  Module[{lst=ConstantFactor[a+b*u,x]},
  ShowStep["","Int[1/(a*c+b*c*u),x]","Int[1/(a+b*u),x]/c",Hold[
  Dist[1/lst[[1]],Int[1/lst[[2]],x]]]] /;
 lst[[1]]=!=1] /;
SimplifyFlag && FreeQ[{a,b},x] && (
	MatchQ[u,f_^(c_.+d_.*x) /; FreeQ[{c,d,f},x]] ||
	MatchQ[u,f_[c_.+d_.*x] /; FreeQ[{c,d},x] && MemberQ[{Tan,Cot,Tanh,Coth},f]]),

Int[1/(a_+b_.*u_),x_Symbol] :=
  Module[{lst=ConstantFactor[a+b*u,x]},
  Dist[1/lst[[1]],Int[1/lst[[2]],x]] /;
 lst[[1]]=!=1] /;
FreeQ[{a,b},x] && (
	MatchQ[u,f_^(c_.+d_.*x) /; FreeQ[{c,d,f},x]] ||
	MatchQ[u,f_[c_.+d_.*x] /; FreeQ[{c,d},x] && MemberQ[{Tan,Cot,Tanh,Coth},f]])]
(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Code:: *)
Int[(c_.*(a_.+b_.*x_)^n_.)^m_,x_Symbol] :=
  (a+b*x)*(c*(a+b*x)^n)^m*Log[a+b*x]/b /;
FreeQ[{a,b,c,m,n},x] && ZeroQ[m*n+1]


(* ::Code:: *)
Int[(c_.*(a_.+b_.*x_)^n_)^m_,x_Symbol] :=
  (a+b*x)*(c*(a+b*x)^n)^m/(b*(m*n+1)) /;
FreeQ[{a,b,c,m,n},x] && NonzeroQ[m*n+1]


(* ::Code:: *)
Int[(a_.*x_^m_.+b_.*x_^n_.)^p_,x_Symbol] :=
  Int[x^(m*p)*(a+b*x^(n-m))^p,x] /;
FreeQ[{a,b,m,n},x] && IntegerQ[p] && ZeroQ[m*p+1-n+m] && Not[IntegersQ[m,n]]


(* ::Code:: *)
Int[(a_.*x_^m_.+b_.*x_^n_.)^p_,x_Symbol] :=
  Int[(x^m*(a+b*x^(n-m)))^p,x] /;
FreeQ[{a,b,m,n},x] && FractionQ[p] && ZeroQ[m*p+1-n+m]


(* ::Code:: *)
Int[(a_.*x_^m_.+b_.*x_^n_.+c_.*x_^q_.)^p_,x_Symbol] :=
  Int[(x^m*(a+b*x^(n-m)+c*x^(q-m)))^p,x] /;
FreeQ[{a,b,c},x] && IntegersQ[m,n,q] && FractionQ[p] && m<=n<=q


(* ::Code:: *)
Int[u_.*x_^m_./(a_.*x_^n_.+b_.*x_^p_),x_Symbol] :=
  Int[u*x^(m-n)/(a+b*x^(p-n)),x] /;
FreeQ[{a,b},x] && FractionQ[{m,n,p}] && 0<n<=p


(* ::Code:: *)
Int[(u_.*x_^m_.+v_)/(a_.*x_^n_.+b_.*x_^p_),x_Symbol] :=
  Int[u*x^(m-n)/(a+b*x^(p-n)),x] + Int[v/(a*x^n+b*x^p),x] /;
FreeQ[{a,b},x] && FractionQ[{m,n,p}] && 0<n<=p && Not[PolynomialQ[v,x]]


(* ::Code:: *)
If[ShowSteps,
Int[x_^m_.*u_,x_Symbol] :=
  ShowStep["","Int[x^m*(u+v+\[CenterEllipsis]),x]","Int[x^m*u+x^m*v+\[CenterEllipsis],x]",Hold[
  Int[Map[Function[x^m*#],u],x]]] /;
SimplifyFlag && FreeQ[m,x] && SumQ[u],

Int[x_^m_.*u_,x_Symbol] :=
  Int[Map[Function[x^m*#],u],x] /;
FreeQ[m,x] && SumQ[u]]


(* ::Code:: *)
Int[1/(x_*Sqrt[a_+b_.*x_^n_.]),x_Symbol] :=
  -2*ArcTanh[Sqrt[a+b*x^n]/Rt[a,2]]/(n*Rt[a,2]) /;
FreeQ[{a,b,n},x] && PosQ[a]


(* ::Code:: *)
Int[1/(x_*Sqrt[a_+b_.*x_^n_.]),x_Symbol] :=
  2*ArcTan[Sqrt[a+b*x^n]/Rt[-a,2]]/(n*Rt[-a,2]) /;
FreeQ[{a,b,n},x] && NegQ[a]


(* ::Code:: *)
Int[(a_+b_.*x_^n_.)^p_/x_,x_Symbol] :=
  (a+b*x^n)^p/(n*p) +
  Dist[a,Int[(a+b*x^n)^(p-1)/x,x]] /;
FreeQ[{a,b,n},x] && FractionQ[p] && p>0


(* ::Code:: *)
Int[(a_+b_.*x_^n_.)^p_/x_,x_Symbol] :=
  -(a+b*x^n)^(p+1)/(a*n*(p+1)) +
  Dist[1/a,Int[(a+b*x^n)^(p+1)/x,x]] /;
FreeQ[{a,b,n},x] && FractionQ[p] && p<-1


(* ::Code:: *)
Int[1/((a_.+b_.*x_)*Sqrt[c_.+d_.*x_]),x_Symbol] :=
  -2*ArcTanh[Sqrt[c+d*x]/Rt[(b*c-a*d)/b,2]]/(b*Rt[(b*c-a*d)/b,2]) /;
FreeQ[{a,b,c,d},x] && PosQ[(b*c-a*d)/b]


(* ::Code:: *)
Int[1/((a_.+b_.*x_)*Sqrt[c_.+d_.*x_]),x_Symbol] :=
  2*ArcTan[Sqrt[c+d*x]/Rt[(a*d-b*c)/b,2]]/(b*Rt[(a*d-b*c)/b,2]) /;
FreeQ[{a,b,c,d},x] && NegQ[(b*c-a*d)/b]


(* ::Code:: *)
Int[1/(Sqrt[a_+b_.*x_]*Sqrt[c_+b_.*x_]),x_Symbol] :=
  ArcCosh[b*x/a]/b /;
FreeQ[{a,b,c},x] && ZeroQ[a+c] && PositiveQ[a]


(* ::Code:: *)
Int[1/(Sqrt[a_+b_.*x_]*Sqrt[c_+d_.*x_]),x_Symbol] :=
  ArcSin[(a-c+2*b*x)/(a+c)]/b /;
FreeQ[{a,b,c,d},x] && ZeroQ[b+d] && PositiveQ[a+c]


(* ::Code:: *)
Int[1/(Sqrt[a_.+b_.*x_]*Sqrt[c_.+d_.*x_]),x_Symbol] :=
  2/(Rt[b,2]*Sqrt[d])*ArcSinh[Rt[b,2]*Sqrt[c+d*x]/Sqrt[a*d-b*c]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a*d-b*c] && PositiveQ[d/(a*d-b*c)] && Not[NegativeQ[a*d-b*c]] && PosQ[b]


(* ::Code:: *)
Int[1/(Sqrt[a_.+b_.*x_]*Sqrt[c_.+d_.*x_]),x_Symbol] :=
  2/(Rt[-b,2]*Sqrt[d])*ArcSin[Rt[-b,2]*Sqrt[c+d*x]/Sqrt[a*d-b*c]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a*d-b*c] && PositiveQ[d/(a*d-b*c)] && Not[NegativeQ[a*d-b*c]] && NegQ[b]


(* ::Code:: *)
Int[1/(Sqrt[a_.+b_.*x_]*Sqrt[c_.+d_.*x_]),x_Symbol] :=
  2/Rt[b*d,2]*ArcTanh[Rt[b*d,2]*Sqrt[a+b*x]/(b*Sqrt[c+d*x])] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a*d-b*c] && PosQ[b*d]


(* ::Code:: *)
Int[1/(Sqrt[a_.+b_.*x_]*Sqrt[c_.+d_.*x_]),x_Symbol] :=
  2/Rt[-b*d,2]*ArcTan[Rt[-b*d,2]*Sqrt[a+b*x]/(b*Sqrt[c+d*x])] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a*d-b*c] && NegQ[b*d]


(* ::Code:: *)
Int[(a_.+b_.*x_)^m_*(c_+d_.*x_)^m_,x_Symbol] :=
  Int[(a*c+(a*d+b*c)*x+b*d*x^2)^m,x] /;
FreeQ[{a,b,c,d},x] && FractionQ[m] && ZeroQ[b+d] && PositiveQ[a+c]


(* ::Code:: *)
Int[(a_.+b_.*x_)^m_.*(c_.+d_.*x_)^n_.,x_Symbol] :=
  Dist[(d/b)^n,Int[(a+b*x)^(m+n),x]] /;
FreeQ[{a,b,c,d,m},x] && ZeroQ[b*c-a*d] && Not[IntegerQ[m]] && IntegerQ[n]


(* ::Code:: *)
Int[(a_.+b_.*x_)^m_*(c_.+d_.*x_)^n_,x_Symbol] :=
  (a+b*x)^(m+1)*(c+d*x)^n*Log[a+b*x]/b /;
FreeQ[{a,b,c,d,m,n},x] && ZeroQ[b*c-a*d] && Not[IntegerQ[m]] && Not[IntegerQ[n]] && ZeroQ[m+n+1] && 
(LeafCount[a+b*x]<LeafCount[c+d*x] || LeafCount[a+b*x]==LeafCount[c+d*x] && PosQ[a])


(* ::Code:: *)
Int[(a_.+b_.*x_)^m_*(c_.+d_.*x_)^n_,x_Symbol] :=
  (a+b*x)^(m+1)*(c+d*x)^n/(b*(m+n+1)) /;
FreeQ[{a,b,c,d,m,n},x] && ZeroQ[b*c-a*d] && Not[IntegerQ[m]] && Not[IntegerQ[n]] && 
NonzeroQ[m+n+1]


(* ::Code:: *)
Int[(a_.+b_.*x_)^m_.*(c_.+d_.*x_.)^n_,x_Symbol] :=
  -(a+b*x)^(m+1)*(c+d*x)^(n+1)/((n+1)*(b*c-a*d)) /;
FreeQ[{a,b,c,d,m,n},x] && NonzeroQ[b*c-a*d] && ZeroQ[m+n+2] && NonzeroQ[n+1]


(* ::Code:: *)
Int[(c_.+d_.*x_)^n_./(a_.+b_.*x_),x_Symbol] :=
  (c+d*x)^n/(b*n) +
  Dist[(b*c-a*d)/b,Int[(c+d*x)^(n-1)/(a+b*x),x]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[b*c-a*d] && FractionQ[n] && n>0


(* ::Code:: *)
Int[(a_.+b_.*x_)^m_*(c_.+d_.*x_),x_Symbol] :=
  (a+b*x)^(m+1)*(c+d*x)/(b*(m+2)) +
  Dist[(b*c-a*d)/(b*(m+2)),Int[(a+b*x)^m,x]] /;
FreeQ[{a,b,c,d,m},x] && NonzeroQ[b*c-a*d] && Not[IntegerQ[m]]


(* ::Code:: *)
Int[(a_.+b_.*x_)^m_*(c_.+d_.*x_)^n_,x_Symbol] :=
  (a+b*x)^(m+1)*(c+d*x)^n/(b*(m+n+1)) +
  Dist[n*(b*c-a*d)/(b*(m+n+1)),Int[(a+b*x)^m*(c+d*x)^(n-1),x]] /;
FreeQ[{a,b,c,d,m},x] && NonzeroQ[b*c-a*d] && NonzeroQ[m+n+1] && RationalQ[n] && n>0 &&
Not[IntegerQ[m]] && (IntegerQ[n] || FractionQ[m] && (n<=m || -1<=m<0))


(* ::Code:: *)
Int[(a_.+b_.*x_)^m_.*(c_.+d_.*x_)^n_,x_Symbol] :=
  -(a+b*x)^(m+1)*(c+d*x)^(n+1)/((n+1)*(b*c-a*d)) +
  Dist[b*(m+n+2)/((n+1)*(b*c-a*d)),Int[(a+b*x)^m*(c+d*x)^(n+1),x]] /;
FreeQ[{a,b,c,d,m},x] && NonzeroQ[b*c-a*d] && RationalQ[n] && n<-1 && Not[IntegersQ[m,n]] &&
(Not[RationalQ[m]] || n>=m || -1<=m<0)


(* ::Code:: *)
Int[(a_.+b_.*x_)^m_.*(c_.+d_.*x_)^n_,x_Symbol] :=
  -(a+b*x)^(m+1)*(c+d*x)^(n+1)/((n+1)*(b*c-a*d)) +
  Dist[b*(m+n+2)/((n+1)*(b*c-a*d)),Int[(a+b*x)^m*(c+d*x)^(n+1),x]] /;
FreeQ[{a,b,c,d,m,n},x] && NonzeroQ[b*c-a*d] && NonzeroQ[n+1] && Not[RationalQ[n]] && 
RationalQ[m+n] && Simplify[m+n]<-1


(* ::Code:: *)
Int[(a_.+b_.*x_)*(c_.+d_.*x_)^n_,x_Symbol] :=
  (a+b*x)*(c+d*x)^(n+1)/(d*(n+1)) -
  Dist[b/(d*(n+1)),Int[(c+d*x)^(n+1),x]] /;
FreeQ[{a,b,c,d,n},x] && Not[IntegerQ[n]]


(* ::Code:: *)
Int[(a_.+b_.*x_)^m_*(c_.+d_.*x_)^n_,x_Symbol] :=
  (a+b*x)^m*(c+d*x)^(n+1)/(d*(n+1)) -
  Dist[b*m/(d*(n+1)),Int[(a+b*x)^(m-1)*(c+d*x)^(n+1),x]] /;
FreeQ[{a,b,c,d},x] && RationalQ[{m,n}] && Not[IntegersQ[m,n]] && m>0 && n<-1


(* ::Code:: *)
Int[(a_.+b_.*x_)^m_/(c_+d_.*x_),x_Symbol] :=
  Module[{p=Denominator[m]},
  Dist[p,Subst[Int[x^(m*p+p-1)/(b*c-a*d+d*x^p),x],x,(a+b*x)^(1/p)]]] /;
FreeQ[{a,b,c,d},x] && RationalQ[m] && -1<m<0


(* ::Code:: *)
Int[(a_.+b_.*x_)^m_*(c_.+d_.*x_)^n_,x_Symbol] :=
  Module[{p=Denominator[m]},
  Dist[p,Subst[Int[x^(m*p+p-1)/(b-d*x^p),x],x,(a+b*x)^(1/p)/(c+d*x)^(1/p)]]] /;
FreeQ[{a,b,c,d},x] && RationalQ[{m,n}] && -1<m<0 && m+n==-1


(* ::Code:: *)
Int[1/(x_*Sqrt[a_+b_.*x_]*Sqrt[c_+d_.*x_]),x_Symbol] :=
  -2*ArcTanh[Rt[a*c,2]*Sqrt[a+b*x]/(a*Sqrt[c+d*x])]/Rt[a*c,2] /;
FreeQ[{a,b,c,d},x] && PosQ[a*c]


(* ::Code:: *)
Int[1/(x_*Sqrt[a_+b_.*x_]*Sqrt[c_+d_.*x_]),x_Symbol] :=
  -2*ArcTan[Rt[-a*c,2]*Sqrt[a+b*x]/(a*Sqrt[c+d*x])]/Rt[-a*c,2] /;
FreeQ[{a,b,c,d},x] && NegQ[a*c]


(* ::Code:: *)
Int[(a_+b_.*x_)^n_*(c_+d_.*x_)^n_/x_,x_Symbol] :=
  (a+b*x)^n*(c+d*x)^n/(2*n) +
  Dist[a*c,Int[(a+b*x)^(n-1)*(c+d*x)^(n-1)/x,x]] /;
FreeQ[{a,b,c,d},x] && FractionQ[n] && n>0 && ZeroQ[a*d+b*c]


(* ::Code:: *)
Int[(a_+b_.*x_)^n_*(c_+d_.*x_)^n_/x_,x_Symbol] :=
  (a+b*x)^n*(c+d*x)^n/(2*n) +
  Dist[(a*d+b*c)/2,Int[(a+b*x)^(n-1)*(c+d*x)^(n-1),x]] +
  Dist[a*c,Int[(a+b*x)^(n-1)*(c+d*x)^(n-1)/x,x]] /;
FreeQ[{a,b,c,d},x] && FractionQ[n] && n>0 && NonzeroQ[a*d+b*c]


(* ::Code:: *)
Int[(a_+b_.*x_)^n_*(c_+d_.*x_)^n_/x_,x_Symbol] :=
  -(a+b*x)^(n+1)*(c+d*x)^(n+1)/(2*a*c*(n+1)) +
  Dist[1/(a*c),Int[(a+b*x)^(n+1)*(c+d*x)^(n+1)/x,x]] /;
FreeQ[{a,b,c,d},x] && FractionQ[n] && n<-1 && ZeroQ[a*d+b*c]


(* ::Code:: *)
Int[(a_+b_.*x_)^n_*(c_+d_.*x_)^n_/x_,x_Symbol] :=
  -(a+b*x)^(n+1)*(c+d*x)^(n+1)/(2*a*c*(n+1)) -
  Dist[(a*d+b*c)/(2*a*c),Int[(a+b*x)^n*(c+d*x)^n,x]] +
  Dist[1/(a*c),Int[(a+b*x)^(n+1)*(c+d*x)^(n+1)/x,x]] /;
FreeQ[{a,b,c,d},x] && FractionQ[n] && n<-1 && NonzeroQ[a*d+b*c]


(* ::Code:: *)
Int[(a_+b_.*x_)^n_*(c_+d_.*x_)^p_/x_,x_Symbol] :=
  Dist[b,Int[(a+b*x)^(n-1)*(c+d*x)^p,x]] +
  Dist[a,Int[(a+b*x)^(n-1)*(c+d*x)^p/x,x]] /;
FreeQ[{a,b,c,d},x] && FractionQ[{n,p}] && n>0 && IntegerQ[n-p]


(* ::Code:: *)
Int[(a_+b_.*x_)^n_*(c_+d_.*x_)^p_/x_,x_Symbol] :=
  Dist[1/a,Int[(a+b*x)^(n+1)*(c+d*x)^p/x,x]] -
  Dist[b/a,Int[(a+b*x)^n*(c+d*x)^p,x]] /;
FreeQ[{a,b,c,d},x] && FractionQ[{n,p}] && n<-1 && IntegerQ[n-p]


(* ::Code:: *)
Int[x_^m_*(a_.+b_.*x_)^n_*(c_.+d_.*x_)^n_,x_Symbol] :=
  x^(m-1)*(a+b*x)^(n+1)*(c+d*x)^(n+1)/(2*b*d*(n+1)) +
  Dist[1/(b*d),Int[x^(m-2)*(a+b*x)^(n+1)*(c+d*x)^(n+1),x]] /;
FreeQ[{a,b,c,d},x] && FractionQ[n] && RationalQ[m] && m+2*n+1==0 && m>1 && ZeroQ[a*d+b*c]


(* ::Code:: *)
Int[x_^m_*(a_.+b_.*x_)^n_*(c_.+d_.*x_)^n_,x_Symbol] :=
  x^(m-1)*(a+b*x)^(n+1)*(c+d*x)^(n+1)/(2*b*d*(n+1)) -
  Dist[(a*d+b*c)/(2*b*d),Int[x^(m-1)*(a+b*x)^n*(c+d*x)^n,x]] +
  Dist[1/(b*d),Int[x^(m-2)*(a+b*x)^(n+1)*(c+d*x)^(n+1),x]] /;
FreeQ[{a,b,c,d},x] && FractionQ[n] && RationalQ[m] && m+2*n+1==0 && m>1 && NonzeroQ[a*d+b*c]


(* ::Code:: *)
Int[x_*(a_.+b_.*x_)^n_*(c_.+d_.*x_)^n_,x_Symbol] :=
  (a+b*x)^(n+1)*(c+d*x)^(n+1)/(2*b*d*(n+1)) /;
FreeQ[{a,b,c,d,n},x] && NonzeroQ[n+1] && ZeroQ[a*d+b*c]


(* ::Code:: *)
Int[x_*(a_.+b_.*x_)^n_*(c_.+d_.*x_)^n_,x_Symbol] :=
  (a+b*x)^(n+1)*(c+d*x)^(n+1)/(2*b*d*(n+1)) -
  Dist[(a*d+b*c)/(2*b*d),Int[(a+b*x)^n*(c+d*x)^n,x]] /;
FreeQ[{a,b,c,d},x] && FractionQ[n]


(* ::Code:: *)
Int[x_^m_*(a_.+b_.*x_)^n_*(c_.+d_.*x_)^n_,x_Symbol] :=
  x^(m-1)*(a+b*x)^(n+1)*(c+d*x)^(n+1)/(b*d*(m+2*n+1)) -
  Dist[a*c*(m-1)/(b*d*(m+2*n+1)),Int[x^(m-2)*(a+b*x)^n*(c+d*x)^n,x]] /;
FreeQ[{a,b,c,d},x] && FractionQ[n] && RationalQ[m] && NonzeroQ[m+2*n+1] && m>1 &&
(ZeroQ[m+n] || ZeroQ[a*d+b*c])


(* ::Code:: *)
Int[x_^m_*(a_.+b_.*x_)^n_*(c_.+d_.*x_)^n_,x_Symbol] :=
  x^(m-1)*(a+b*x)^(n+1)*(c+d*x)^(n+1)/(b*d*(m+2*n+1)) -
  Dist[(m+n)*(a*d+b*c)/(b*d*(m+2*n+1)),Int[x^(m-1)*(a+b*x)^n*(c+d*x)^n,x]] -
  Dist[a*c*(m-1)/(b*d*(m+2*n+1)),Int[x^(m-2)*(a+b*x)^n*(c+d*x)^n,x]] /;
FreeQ[{a,b,c,d},x] && FractionQ[n] && RationalQ[m] && NonzeroQ[m+2*n+1] && m>1 &&
NonzeroQ[m+n] && NonzeroQ[a*d+b*c]


(* ::Code:: *)
Int[x_^m_*(a_+b_.*x_)^n_*(c_+d_.*x_)^n_,x_Symbol] :=
  x^(m+1)*(a+b*x)^(n+1)*(c+d*x)^(n+1)/(a*c*(m+1)) /;
FreeQ[{a,b,c,d,n},x] && NonzeroQ[m+1] && ZeroQ[m+2*n+3] && ZeroQ[a*d+b*c]


(* ::Code:: *)
Int[x_^m_*(a_+b_.*x_)^n_*(c_+d_.*x_)^n_,x_Symbol] :=
  x^(m+1)*(a+b*x)^(n+1)*(c+d*x)^(n+1)/(a*c*(m+1)) -
  Dist[(m+n+2)*(a*d+b*c)/(a*c*(m+1)),Int[x^(m+1)*(a+b*x)^n*(c+d*x)^n,x]] /;
FreeQ[{a,b,c,d},x] && FractionQ[n] && RationalQ[m] && m<-1 && ZeroQ[m+2*n+3]


(* ::Code:: *)
Int[x_^m_*(a_+b_.*x_)^n_*(c_+d_.*x_)^n_,x_Symbol] :=
  x^(m+1)*(a+b*x)^(n+1)*(c+d*x)^(n+1)/(a*c*(m+1)) -
  Dist[b*d*(m+2*n+3)/(a*c*(m+1)),Int[x^(m+2)*(a+b*x)^n*(c+d*x)^n,x]] /;
FreeQ[{a,b,c,d},x] && FractionQ[n] && RationalQ[m] && m<-1 && (ZeroQ[m+n+2] || ZeroQ[a*d+b*c])


(* ::Code:: *)
Int[x_^m_*(a_+b_.*x_)^n_*(c_+d_.*x_)^n_,x_Symbol] :=
  x^(m+1)*(a+b*x)^(n+1)*(c+d*x)^(n+1)/(a*c*(m+1)) -
  Dist[(m+n+2)*(a*d+b*c)/(a*c*(m+1)),Int[x^(m+1)*(a+b*x)^n*(c+d*x)^n,x]] -
  Dist[b*d*(m+2*n+3)/(a*c*(m+1)),Int[x^(m+2)*(a+b*x)^n*(c+d*x)^n,x]] /;
FreeQ[{a,b,c,d},x] && FractionQ[n] && RationalQ[m] && m<-1 && NonzeroQ[m+n+2] &&
NonzeroQ[m+2*n+3] && NonzeroQ[a*d+b*c]


(* ::Code:: *)
Int[x_^m_.*Sqrt[a_+b_.*x_]/Sqrt[c_.+d_.*x_],x_Symbol] :=
  x^m*Sqrt[a+b*x]*Sqrt[c+d*x]/(d*(m+1)) -
  Dist[a*c*m/(d*(m+1)),Int[x^(m-1)/(Sqrt[a+b*x]*Sqrt[c+d*x]),x]] +
  Dist[(a*d-b*c*(2*m+1))/(2*d*(m+1)),Int[x^m/(Sqrt[a+b*x]*Sqrt[c+d*x]),x]] /;
FreeQ[{a,b,c,d},x] && IntegerQ[m] && m>0


(* ::Code:: *)
Int[Sqrt[a_+b_.*x_]/(x_^2*Sqrt[c_.+d_.*x_]),x_Symbol] :=
  -Sqrt[a+b*x]*Sqrt[c+d*x]/(c*x) +
  Dist[(b*c-a*d)/(2*c),Int[1/(x*Sqrt[a+b*x]*Sqrt[c+d*x]),x]] /;
FreeQ[{a,b,c,d},x]


(* ::Code:: *)
Int[x_^m_.*Sqrt[a_+b_.*x_]/Sqrt[c_.+d_.*x_],x_Symbol] :=
  x^(m+1)*Sqrt[a+b*x]*Sqrt[c+d*x]/(c*(m+1)) -
  Dist[(b*c+a*d*(2*m+3))/(2*c*(m+1)),Int[x^(m+1)/(Sqrt[a+b*x]*Sqrt[c+d*x]),x]] -
  Dist[b*d*(m+2)/(c*(m+1)),Int[x^(m+2)/(Sqrt[a+b*x]*Sqrt[c+d*x]),x]] /;
FreeQ[{a,b,c,d},x] && IntegerQ[m] && m<-2


(* ::Code:: *)
Int[x_^m_.*(a_+b_.*x_)^n_*(c_.+d_.*x_)^p_.,x_Symbol] :=
  Sum[Dist[(-a)^(m-k)/b^m*Binomial[m,m-k],Int[(a+b*x)^(n+k)*(c+d*x)^p,x]],{k,0,m}] /;
FreeQ[{a,b,c,d,n,p},x] && IntegersQ[m,p-n] && m>0 && Not[IntegerQ[n]] && p-n<0 &&
(m>3 || n=!=-1/2)


(* ::Code:: *)
Int[x_^m_.*(a_+b_.*x_)^n_*(c_.+d_.*x_)^p_,x_Symbol] :=
  Sum[Dist[(-a)^(m-k)/b^m*Binomial[m,m-k],Int[(a+b*x)^(n+k)*(c+d*x)^p,x]],{k,0,p-n-1}] + 
  Sum[Dist[(-a/b)^(m-k)/(-a)^(p-n)*Binomial[m-k-1,p-n-1],Int[x^k*(a+b*x)^p*(c+d*x)^p,x]],{k,0,m-p+n}] /;
FreeQ[{a,b,c,d,n,p},x] && IntegersQ[m,p-n] && 0<p-n<=m && Not[IntegerQ[n]]


(* ::Code:: *)
Int[x_^m_.*(a_+b_.*x_)^n_*(c_.+d_.*x_)^p_,x_Symbol] :=
  Sum[Dist[a^(m-k)/(-b)^m*Binomial[k-m-1,-m-1],Int[(a+b*x)^(n+k)*(c+d*x)^p,x]],{k,0,p-n-1}] + 
  Sum[Dist[(-b/a)^k/a^(p-n)*Binomial[p-n+k-1,p-n-1],Int[x^(m+k)*(a+b*x)^p*(c+d*x)^p,x]],{k,0,-m-1}] /;
FreeQ[{a,b,c,d,n,p},x] && IntegersQ[m,p-n] && m<0 && p-n>0 && Not[IntegerQ[n]]



(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Code:: *)
Int[1/Sqrt[a_+b_.*x_+c_.*x_^2],x_Symbol] :=
  (b+2*c*x)/Sqrt[a+b*x+c*x^2]*Int[1/(b+2*c*x),x] /;
FreeQ[{a,b,c},x] && ZeroQ[b^2-4*a*c]


(* ::Code:: *)
Int[1/Sqrt[a_.+b_.*x_+c_.*x_^2],x_Symbol] :=
  ArcSinh[(b+2*c*x)/(Rt[c,2]*Sqrt[4*a-b^2/c])]/Rt[c,2] /;
FreeQ[{a,b,c},x] && PositiveQ[4*a-b^2/c] && PosQ[c]


(* ::Code:: *)
Int[1/Sqrt[a_.+b_.*x_+c_.*x_^2],x_Symbol] :=
  -ArcSin[(b+2*c*x)/(Rt[-c,2]*Sqrt[4*a-b^2/c])]/Rt[-c,2] /;
FreeQ[{a,b,c},x] && PositiveQ[4*a-b^2/c] && NegQ[c]


(* ::Code:: *)
Int[1/Sqrt[b_.*x_+c_.*x_^2],x_Symbol] :=
  2*ArcTanh[Rt[c,2]*x/Sqrt[b*x+c*x^2]]/Rt[c,2] /;
FreeQ[{b,c},x] && Not[PositiveQ[-b^2/c]] && PosQ[c]


(* ::Code:: *)
Int[1/Sqrt[b_.*x_+c_.*x_^2],x_Symbol] :=
  2*ArcTan[Rt[-c,2]*x/Sqrt[b*x+c*x^2]]/Rt[-c,2] /;
FreeQ[{b,c},x] && Not[PositiveQ[-b^2/c]] && NegQ[c]


(* ::Code:: *)
Int[1/Sqrt[a_+b_.*x_+c_.*x_^2],x_Symbol] :=
  ArcTanh[(b+2*c*x)/(2*Rt[c,2]*Sqrt[a+b*x+c*x^2])]/Rt[c,2] /;
FreeQ[{a,b,c},x] && NonzeroQ[b^2-4*a*c] && PosQ[c]


(* ::Code:: *)
Int[1/Sqrt[a_+b_.*x_+c_.*x_^2],x_Symbol] :=
  -ArcTan[(b+2*c*x)/(2*Rt[-c,2]*Sqrt[a+b*x+c*x^2])]/Rt[-c,2] /;
FreeQ[{a,b,c},x] && NonzeroQ[b^2-4*a*c] && NegQ[c]


(* ::Code:: *)
Int[(a_+b_.*x_+c_.*x_^2)^n_,x_Symbol] :=
  (b+2*c*x)*(a+b*x+c*x^2)^n/(2*c*(2*n+1)) /;
FreeQ[{a,b,c,n},x] && ZeroQ[b^2-4*a*c] && NonzeroQ[2*n+1] && Not[IntegerQ[n]]


(* ::Code:: *)
Int[1/(a_.+b_.*x_+c_.*x_^2)^(3/2),x_Symbol] :=
  -2*(b+2*c*x)/((b^2-4*a*c)*Sqrt[a+b*x+c*x^2]) /;
FreeQ[{a,b,c},x] && NonzeroQ[b^2-4*a*c]


(* ::Code:: *)
Int[(a_.+b_.*x_+c_.*x_^2)^n_,x_Symbol] :=
  (b+2*c*x)*(a+b*x+c*x^2)^n/(2*c*(2*n+1)) -
  Dist[n*(b^2-4*a*c)/(2*c*(2*n+1)),Int[(a+b*x+c*x^2)^(n-1),x]] /;
FreeQ[{a,b,c},x] && NonzeroQ[b^2-4*a*c] && FractionQ[n] && n>0


(* ::Code:: *)
Int[(a_.+b_.*x_+c_.*x_^2)^n_,x_Symbol] :=
  (b+2*c*x)*(a+b*x+c*x^2)^(n+1)/((n+1)*(b^2-4*a*c)) -
  Dist[2*c*(2*n+3)/((n+1)*(b^2-4*a*c)),Int[(a+b*x+c*x^2)^(n+1),x]] /;
FreeQ[{a,b,c},x] && NonzeroQ[b^2-4*a*c] && FractionQ[n] && n<-1


(* ::Code:: *)
(* Int[1/((d_+e_.*x_)*Sqrt[a_.+c_.*x_^2]),x_Symbol] :=
   e*Sqrt[a+c*x^2]/(c*d*(d+e*x)) /;
FreeQ[{a,c,d,e},x] && ZeroQ[c*d^2+a*e^2] *)


(* ::Code:: *)
Int[1/((d_+e_.*x_)*Sqrt[a_.+c_.*x_^2]),x_Symbol] :=
  -ArcTanh[(a*e-c*d*x)/(Rt[c*d^2+a*e^2,2]*Sqrt[a+c*x^2])]/Rt[c*d^2+a*e^2,2] /;
FreeQ[{a,c,d,e},x] && PosQ[c*d^2+a*e^2]


(* ::Code:: *)
Int[1/((d_+e_.*x_)*Sqrt[a_.+c_.*x_^2]),x_Symbol] :=
  ArcTan[(a*e-c*d*x)/(Rt[-c*d^2-a*e^2,2]*Sqrt[a+c*x^2])]/Rt[-c*d^2-a*e^2,2] /;
FreeQ[{a,c,d,e},x] && NegQ[c*d^2+a*e^2]


(* ::Code:: *)
Int[1/((d_.+e_.*x_)*Sqrt[a_.+b_.*x_+c_.*x_^2]),x_Symbol] :=
  2*e*Sqrt[a+b*x+c*x^2]/((2*c*d-b*e)*(d+e*x)) /;
FreeQ[{a,b,c,d,e},x] && ZeroQ[c*d^2-b*d*e+a*e^2] && NonzeroQ[2*c*d-b*e]


(* ::Code:: *)
Int[1/((d_.+e_.*x_)*Sqrt[a_+b_.*x_+c_.*x_^2]),x_Symbol] :=
  (b+2*c*x)/Sqrt[a+b*x+c*x^2]*Int[1/((d+e*x)*(b+2*c*x)),x] /;
FreeQ[{a,b,c,d,e},x] && ZeroQ[b^2-4*a*c]


(* ::Code:: *)
Int[1/((d_.+e_.*x_)*Sqrt[a_.+b_.*x_+c_.*x_^2]),x_Symbol] :=
  2/(e*Rt[(b^2-4*a*c)/c,2])*ArcTan[2*Sqrt[a+b*x+c*x^2]/Rt[(b^2-4*a*c)/c,2]] /;
FreeQ[{a,b,c,d,e},x] && ZeroQ[2*c*d-b*e] && PosQ[(b^2-4*a*c)/c]


(* ::Code:: *)
Int[1/((d_.+e_.*x_)*Sqrt[a_.+b_.*x_+c_.*x_^2]),x_Symbol] :=
  -2/(e*Rt[(4*a*c-b^2)/c,2])*ArcTanh[2*Sqrt[a+b*x+c*x^2]/Rt[(4*a*c-b^2)/c,2]] /;
FreeQ[{a,b,c,d,e},x] && ZeroQ[2*c*d-b*e] && NegQ[(b^2-4*a*c)/c]


(* ::Code:: *)
Int[1/((d_.+e_.*x_)*Sqrt[a_.+b_.*x_+c_.*x_^2]),x_Symbol] :=
  -1/Rt[c*d^2-b*d*e+a*e^2,2]*
  ArcTanh[(2*a*e-b*d-(2*c*d-b*e)*x)/(2*Rt[c*d^2-b*d*e+a*e^2,2]*Sqrt[a+b*x+c*x^2])] /;
FreeQ[{a,b,c,d,e},x] && NonzeroQ[b^2-4*a*c] && NonzeroQ[2*c*d-b*e] && PosQ[c*d^2-b*d*e+a*e^2]


(* ::Code:: *)
Int[1/((d_.+e_.*x_)*Sqrt[a_.+b_.*x_+c_.*x_^2]),x_Symbol] :=
  1/Rt[-c*d^2+b*d*e-a*e^2,2]*
  ArcTan[(2*a*e-b*d-(2*c*d-b*e)*x)/(2*Rt[-c*d^2+b*d*e-a*e^2,2]*Sqrt[a+b*x+c*x^2])] /;
FreeQ[{a,b,c,d,e},x] && NonzeroQ[b^2-4*a*c] && NonzeroQ[2*c*d-b*e] && NegQ[c*d^2-b*d*e+a*e^2]


(* ::Code:: *)
Int[(a_.+b_.*x_+c_.*x_^2)^n_/(d_.+e_.*x_),x_Symbol] :=
  (a+b*x+c*x^2)^n/(2*e*n) -
  Dist[(2*c*d-b*e)/(2*e^2),Int[(a+b*x+c*x^2)^(n-1),x]] /;
FreeQ[{a,b,c,d,e},x] && FractionQ[n] && n>0 && ZeroQ[c*d^2-b*d*e+a*e^2]


(* ::Code:: *)
Int[(a_.+b_.*x_+c_.*x_^2)^n_/(d_.+e_.*x_),x_Symbol] :=
  (a+b*x+c*x^2)^n/(2*e*n) +
  Dist[(c*d^2-b*d*e+a*e^2)/e^2,Int[(a+b*x+c*x^2)^(n-1)/(d+e*x),x]] /;
FreeQ[{a,b,c,d,e},x] && FractionQ[n] && n>0 && ZeroQ[2*c*d-b*e]


(* ::Code:: *)
Int[(a_.+b_.*x_+c_.*x_^2)^n_/(d_.+e_.*x_),x_Symbol] :=
  (a+b*x+c*x^2)^n/(2*e*n) -
  Dist[(2*c*d-b*e)/(2*e^2), Int[(a+b*x+c*x^2)^(n-1),x]] +
  Dist[(c*d^2-b*d*e+a*e^2)/e^2,Int[(a+b*x+c*x^2)^(n-1)/(d+e*x),x]] /;
FreeQ[{a,b,c,d,e},x] && FractionQ[n] && n>0


(* ::Code:: *)
Int[(a_.+b_.*x_+c_.*x_^2)^n_/(d_.+e_.*x_),x_Symbol] :=
  -e*(a+b*x+c*x^2)^(n+1)/(2*(n+1)*(c*d^2-b*d*e+a*e^2)) +
  Dist[e^2/(c*d^2-b*d*e+a*e^2),Int[(a+b*x+c*x^2)^(n+1)/(d+e*x),x]] /;
FreeQ[{a,b,c,d,e},x] && FractionQ[n] && n<-1 && NonzeroQ[c*d^2-b*d*e+a*e^2] && ZeroQ[2*c*d-b*e]


(* ::Code:: *)
Int[(a_.+b_.*x_+c_.*x_^2)^n_/(d_.+e_.*x_),x_Symbol] :=
  -e*(a+b*x+c*x^2)^(n+1)/(2*(n+1)*(c*d^2-b*d*e+a*e^2)) +
  Dist[(2*c*d-b*e)/(2*(c*d^2-b*d*e+a*e^2)), Int[(a+b*x+c*x^2)^n,x]] +
  Dist[e^2/(c*d^2-b*d*e+a*e^2),Int[(a+b*x+c*x^2)^(n+1)/(d+e*x),x]] /;
FreeQ[{a,b,c,d,e},x] && FractionQ[n] && n<-1 && NonzeroQ[c*d^2-b*d*e+a*e^2]


(* ::Code:: *)
Int[1/Sqrt[a_+b_.*x_^2+c_.*x_^4],x_Symbol] :=
  Module[{q=Rt[b^2-4*a*c,2]},
  Sqrt[1+2*c*x^2/(b-q)]*Sqrt[1+2*c*x^2/(b+q)]/Sqrt[a+b*x^2+c*x^4]*
  Int[1/(Sqrt[1+2*c*x^2/(b-q)]*Sqrt[1+2*c*x^2/(b+q)]),x]] /;
FreeQ[{a,b,c},x] && NonzeroQ[b^2-4*a*c]


(* ::Code:: *)
Int[(d_.+e_.*x_^2)/Sqrt[a_+b_.*x_^2+c_.*x_^4],x_Symbol] :=
  Dist[(b+2*c*x^2)/Sqrt[a+b*x^2+c*x^4],Int[(d+e*x^2)/(b+2*c*x^2),x]] /;
FreeQ[{a,b,c,d,e},x] && ZeroQ[b^2-4*a*c]


(* ::Code:: *)
Int[(d_.+e_.*x_^2)/Sqrt[a_+b_.*x_^2+c_.*x_^4],x_Symbol] :=
  Module[{q=Rt[b^2-4*a*c,2]},
  Dist[1/Sqrt[a],Int[(d+e*x^2)/(Sqrt[1+2*c*x^2/(b-q)]*Sqrt[1+2*c*x^2/(b+q)]),x]]] /;
FreeQ[{a,b,c,d,e},x] && NonzeroQ[b^2-4*a*c] && PositiveQ[a]


(* ::Code:: *)
Int[(d_.+e_.*x_^2)/Sqrt[a_+b_.*x_^2+c_.*x_^4],x_Symbol] :=
  Module[{q=Rt[b^2-4*a*c,2]},
  Sqrt[1+2*c*x^2/(b-q)]*Sqrt[1+2*c*x^2/(b+q)]/Sqrt[a+b*x^2+c*x^4]*
  Int[(d+e*x^2)/(Sqrt[1+2*c*x^2/(b-q)]*Sqrt[1+2*c*x^2/(b+q)]),x]] /;
FreeQ[{a,b,c,d,e},x] && NonzeroQ[b^2-4*a*c]


(* ::Code:: *)
Int[1/(x_*Sqrt[b_.*x_^n_.+c_.*x_^j_.]),x_Symbol] :=
  -2*Sqrt[b*x^n+c*x^j]/(b*n*x^n) /;
FreeQ[{b,c,n},x] && ZeroQ[j-2*n]


(* ::Code:: *)
Int[1/(x_*Sqrt[a_+b_.*x_^n_.+c_.*x_^j_.]),x_Symbol] :=
  -ArcTanh[(2*a+b*x^n)/(2*Rt[a,2]*Sqrt[a+b*x^n+c*x^j])]/(n*Rt[a,2]) /;
FreeQ[{a,b,c,n},x] && ZeroQ[j-2*n] && NonzeroQ[b^2-4*a*c] && PosQ[a]


(* ::Code:: *)
Int[1/(x_*Sqrt[a_+b_.*x_^n_.+c_.*x_^j_.]),x_Symbol] :=
  ArcTan[(2*a+b*x^n)/(2*Rt[-a,2]*Sqrt[a+b*x^n+c*x^j])]/(n*Rt[-a,2]) /;
FreeQ[{a,b,c,n},x] && ZeroQ[j-2*n] && NonzeroQ[b^2-4*a*c] && NegQ[a]


(* ::Code:: *)
Int[(a_+b_.*x_^n_+c_.*x_^j_)^p_,x_Symbol] :=
  Sqrt[a+b*x^n+c*x^(2*n)]/(b+2*c*x^n)*Dist[1/(4*c)^(p-1/2),Int[(b+2*c*x^n)^(2*p),x]] /;
FreeQ[{a,b,c},x] && ZeroQ[j-2*n] && IntegersQ[n,p-1/2] && n>1 && p>0 && ZeroQ[b^2-4*a*c]


(* ::Code:: *)
Int[(a_+b_.*x_^n_+c_.*x_^j_)^p_,x_Symbol] :=
  (b+2*c*x^n)/Sqrt[a+b*x^n+c*x^(2*n)]*Dist[1/(4*c)^(p+1/2),Int[(b+2*c*x^n)^(2*p),x]] /;
FreeQ[{a,b,c},x] && ZeroQ[j-2*n] && IntegersQ[n,p+1/2] && n>1 && p<0 && ZeroQ[b^2-4*a*c]


(* ::Code:: *)
Int[(a_+b_.*x_^n_+c_.*x_^j_)^p_,x_Symbol] :=
  x*(a+b*x^n+c*x^(2*n))^p/(2*n*p+1) +
  Dist[n*p/(2*n*p+1),Int[(2*a+b*x^n)*(a+b*x^n+c*x^(2*n))^(p-1),x]] /;
FreeQ[{a,b,c},x] && ZeroQ[j-2*n] && IntegerQ[n] && n>1 && FractionQ[p] && p>0 && 
NonzeroQ[b^2-4*a*c] && NonzeroQ[2*n*p+1]


(* ::Code:: *)
Int[(b_.*x_+c_.*x_^2)^p_/x_,x_Symbol] :=
  (b*x+c*x^2)^(p+1)/(b*p*x) -
  Dist[c*(2*p+1)/(b*p),Int[(b*x+c*x^2)^p,x]] /;
FreeQ[{b,c},x] && FractionQ[p] && p<-1/2


(* ::Code:: *)
Int[x_^m_.*(a_+b_.*x_^n_.+c_.*x_^j_)^p_,x_Symbol] :=
  Sqrt[a+b*x^n+c*x^(2*n)]/(b+2*c*x^n)*Dist[1/(4*c)^(p-1/2),Int[x^m*(b+2*c*x^n)^(2*p),x]] /;
FreeQ[{a,b,c},x] && ZeroQ[j-2*n] && IntegersQ[m,n,p-1/2] && n>0 && p>0 && ZeroQ[b^2-4*a*c] &&
NonzeroQ[m-n+1]


(* ::Code:: *)
Int[x_^m_.*(a_+b_.*x_^n_.+c_.*x_^j_)^p_,x_Symbol] :=
  (b+2*c*x^n)/Sqrt[a+b*x^n+c*x^(2*n)]*Dist[1/(4*c)^(p+1/2),Int[x^m*(b+2*c*x^n)^(2*p),x]] /;
FreeQ[{a,b,c},x] && ZeroQ[j-2*n] && IntegersQ[m,n,p+1/2] && n>0 && p<0 && ZeroQ[b^2-4*a*c] &&
NonzeroQ[m-n+1]


(* ::Code:: *)
Int[x_^m_*(a_.+b_.*x_+c_.*x_^2)^p_,x_Symbol] :=
  -x^(m-1)*(a+b*x+c*x^2)^(p+1)/(c*(m-1)) -
  Dist[b/(2*c),Int[x^(m-1)*(a+b*x+c*x^2)^p,x]] +
  Dist[1/c,Int[x^(m-2)*(a+b*x+c*x^2)^(p+1),x]] /;
FreeQ[{a,b,c},x] && IntegerQ[m] && FractionQ[p] && p<-1 && ZeroQ[m+2*p+1]


(* ::Code:: *)
Int[x_^m_*(a_+b_.*x_^n_.+c_.*x_^j_)^p_,x_Symbol] :=
  x^(m+1)*(a+b*x^n+c*x^(2*n))^p/(m+1) -
  Dist[b*n*p/(m+1),Int[x^(m+n)*(a+b*x^n+c*x^(2*n))^(p-1),x]] -
  Dist[2*c*n*p/(m+1),Int[x^(m+2*n)*(a+b*x^n+c*x^(2*n))^(p-1),x]] /;
FreeQ[{a,b,c},x] && ZeroQ[j-2*n] && IntegersQ[m,n] && m<-1 && n>0 && FractionQ[p] && p>0


(* ::Code:: *)
(* Int[x_^m_*(a_+b_.*x_^n_.+c_.*x_^j_)^p_,x_Symbol] :=
  x^(m+1)*(a+b*x^n+c*x^(2*n))^p/(m+2*n*p+1) +
  Dist[2*a*n*p/(m+2*n*p+1),Int[x^m*(a+b*x^n+c*x^(2*n))^(p-1),x]] +
  Dist[b*n*p/(m+2*n*p+1),Int[x^(m+n)*(a+b*x^n+c*x^(2*n))^(p-1),x]] /;
FreeQ[{a,b,c},x] && ZeroQ[j-2*n] && IntegersQ[m,n] && m<-1 && n>0 && FractionQ[p] && p>0 &&
NonzeroQ[m+2*n*p+1] *)


(* ::Code:: *)
Int[x_^m_*(a_+b_.*x_^n_.+c_.*x_^j_)^p_,x_Symbol] :=
  x^(m+1)*(a+b*x^n+c*x^(2*n))^(p+1)/(a*(m+1)) -
  Dist[b*(m+n*(p+1)+1)/(a*(m+1)),Int[x^(m+n)*(a+b*x^n+c*x^(2*n))^p,x]] -
  Dist[c*(m+2*n*(p+1)+1)/(a*(m+1)),Int[x^(m+2*n)*(a+b*x^n+c*x^(2*n))^p,x]] /;
FreeQ[{a,b,c,p},x] && ZeroQ[j-2*n] && IntegersQ[m,n] && m<-1 && n>0 && FractionQ[p] &&
NonzeroQ[m+n*(p+1)+1] && NonzeroQ[m+2*n*(p+1)+1]


(* ::Code:: *)
Int[x_^m_*(a_+b_.*x_^n_.+c_.*x_^j_)^p_,x_Symbol] :=
  x^(m-2*n+1)*(a+b*x^n+c*x^(2*n))^(p+1)/(c*n*(p+1)) +
  Dist[a/c,Int[x^(m-2*n)*(a+b*x^n+c*x^(2*n))^p,x]] /;
FreeQ[{a,b,c,p},x] && ZeroQ[j-2*n] && IntegersQ[m,n] && 0<2*n<=m && FractionQ[p] &&
ZeroQ[m+n*(p-1)+1]


(* ::Code:: *)
Int[x_^m_*(a_+b_.*x_^n_.+c_.*x_^j_)^p_,x_Symbol] :=
  x^(m-2*n+1)*(a+b*x^n+c*x^(2*n))^(p+1)/(c*(m+2*n*p+1)) -
  Dist[b*(m+n*(p-1)+1)/(c*(m+2*n*p+1)),Int[x^(m-n)*(a+b*x^n+c*x^(2*n))^p,x]] -
  Dist[a*(m-2*n+1)/(c*(m+2*n*p+1)),Int[x^(m-2*n)*(a+b*x^n+c*x^(2*n))^p,x]] /;
FreeQ[{a,b,c,p},x] && ZeroQ[j-2*n] && IntegersQ[m,n] && 0<2*n<=m && FractionQ[p] &&
NonzeroQ[m+2*n*p+1] && NonzeroQ[m+n*(p-1)+1]


(* ::Code:: *)
Int[(d_.+e_.*x_^n_)*(a_+b_.*x_^n_+c_.*x_^j_)^p_,x_Symbol] :=
  x*(b*e*n*p+c*d*(2*n*p+n+1)+c*e*(2*n*p+1)*x^n)*(a+b*x^n+c*x^(2*n))^p/(c*(2*n*p+1)*(2*n*p+n+1)) -
  Dist[n*p/(c*(2*n*p+1)*(2*n*p+n+1)),
    Int[(a*b*e-2*a*c*d*(2*n*p+n+1)-(2*a*c*e*(2*n*p+1)+b*c*d*(2*n*p+n+1)-b^2*e*(n*p+1))*x^n)*
      (a+b*x^n+c*x^(2*n))^(p-1),x]] /;
FreeQ[{a,b,c,d,e},x] && ZeroQ[j-2*n] && IntegerQ[n] && n>1 && FractionQ[p] && p>0 && 
NonzeroQ[b^2-4*a*c] && NonzeroQ[2*n*p+1] && NonzeroQ[2*n*p+n+1] 


(* ::Code:: *)
Int[(a_.+b_.*x_+c_.*x_^2+d_.*x_^3+e_.*x_^4)^p_,x_Symbol] :=
  Subst[Int[(a+5*d^4/(256*e^3)-c*d^2/(16*e^2)+(c-3*d^2/(8*e))*x^2+e*x^4)^p,x],x,d/(4*e)+x] /;
FreeQ[{a,b,c,d,e},x] && IntegerQ[p-1/2] && ZeroQ[d^3-4*c*d*e+8*b*e^2]


(* ::Code:: *)
Int[(a_.+b_.*x_+c_.*x_^2+d_.*x_^3+e_.*x_^4)^p_,x_Symbol] :=
  Dist[-16*a^2,Subst[
    Int[(a*(-3*b^4+16*a*b^2*c-64*a^2*b*d+256*a^3*e-32*a^2*(3*b^2-8*a*c)*x^2+256*a^4*x^4)/(b-4*a*x)^4)^p/(b-4*a*x)^2,x],x,b/(4*a)+1/x]] /;
FreeQ[{a,b,c,d,e},x] && IntegerQ[p-1/2] && ZeroQ[b^3-4*a*b*c+8*a^2*d]


(* ::Code:: *)
Int[u_^p_,x_Symbol] :=
  Module[{v=Expand[u,x]},
  Int[v^p,x] /;
 v=!=u && (
 MatchQ[v,a_+b_.*x^2+c_.*x^4 /; FreeQ[{a,b,c},x]] ||
 MatchQ[v,a_.+b_.*x+c_.*x^2+d_.*x^3+e_.*x^4 /; FreeQ[{a,b,c,d,e},x] && ZeroQ[d^3-4*c*d*e+8*b*e^2]])] /;
PolynomialQ[u,x] && Exponent[u,x]==4 && IntegerQ[p-1/2]
(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Code:: *)
Int[ArcCot[a_.*x_],x_Symbol] :=
  x*ArcCot[a*x] + Log[1+a^2*x^2]/(2*a) /;
FreeQ[a,x]


(* ::Code:: *)
Int[ArcCot[a_.*x_]^n_,x_Symbol] :=
  x*ArcCot[a*x]^n +
  Dist[a*n,Int[x*ArcCot[a*x]^(n-1)/(1+a^2*x^2),x]] /;
FreeQ[a,x] && IntegerQ[n] && n>1


(* ::Code:: *)
Int[x_*ArcCot[a_.*x_]^n_.,x_Symbol] :=
  ArcCot[a*x]^n/(2*a^2) + x^2*ArcCot[a*x]^n/2 +
  Dist[n/(2*a),Int[ArcCot[a*x]^(n-1),x]] /;
FreeQ[a,x] && IntegerQ[n] && n>0


(* ::Code:: *)
Int[x_^m_*ArcCot[a_.*x_]^n_.,x_Symbol] :=
  x^(m-1)*ArcCot[a*x]^n/(a^2*(m+1)) + x^(m+1)*ArcCot[a*x]^n/(m+1) +
  Dist[n/(a*(m+1)),Int[x^(m-1)*ArcCot[a*x]^(n-1),x]] -
  Dist[(m-1)/(a^2*(m+1)),Int[x^(m-2)*ArcCot[a*x]^n,x]] /;
FreeQ[a,x] && IntegerQ[n] && n>0 && RationalQ[m] && m>1


(* ::Code:: *)
Int[ArcCot[a_.*x_]^n_/x_,x_Symbol] :=
  2*ArcCot[a*x]^n*ArcCoth[1-2*I/(I-a*x)] +
  Dist[2*a*n,Int[ArcCot[a*x]^(n-1)*ArcCoth[1-2*I/(I-a*x)]/(1+a^2*x^2),x]] /;
FreeQ[a,x] && IntegerQ[n] && n>1


(* ::Code:: *)
Int[ArcCot[a_.*x_]^n_./x_^2,x_Symbol] :=
  -ArcCot[a*x]^n/x -
  Dist[a*n,Int[ArcCot[a*x]^(n-1)/(x*(1+a^2*x^2)),x]] /;
FreeQ[a,x] && IntegerQ[n] && n>0


(* ::Code:: *)
Int[ArcCot[a_.*x_]^n_./x_^3,x_Symbol] :=
  -a^2*ArcCot[a*x]^n/2 - ArcCot[a*x]^n/(2*x^2) -
  Dist[a*n/2,Int[ArcCot[a*x]^(n-1)/x^2,x]] /;
FreeQ[a,x] && IntegerQ[n] && n>0


(* ::Code:: *)
Int[x_^m_*ArcCot[a_.*x_]^n_.,x_Symbol] :=
  x^(m+1)*ArcCot[a*x]^n/(m+1) + a^2*x^(m+3)*ArcCot[a*x]^n/(m+1) +
  Dist[a*n/(m+1),Int[x^(m+1)*ArcCot[a*x]^(n-1),x]] -
  Dist[a^2*(m+3)/(m+1),Int[x^(m+2)*ArcCot[a*x]^n,x]] /;
FreeQ[a,x] && IntegerQ[n] && n>0 && RationalQ[m] && m<-3


(* ::Code:: *)
Int[ArcCot[a_.*x_]^n_./(c_+d_.*x_),x_Symbol] :=
  -ArcCot[a*x]^n*Log[2*c/(c+d*x)]/d -
  Dist[a*n/d,Int[ArcCot[a*x]^(n-1)*Log[2*c/(c+d*x)]/(1+a^2*x^2),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c^2+d^2] && IntegerQ[n] && n>0


(* ::Code:: *)
Int[ArcCot[a_.*x_]^n_./(x_*(c_+d_.*x_)),x_Symbol] :=
  ArcCot[a*x]^n*Log[2-2*c/(c+d*x)]/c +
  Dist[a*n/c,Int[ArcCot[a*x]^(n-1)*Log[2-2*c/(c+d*x)]/(1+a^2*x^2),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c^2+d^2] && IntegerQ[n] && n>0


(* ::Code:: *)
Int[ArcCot[a_.*x_]^n_./(c_.*x_+d_.*x_^2),x_Symbol] :=
  ArcCot[a*x]^n*Log[2-2*c/(c+d*x)]/c +
  Dist[a*n/c,Int[ArcCot[a*x]^(n-1)*Log[2-2*c/(c+d*x)]/(1+a^2*x^2),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c^2+d^2] && IntegerQ[n] && n>0


(* ::Code:: *)
Int[x_^m_.*ArcCot[a_.*x_]^n_./(c_+d_.*x_),x_Symbol] :=
  Dist[1/d,Int[x^(m-1)*ArcCot[a*x]^n,x]] -
  Dist[c/d,Int[x^(m-1)*ArcCot[a*x]^n/(c+d*x),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c^2+d^2] && RationalQ[m] && m>0 && IntegerQ[n] && n>0


(* ::Code:: *)
Int[x_^m_*ArcCot[a_.*x_]^n_./(c_+d_.*x_),x_Symbol] :=
  Dist[1/c,Int[x^m*ArcCot[a*x]^n,x]] -
  Dist[d/c,Int[x^(m+1)*ArcCot[a*x]^n/(c+d*x),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c^2+d^2] && RationalQ[m] && m<-1 && IntegerQ[n] && n>0


(* ::Code:: *)
Int[1/((c_+d_.*x_^2)*ArcCot[a_.*x_]),x_Symbol] :=
  -Log[ArcCot[a*x]]/(a*c) /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c]


(* ::Code:: *)
Int[ArcCot[a_.*x_]^n_./(c_+d_.*x_^2),x_Symbol] :=
  -ArcCot[a*x]^(n+1)/(a*c*(n+1)) /;
FreeQ[{a,c,d,n},x] && ZeroQ[d-a^2*c] && NonzeroQ[n+1]


(* ::Code:: *)
Int[x_*ArcCot[a_.*x_]^n_./(c_+d_.*x_^2),x_Symbol] :=
  I*ArcCot[a*x]^(n+1)/(d*(n+1)) -
  Dist[1/(a*c),Int[ArcCot[a*x]^n/(I-a*x),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && RationalQ[n] && n>0


(* ::Code:: *)
Int[ArcCot[a_.*x_]^n_./(x_*(c_+d_.*x_^2)),x_Symbol] :=
  I*ArcCot[a*x]^(n+1)/(c*(n+1)) +
  Dist[I/c,Int[ArcCot[a*x]^n/(x*(I+a*x)),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && RationalQ[n] && n>0


(* ::Code:: *)
Int[ArcCot[a_.*x_]^n_./(c_.*x_+d_.*x_^3),x_Symbol] :=
  I*ArcCot[a*x]^(n+1)/(c*(n+1)) +
  Dist[I/c,Int[ArcCot[a*x]^n/(x*(I+a*x)),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && RationalQ[n] && n>0


(* ::Code:: *)
Int[x_^m_*ArcCot[a_.*x_]^n_./(c_+d_.*x_^2),x_Symbol] :=
  Dist[1/d,Int[x^(m-2)*ArcCot[a*x]^n,x]] -
  Dist[c/d,Int[x^(m-2)*ArcCot[a*x]^n/(c+d*x^2),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && RationalQ[{m,n}] && m>1 && n>0


(* ::Code:: *)
Int[x_^m_*ArcCot[a_.*x_]^n_./(c_+d_.*x_^2),x_Symbol] :=
  Dist[1/c,Int[x^m*ArcCot[a*x]^n,x]] -
  Dist[d/c,Int[x^(m+2)*ArcCot[a*x]^n/(c+d*x^2),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && RationalQ[{m,n}] && m<-1 && n>0


(* ::Code:: *)
Int[x_^m_.*ArcCot[a_.*x_]^n_/(c_+d_.*x_^2),x_Symbol] :=
  -Dist[1/(a^(m+1)*c),Subst[Int[x^n*Cot[x]^m,x],x,ArcCot[a*x]]] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && RationalQ[{m,n}] && (n<0 || Not[IntegerQ[n]]) && (IntegerQ[m] || PositiveQ[a])


(* ::Code:: *)
Int[x_^m_.*ArcCot[a_.*x_]^n_/(c_+d_.*x_^2),x_Symbol] :=
  -Dist[1/(a*c),Subst[Int[x^n*(Cot[x]/a)^m,x],x,ArcCot[a*x]]] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && RationalQ[{m,n}] && (n<0 || Not[IntegerQ[n]]) && Not[IntegerQ[m] || PositiveQ[a]]


(* ::Code:: *)
Int[ArcCot[a_.*x_]^n_.*ArcCoth[u_]/(c_+d_.*x_^2),x_Symbol] :=
  Dist[1/2,Int[ArcCot[a*x]^n*Log[Regularize[1+1/u,x]]/(c+d*x^2),x]] -
  Dist[1/2,Int[ArcCot[a*x]^n*Log[Regularize[1-1/u,x]]/(c+d*x^2),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && RationalQ[n] && n>0 && (ZeroQ[u^2-(1-2*I/(I+a*x))^2] || ZeroQ[u^2-(1-2*I/(I-a*x))^2])


(* ::Code:: *)
Int[ArcCot[a_.*x_]^n_.*Log[u_]/(c_+d_.*x_^2),x_Symbol] :=
  I*ArcCot[a*x]^n*PolyLog[2,1-u]/(2*a*c) +
  Dist[n*I/2,Int[ArcCot[a*x]^(n-1)*PolyLog[2,1-u]/(c+d*x^2),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && RationalQ[n] && n>0 && ZeroQ[(1-u)^2-(1-2*I/(I+a*x))^2]


(* ::Code:: *)
Int[ArcCot[a_.*x_]^n_.*Log[u_]/(c_+d_.*x_^2),x_Symbol] :=
  -I*ArcCot[a*x]^n*PolyLog[2,1-u]/(2*a*c) -
  Dist[n*I/2,Int[ArcCot[a*x]^(n-1)*PolyLog[2,1-u]/(c+d*x^2),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && RationalQ[n] && n>0 && ZeroQ[(1-u)^2-(1-2*I/(I-a*x))^2]


(* ::Code:: *)
Int[ArcCot[a_.*x_]^n_.*PolyLog[p_,u_]/(c_+d_.*x_^2),x_Symbol] :=
  -I*ArcCot[a*x]^n*PolyLog[p+1,u]/(2*a*c) -
  Dist[n*I/2,Int[ArcCot[a*x]^(n-1)*PolyLog[p+1,u]/(c+d*x^2),x]] /;
FreeQ[{a,c,d,p},x] && ZeroQ[d-a^2*c] && RationalQ[n] && n>0 && ZeroQ[u^2-(1-2*I/(I+a*x))^2]


(* ::Code:: *)
Int[ArcCot[a_.*x_]^n_.*PolyLog[p_,u_]/(c_+d_.*x_^2),x_Symbol] :=
  I*ArcCot[a*x]^n*PolyLog[p+1,u]/(2*a*c) +
  Dist[n*I/2,Int[ArcCot[a*x]^(n-1)*PolyLog[p+1,u]/(c+d*x^2),x]] /;
FreeQ[{a,c,d,p},x] && ZeroQ[d-a^2*c] && RationalQ[n] && n>0 && ZeroQ[u^2-(1-2*I/(I-a*x))^2]


(* ::Code:: *)
Int[ArcTan[a_.*x_]^m_.*ArcCot[a_.*x_]^n_./(c_+d_.*x_^2),x_Symbol] :=
  ArcTan[a*x]^(m+1)*ArcCot[a*x]^n/(a*c*(m+1)) +
  Dist[n/(m+1),Int[ArcTan[a*x]^(m+1)*ArcCot[a*x]^(n-1)/(c+d*x^2),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && IntegersQ[m,n] && 0<n<m


(* ::Code:: *)
Int[ArcCot[a_.*x_]/Sqrt[c_+d_.*x_^2],x_Symbol] :=
  -2*I*ArcCot[a*x]*ArcTan[Sqrt[1+I*a*x]/Sqrt[1-I*a*x]]/(a*Sqrt[c]) -
  I*PolyLog[2,-I*Sqrt[1+I*a*x]/Sqrt[1-I*a*x]]/(a*Sqrt[c]) +
  I*PolyLog[2,I*Sqrt[1+I*a*x]/Sqrt[1-I*a*x]]/(a*Sqrt[c]) /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && PositiveQ[c]


(* ::Code:: *)
Int[ArcCot[a_.*x_]/Sqrt[c_+d_.*x_^2],x_Symbol] :=
  Sqrt[1+a^2*x^2]/Sqrt[c+d*x^2]*Int[ArcCot[a*x]/Sqrt[1+a^2*x^2],x] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && Not[PositiveQ[c]]


(* ::Code:: *)
Int[ArcCot[a_.*x_]/(c_+d_.*x_^2)^(3/2),x_Symbol] :=
  -1/(a*c*Sqrt[c+d*x^2]) +
  x*ArcCot[a*x]/(c*Sqrt[c+d*x^2]) /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c]


(* ::Code:: *)
Int[ArcCot[a_.*x_]^n_/(c_+d_.*x_^2)^(3/2),x_Symbol] :=
  -n*ArcCot[a*x]^(n-1)/(a*c*Sqrt[c+d*x^2]) +
  x*ArcCot[a*x]^n/(c*Sqrt[c+d*x^2]) -
  Dist[n*(n-1),Int[ArcCot[a*x]^(n-2)/(c+d*x^2)^(3/2),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && RationalQ[n] && n>1


(* ::Code:: *)
Int[ArcCot[a_.*x_]^n_/(c_+d_.*x_^2)^(3/2),x_Symbol] :=
  -ArcCot[a*x]^(n+1)/(a*c*(n+1)*Sqrt[c+d*x^2]) +
  x*ArcCot[a*x]^(n+2)/(c*(n+1)*(n+2)*Sqrt[c+d*x^2]) -
  Dist[1/((n+1)*(n+2)),Int[ArcCot[a*x]^(n+2)/(c+d*x^2)^(3/2),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && RationalQ[n] && n<-1 && n!=-2


(* ::Code:: *)
Int[(c_+d_.*x_^2)^m_.*ArcCot[a_.*x_],x_Symbol] :=
  (c+d*x^2)^m/(2*a*m*(2*m+1)) +
  x*(c+d*x^2)^m*ArcCot[a*x]/(2*m+1) +
  Dist[2*c*m/(2*m+1),Int[(c+d*x^2)^(m-1)*ArcCot[a*x],x]] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && RationalQ[m] && m>0


(* ::Code:: *)
Int[(c_+d_.*x_^2)^m_*ArcCot[a_.*x_],x_Symbol] :=
  -(c+d*x^2)^(m+1)/(4*a*c*(m+1)^2) -
  x*(c+d*x^2)^(m+1)*ArcCot[a*x]/(2*c*(m+1)) +
  Dist[(2*m+3)/(2*c*(m+1)),Int[(c+d*x^2)^(m+1)*ArcCot[a*x],x]] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && RationalQ[m] && m<-1 && m!=-3/2


(* ::Code:: *)
Int[(c_+d_.*x_^2)^m_*ArcCot[a_.*x_]^n_,x_Symbol] :=
  -n*(c+d*x^2)^(m+1)*ArcCot[a*x]^(n-1)/(4*a*c*(m+1)^2) -
  x*(c+d*x^2)^(m+1)*ArcCot[a*x]^n/(2*c*(m+1)) +
  Dist[(2*m+3)/(2*c*(m+1)),Int[(c+d*x^2)^(m+1)*ArcCot[a*x]^n,x]] -
  Dist[n*(n-1)/(4*(m+1)^2),Int[(c+d*x^2)^m*ArcCot[a*x]^(n-2),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && RationalQ[{m,n}] && m<-1 && m!=-3/2 && n>1


(* ::Code:: *)
Int[(c_+d_.*x_^2)^m_*ArcCot[a_.*x_]^n_,x_Symbol] :=
  -(c+d*x^2)^(m+1)*ArcCot[a*x]^(n+1)/(a*c*(n+1)) +
  Dist[2*a*(m+1)/(n+1),Int[x*(c+d*x^2)^m*ArcCot[a*x]^(n+1),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && RationalQ[{m,n}] && m<-1 && n<-1


(* ::Code:: *)
Int[(c_+d_.*x_^2)^m_*ArcCot[a_.*x_]^n_,x_Symbol] :=
  -Dist[c^m/a,Subst[Int[x^n*Csc[x]^(2*(m+1)),x],x,ArcCot[a*x]]] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && IntegerQ[m] && RationalQ[n] && m<-1 && (n<0 || Not[IntegerQ[n]])


(* ::Code:: *)
(* Int[(c_+d_.*x_^2)^m_*ArcCot[a_.*x_]^n_,x_Symbol] :=
  c^(m-1/2)*Sqrt[c+d*x^2]/Sqrt[1+a^2*x^2]*Int[(1+a^2*x^2)^m*ArcCot[a*x]^n,x] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && RationalQ[{m,n}] && m<-1 && (n<0 || Not[IntegerQ[n]]) && IntegerQ[m-1/2] && Not[PositiveQ[c]] *)


(* ::Code:: *)
Int[x_*(c_+d_.*x_^2)^p_.*ArcCot[a_.*x_]^n_.,x_Symbol] :=
  (c+d*x^2)^(p+1)*ArcCot[a*x]^n/(2*d*(p+1)) +
  Dist[n/(2*a*(p+1)),Int[(c+d*x^2)^p*ArcCot[a*x]^(n-1),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && RationalQ[{n,p}] && n>0 && p!=-1


(* ::Code:: *)
Int[x_*(c_+d_.*x_^2)^p_./ArcCot[a_.*x_]^2,x_Symbol] :=
  x*(c+d*x^2)^(p+1)/(a*c*ArcCot[a*x]) -
  Dist[1/a,Int[(1+(2*p+3)*a^2*x^2)*(c+d*x^2)^p/ArcCot[a*x],x]] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && RationalQ[p]


(* ::Code:: *)
Int[x_*ArcCot[a_.*x_]^n_/(c_+d_.*x_^2)^2,x_Symbol] :=
  -x*ArcCot[a*x]^(n+1)/(a*c*(n+1)*(c+d*x^2)) -
  (1-a^2*x^2)*ArcCot[a*x]^(n+2)/(d*(n+1)*(n+2)*(c+d*x^2)) -
  Dist[4/((n+1)*(n+2)),Int[x*ArcCot[a*x]^(n+2)/(c+d*x^2)^2,x]] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && RationalQ[n] && n<-1 && n!=-2


(* ::Code:: *)
Int[x_^m_*(c_+d_.*x_^2)^p_.*ArcCot[a_.*x_]^n_.,x_Symbol] :=
  x^(m+1)*(c+d*x^2)^(p+1)*ArcCot[a*x]^n/(c*(m+1)) +
  Dist[a*n/(m+1),Int[x^(m+1)*(c+d*x^2)^p*ArcCot[a*x]^(n-1),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && IntegersQ[m,n,2*p] && m<-1 && n>0 && ZeroQ[m+2*p+3]


(* ::Code:: *)
Int[x_^m_*(c_+d_.*x_^2)^p_.*ArcCot[a_.*x_]^n_.,x_Symbol] :=
  -x^m*(c+d*x^2)^(p+1)*ArcCot[a*x]^(n+1)/(a*c*(n+1)) +
  Dist[m/(a*(n+1)),Int[x^(m-1)*(c+d*x^2)^p*ArcCot[a*x]^(n+1),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && IntegersQ[m,n,2*p] && n<-1 && ZeroQ[m+2*p+2]


(* ::Code:: *)
Int[x_^m_*(c_+d_.*x_^2)^p_*ArcCot[a_.*x_]^n_.,x_Symbol] :=
  Dist[1/d,Int[x^(m-2)*(c+d*x^2)^(p+1)*ArcCot[a*x]^n,x]] -
  Dist[c/d,Int[x^(m-2)*(c+d*x^2)^p*ArcCot[a*x]^n,x]] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && IntegersQ[m,n,2*p] && m>1 && n!=-1 && p<-1


(* ::Code:: *)
Int[x_^m_*(c_+d_.*x_^2)^p_*ArcCot[a_.*x_]^n_.,x_Symbol] :=
  Dist[1/c,Int[x^m*(c+d*x^2)^(p+1)*ArcCot[a*x]^n,x]] -
  Dist[d/c,Int[x^(m+2)*(c+d*x^2)^p*ArcCot[a*x]^n,x]] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && IntegersQ[m,n,2*p] && m<0 && n!=-1 && p<-1


(* ::Code:: *)
Int[x_^m_*(c_+d_.*x_^2)^p_.*ArcCot[a_.*x_]^n_.,x_Symbol] :=
  x^(m+1)*(c+d*x^2)^(p+1)*ArcCot[a*x]^n/(c*(m+1)) +
  Dist[a*n/(m+1),Int[x^(m+1)*(c+d*x^2)^p*ArcCot[a*x]^(n-1),x]] -
  Dist[a^2*(m+2*p+3)/(m+1),Int[x^(m+2)*(c+d*x^2)^p*ArcCot[a*x]^n,x]] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && IntegersQ[m,n,2*p] && m<-1 && n>0 && NonzeroQ[m+2*p+3]


(* ::Code:: *)
Int[x_^m_.*(c_+d_.*x_^2)^p_.*ArcCot[a_.*x_]^n_.,x_Symbol] :=
  -x^m*(c+d*x^2)^(p+1)*ArcCot[a*x]^(n+1)/(a*c*(n+1)) +
  Dist[m/(a*(n+1)),Int[x^(m-1)*(c+d*x^2)^p*ArcCot[a*x]^(n+1),x]] +
  Dist[a*(m+2*p+2)/(n+1),Int[x^(m+1)*(c+d*x^2)^p*ArcCot[a*x]^(n+1),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && IntegersQ[m,n,2*p] && n<-1 && NonzeroQ[m+2*p+2]


(* ::Code:: *)
Int[(e_.+f_.*x_^m_.)*(c_+d_.*x_^2)^p_*ArcCot[a_.*x_]^n_,x_Symbol] :=
  -Dist[c^p/a^(m+1),Subst[Int[Expand[x^n*TrigReduce[Regularize[(e*a^m+f*Cot[x]^m)*Csc[x]^(2*(p+1)),x]]],x],x,ArcCot[a*x]]] /;
FreeQ[{a,c,d,e,f},x] && ZeroQ[d-a^2*c] && RationalQ[{m,n}] && IntegerQ[p] && p<-1 && (n<0 || Not[IntegerQ[n]]) && (IntegerQ[m] || PositiveQ[a])


(* ::Code:: *)
Int[x_^m_.*(c_+d_.*x_^2)^p_*ArcCot[a_.*x_]^n_,x_Symbol] :=
  -Dist[c^p/a,Subst[Int[x^n*(Cot[x]/a)^m*Csc[x]^(2*(p+1)),x],x,ArcCot[a*x]]] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && RationalQ[{m,n}] && IntegerQ[p] && p<-1 && (n<0 || Not[IntegerQ[n]]) && Not[IntegerQ[m] || PositiveQ[a]]


(* ::Code:: *)
(* Int[x_^m_.*(c_+d_.*x_^2)^p_*ArcCot[a_.*x_]^n_,x_Symbol] :=
  c^(p-1/2)*Sqrt[c+d*x^2]/Sqrt[1+a^2*x^2]*Int[x^m*(1+a^2*x^2)^p*ArcCot[a*x]^n,x] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && RationalQ[{m,n,p}] && p<-1 && (n<0 || Not[IntegerQ[n]]) && IntegerQ[p-1/2] && Not[PositiveQ[c]] *)


(* ::Code:: *)
Int[ArcCot[a_+b_.*x_],x_Symbol] :=
  (a+b*x)*ArcCot[a+b*x]/b + Log[1+(a+b*x)^2]/(2*b) /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[ArcCot[a_+b_.*x_^n_],x_Symbol] :=
  x*ArcCot[a+b*x^n] +
  Dist[b*n,Int[x^n/(1+a^2+2*a*b*x^n+b^2*x^(2*n)),x]] /;
FreeQ[{a,b},x] && RationalQ[n]


(* ::Code:: *)
Int[ArcCot[a_.+b_.*x_^n_.]/x_,x_Symbol] :=
  Dist[I/2,Int[Log[1-I/(a+b*x^n)]/x,x]] -
  Dist[I/2,Int[Log[1+I/(a+b*x^n)]/x,x]] /;
FreeQ[{a,b,n},x]


(* ::Code:: *)
Int[x_^m_.*ArcCot[a_+b_.*x_^n_.],x_Symbol] :=
  x^(m+1)*ArcCot[a+b*x^n]/(m+1) +
  Dist[b*n/(m+1),Int[x^(m+n)/(1+a^2+2*a*b*x^n+b^2*x^(2*n)),x]] /;
FreeQ[{a,b},x] && RationalQ[{m,n}] && m+1!=0 && m+1!=n


(* ::Code:: *)
Int[ArcCot[a_+b_.*x_]^n_.,x_Symbol] :=
  Dist[1/b,Subst[Int[ArcCot[x]^n,x],x,a+b*x]] /;
FreeQ[{a,b},x] && IntegerQ[n] && n>1


(* ::Code:: *)
Int[x_^m_.*ArcCot[a_+b_.*x_]^n_,x_Symbol] :=
  Dist[1/b^(m+1),Subst[Int[(x-a)^m*ArcCot[x]^n,x],x,a+b*x]] /;
FreeQ[{a,b},x] && IntegersQ[m,n] && m>0 && n>1


(* ::Code:: *)
Int[ArcCot[b_.*x_]/(c_+d_.*x_^n_.),x_Symbol] :=
  Dist[I/2,Int[Log[1-I/(b*x)]/(c+d*x^n),x]] -
  Dist[I/2,Int[Log[1+I/(b*x)]/(c+d*x^n),x]] /;
FreeQ[{b,c,d},x] && IntegerQ[n] && Not[n==2 && ZeroQ[d-b^2*c]]


(* ::Code:: *)
Int[ArcCot[a_+b_.*x_]/(c_+d_.*x_^n_.),x_Symbol] :=
  Dist[I/2,Int[Log[1-I/(a+b*x)]/(c+d*x^n),x]] -
  Dist[I/2,Int[Log[1+I/(a+b*x)]/(c+d*x^n),x]] /;
FreeQ[{a,b,c,d},x] && IntegerQ[n] && Not[n==1 && ZeroQ[a*d-b*c]]


(* ::Code:: *)
Int[u_.*ArcCot[c_./(a_.+b_.*x_^n_.)]^m_.,x_Symbol] :=
  Int[u*ArcTan[a/c+b*x^n/c]^m,x] /;
FreeQ[{a,b,c,n,m},x]


(* ::Code:: *)
If[ShowSteps,

Int[u_*v_^n_.,x_Symbol] :=
  Module[{tmp=InverseFunctionOfLinear[u,x]},
  ShowStep["","Int[f[x,ArcCot[a+b*x]]/(1+(a+b*x)^2),x]",
		   "-Subst[Int[f[-a/b+Cot[x]/b,x],x],x,ArcCot[a+b*x]]/b",Hold[
  Dist[-(-Discriminant[v,x]/(4*Coefficient[v,x,2]))^n/Coefficient[tmp[[1]],x,1],
	Subst[Int[Regularize[SubstForInverseFunction[u,tmp,x]*Csc[x]^(2*(n+1)),x],x], x, tmp]]]] /;
 NotFalseQ[tmp] && Head[tmp]===ArcCot && ZeroQ[Discriminant[v,x]*tmp[[1]]^2+D[v,x]^2]] /;
SimplifyFlag && QuadraticQ[v,x] && IntegerQ[n] && n<0 && NegQ[Discriminant[v,x]] && MatchQ[u,r_.*f_^w_ /; FreeQ[f,x]],

Int[u_*v_^n_.,x_Symbol] :=
  Module[{tmp=InverseFunctionOfLinear[u,x]},
  Dist[-(-Discriminant[v,x]/(4*Coefficient[v,x,2]))^n/Coefficient[tmp[[1]],x,1],
	Subst[Int[Regularize[SubstForInverseFunction[u,tmp,x]*Csc[x]^(2*(n+1)),x],x], x, tmp]] /;
 NotFalseQ[tmp] && Head[tmp]===ArcCot && ZeroQ[Discriminant[v,x]*tmp[[1]]^2+D[v,x]^2]] /;
QuadraticQ[v,x] && IntegerQ[n] && n<0 && NegQ[Discriminant[v,x]] && MatchQ[u,r_.*f_^w_ /; FreeQ[f,x]]]


(* ::Code:: *)
Int[ArcCot[a_.+b_.*f_^(c_.+d_.*x_)],x_Symbol] :=
  Dist[I/2,Int[Log[1-I/(a+b*f^(c+d*x))],x]] -
  Dist[I/2,Int[Log[1+I/(a+b*f^(c+d*x))],x]] /;
FreeQ[{a,b,c,d,f},x] 


(* ::Code:: *)
Int[x_^m_.*ArcCot[a_.+b_.*f_^(c_.+d_.*x_)],x_Symbol] :=
  Dist[I/2,Int[x^m*Log[1-I/(a+b*f^(c+d*x))],x]] -
  Dist[I/2,Int[x^m*Log[1+I/(a+b*f^(c+d*x))],x]] /;
FreeQ[{a,b,c,d,f},x] && IntegerQ[m] && m>0


(* ::Code:: *)
Int[ArcCot[u_],x_Symbol] :=
  x*ArcCot[u] +
  Int[Regularize[x*D[u,x]/(1+u^2),x],x] /;
InverseFunctionFreeQ[u,x]


(* ::Code:: *)
Int[x_^m_.*ArcCot[u_],x_Symbol] :=
  x^(m+1)*ArcCot[u]/(m+1) +
  Dist[1/(m+1),Int[Regularize[x^(m+1)*D[u,x]/(1+u^2),x],x]] /;
FreeQ[m,x] && NonzeroQ[m+1] && InverseFunctionFreeQ[u,x] && 
	Not[FunctionOfQ[x^(m+1),u,x]] && 
	FalseQ[PowerVariableExpn[u,m+1,x]]


(* ::Code:: *)
Int[v_*ArcCot[u_],x_Symbol] :=
  Module[{w=Block[{ShowSteps=False,StepCounter=Null}, Int[v,x]]},  
  w*ArcCot[u] +
  Int[Regularize[w*D[u,x]/(1+u^2),x],x] /;
 InverseFunctionFreeQ[w,x]] /;
InverseFunctionFreeQ[u,x] && 
	Not[MatchQ[v, x^m_. /; FreeQ[m,x]]] &&
	FalseQ[FunctionOfLinear[v*ArcCot[u],x]]
(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Code:: *)
Int[ArcSin[a_.+b_.*x_],x_Symbol] :=
  (a+b*x)*ArcSin[a+b*x]/b + Sqrt[1-(a+b*x)^2]/b /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[ArcSin[a_.+b_.*x_]^n_,x_Symbol] :=
  (a+b*x)*ArcSin[a+b*x]^n/b +
  n*Sqrt[1-(a+b*x)^2]*ArcSin[a+b*x]^(n-1)/b -
  Dist[n*(n-1),Int[ArcSin[a+b*x]^(n-2),x]] /;
FreeQ[{a,b},x] && RationalQ[n] && n>1


(* ::Code:: *)
Int[1/ArcSin[a_.+b_.*x_],x_Symbol] :=
  CosIntegral[ArcSin[a+b*x]]/b /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[1/ArcSin[a_.+b_.*x_]^2,x_Symbol] :=
  -Sqrt[1-(a+b*x)^2]/(b*ArcSin[a+b*x]) - SinIntegral[ArcSin[a+b*x]]/b /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[1/Sqrt[ArcSin[a_.+b_.*x_]],x_Symbol] :=
  Sqrt[2*Pi]*FresnelC[Sqrt[2/Pi]*Sqrt[ArcSin[a+b*x]]]/b /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[Sqrt[ArcSin[a_.+b_.*x_]],x_Symbol] :=
  (a+b*x)*Sqrt[ArcSin[a+b*x]]/b -
  Sqrt[Pi/2]*FresnelS[Sqrt[2/Pi]*Sqrt[ArcSin[a+b*x]]]/b /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[ArcSin[a_.+b_.*x_]^n_,x_Symbol] :=
  (a+b*x)*ArcSin[a+b*x]^(n+2)/(b*(n+1)*(n+2)) +
  Sqrt[1-(a+b*x)^2]*ArcSin[a+b*x]^(n+1)/(b*(n+1)) -
  Dist[1/((n+1)*(n+2)),Int[ArcSin[a+b*x]^(n+2),x]] /;
FreeQ[{a,b},x] && RationalQ[n] && n<-1 && n!=-2


(* ::Code:: *)
Int[ArcSin[a_.+b_.*x_]^n_,x_Symbol] :=
  I*ArcSin[a+b*x]^n/(2*b)*
    (Gamma[n+1,I*ArcSin[a+b*x]]/(I*ArcSin[a+b*x])^n - 
     Gamma[n+1,-I*ArcSin[a+b*x]]/(-I*ArcSin[a+b*x])^n) /;
FreeQ[{a,b,n},x] && (Not[RationalQ[n]] || -1<n<1)


(* ::Code:: *)
Int[x_^m_.*ArcSin[a_.+b_.*x_],x_Symbol] :=
  x^(m+1)*ArcSin[a+b*x]/(m+1) - 
  Dist[b/(m+1),Int[x^(m+1)/Sqrt[1-a^2-2*a*b*x-b^2*x^2],x]] /;
FreeQ[{a,b,m},x] && NonzeroQ[m+1]


(* ::Code:: *)
Int[x_/Sqrt[ArcSin[a_.*x_]],x_Symbol] :=
  Sqrt[Pi]/(2*a^2)*FresnelS[2*Sqrt[ArcSin[a*x]]/Sqrt[Pi]] /;
FreeQ[a,x]


(* ::Code:: *)
Int[x_/ArcSin[a_.*x_]^(3/2),x_Symbol] :=
  -2*x*Sqrt[1-a^2*x^2]/(a*Sqrt[ArcSin[a*x]]) + 2*Sqrt[Pi]/a^2*FresnelC[2*Sqrt[ArcSin[a*x]]/Sqrt[Pi]] /;
FreeQ[a,x]


(* ::Code:: *)
Int[x_*ArcSin[a_.*x_]^n_,x_Symbol] :=
  n*x*Sqrt[1-a^2*x^2]*ArcSin[a*x]^(n-1)/(4*a) -
  ArcSin[a*x]^n/(4*a^2) + x^2*ArcSin[a*x]^n/2 -
  Dist[n*(n-1)/4,Int[x*ArcSin[a*x]^(n-2),x]] /;
FreeQ[a,x] && RationalQ[n] && n>0


(* ::Code:: *)
Int[x_*ArcSin[a_.*x_]^n_,x_Symbol] :=
  x*Sqrt[1-a^2*x^2]*ArcSin[a*x]^(n+1)/(a*(n+1)) -
  ArcSin[a*x]^(n+2)/(a^2*(n+1)*(n+2)) +
  2*x^2*ArcSin[a*x]^(n+2)/((n+1)*(n+2)) -
  Dist[4/((n+1)*(n+2)),Int[x*ArcSin[a*x]^(n+2),x]] /;
FreeQ[a,x] && RationalQ[n] && n<-1 && n!=-2


(* ::Code:: *)
Int[ArcSin[a_.*x_]^n_/x_^3,x_Symbol] :=
  -a*n*Sqrt[1-a^2*x^2]*ArcSin[a*x]^(n-1)/(2*x) -
  ArcSin[a*x]^n/(2*x^2) +
  Dist[a^2*n*(n-1)/2,Int[ArcSin[a*x]^(n-2)/x,x]] /;
FreeQ[a,x] && RationalQ[n] && n>1


(* ::Code:: *)
Int[x_^m_*ArcSin[a_.*x_]^n_,x_Symbol] :=
  -a*n*x^(m+2)*Sqrt[1-a^2*x^2]*ArcSin[a*x]^(n-1)/((m+1)*(m+2)) +
  x^(m+1)*ArcSin[a*x]^n/(m+1) -
  a^2*(m+3)*x^(m+3)*ArcSin[a*x]^n/((m+1)*(m+2)) +
  Dist[a^2*(m+3)^2/((m+1)*(m+2)),Int[x^(m+2)*ArcSin[a*x]^n,x]] +
  Dist[a^2*n*(n-1)/((m+1)*(m+2)),Int[x^(m+2)*ArcSin[a*x]^(n-2),x]] /;
FreeQ[a,x] && IntegerQ[m] && RationalQ[n] && m<-3 && n>1


(* ::Code:: *)
Int[x_^m_*ArcSin[a_.*x_]^n_,x_Symbol] :=
  x^m*Sqrt[1-a^2*x^2]*ArcSin[a*x]^(n+1)/(a*(n+1)) -
  m*x^(m-1)*ArcSin[a*x]^(n+2)/(a^2*(n+1)*(n+2)) +
  (m+1)*x^(m+1)*ArcSin[a*x]^(n+2)/((n+1)*(n+2)) -
  Dist[(m+1)^2/((n+1)*(n+2)),Int[x^m*ArcSin[a*x]^(n+2),x]] +
  Dist[m*(m-1)/(a^2*(n+1)*(n+2)),Int[x^(m-2)*ArcSin[a*x]^(n+2),x]] /;
FreeQ[a,x] && IntegerQ[m] && RationalQ[n] && m>1 && n<-1 && n!=-2


(* ::Code:: *)
Int[ArcSin[a_.*x_^p_.]^n_./x_,x_Symbol] :=
  Dist[1/p,Subst[Int[x^n*Cot[x],x],x,ArcSin[a*x^p]]] /;
FreeQ[{a,p},x] && IntegerQ[n] && n>0


(* ::Code:: *)
Int[x_^m_.*ArcSin[a_.*x_]^n_,x_Symbol] :=
  x^(m+1)*ArcSin[a*x]^n/(m+1) -
  Dist[n/(a^(m+1)*(m+1)),Subst[Int[x^(n-1)*Sin[x]^(m+1),x],x,ArcSin[a*x]]] /;
FreeQ[{a,n},x] && IntegerQ[m] && m!=-1


(* ::Code:: *)
Int[(a_+b_.*ArcSin[c_.+d_.*x_])^n_,x_Symbol] :=
  Dist[1/d,Subst[Int[(a+b*x)^n*Cos[x],x],x,ArcSin[c+d*x]]] /;
FreeQ[{a,b,c,d},x] && Not[IntegerQ[n]]


(* ::Code:: *)
Int[x_^m_.*(a_+b_.*ArcSin[c_.+d_.*x_])^n_,x_Symbol] :=
  Dist[1/d^(m+1),Subst[Int[(a+b*x)^n*(Sin[x]-c)^m*Cos[x],x],x,ArcSin[c+d*x]]] /;
FreeQ[{a,b,c,d},x] && IntegerQ[m] && Not[IntegerQ[n]] && m>0


(* ::Code:: *)
Int[x_*ArcSin[a_.+b_.*x_]^n_/Sqrt[u_],x_Symbol] :=
  -Sqrt[u]*ArcSin[a+b*x]^n/b^2 +
  Dist[n/b,Int[ArcSin[a+b*x]^(n-1),x]] -
  Dist[a/b,Int[ArcSin[a+b*x]^n/Sqrt[u],x]] /;
FreeQ[{a,b},x] && ZeroQ[u-1+(a+b*x)^2] && RationalQ[n] && n>1


(* ::Code:: *)
Int[u_.*ArcSin[c_./(a_.+b_.*x_^n_.)]^m_.,x_Symbol] :=
  Int[u*ArcCsc[a/c+b*x^n/c]^m,x] /;
FreeQ[{a,b,c,n,m},x]


(* ::Code:: *)
Int[f_^(c_.*ArcSin[a_.+b_.*x_]),x_Symbol] :=
  f^(c*ArcSin[a+b*x])*(a+b*x+c*Sqrt[1-(a+b*x)^2]*Log[f])/(b*(1+c^2*Log[f]^2)) /;
FreeQ[{a,b,c,f},x] && NonzeroQ[1+c^2*Log[f]^2]


(* ::Code:: *)
Int[ArcSin[u_],x_Symbol] :=
  x*ArcSin[u] -
  Int[Regularize[x*D[u,x]/Sqrt[1-u^2],x],x] /;
InverseFunctionFreeQ[u,x] && Not[FunctionOfExponentialOfLinear[u,x]]


(* ::Code:: *)
Int[x_^m_.*ArcSin[u_],x_Symbol] :=
  x^(m+1)*ArcSin[u]/(m+1) -
  Dist[1/(m+1),Int[Regularize[x^(m+1)*D[u,x]/Sqrt[1-u^2],x],x]] /;
FreeQ[m,x] && NonzeroQ[m+1] && InverseFunctionFreeQ[u,x] && 
	Not[FunctionOfQ[x^(m+1),u,x]] && 
	Not[FunctionOfExponentialOfLinear[u,x]]



(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Code:: *)
Int[ArcCos[a_.+b_.*x_],x_Symbol] :=
  (a+b*x)*ArcCos[a+b*x]/b - Sqrt[1-(a+b*x)^2]/b /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[ArcCos[a_.+b_.*x_]^n_,x_Symbol] :=
  (a+b*x)*ArcCos[a+b*x]^n/b -
  n*Sqrt[1-(a+b*x)^2]*ArcCos[a+b*x]^(n-1)/b -
  Dist[n*(n-1),Int[ArcCos[a+b*x]^(n-2),x]] /;
FreeQ[{a,b},x] && RationalQ[n] && n>1


(* ::Code:: *)
Int[1/ArcCos[a_.+b_.*x_],x_Symbol] :=
  -SinIntegral[ArcCos[a+b*x]]/b /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[1/ArcCos[a_.+b_.*x_]^2,x_Symbol] :=
  Sqrt[1-(a+b*x)^2]/(b*ArcCos[a+b*x]) - CosIntegral[ArcCos[a+b*x]]/b /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[1/Sqrt[ArcCos[a_.+b_.*x_]],x_Symbol] :=
  -Sqrt[2*Pi]*FresnelS[Sqrt[2/Pi]*Sqrt[ArcCos[a+b*x]]]/b /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[Sqrt[ArcCos[a_.+b_.*x_]],x_Symbol] :=
  (a+b*x)*Sqrt[ArcCos[a+b*x]]/b - Sqrt[Pi/2]*FresnelC[Sqrt[2/Pi]*Sqrt[ArcCos[a+b*x]]]/b /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[ArcCos[a_.+b_.*x_]^n_,x_Symbol] :=
  (a+b*x)*ArcCos[a+b*x]^(n+2)/(b*(n+1)*(n+2)) -
  Sqrt[1-(a+b*x)^2]*ArcCos[a+b*x]^(n+1)/(b*(n+1)) -
  Dist[1/((n+1)*(n+2)),Int[ArcCos[a+b*x]^(n+2),x]] /;
FreeQ[{a,b},x] && RationalQ[n] && n<-1 && n!=-2


(* ::Code:: *)
Int[ArcCos[a_.+b_.*x_]^n_,x_Symbol] :=
  ArcCos[a+b*x]^n/(2*b)*
    (Gamma[n+1,I*ArcCos[a+b*x]]/(I*ArcCos[a+b*x])^n + 
     Gamma[n+1,-I*ArcCos[a+b*x]]/(-I*ArcCos[a+b*x])^n) /;
FreeQ[{a,b,n},x] && (Not[RationalQ[n]] || -1<n<1)


(* ::Code:: *)
Int[x_^m_.*ArcCos[a_.+b_.*x_],x_Symbol] :=
  x^(m+1)*ArcCos[a+b*x]/(m+1) +
  Dist[b/(m+1),Int[x^(m+1)/Sqrt[1-a^2-2*a*b*x-b^2*x^2],x]] /;
FreeQ[{a,b,m},x] && NonzeroQ[m+1]


(* ::Code:: *)
Int[x_/Sqrt[ArcCos[a_.*x_]],x_Symbol] :=
  -Sqrt[Pi]/(2*a^2)*FresnelS[2*Sqrt[ArcCos[a*x]]/Sqrt[Pi]] /;
FreeQ[a,x]


(* ::Code:: *)
Int[x_/ArcCos[a_.*x_]^(3/2),x_Symbol] :=
  2*x*Sqrt[1-a^2*x^2]/(a*Sqrt[ArcCos[a*x]]) - 2*Sqrt[Pi]/a^2*FresnelC[2*Sqrt[ArcCos[a*x]]/Sqrt[Pi]] /;
FreeQ[a,x]


(* ::Code:: *)
Int[x_*ArcCos[a_.*x_]^n_,x_Symbol] :=
  -n*x*Sqrt[1-a^2*x^2]*ArcCos[a*x]^(n-1)/(4*a) -
  ArcCos[a*x]^n/(4*a^2) + x^2*ArcCos[a*x]^n/2 -
  Dist[n*(n-1)/4,Int[x*ArcCos[a*x]^(n-2),x]] /;
FreeQ[a,x] && RationalQ[n] && n>0


(* ::Code:: *)
Int[x_*ArcCos[a_.*x_]^n_,x_Symbol] :=
  -x*Sqrt[1-a^2*x^2]*ArcCos[a*x]^(n+1)/(a*(n+1)) -
  ArcCos[a*x]^(n+2)/(a^2*(n+1)*(n+2)) +
  2*x^2*ArcCos[a*x]^(n+2)/((n+1)*(n+2)) -
  Dist[4/((n+1)*(n+2)),Int[x*ArcCos[a*x]^(n+2),x]] /;
FreeQ[a,x] && RationalQ[n] && n<-1 && n!=-2


(* ::Code:: *)
Int[ArcCos[a_.*x_]^n_/x_^3,x_Symbol] :=
  a*n*Sqrt[1-a^2*x^2]*ArcCos[a*x]^(n-1)/(2*x) -
  ArcCos[a*x]^n/(2*x^2) +
  Dist[a^2*n*(n-1)/2,Int[ArcCos[a*x]^(n-2)/x,x]] /;
FreeQ[a,x] && RationalQ[n] && n>1


(* ::Code:: *)
Int[x_^m_*ArcCos[a_.*x_]^n_,x_Symbol] :=
  a*n*x^(m+2)*Sqrt[1-a^2*x^2]*ArcCos[a*x]^(n-1)/((m+1)*(m+2)) +
  x^(m+1)*ArcCos[a*x]^n/(m+1) -
  a^2*(m+3)*x^(m+3)*ArcCos[a*x]^n/((m+1)*(m+2)) +
  Dist[a^2*(m+3)^2/((m+1)*(m+2)),Int[x^(m+2)*ArcCos[a*x]^n,x]] +
  Dist[a^2*n*(n-1)/((m+1)*(m+2)),Int[x^(m+2)*ArcCos[a*x]^(n-2),x]] /;
FreeQ[a,x] && IntegerQ[m] && RationalQ[n] && m<-3 && n>1


(* ::Code:: *)
Int[x_^m_*ArcCos[a_.*x_]^n_,x_Symbol] :=
  -x^m*Sqrt[1-a^2*x^2]*ArcCos[a*x]^(n+1)/(a*(n+1)) -
  m*x^(m-1)*ArcCos[a*x]^(n+2)/(a^2*(n+1)*(n+2)) +
  (m+1)*x^(m+1)*ArcCos[a*x]^(n+2)/((n+1)*(n+2)) -
  Dist[(m+1)^2/((n+1)*(n+2)),Int[x^m*ArcCos[a*x]^(n+2),x]] +
  Dist[m*(m-1)/(a^2*(n+1)*(n+2)),Int[x^(m-2)*ArcCos[a*x]^(n+2),x]] /;
FreeQ[a,x] && IntegerQ[m] && RationalQ[n] && m>1 && n<-1 && n!=-2


(* ::Code:: *)
Int[ArcCos[a_.*x_^p_.]^n_./x_,x_Symbol] :=
  -Dist[1/p,Subst[Int[x^n*Tan[x],x],x,ArcCos[a*x^p]]] /;
FreeQ[{a,p},x] && IntegerQ[n] && n>0


(* ::Code:: *)
Int[x_^m_.*ArcCos[a_.*x_]^n_,x_Symbol] :=
  x^(m+1)*ArcCos[a*x]^n/(m+1) -
  Dist[n/(a^(m+1)*(m+1)),Subst[Int[x^(n-1)*Cos[x]^(m+1),x],x,ArcCos[a*x]]] /;
FreeQ[{a,n},x] && IntegerQ[m] && m!=-1


(* ::Code:: *)
Int[(a_+b_.*ArcCos[c_.+d_.*x_])^n_,x_Symbol] :=
  -Dist[1/d,Subst[Int[(a+b*x)^n*Sin[x],x],x,ArcCos[c+d*x]]] /;
FreeQ[{a,b,c,d},x] && Not[IntegerQ[n]]


(* ::Code:: *)
Int[x_^m_.*(a_+b_.*ArcCos[c_.+d_.*x_])^n_,x_Symbol] :=
  -Dist[1/d^(m+1),Subst[Int[(a+b*x)^n*(Cos[x]-c)^m*Sin[x],x],x,ArcCos[c+d*x]]] /;
FreeQ[{a,b,c,d},x] && IntegerQ[m] && Not[IntegerQ[n]] && m>0


(* ::Code:: *)
Int[x_*ArcCos[a_.+b_.*x_]^n_/Sqrt[u_],x_Symbol] :=
  -Sqrt[u]*ArcCos[a+b*x]^n/b^2 -
  Dist[n/b,Int[ArcCos[a+b*x]^(n-1),x]] -
  Dist[a/b,Int[ArcCos[a+b*x]^n/Sqrt[u],x]] /;
FreeQ[{a,b},x] && ZeroQ[u-1+(a+b*x)^2] && RationalQ[n] && n>1


(* ::Code:: *)
Int[u_.*ArcCos[c_./(a_.+b_.*x_^n_.)]^m_.,x_Symbol] :=
  Int[u*ArcSec[a/c+b*x^n/c]^m,x] /;
FreeQ[{a,b,c,n,m},x]


(* ::Code:: *)
Int[f_^(c_.*ArcCos[a_.+b_.*x_]),x_Symbol] :=
  f^(c*ArcCos[a+b*x])*(a+b*x-c*Sqrt[1-(a+b*x)^2]*Log[f])/(b*(1+c^2*Log[f]^2)) /;
FreeQ[{a,b,c,f},x] && NonzeroQ[1+c^2*Log[f]^2]


(* ::Code:: *)
Int[ArcCos[u_],x_Symbol] :=
  x*ArcCos[u] +
  Int[Regularize[x*D[u,x]/Sqrt[1-u^2],x],x] /;
InverseFunctionFreeQ[u,x] && Not[FunctionOfExponentialOfLinear[u,x]]


(* ::Code:: *)
Int[x_^m_.*ArcCos[u_],x_Symbol] :=
  x^(m+1)*ArcCos[u]/(m+1) +
  Dist[1/(m+1),Int[Regularize[x^(m+1)*D[u,x]/Sqrt[1-u^2],x],x]] /;
FreeQ[m,x] && NonzeroQ[m+1] && InverseFunctionFreeQ[u,x] && 
	Not[FunctionOfQ[x^(m+1),u,x]] && 
	Not[FunctionOfExponentialOfLinear[u,x]]
(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Code:: *)
Int[ArcSec[a_.+b_.*x_],x_Symbol] :=
  (a+b*x)*ArcSec[a+b*x]/b - 
  Int[1/((a+b*x)*Sqrt[1-1/(a+b*x)^2]),x] /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[x_^m_.*ArcSec[a_+b_.*x_],x_Symbol] :=
  Dist[1/b,Subst[Int[(-a/b+x/b)^m*ArcSec[x],x],x,a+b*x]] /;
FreeQ[{a,b},x] && IntegerQ[m] && m>0


(* ::Code:: *)
Int[x_^m_.*ArcSec[a_.*x_],x_Symbol] :=
  x^(m+1)*ArcSec[a*x]/(m+1) - 
  Dist[1/(a*(m+1)),Int[x^(m-1)/Sqrt[1-1/(a*x)^2],x]] /;
FreeQ[{a,m},x] && NonzeroQ[m+1]


(* ::Code:: *)
Int[x_^m_.*ArcSec[a_.+b_.*x_],x_Symbol] :=
  x^(m+1)*ArcSec[a+b*x]/(m+1) - 
  Dist[b/(m+1),Int[x^(m+1)/((a+b*x)^2*Sqrt[1-1/(a+b*x)^2]),x]] /;
FreeQ[{a,b,m},x] && NonzeroQ[m+1]


(* Int[ArcSec[a_.*x_^n_.]/x_,x_Symbol] :=
  I*ArcSec[a*x^n]^2/(2*n) - 
  ArcSec[a*x^n]*Log[1-1/(I/(x^n*a)+Sqrt[1-1/(x^(2*n)*a^2)])^2]/n + 
  I*PolyLog[2,1/(I/(x^n*a)+Sqrt[1-1/(x^(2*n)*a^2)])^2]/(2*n) /;
(* Sqrt[-1/a^2]*a*ArcCsc[a*x^n]^2/(2*n) + 
  Pi*Log[x]/2 - 
  Sqrt[-1/a^2]*a*ArcSinh[Sqrt[-1/a^2]/x^n]*Log[1-1/(Sqrt[-(1/a^2)]/x^n+Sqrt[1-1/(x^(2*n)*a^2)])^2]/n + 
  Sqrt[-1/a^2]*a*PolyLog[2, 1/(Sqrt[-1/a^2]/x^n+Sqrt[1-1/(x^(2*n)*a^2)])^2]/(2*n) *)
FreeQ[{a,n},x] *)


(* ::Code:: *)
Int[u_.*ArcSec[c_./(a_.+b_.*x_^n_.)]^m_.,x_Symbol] :=
  Int[u*ArcCos[a/c+b*x^n/c]^m,x] /;
FreeQ[{a,b,c,n,m},x]


(* ::Code:: *)
Int[ArcSec[u_],x_Symbol] :=
  x*ArcSec[u] -
  Int[Regularize[x*D[u,x]/(u^2*Sqrt[1-1/u^2]),x],x] /;
InverseFunctionFreeQ[u,x] && Not[FunctionOfExponentialOfLinear[u,x]]
(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Code:: *)
Int[ArcTan[a_.*x_],x_Symbol] :=
  x*ArcTan[a*x] - Log[1+a^2*x^2]/(2*a) /;
FreeQ[a,x]


(* ::Code:: *)
Int[ArcTan[a_.*x_]^n_,x_Symbol] :=
  x*ArcTan[a*x]^n -
  Dist[a*n,Int[x*ArcTan[a*x]^(n-1)/(1+a^2*x^2),x]] /;
FreeQ[a,x] && IntegerQ[n] && n>1


(* ::Code:: *)
Int[x_*ArcTan[a_.*x_]^n_.,x_Symbol] :=
  ArcTan[a*x]^n/(2*a^2) + x^2*ArcTan[a*x]^n/2 -
  Dist[n/(2*a),Int[ArcTan[a*x]^(n-1),x]] /;
FreeQ[a,x] && IntegerQ[n] && n>0


(* ::Code:: *)
Int[x_^m_*ArcTan[a_.*x_]^n_.,x_Symbol] :=
  x^(m-1)*ArcTan[a*x]^n/(a^2*(m+1)) + x^(m+1)*ArcTan[a*x]^n/(m+1) -
  Dist[n/(a*(m+1)),Int[x^(m-1)*ArcTan[a*x]^(n-1),x]] -
  Dist[(m-1)/(a^2*(m+1)),Int[x^(m-2)*ArcTan[a*x]^n,x]] /;
FreeQ[a,x] && IntegerQ[n] && n>0 && RationalQ[m] && m>1


(* ::Code:: *)
Int[ArcTan[a_.*x_]^n_/x_,x_Symbol] :=
  2*ArcTan[a*x]^n*ArcTanh[1-2*I/(I-a*x)] -
  Dist[2*a*n,Int[ArcTan[a*x]^(n-1)*ArcTanh[1-2*I/(I-a*x)]/(1+a^2*x^2),x]] /;
FreeQ[a,x] && IntegerQ[n] && n>1


(* ::Code:: *)
Int[ArcTan[a_.*x_]^n_./x_^2,x_Symbol] :=
  -ArcTan[a*x]^n/x +
  Dist[a*n,Int[ArcTan[a*x]^(n-1)/(x*(1+a^2*x^2)),x]] /;
FreeQ[a,x] && IntegerQ[n] && n>0


(* ::Code:: *)
Int[ArcTan[a_.*x_]^n_./x_^3,x_Symbol] :=
  -a^2*ArcTan[a*x]^n/2 - ArcTan[a*x]^n/(2*x^2) +
  Dist[a*n/2,Int[ArcTan[a*x]^(n-1)/x^2,x]] /;
FreeQ[a,x] && IntegerQ[n] && n>0


(* ::Code:: *)
Int[x_^m_*ArcTan[a_.*x_]^n_.,x_Symbol] :=
  x^(m+1)*ArcTan[a*x]^n/(m+1) + a^2*x^(m+3)*ArcTan[a*x]^n/(m+1) -
  Dist[a*n/(m+1),Int[x^(m+1)*ArcTan[a*x]^(n-1),x]] -
  Dist[a^2*(m+3)/(m+1),Int[x^(m+2)*ArcTan[a*x]^n,x]] /;
FreeQ[a,x] && IntegerQ[n] && n>0 && RationalQ[m] && m<-3


(* ::Code:: *)
Int[ArcTan[a_.*x_]^n_./(c_+d_.*x_),x_Symbol] :=
  -ArcTan[a*x]^n*Log[2*c/(c+d*x)]/d +
  Dist[a*n/d,Int[ArcTan[a*x]^(n-1)*Log[2*c/(c+d*x)]/(1+a^2*x^2),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c^2+d^2] && IntegerQ[n] && n>0


(* ::Code:: *)
Int[ArcTan[a_.*x_]^n_./(x_*(c_+d_.*x_)),x_Symbol] :=
  ArcTan[a*x]^n*Log[2-2*c/(c+d*x)]/c -
  Dist[a*n/c,Int[ArcTan[a*x]^(n-1)*Log[2-2*c/(c+d*x)]/(1+a^2*x^2),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c^2+d^2] && IntegerQ[n] && n>0


(* ::Code:: *)
Int[ArcTan[a_.*x_]^n_./(c_.*x_+d_.*x_^2),x_Symbol] :=
  ArcTan[a*x]^n*Log[2-2*c/(c+d*x)]/c -
  Dist[a*n/c,Int[ArcTan[a*x]^(n-1)*Log[2-2*c/(c+d*x)]/(1+a^2*x^2),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c^2+d^2] && IntegerQ[n] && n>0


(* ::Code:: *)
Int[x_^m_.*ArcTan[a_.*x_]^n_./(c_+d_.*x_),x_Symbol] :=
  Dist[1/d,Int[x^(m-1)*ArcTan[a*x]^n,x]] -
  Dist[c/d,Int[x^(m-1)*ArcTan[a*x]^n/(c+d*x),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c^2+d^2] && RationalQ[m] && m>0 && IntegerQ[n] && n>0


(* ::Code:: *)
Int[x_^m_*ArcTan[a_.*x_]^n_./(c_+d_.*x_),x_Symbol] :=
  Dist[1/c,Int[x^m*ArcTan[a*x]^n,x]] -
  Dist[d/c,Int[x^(m+1)*ArcTan[a*x]^n/(c+d*x),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c^2+d^2] && RationalQ[m] && m<-1 && IntegerQ[n] && n>0


(* ::Code:: *)
Int[1/((c_+d_.*x_^2)*ArcTan[a_.*x_]),x_Symbol] :=
  Log[ArcTan[a*x]]/(a*c) /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c]


(* ::Code:: *)
Int[ArcTan[a_.*x_]^n_./(c_+d_.*x_^2),x_Symbol] :=
  ArcTan[a*x]^(n+1)/(a*c*(n+1)) /;
FreeQ[{a,c,d,n},x] && ZeroQ[d-a^2*c] && NonzeroQ[n+1]


(* ::Code:: *)
Int[x_*ArcTan[a_.*x_]^n_./(c_+d_.*x_^2),x_Symbol] :=
  -I*ArcTan[a*x]^(n+1)/(d*(n+1)) -
  Dist[1/(a*c),Int[ArcTan[a*x]^n/(I-a*x),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && RationalQ[n] && n>0


(* ::Code:: *)
Int[ArcTan[a_.*x_]^n_./(x_*(c_+d_.*x_^2)),x_Symbol] :=
  -I*ArcTan[a*x]^(n+1)/(c*(n+1)) +
  Dist[I/c,Int[ArcTan[a*x]^n/(x*(I+a*x)),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && RationalQ[n] && n>0


(* ::Code:: *)
Int[ArcTan[a_.*x_]^n_./(c_.*x_+d_.*x_^3),x_Symbol] :=
  -I*ArcTan[a*x]^(n+1)/(c*(n+1)) +
  Dist[I/c,Int[ArcTan[a*x]^n/(x*(I+a*x)),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && RationalQ[n] && n>0


(* ::Code:: *)
Int[x_^m_*ArcTan[a_.*x_]^n_./(c_+d_.*x_^2),x_Symbol] :=
  Dist[1/d,Int[x^(m-2)*ArcTan[a*x]^n,x]] -
  Dist[c/d,Int[x^(m-2)*ArcTan[a*x]^n/(c+d*x^2),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && RationalQ[{m,n}] && m>1 && n>0


(* ::Code:: *)
Int[x_^m_*ArcTan[a_.*x_]^n_./(c_+d_.*x_^2),x_Symbol] :=
  Dist[1/c,Int[x^m*ArcTan[a*x]^n,x]] -
  Dist[d/c,Int[x^(m+2)*ArcTan[a*x]^n/(c+d*x^2),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && RationalQ[{m,n}] && m<-1 && n>0


(* ::Code:: *)
Int[x_^m_.*ArcTan[a_.*x_]^n_/(c_+d_.*x_^2),x_Symbol] :=
  Dist[1/(a^(m+1)*c),Subst[Int[x^n*Tan[x]^m,x],x,ArcTan[a*x]]] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && RationalQ[{m,n}] && (n<0 || Not[IntegerQ[n]]) && (IntegerQ[m] || PositiveQ[a])


(* ::Code:: *)
Int[x_^m_.*ArcTan[a_.*x_]^n_/(c_+d_.*x_^2),x_Symbol] :=
  Dist[1/(a*c),Subst[Int[x^n*(Tan[x]/a)^m,x],x,ArcTan[a*x]]] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && RationalQ[{m,n}] && (n<0 || Not[IntegerQ[n]]) && Not[IntegerQ[m] || PositiveQ[a]]


(* ::Code:: *)
Int[ArcTan[a_.*x_]^n_.*ArcTanh[u_]/(c_+d_.*x_^2),x_Symbol] :=
  Dist[1/2,Int[ArcTan[a*x]^n*Log[1+u]/(c+d*x^2),x]] -
  Dist[1/2,Int[ArcTan[a*x]^n*Log[1-u]/(c+d*x^2),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && RationalQ[n] && n>0 && (ZeroQ[u^2-(1-2*I/(I+a*x))^2] || ZeroQ[u^2-(1-2*I/(I-a*x))^2])


(* ::Code:: *)
Int[ArcTan[a_.*x_]^n_.*Log[u_]/(c_+d_.*x_^2),x_Symbol] :=
  I*ArcTan[a*x]^n*PolyLog[2,1-u]/(2*a*c) -
  Dist[n*I/2,Int[ArcTan[a*x]^(n-1)*PolyLog[2,1-u]/(c+d*x^2),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && RationalQ[n] && n>0 && ZeroQ[(1-u)^2-(1-2*I/(I+a*x))^2]


(* ::Code:: *)
Int[ArcTan[a_.*x_]^n_.*Log[u_]/(c_+d_.*x_^2),x_Symbol] :=
  -I*ArcTan[a*x]^n*PolyLog[2,1-u]/(2*a*c) +
  Dist[n*I/2,Int[ArcTan[a*x]^(n-1)*PolyLog[2,1-u]/(c+d*x^2),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && RationalQ[n] && n>0 && ZeroQ[(1-u)^2-(1-2*I/(I-a*x))^2]


(* ::Code:: *)
Int[ArcTan[a_.*x_]^n_.*PolyLog[p_,u_]/(c_+d_.*x_^2),x_Symbol] :=
  -I*ArcTan[a*x]^n*PolyLog[p+1,u]/(2*a*c) +
  Dist[n*I/2,Int[ArcTan[a*x]^(n-1)*PolyLog[p+1,u]/(c+d*x^2),x]] /;
FreeQ[{a,c,d,p},x] && ZeroQ[d-a^2*c] && RationalQ[n] && n>0 && ZeroQ[u^2-(1-2*I/(I+a*x))^2]


(* ::Code:: *)
Int[ArcTan[a_.*x_]^n_.*PolyLog[p_,u_]/(c_+d_.*x_^2),x_Symbol] :=
  I*ArcTan[a*x]^n*PolyLog[p+1,u]/(2*a*c) -
  Dist[n*I/2,Int[ArcTan[a*x]^(n-1)*PolyLog[p+1,u]/(c+d*x^2),x]] /;
FreeQ[{a,c,d,p},x] && ZeroQ[d-a^2*c] && RationalQ[n] && n>0 && ZeroQ[u^2-(1-2*I/(I-a*x))^2]


(* ::Code:: *)
Int[1/(ArcCot[a_.*x_]*ArcTan[a_.*x_]*(c_+d_.*x_^2)),x_Symbol] :=
  (-Log[ArcCot[a*x]]+Log[ArcTan[a*x]])/(a*c*ArcCot[a*x]+a*c*ArcTan[a*x]) /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c]


(* ::Code:: *)
Int[ArcCot[a_.*x_]^m_.*ArcTan[a_.*x_]^n_./(c_+d_.*x_^2),x_Symbol] :=
  -ArcCot[a*x]^(m+1)*ArcTan[a*x]^n/(a*c*(m+1)) +
  Dist[n/(m+1),Int[ArcCot[a*x]^(m+1)*ArcTan[a*x]^(n-1)/(c+d*x^2),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && IntegersQ[m,n] && 0<n<=m


(* ::Code:: *)
Int[ArcTan[a_.*x_]/Sqrt[c_+d_.*x_^2],x_Symbol] :=
  -2*I*ArcTan[a*x]*ArcTan[Sqrt[1+I*a*x]/Sqrt[1-I*a*x]]/(a*Sqrt[c]) + 
  I*PolyLog[2,-I*Sqrt[1+I*a*x]/Sqrt[1-I*a*x]]/(a*Sqrt[c]) -
  I*PolyLog[2,I*Sqrt[1+I*a*x]/Sqrt[1-I*a*x]]/(a*Sqrt[c]) /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && PositiveQ[c]


(* ::Code:: *)
Int[ArcTan[a_.*x_]/Sqrt[c_+d_.*x_^2],x_Symbol] :=
  Sqrt[1+a^2*x^2]/Sqrt[c+d*x^2]*Int[ArcTan[a*x]/Sqrt[1+a^2*x^2],x] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && Not[PositiveQ[c]]


(* ::Code:: *)
Int[ArcTan[a_.*x_]/(c_+d_.*x_^2)^(3/2),x_Symbol] :=
  1/(a*c*Sqrt[c+d*x^2]) +
  x*ArcTan[a*x]/(c*Sqrt[c+d*x^2]) /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c]


(* ::Code:: *)
Int[ArcTan[a_.*x_]^n_/(c_+d_.*x_^2)^(3/2),x_Symbol] :=
  n*ArcTan[a*x]^(n-1)/(a*c*Sqrt[c+d*x^2]) +
  x*ArcTan[a*x]^n/(c*Sqrt[c+d*x^2]) -
  Dist[n*(n-1),Int[ArcTan[a*x]^(n-2)/(c+d*x^2)^(3/2),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && RationalQ[n] && n>1


(* ::Code:: *)
Int[ArcTan[a_.*x_]^n_/(c_+d_.*x_^2)^(3/2),x_Symbol] :=
  ArcTan[a*x]^(n+1)/(a*c*(n+1)*Sqrt[c+d*x^2]) +
  x*ArcTan[a*x]^(n+2)/(c*(n+1)*(n+2)*Sqrt[c+d*x^2]) -
  Dist[1/((n+1)*(n+2)),Int[ArcTan[a*x]^(n+2)/(c+d*x^2)^(3/2),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && RationalQ[n] && n<-1 && n!=-2


(* ::Code:: *)
Int[(c_+d_.*x_^2)^m_.*ArcTan[a_.*x_],x_Symbol] :=
  -(c+d*x^2)^m/(2*a*m*(2*m+1)) +
  x*(c+d*x^2)^m*ArcTan[a*x]/(2*m+1) +
  Dist[2*c*m/(2*m+1),Int[(c+d*x^2)^(m-1)*ArcTan[a*x],x]] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && RationalQ[m] && m>0


(* ::Code:: *)
Int[(c_+d_.*x_^2)^m_*ArcTan[a_.*x_],x_Symbol] :=
  (c+d*x^2)^(m+1)/(4*a*c*(m+1)^2) -
  x*(c+d*x^2)^(m+1)*ArcTan[a*x]/(2*c*(m+1)) +
  Dist[(2*m+3)/(2*c*(m+1)),Int[(c+d*x^2)^(m+1)*ArcTan[a*x],x]] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && RationalQ[m] && m<-1 && m!=-3/2


(* ::Code:: *)
Int[(c_+d_.*x_^2)^m_*ArcTan[a_.*x_]^n_,x_Symbol] :=
  n*(c+d*x^2)^(m+1)*ArcTan[a*x]^(n-1)/(4*a*c*(m+1)^2) -
  x*(c+d*x^2)^(m+1)*ArcTan[a*x]^n/(2*c*(m+1)) +
  Dist[(2*m+3)/(2*c*(m+1)),Int[(c+d*x^2)^(m+1)*ArcTan[a*x]^n,x]] -
  Dist[n*(n-1)/(4*(m+1)^2),Int[(c+d*x^2)^m*ArcTan[a*x]^(n-2),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && RationalQ[{m,n}] && m<-1 && m!=-3/2 && n>1


(* ::Code:: *)
Int[(c_+d_.*x_^2)^m_*ArcTan[a_.*x_]^n_,x_Symbol] :=
  (c+d*x^2)^(m+1)*ArcTan[a*x]^(n+1)/(a*c*(n+1)) -
  Dist[2*a*(m+1)/(n+1),Int[x*(c+d*x^2)^m*ArcTan[a*x]^(n+1),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && RationalQ[{m,n}] && m<-1 && n<-1


(* ::Code:: *)
Int[(c_+d_.*x_^2)^m_*ArcTan[a_.*x_]^n_,x_Symbol] :=
  Dist[c^m/a,Subst[Int[x^n*Sec[x]^(2*(m+1)),x],x,ArcTan[a*x]]] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && RationalQ[{m,n}] && m<-1 && (n<0 || Not[IntegerQ[n]]) && (IntegerQ[m] || PositiveQ[c])


(* ::Code:: *)
Int[(c_+d_.*x_^2)^m_*ArcTan[a_.*x_]^n_,x_Symbol] :=
  c^(m-1/2)*Sqrt[c+d*x^2]/Sqrt[1+a^2*x^2]*Int[(1+a^2*x^2)^m*ArcTan[a*x]^n,x] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && RationalQ[{m,n}] && m<-1 && (n<0 || Not[IntegerQ[n]]) && IntegerQ[m-1/2] && Not[PositiveQ[c]]


(* ::Code:: *)
Int[x_*(c_+d_.*x_^2)^p_.*ArcTan[a_.*x_]^n_.,x_Symbol] :=
  (c+d*x^2)^(p+1)*ArcTan[a*x]^n/(2*d*(p+1)) -
  Dist[n/(2*a*(p+1)),Int[(c+d*x^2)^p*ArcTan[a*x]^(n-1),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && RationalQ[{n,p}] && n>0 && p!=-1


(* ::Code:: *)
Int[x_*(c_+d_.*x_^2)^p_./ArcTan[a_.*x_]^2,x_Symbol] :=
  -x*(c+d*x^2)^(p+1)/(a*c*ArcTan[a*x]) +
  Dist[1/a,Int[(1+(2*p+3)*a^2*x^2)*(c+d*x^2)^p/ArcTan[a*x],x]] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && RationalQ[p]


(* ::Code:: *)
Int[x_*ArcTan[a_.*x_]^n_/(c_+d_.*x_^2)^2,x_Symbol] :=
  x*ArcTan[a*x]^(n+1)/(a*c*(n+1)*(c+d*x^2)) -
  (1-a^2*x^2)*ArcTan[a*x]^(n+2)/(d*(n+1)*(n+2)*(c+d*x^2)) -
  Dist[4/((n+1)*(n+2)),Int[x*ArcTan[a*x]^(n+2)/(c+d*x^2)^2,x]] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && RationalQ[n] && n<-1 && n!=-2


(* ::Code:: *)
Int[x_^m_*(c_+d_.*x_^2)^p_.*ArcTan[a_.*x_]^n_.,x_Symbol] :=
  x^(m+1)*(c+d*x^2)^(p+1)*ArcTan[a*x]^n/(c*(m+1)) -
  Dist[a*n/(m+1),Int[x^(m+1)*(c+d*x^2)^p*ArcTan[a*x]^(n-1),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && IntegersQ[m,n,2*p] && m<-1 && n>0 && ZeroQ[m+2*p+3]


(* ::Code:: *)
Int[x_^m_*(c_+d_.*x_^2)^p_.*ArcTan[a_.*x_]^n_.,x_Symbol] :=
  x^m*(c+d*x^2)^(p+1)*ArcTan[a*x]^(n+1)/(a*c*(n+1)) -
  Dist[m/(a*(n+1)),Int[x^(m-1)*(c+d*x^2)^p*ArcTan[a*x]^(n+1),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && IntegersQ[m,n,2*p] && n<-1 && ZeroQ[m+2*p+2]


(* ::Code:: *)
Int[x_^m_*(c_+d_.*x_^2)^p_*ArcTan[a_.*x_]^n_.,x_Symbol] :=
  Dist[1/d,Int[x^(m-2)*(c+d*x^2)^(p+1)*ArcTan[a*x]^n,x]] -
  Dist[c/d,Int[x^(m-2)*(c+d*x^2)^p*ArcTan[a*x]^n,x]] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && IntegersQ[m,n,2*p] && m>1 && n!=-1 && p<-1


(* ::Code:: *)
Int[x_^m_*(c_+d_.*x_^2)^p_*ArcTan[a_.*x_]^n_.,x_Symbol] :=
  Dist[1/c,Int[x^m*(c+d*x^2)^(p+1)*ArcTan[a*x]^n,x]] -
  Dist[d/c,Int[x^(m+2)*(c+d*x^2)^p*ArcTan[a*x]^n,x]] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && IntegersQ[m,n,2*p] && m<0 && n!=-1 && p<-1


(* ::Code:: *)
Int[x_^m_*(c_+d_.*x_^2)^p_.*ArcTan[a_.*x_]^n_.,x_Symbol] :=
  x^(m+1)*(c+d*x^2)^(p+1)*ArcTan[a*x]^n/(c*(m+1)) -
  Dist[a*n/(m+1),Int[x^(m+1)*(c+d*x^2)^p*ArcTan[a*x]^(n-1),x]] -
  Dist[a^2*(m+2*p+3)/(m+1),Int[x^(m+2)*(c+d*x^2)^p*ArcTan[a*x]^n,x]] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && IntegersQ[m,n,2*p] && m<-1 && n>0 && NonzeroQ[m+2*p+3]


(* ::Code:: *)
Int[x_^m_.*(c_+d_.*x_^2)^p_.*ArcTan[a_.*x_]^n_.,x_Symbol] :=
  x^m*(c+d*x^2)^(p+1)*ArcTan[a*x]^(n+1)/(a*c*(n+1)) -
  Dist[m/(a*(n+1)),Int[x^(m-1)*(c+d*x^2)^p*ArcTan[a*x]^(n+1),x]] -
  Dist[a*(m+2*p+2)/(n+1),Int[x^(m+1)*(c+d*x^2)^p*ArcTan[a*x]^(n+1),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && IntegersQ[m,n,2*p] && n<-1 && NonzeroQ[m+2*p+2]


(* ::Code:: *)
Int[(e_.+f_.*x_^m_.)*(c_+d_.*x_^2)^p_*ArcTan[a_.*x_]^n_,x_Symbol] :=
  Dist[c^p/a^(m+1),Subst[Int[Expand[x^n*TrigReduce[Regularize[(e*a^m+f*Tan[x]^m)*Sec[x]^(2*(p+1)),x]]],x],x,ArcTan[a*x]]] /;
FreeQ[{a,c,d,e,f},x] && ZeroQ[d-a^2*c] && RationalQ[{m,n,p}] && p<-1 && (n<0 || Not[IntegerQ[n]]) && (IntegerQ[p] || PositiveQ[c]) && (IntegerQ[m] || PositiveQ[a])


(* ::Code:: *)
Int[x_^m_.*(c_+d_.*x_^2)^p_*ArcTan[a_.*x_]^n_,x_Symbol] :=
  Dist[c^p/a,Subst[Int[x^n*(Tan[x]/a)^m*Sec[x]^(2*(p+1)),x],x,ArcTan[a*x]]] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && RationalQ[{m,n,p}] && p<-1 && (n<0 || Not[IntegerQ[n]]) && (IntegerQ[p] || PositiveQ[c]) && Not[IntegerQ[m] || PositiveQ[a]]


(* ::Code:: *)
Int[x_^m_.*(c_+d_.*x_^2)^p_*ArcTan[a_.*x_]^n_,x_Symbol] :=
  c^(p-1/2)*Sqrt[c+d*x^2]/Sqrt[1+a^2*x^2]*Int[x^m*(1+a^2*x^2)^p*ArcTan[a*x]^n,x] /;
FreeQ[{a,c,d},x] && ZeroQ[d-a^2*c] && RationalQ[{m,n,p}] && p<-1 && (n<0 || Not[IntegerQ[n]]) && IntegerQ[p-1/2] && Not[PositiveQ[c]]


(* ::Code:: *)
Int[ArcTan[a_+b_.*x_],x_Symbol] :=
  (a+b*x)*ArcTan[a+b*x]/b - Log[1+(a+b*x)^2]/(2*b) /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[ArcTan[a_+b_.*x_^n_],x_Symbol] :=
  x*ArcTan[a+b*x^n] -
  Dist[b*n,Int[x^n/(1+a^2+2*a*b*x^n+b^2*x^(2*n)),x]] /;
FreeQ[{a,b},x] && RationalQ[n]


(* ::Code:: *)
Int[ArcTan[a_.+b_.*x_^n_.]/x_,x_Symbol] :=
  Dist[I/2,Int[Log[1-I*a-I*b*x^n]/x,x]] -
  Dist[I/2,Int[Log[1+I*a+I*b*x^n]/x,x]] /;
FreeQ[{a,b,n},x]


(* ::Code:: *)
Int[x_^m_.*ArcTan[a_+b_.*x_^n_.],x_Symbol] :=
  x^(m+1)*ArcTan[a+b*x^n]/(m+1) -
  Dist[b*n/(m+1),Int[x^(m+n)/(1+a^2+2*a*b*x^n+b^2*x^(2*n)),x]] /;
FreeQ[{a,b},x] && RationalQ[{m,n}] && m+1!=0 && m+1!=n


(* ::Code:: *)
Int[ArcTan[a_+b_.*x_]^n_,x_Symbol] :=
  Dist[1/b,Subst[Int[ArcTan[x]^n,x],x,a+b*x]] /;
FreeQ[{a,b},x] && IntegerQ[n] && n>1


(* ::Code:: *)
Int[x_^m_.*ArcTan[a_+b_.*x_]^n_,x_Symbol] :=
  Dist[1/b^(m+1),Subst[Int[(x-a)^m*ArcTan[x]^n,x],x,a+b*x]] /;
FreeQ[{a,b},x] && IntegersQ[m,n] && m>0 && n>1


(* ::Code:: *)
Int[ArcTan[b_.*x_]/(c_+d_.*x_^n_.),x_Symbol] :=
  Dist[I/2,Int[Log[1-I*b*x]/(c+d*x^n),x]] -
  Dist[I/2,Int[Log[1+I*b*x]/(c+d*x^n),x]] /;
FreeQ[{b,c,d},x] && IntegerQ[n] && Not[n==2 && ZeroQ[d-b^2*c]]


(* ::Code:: *)
Int[ArcTan[a_+b_.*x_]/(c_+d_.*x_^n_.),x_Symbol] :=
  Dist[I/2,Int[Log[1-I*a-I*b*x]/(c+d*x^n),x]] -
  Dist[I/2,Int[Log[1+I*a+I*b*x]/(c+d*x^n),x]] /;
FreeQ[{a,b,c,d},x] && IntegerQ[n] && Not[n==1 && ZeroQ[a*d-b*c]]


(* ::Code:: *)
Int[u_.*ArcTan[c_./(a_.+b_.*x_^n_.)]^m_.,x_Symbol] :=
  Int[u*ArcCot[a/c+b*x^n/c]^m,x] /;
FreeQ[{a,b,c,n,m},x]


(* ::Code:: *)
If[ShowSteps,

Int[u_*v_^n_.,x_Symbol] :=
  Module[{tmp=InverseFunctionOfLinear[u,x]},
  ShowStep["","Int[f[x,ArcTan[a+b*x]]/(1+(a+b*x)^2),x]",
		   "Subst[Int[f[-a/b+Tan[x]/b,x],x],x,ArcTan[a+b*x]]/b",Hold[
  Dist[(-Discriminant[v,x]/(4*Coefficient[v,x,2]))^n/Coefficient[tmp[[1]],x,1],
	Subst[Int[Regularize[SubstForInverseFunction[u,tmp,x]*Sec[x]^(2*(n+1)),x],x], x, tmp]]]] /;
 NotFalseQ[tmp] && Head[tmp]===ArcTan && ZeroQ[Discriminant[v,x]*tmp[[1]]^2+D[v,x]^2]] /;
SimplifyFlag && QuadraticQ[v,x] && IntegerQ[n] && n<0 && NegQ[Discriminant[v,x]] && MatchQ[u,r_.*f_^w_ /; FreeQ[f,x]],

Int[u_*v_^n_.,x_Symbol] :=
  Module[{tmp=InverseFunctionOfLinear[u,x]},
  Dist[(-Discriminant[v,x]/(4*Coefficient[v,x,2]))^n/Coefficient[tmp[[1]],x,1],
	Subst[Int[Regularize[SubstForInverseFunction[u,tmp,x]*Sec[x]^(2*(n+1)),x],x], x, tmp]] /;
 NotFalseQ[tmp] && Head[tmp]===ArcTan && ZeroQ[Discriminant[v,x]*tmp[[1]]^2+D[v,x]^2]] /;
QuadraticQ[v,x] && IntegerQ[n] && n<0 && NegQ[Discriminant[v,x]] && MatchQ[u,r_.*f_^w_ /; FreeQ[f,x]]]


(* ::Code:: *)
Int[ArcTan[a_.+b_.*f_^(c_.+d_.*x_)],x_Symbol] :=
  Dist[I/2,Int[Log[1-I*a-I*b*f^(c+d*x)],x]] -
  Dist[I/2,Int[Log[1+I*a+I*b*f^(c+d*x)],x]] /;
FreeQ[{a,b,c,d,f},x]


(* ::Code:: *)
Int[x_^m_.*ArcTan[a_.+b_.*f_^(c_.+d_.*x_)],x_Symbol] :=
  Dist[I/2,Int[x^m*Log[1-I*a-I*b*f^(c+d*x)],x]] -
  Dist[I/2,Int[x^m*Log[1+I*a+I*b*f^(c+d*x)],x]] /;
FreeQ[{a,b,c,d,f},x] && IntegerQ[m] && m>0


(* ::Code:: *)
Int[ArcTan[u_],x_Symbol] :=
  x*ArcTan[u] -
  Int[Regularize[x*D[u,x]/(1+u^2),x],x] /;
InverseFunctionFreeQ[u,x]


(* ::Code:: *)
Int[x_^m_.*ArcTan[u_],x_Symbol] :=
  x^(m+1)*ArcTan[u]/(m+1) -
  Dist[1/(m+1),Int[Regularize[x^(m+1)*D[u,x]/(1+u^2),x],x]] /;
FreeQ[m,x] && NonzeroQ[m+1] && InverseFunctionFreeQ[u,x] && 
	Not[FunctionOfQ[x^(m+1),u,x]] && 
	FalseQ[PowerVariableExpn[u,m+1,x]]


(* ::Code:: *)
Int[v_*ArcTan[u_],x_Symbol] :=
  Module[{w=Block[{ShowSteps=False,StepCounter=Null}, Int[v,x]]},  
  w*ArcTan[u] -
  Int[Regularize[w*D[u,x]/(1+u^2),x],x] /;
 InverseFunctionFreeQ[w,x]] /;
InverseFunctionFreeQ[u,x] && 
	Not[MatchQ[v, x^m_. /; FreeQ[m,x]]] &&
	FalseQ[FunctionOfLinear[v*ArcTan[u],x]]
(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Code:: *)
Int[ArcCsc[a_.+b_.*x_],x_Symbol] :=
  (a+b*x)*ArcCsc[a+b*x]/b +
  Int[1/((a+b*x)*Sqrt[1-1/(a+b*x)^2]),x] /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[x_^m_.*ArcCsc[a_+b_.*x_],x_Symbol] :=
  Dist[1/b,Subst[Int[(-a/b+x/b)^m*ArcCsc[x],x],x,a+b*x]] /;
FreeQ[{a,b},x] && IntegerQ[m] && m>0


(* ::Code:: *)
Int[x_^m_.*ArcCsc[a_.*x_],x_Symbol] :=
  x^(m+1)*ArcCsc[a*x]/(m+1) +
  Dist[1/(a*(m+1)),Int[x^(m-1)/Sqrt[1-1/(a^2*x^2)],x]] /;
FreeQ[{a,m},x] && NonzeroQ[m+1]


(* ::Code:: *)
Int[x_^m_.*ArcCsc[a_.+b_.*x_],x_Symbol] :=
  x^(m+1)*ArcCsc[a+b*x]/(m+1) +
  Dist[b/(m+1),Int[x^(m+1)/((a+b*x)^2*Sqrt[1-1/(a+b*x)^2]),x]] /;
FreeQ[{a,b,m},x] && NonzeroQ[m+1]


(* Int[ArcCsc[a_.*x_^n_.]/x_,x_Symbol] :=
(* Int[ArcSin[1/a*x^(-n)]/x,x] /; *)
  I*ArcCsc[a*x^n]^2/(2*n) - 
  ArcCsc[a*x^n]*Log[1-(I/(x^n*a)+Sqrt[1-1/(x^(2*n)*a^2)])^2]/n + 
  I*PolyLog[2,(I/(x^n*a)+Sqrt[1-1/(x^(2*n)*a^2)])^2]/(2*n) /;
(* -Sqrt[-1/a^2]*a*ArcCsc[a*x^n]^2/(2*n) - 
  ArcCsc[a*x^n]*Log[2*(1/(x^n*a^2) + Sqrt[-1/a^2]*Sqrt[1-1/(x^(2*n)*a^2)])/x^n]/n - 
  Sqrt[-1/a^2]*a*PolyLog[2, 1-2*(1/(x^n*a^2)+Sqrt[-1/a^2]*Sqrt[1-1/(x^(2*n)*a^2)])/x^n]/(2*n) /; *)
FreeQ[{a,n},x] *)


(* ::Code:: *)
Int[u_.*ArcCsc[c_./(a_.+b_.*x_^n_.)]^m_.,x_Symbol] :=
  Int[u*ArcSin[a/c+b*x^n/c]^m,x] /;
FreeQ[{a,b,c,n,m},x]


(* ::Code:: *)
Int[ArcCsc[u_],x_Symbol] :=
  x*ArcCsc[u] +
  Int[Regularize[x*D[u,x]/(u^2*Sqrt[1-1/u^2]),x],x] /;
InverseFunctionFreeQ[u,x] && Not[FunctionOfExponentialOfLinear[u,x]]
(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



Int[a_,x_Symbol] :=
   a*x /;
IndependentQ[a,x]


Int[c_*(a_+b_.*x_),x_Symbol] :=
  c*(a+b*x)^2/(2*b) /;
FreeQ[{a,b,c},x]


Int[c_*(a_+b_.*x_)^n_,x_Symbol] :=
  Dist[c,Int[(a+b*x)^n,x]] /;
FreeQ[{a,b,c,n},x] && NonzeroQ[n+1]


If[ShowSteps,

Int[a_*u_,x_Symbol] :=
  Module[{lst=ConstantFactor[u,x]},
  ShowStep["","Int[a*u,x]","a*Int[u,x]",Hold[
  Dist[a*lst[[1]],Int[lst[[2]],x]]]]] /;
SimplifyFlag && FreeQ[a,x] && Not[MatchQ[u,b_*v_ /; FreeQ[b,x]]],

Int[a_*u_,x_Symbol] :=
  Module[{lst=ConstantFactor[u,x]},
  Dist[a*lst[[1]],Int[lst[[2]],x]]] /;
FreeQ[a,x] && Not[MatchQ[u,b_*v_ /; FreeQ[b,x]]]]


If[ShowSteps,

Int[u_,x_Symbol] :=
  Module[{lst=ConstantFactor[Simplify[Denominator[u]],x]},
  ShowStep["","Int[a*u,x]","a*Int[u,x]",Hold[
  Dist[1/lst[[1]],Int[Numerator[u]/lst[[2]],x]]]] /;
 lst[[1]]=!=1] /;
SimplifyFlag && (
	MatchQ[u,1/(a_+b_.*x) /; FreeQ[{a,b},x]] ||
	MatchQ[u,x^m_./(a_+b_.*x^n_) /; FreeQ[{a,b,m,n},x] && ZeroQ[m-n+1]] ||
	MatchQ[u,1/((a_.+b_.*x)*(c_+d_.*x)) /; FreeQ[{a,b,c,d},x]] ||
	MatchQ[u,(d_.+e_.*x)/(a_+b_.*x+c_.*x^2) /; FreeQ[{a,b,c,d,e},x]] ||
	MatchQ[u,(c_.*(a_.+b_.*x)^n_)^m_ /; FreeQ[{a,b,c,m,n},x] && ZeroQ[m*n+1]]),

Int[u_,x_Symbol] :=
  Module[{lst=ConstantFactor[Simplify[Denominator[u]],x]},
  Dist[1/lst[[1]],Int[Numerator[u]/lst[[2]],x]] /;
 lst[[1]]=!=1] /;
	MatchQ[u,1/(a_+b_.*x) /; FreeQ[{a,b},x]] ||
	MatchQ[u,x^m_./(a_+b_.*x^n_) /; FreeQ[{a,b,m,n},x] && ZeroQ[m-n+1]] ||
	MatchQ[u,1/((a_.+b_.*x)*(c_+d_.*x)) /; FreeQ[{a,b,c,d},x]] ||
	MatchQ[u,(d_.+e_.*x)/(a_+b_.*x+c_.*x^2) /; FreeQ[{a,b,c,d,e},x]] ||
	MatchQ[u,(c_.*(a_.+b_.*x)^n_)^m_ /; FreeQ[{a,b,c,m,n},x] && ZeroQ[m*n+1]]]


If[ShowSteps,

Int[u_/v_,x_Symbol] :=
  Module[{lst=ConstantFactor[v,x]},
  ShowStep["","Int[a*u,x]","a*Int[u,x]",Hold[
  Dist[1/lst[[1]],Int[u/lst[[2]],x]]]] /;
 lst[[1]]=!=1] /;
SimplifyFlag && Not[FalseQ[DerivativeDivides[v,u,x]]],

Int[u_/v_,x_Symbol] :=
  Module[{lst=ConstantFactor[v,x]},
  Dist[1/lst[[1]],Int[u/lst[[2]],x]] /;
 lst[[1]]=!=1] /;
Not[FalseQ[DerivativeDivides[v,u,x]]]]


Int[u_.*v_^m_*w_^n_,x_Symbol] :=
  (v^m*w^n)*Int[u,x] /;
FreeQ[{m,n},x] && ZeroQ[m+n] && ZeroQ[v+w]


Int[u_.*(a_.+b_.*x_^m_.)^p_.*(c_.+d_.*x_^n_.)^q_., x_Symbol] :=
  (a+b*x^m)^p*(c+d*x^n)^q/x^(m*p)*Int[u*x^(m*p),x] /;
FreeQ[{a,b,c,d,m,n,p,q},x] && ZeroQ[a+d] && ZeroQ[b+c] && ZeroQ[m+n] && ZeroQ[p+q]


Int[1/(a_+b_.*x_),x_Symbol] :=
  Log[-a-b*x]/b /;
FreeQ[{a,b},x] && NegativeCoefficientQ[a]


Int[1/(a_.+b_.*x_),x_Symbol] :=
  Log[a+b*x]/b /;
FreeQ[{a,b},x]


Int[x_^n_.,x_Symbol] :=
  x^(n+1)/(n+1) /;
IndependentQ[n,x] && NonzeroQ[n+1]


Int[(a_.+b_.*x_)^n_,x_Symbol] :=
  (a+b*x)^(n+1)/(b*(n+1)) /;
FreeQ[{a,b,n},x] && NonzeroQ[n+1]


If[ShowSteps,

Int[u_,x_Symbol] :=
  If[PolynomialQ[u,x],
    ShowStep["","Int[a+b*x+c*x^2+\[CenterEllipsis],x]","a*x+b*x^2/2+c*x^3/3+\[CenterEllipsis]",Hold[
    IntegrateMonomialSum[u,x]]],
  ShowStep["","Int[a+b/x+c*x^m+\[CenterEllipsis],x]","a*x+b*Log[x]+c*x^(m+1)/(m+1)+\[CenterEllipsis]",Hold[
  IntegrateMonomialSum[u,x]]]] /;
SimplifyFlag && MonomialSumQ[u,x],

Int[u_,x_Symbol] :=
  IntegrateMonomialSum[u,x] /;
MonomialSumQ[u,x]]


If[ShowSteps,

Int[u_,x_Symbol] :=
  Module[{lst=SplitMonomialTerms[u,x]},
  ShowStep["","Int[a*u+b*v+\[CenterEllipsis],x]","a*Int[u,x]+b*Int[v,x]+\[CenterEllipsis]",Hold[
  Int[lst[[1]],x] + SplitFreeIntegrate[lst[[2]],x]]] /;
 SumQ[lst[[1]]] && Not[FreeQ[lst[[1]],x]] && lst[[2]]=!=0] /;
SimplifyFlag && SumQ[u],

Int[u_,x_Symbol] :=
  Module[{lst=SplitMonomialTerms[u,x]},
  Int[lst[[1]],x] + SplitFreeIntegrate[lst[[2]],x] /;
 SumQ[lst[[1]]] && Not[FreeQ[lst[[1]],x]] && lst[[2]]=!=0] /;
SumQ[u]]


If[ShowSteps,

Int[x_^m_.*u_,x_Symbol] :=
  ShowStep["","Int[\!\(\*SuperscriptBox[\"x\", \"m\"]\)*(u+v+\[CenterEllipsis]),x]","Int[\!\(\*SuperscriptBox[\"x\", \"m\"]\)*u+\!\(\*SuperscriptBox[\"x\", \"m\"]\)*v+\[CenterEllipsis],x]",Hold[
  Int[Map[Function[x^m*#],u],x]]] /;
SimplifyFlag && IntegerQ[m] && SumQ[u],

Int[x_^m_.*u_,x_Symbol] :=
  Int[Map[Function[x^m*#],u],x] /;
IntegerQ[m] && SumQ[u]]


Int[1/(x_*(a_+b_.*x_^n_.)),x_Symbol] :=
  -2*ArcTanh[1+2*b*x^n/a]/(a*n) /;
FreeQ[{a,b,n},x] && PosQ[n] && (RationalQ[a] || RationalQ[b/a])


Int[1/(x_*(a_+b_.*x_^n_.)),x_Symbol] :=
  Log[x]/a - Log[a+b*x^n]/(a*n) /;
FreeQ[{a,b,n},x] && PosQ[n] && Not[RationalQ[a] || RationalQ[b/a]]


Int[1/(x_*(a_+b_.*x_^n_.)),x_Symbol] :=
  -Log[b+a*x^(-n)]/(a*n) /;
FreeQ[{a,b,n},x] && NegQ[n]


Int[1/(a_.*x_+b_.*x_^n_),x_Symbol] :=
  Int[1/(x*(a+b*x^(n-1))),x] /;
FreeQ[{a,b,n},x]


Int[x_^m_.*(a_+b_.*x_)^n_,x_Symbol] :=
  -x^(m+1)*(a+b*x)^(n+1)/(a*(n+1)) /;
FreeQ[{a,b,m,n},x] && ZeroQ[m+n+2] && NonzeroQ[n+1]


Int[x_^m_.*(a_+b_.*x_)^n_,x_Symbol] :=
  -x^(m+1)*(a+b*x)^(n+1)/(a*(n+1)) +
  Dist[(m+n+2)/(a*(n+1)),Int[x^m*(a+b*x)^(n+1),x]] /;
FreeQ[{a,b},x] && IntegersQ[m,n] && 0<m<-n-2 && 2*m+n+1>0


Int[x_^m_*(a_.+b_.*x_)^n_.,x_Symbol] :=
  x^(m+1)*(a+b*x)^n/(m+n+1) +
  Dist[a*n/(m+n+1),Int[x^m*(a+b*x)^(n-1),x]] /;
FreeQ[{a,b},x] && IntegersQ[m,n] && 0<n<m/2


Int[x_^m_*(a_.+b_.*x_)^n_.,x_Symbol] :=
  x^(m+1)*(a+b*x)^(n+1)/(a*(m+1)) -
  Dist[b*(m+n+2)/(a*(m+1)),Int[x^(m+1)*(a+b*x)^n,x]] /;
FreeQ[{a,b},x] && IntegersQ[m,n] && 0<n<-m-2 && m+2*n-1>0


Int[x_^m_.*(a_.+b_.*x_)^n_,x_Symbol] :=
  x^m*(a+b*x)^(n+1)/(b*(m+n+1)) -
  Dist[a*m/(b*(m+n+1)),Int[x^(m-1)*(a+b*x)^n,x]] /;
FreeQ[{a,b},x] && IntegersQ[m,n] && 0<m<n/2


Int[(a_+b_.*x_)^n_.*(c_+d_.*x_)^n_.,x_Symbol] :=
  Int[(a*c+b*d*x^2)^n,x] /;
FreeQ[{a,b,c,d},x] && IntegerQ[n] && ZeroQ[b*c+a*d]


Int[(a_+b_.*x_)^m_.*(c_+d_.*x_)^n_.,x_Symbol] :=
  Dist[(d/b)^n,Int[(a+b*x)^(m+n),x]] /;
FreeQ[{a,b,c,d,m},x] && ZeroQ[b*c-a*d] && IntegerQ[n] && 
(Not[IntegerQ[m]] || LeafCount[a+b*x]<=LeafCount[c+d*x])


Int[1/((a_+b_.*x_)*(c_+d_.*x_)),x_Symbol] :=
  -2*ArcTanh[(b*c+a*d)/(b*c-a*d) + 2*b*d*x/(b*c-a*d)]/(b*c-a*d) /;
FreeQ[{a,b,c,d},x] && RationalQ[b*c-a*d] && b*c-a*d!=0


Int[(a_+b_.*x_)^m_.*(c_+d_.*x_)^n_,x_Symbol] :=
  -(a+b*x)^(m+1)*(c+d*x)^(n+1)/((n+1)*(b*c-a*d)) /;
FreeQ[{a,b,c,d,m,n},x] && ZeroQ[m+n+2] && NonzeroQ[b*c-a*d] && NonzeroQ[n+1]


Int[(a_+b_.*x_)^m_.*(c_+d_.*x_)^n_,x_Symbol] :=
  -(a+b*x)^(m+1)*(c+d*x)^(n+1)/((n+1)*(b*c-a*d)) +
  Dist[b*(m+n+2)/((n+1)*(b*c-a*d)),Int[(a+b*x)^m*(c+d*x)^(n+1),x]] /;
FreeQ[{a,b,c,d},x] && IntegersQ[m,n] && NonzeroQ[b*c-a*d] && 0<m<-n-2 && 2*m+n+1>0


Int[(a_+b_.*x_)^m_*(c_+d_.*x_)^n_.,x_Symbol] :=
  (a+b*x)^(m+1)*(c+d*x)^n/(b*(m+n+1)) +
  Dist[n*(b*c-a*d)/(b*(m+n+1)),Int[(a+b*x)^m*(c+d*x)^(n-1),x]] /;
FreeQ[{a,b,c,d},x] && IntegersQ[m,n] && NonzeroQ[b*c-a*d] && 0<n<=m


Int[x_^m_.*(a_+b_.*x_)^n_.*(c_+d_.*x_)^n_.,x_Symbol] :=
  Int[x^m*(a*c+b*d*x^2)^n,x] /;
FreeQ[{a,b,c,d,m},x] && IntegerQ[n] && ZeroQ[b*c+a*d]


Int[(a_+b_.*x_^n_.)^p_.*(c_+d_.*x_^n_.), x_Symbol] :=
  c*x*(a+b*x^n)^(p+1)/a /;
FreeQ[{a,b,c,d,n,p},x] && ZeroQ[a*d-b*c*(n*(p+1)+1)]


Int[x_^m_.*(a_+b_.*x_^n_.)^p_.*(c_+d_.*x_^n_.), x_Symbol] :=
  c*x^(m+1)*(a+b*x^n)^(p+1)/(a*(m+1)) /;
FreeQ[{a,b,c,d,m,n,p},x] && NonzeroQ[m+1] && ZeroQ[a*d*(m+1)-b*c*(m+n*(p+1)+1)]


Int[x_^m_.*(a_+b_.*x_^n_.)^p_.*(c_.*x_^q_.+d_.*x_^r_.), x_Symbol] :=
  c*x^(m+q+1)*(a+b*x^n)^(p+1)/(a*(m+q+1)) /;
FreeQ[{a,b,c,d,m,n,p,q,r},x] && ZeroQ[r-n-q] && NonzeroQ[m+q+1] && 
	ZeroQ[a*d*(m+q+1)-b*c*(m+q+n*(p+1)+1)]


Int[(a_+b_.*x_)^m_.*(c_+d_.*x_)^n_.*(e_+f_.*x_), x_Symbol] :=
  f*(a+b*x)^(m+1)*(c+d*x)^(n+1)/(b*d*(m+n+2)) /;
FreeQ[{a,b,c,d,e,f,m,n},x] && NonzeroQ[m+n+2] && ZeroQ[f*(b*c*(m+1)+a*d*(n+1))-b*d*e*(m+n+2)]


Int[x_*(a_+b_.*x_)^n_.*(c_+d_.*x_)^p_.,x_Symbol] :=
  (a+b*x)^(n+1)*(c+d*x)^(p+1)/(b*d*(2+n+p)) -
  Dist[(b*c*(n+1)+a*d*(p+1))/(b*d*(2+n+p)), Int[(a+b*x)^n*(c+d*x)^p, x]] /;
FreeQ[{a,b,c,d,n,p},x] && IntegersQ[n,p] && 0<n<=2 && p>5


Int[x_^m_*(a_+b_.*x_)^n_.*(c_+d_.*x_)^p_.,x_Symbol] :=
  x^(m-1)*(a+b*x)^(n+1)*(c+d*x)^(p+1)/(b*d*(1+m+n+p)) -
  Dist[a*c*(m-1)/(b*d*(1+m+n+p)), Int[x^(m-2)*(a+b*x)^n*(c+d*x)^p, x]] -
  Dist[(b*c*(m+n)+a*d*(m+p))/(b*d*(1+m+n+p)), Int[x^(m-1)*(a+b*x)^n*(c+d*x)^p, x]] /;
FreeQ[{a,b,c,d,n,p},x] && IntegersQ[m,n,p] && 0<m<=2 && 0<n<=2 && p>5
(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Code:: *)
Int[1/(a_+b_.*x_+c_.*x_^2),x_Symbol] :=
  Module[{q=Rt[b^2-4*a*c,2]},
  -2*ArcTanh[b/q+2*c*x/q]/q /;
 RationalQ[q] || SqrtNumberQ[q] && RationalQ[b/q]] /;
FreeQ[{a,b,c},x] && PosQ[b^2-4*a*c]


(* ::Code:: *)
Int[1/(a_+b_.*x_+c_.*x_^2),x_Symbol] :=
  -2*ArcTanh[(b+2*c*x)/Rt[b^2-4*a*c,2]]/Rt[b^2-4*a*c,2] /;
FreeQ[{a,b,c},x] && PosQ[b^2-4*a*c]


(* ::Code:: *)
Int[1/(a_+b_.*x_+c_.*x_^2),x_Symbol] :=
  Module[{q=Rt[4*a*c-b^2,2]},
  2*ArcTan[b/q+2*c*x/q]/q /;
 RationalQ[q] || SqrtNumberQ[q] && RationalQ[b/q]] /;
FreeQ[{a,b,c},x] && NegQ[b^2-4*a*c]


(* ::Code:: *)
Int[1/(a_+b_.*x_+c_.*x_^2),x_Symbol] :=
  2*ArcTan[(b+2*c*x)/Rt[4*a*c-b^2,2]]/Rt[4*a*c-b^2,2] /;
FreeQ[{a,b,c},x] && NegQ[b^2-4*a*c]


(* ::Code:: *)
Int[(a_+b_.*x_+c_.*x_^2)^n_,x_Symbol] :=
  Int[(b/2+c*x)^(2*n),x]/c^n /;
FreeQ[{a,b,c},x] && IntegerQ[n] && ZeroQ[b^2-4*a*c]


(* ::Code:: *)
Int[(a_+b_.*x_+c_.*x_^2)^n_,x_Symbol] :=
  (b+2*c*x)*(a+b*x+c*x^2)^(n+1)/((n+1)*(b^2-4*a*c)) -
  Dist[2*c*(2*n+3)/((n+1)*(b^2-4*a*c)),Int[(a+b*x+c*x^2)^(n+1),x]] /;
FreeQ[{a,b,c},x] && IntegerQ[n] && n<-1 && NonzeroQ[b^2-4*a*c]


(* ::Code:: *)
Int[(d_.+e_.*x_)/(a_+b_.*x_+c_.*x_^2),x_Symbol] :=
  e*Log[-a-b*x-c*x^2]/(2*c) /;
FreeQ[{a,b,c,d,e},x] && ZeroQ[2*c*d-b*e] && NegativeCoefficientQ[a]


(* ::Code:: *)
Int[(d_.+e_.*x_)/(a_+b_.*x_+c_.*x_^2),x_Symbol] :=
  e*Log[a+b*x+c*x^2]/(2*c) /;
FreeQ[{a,b,c,d,e},x] && ZeroQ[2*c*d-b*e]


(* ::Code:: *)
Int[(d_.+e_.*x_)/(a_+b_.*x_+c_.*x_^2),x_Symbol] :=
  e*Log[-a-b*x-c*x^2]/(2*c) +
  Dist[Simplify[(2*c*d-b*e)/(2*c)],Int[1/(a+b*x+c*x^2),x]] /;
FreeQ[{a,b,c,d,e},x] && Not[RationalQ[Rt[b^2-4*a*c,2]]] && NonzeroQ[a*e^2+c*d^2-b*d*e] && 
NegativeCoefficientQ[a]


(* ::Code:: *)
Int[(d_.+e_.*x_)/(a_+b_.*x_+c_.*x_^2),x_Symbol] :=
  e*Log[a+b*x+c*x^2]/(2*c) +
  Dist[Simplify[(2*c*d-b*e)/(2*c)],Int[1/(a+b*x+c*x^2),x]] /;
FreeQ[{a,b,c,d,e},x] && Not[RationalQ[Rt[b^2-4*a*c,2]]] && NonzeroQ[a*e^2+c*d^2-b*d*e]


(* ::Code:: *)
Int[(d_+e_.*x_)^m_.*(a_.+b_.*x_+c_.*x_^2)^n_.,x_Symbol] :=
  Int[(d+e*x)^(m+n)*(a/d+c/e*x)^n,x] /;
FreeQ[{a,b,c,d,e,m},x] && ZeroQ[a*e^2-b*d*e+c*d^2] && IntegerQ[n]


(* ::Code:: *)
Int[(d_+e_.*x_)^m_.*(a_+c_.*x_^2)^n_.,x_Symbol] :=
  Int[(d+e*x)^(m+n)*(a/d+c/e*x)^n,x] /;
FreeQ[{a,c,d,e,m},x] && ZeroQ[a*e^2+c*d^2] && IntegerQ[n]


(* ::Code:: *)
Int[(d_+e_.*x_)^m_*(a_+c_.*x_^2)^n_,x_Symbol] :=
  e*(d+e*x)^m*(a+c*x^2)^(n+1)/(2*c*d*(n+1)) /;
FreeQ[{a,c,d,e,m,n},x] && ZeroQ[a*e^2+c*d^2] && ZeroQ[m+2*(n+1)] && Not[IntegerQ[n]]


(* ::Code:: *)
Int[(d_+e_.*x_)^m_*(a_+c_.*x_^2)^n_,x_Symbol] :=
  -e*(d+e*x)^m*(a+c*x^2)^(n+1)/(2*c*d*(m+n+1)) +
  Dist[(m+2*(n+1))/(2*d*(m+n+1)),Int[(d+e*x)^(m+1)*(a+c*x^2)^n,x]] /;
FreeQ[{a,c,d,e,n},x] && ZeroQ[a*e^2+c*d^2] && NonzeroQ[m+n+1] && NonzeroQ[m+2*(n+1)] && 
  RationalQ[m] && m<-1 && Not[IntegerQ[n]]


(* ::Code:: *)
Int[(d_.+e_.*x_)^m_*(a_.+b_.*x_+c_.*x_^2)^n_,x_Symbol] :=
  -e*(d+e*x)^(m-1)*(a+b*x+c*x^2)^(n+1)/(c*(m-1)) +
  Dist[e^2/c,Int[(d+e*x)^(m-2)*(a+b*x+c*x^2)^(n+1),x]] /;
FreeQ[{a,b,c,d,e},x] && RationalQ[{m,n}] && n<-1 && ZeroQ[m+2*n+1] && ZeroQ[2*c*d-b*e]


(* ::Code:: *)
Int[(d_.+e_.*x_)*(a_.+b_.*x_+c_.*x_^2)^n_,x_Symbol] :=
  e*(a+b*x+c*x^2)^(n+1)/(2*c*(n+1)) /;
FreeQ[{a,b,c,d,e,n},x] && ZeroQ[2*c*d-b*e] && NonzeroQ[n+1]


(* ::Code:: *)
Int[(d_.+e_.*x_)*(a_.+b_.*x_+c_.*x_^2)^n_,x_Symbol] :=
  e*(a+b*x+c*x^2)^(n+1)/(2*c*(n+1)) +
  Dist[(2*c*d-b*e)/(2*c),Int[(a+b*x+c*x^2)^n,x]] /;
FreeQ[{a,b,c,d,e,n},x] && NonzeroQ[n+1] && Not[IntegerQ[n] && n>0] && NonzeroQ[2*c*d-b*e]


(* ::Code:: *)
Int[(d_+e_.*x_)*(a_.+c_.*x_^2)^n_,x_Symbol] :=
  e*(a+c*x^2)^(n+1)/(2*c*(n+1)) +
  Dist[d,Int[(a+c*x^2)^n,x]] /;
FreeQ[{a,c,d,e,n},x] && NonzeroQ[n+1] && Not[IntegerQ[n] && n>0]


(* ::Code:: *)
Int[(d_.+e_.*x_)^m_*(a_.+b_.*x_+c_.*x_^2)^n_,x_Symbol] :=
  e*(d+e*x)^(m-1)*(a+b*x+c*x^2)^(n+1)/(c*(m+2*n+1)) -
  Dist[(a*e^2-b*d*e+c*d^2)*(m-1)/(c*(m+2*n+1)),Int[(d+e*x)^(m-2)*(a+b*x+c*x^2)^n,x]] /;
FreeQ[{a,b,c,d,e,n},x] && RationalQ[m] && m>1 && NonzeroQ[m+2*n+1] && Not[IntegerQ[n] && n>=-1] && 
(ZeroQ[m+n] || ZeroQ[2*c*d-b*e])


(* ::Code:: *)
Int[(d_+e_.*x_)^m_*(a_.+c_.*x_^2)^n_,x_Symbol] :=
  -e*(d+e*x)^(m-1)/(c*(m-1)*(a+c*x^2)^(m-1)) +
  Dist[(a*e^2+c*d^2)/c,Int[(d+e*x)^(m-2)/(a+c*x^2)^m,x]] /;
FreeQ[{a,c,d,e,n},x] && RationalQ[m] && m>1 && ZeroQ[m+n]


(* ::Code:: *)
Int[(d_.+e_.*x_)^m_.*(a_.+b_.*x_+c_.*x_^2)^n_,x_Symbol] :=
  e*(d+e*x)^(m-1)*(a+b*x+c*x^2)^(n+1)/(c*(m+2*n+1)) +
  Dist[(2*c*d-b*e)*(m+n)/(c*(m+2*n+1)),Int[(d+e*x)^(m-1)*(a+b*x+c*x^2)^n,x]] /;
FreeQ[{a,b,c,d,e,n},x] && RationalQ[m] && m>1 && NonzeroQ[m+2*n+1] && Not[IntegerQ[n] && n>=-1] &&
ZeroQ[a*e^2-b*d*e+c*d^2]


(* ::Code:: *)
Int[(d_+e_.*x_)^m_.*(a_.+c_.*x_^2)^n_,x_Symbol] :=
  e*(d+e*x)^(m-1)*(a+c*x^2)^(n+1)/(c*(m+2*n+1)) +
  Dist[2*c*d*(m+n)/(c*(m+2*n+1)),Int[(d+e*x)^(m-1)*(a+c*x^2)^n,x]] /;
FreeQ[{a,c,d,e,n},x] && RationalQ[m] && m>1 && NonzeroQ[m+2*n+1] && Not[IntegerQ[n] && n>=-1] &&
ZeroQ[a*e^2+c*d^2]


(* ::Code:: *)
Int[x_^m_*(b_.*x_+c_.*x_^2)^n_,x_Symbol] :=
  x^m*(b*x+c*x^2)^(n+1)/(b*(m+n+1)) /;
FreeQ[{b,c,m,n},x] && NonzeroQ[m+n+1] && ZeroQ[m+2*(n+1)]


(* ::Code:: *)
Int[x_^m_*(b_.*x_+c_.*x_^2)^n_,x_Symbol] :=
  x^m*(b*x+c*x^2)^(n+1)/(b*(m+n+1)) -
  Dist[c*(m+2*(n+1))/(b*(m+n+1)),Int[x^(m+1)*(b*x+c*x^2)^n,x]] /;
FreeQ[{b,c,n},x] && RationalQ[m] && m<-1 && NonzeroQ[m+n+1] && Not[IntegerQ[n] && n>=-1]


(* ::Code:: *)
Int[(d_.+e_.*x_)^m_*(a_+b_.*x_+c_.*x_^2)^n_,x_Symbol] :=
  e*(d+e*x)^(m+1)*(a+b*x+c*x^2)^(n+1)/((m+1)*(a*e^2-b*d*e+c*d^2)) +
  Dist[(2*c*d-b*e)*(m+n+2)/((m+1)*(a*e^2-b*d*e+c*d^2)),Int[(d+e*x)^(m+1)*(a+b*x+c*x^2)^n,x]] /;
FreeQ[{a,b,c,d,e,n},x] && RationalQ[m] && m<-1 && NonzeroQ[a*e^2-b*d*e+c*d^2] && 
Not[IntegerQ[n] && n>=-1] && ZeroQ[m+2*n+3]


(* ::Code:: *)
Int[(d_+e_.*x_)^m_*(a_+c_.*x_^2)^n_,x_Symbol] :=
  e*(d+e*x)^(m+1)*(a+c*x^2)^(n+1)/((m+1)*(a*e^2+c*d^2)) +
  Dist[2*c*d*(m+n+2)/((m+1)*(a*e^2+c*d^2)),Int[(d+e*x)^(m+1)*(a+c*x^2)^n,x]] /;
FreeQ[{a,c,d,e,n},x] && RationalQ[m] && m<-1 && NonzeroQ[a*e^2+c*d^2] && 
Not[IntegerQ[n] && n>=-1] && ZeroQ[m+2*n+3]


(* ::Code:: *)
Int[1/(a_+b_.*x_^2+c_.*x_^4), x_Symbol] :=
  Module[{q=Rt[a/c,2]},
  Dist[c*q/(2*a),Int[(q+x^2)/(a+b*x^2+c*x^4),x]] +
  Dist[c*q/(2*a),Int[(q-x^2)/(a+b*x^2+c*x^4),x]]] /;
FreeQ[{a,b,c},x] && NonzeroQ[b^2-4*a*c] && PosQ[a/c] && 
(NegativeQ[b^2-4*a*c] || RationalQ[a/c] && Not[PositiveQ[b^2-4*a*c]])


(* ::Code:: *)
Int[1/(a_+b_.*x_^2+c_.*x_^4), x_Symbol] :=
  Module[{q=Rt[-a/c,2]},
  -Dist[c*q/(2*a),Int[(q+x^2)/(a+b*x^2+c*x^4),x]] -
  Dist[c*q/(2*a),Int[(q-x^2)/(a+b*x^2+c*x^4),x]]] /;
FreeQ[{a,b,c},x] && NonzeroQ[b^2-4*a*c] && NegQ[a/c] &&
(NegativeQ[b^2-4*a*c] || RationalQ[a/c] && Not[PositiveQ[b^2-4*a*c]])


(* ::Code:: *)
Int[(d_+e_.*x_^2)/(a_+b_.*x_^2+c_.*x_^4), x_Symbol] :=
  d/(a*Rt[-(b*d+2*a*e)/(a*d),2])*ArcTanh[d*Rt[-(b*d+2*a*e)/(a*d),2]*x/(d-e*x^2)] /;
FreeQ[{a,b,c,d,e},x] && NonzeroQ[b^2-4*a*c] && ZeroQ[c*d^2-a*e^2] && NegQ[(b*d+2*a*e)/(a*d)]


(* ::Code:: *)
(* Int[(d_+e_.*x_^2)/(a_+b_.*x_^2+c_.*x_^4), x_Symbol] :=
  d/(a*Rt[(b*d+2*a*e)/(a*d),2])*ArcTan[d*Rt[(b*d+2*a*e)/(a*d),2]*x/(d-e*x^2)] /;
FreeQ[{a,b,c,d,e},x] && NonzeroQ[b^2-4*a*c] && ZeroQ[c*d^2-a*e^2] && PosQ[(b*d+2*a*e)/(a*d)] *)


(* ::Code:: *)
Int[(d_+e_.*x_^2)/(a_+b_.*x_^2+c_.*x_^4), x_Symbol] :=
  Module[{q=c*d/e},
  Module[{r=Rt[2*c*q-b*c,2]},
  Dist[e/2,Int[1/(q-r*x+c*x^2),x]] + 
  Dist[e/2,Int[1/(q+r*x+c*x^2),x]]] /;
 Not[NegativeQ[2*c*q-b*c]]] /;
FreeQ[{a,b,c,d,e},x] && NonzeroQ[b^2-4*a*c] && ZeroQ[c*d^2-a*e^2] && PosQ[(b*d+2*a*e)/(a*d)]


(* ::Code:: *)
Int[(d_.+e_.*x_^2)/(a_+b_.*x_^2+c_.*x_^4), x_Symbol] :=
  Module[{q=Rt[a/c,2]},
  Dist[(q*c*d+a*e)/(2*a),Int[(q+x^2)/(a+b*x^2+c*x^4),x]] +
  Dist[(q*c*d-a*e)/(2*a),Int[(q-x^2)/(a+b*x^2+c*x^4),x]]] /;
FreeQ[{a,b,c,d,e},x] && NonzeroQ[b^2-4*a*c] && NonzeroQ[c*d^2-a*e^2] && PosQ[a/c] &&
(NegativeQ[b^2-4*a*c] || RationalQ[a/c] && Not[PositiveQ[b^2-4*a*c]])


(* ::Code:: *)
Int[(d_+e_.*x_^2)/(a_+b_.*x_^2+c_.*x_^4), x_Symbol] :=
  Module[{q=Rt[-a/c,2]},
  Dist[-(q*c*d-a*e)/(2*a),Int[(q+x^2)/(a+b*x^2+c*x^4),x]] -
  Dist[(q*c*d+a*e)/(2*a),Int[(q-x^2)/(a+b*x^2+c*x^4),x]]] /;
FreeQ[{a,b,c,d,e},x] && NonzeroQ[b^2-4*a*c] && NonzeroQ[c*d^2-a*e^2] && NegQ[a/c] &&
(NegativeQ[b^2-4*a*c] || RationalQ[a/c] && Not[PositiveQ[b^2-4*a*c]])


(* ::Code:: *)
Int[1/(a_+b_.*x_^n_+c_.*x_^j_),x_Symbol] :=
  Module[{q=Rt[a*c,2]},
  Module[{r=Rt[2*c*q-b*c,2]},
  Dist[q/(2*a*r),Int[(r-c*x^(n/2))/(q-r*x^(n/2)+c*x^n),x]] + 
  Dist[q/(2*a*r),Int[(r+c*x^(n/2))/(q+r*x^(n/2)+c*x^n),x]]] /;
 Not[NegativeQ[2*c*q-b*c]]] /;
FreeQ[{a,b,c},x] && NegativeQ[b^2-4*a*c] && ZeroQ[j-2*n] && IntegerQ[n/2] && n>2 && 
  NegativeQ[b^2-4*a*c] && PosQ[a*c]


(* ::Code:: *)
Int[1/(a_+b_.*x_^n_+c_.*x_^j_),x_Symbol] :=
  Module[{q=Rt[b^2-4*a*c,2]},
  Dist[2*c/q,Int[1/(b-q+2*c*x^n),x]] -
  Dist[2*c/q,Int[1/(b+q+2*c*x^n),x]]] /;
FreeQ[{a,b,c},x] && NonzeroQ[b^2-4*a*c] && ZeroQ[j-2*n] && IntegerQ[n] && n>1 && 
  Not[IntegerQ[n/2] && NegativeQ[b^2-4*a*c] && PosQ[a*c]]


(* ::Code:: *)
Int[1/(x_*(a_+b_.*x_^n_+c_.*x_^j_)),x_Symbol] :=
  Log[x]/a - Dist[1/a,Int[x^(n-1)*(b+c*x^n)/(a+b*x^n+c*x^(2*n)),x]] /;
FreeQ[{a,b,c,n},x] && NonzeroQ[b^2-4*a*c] && ZeroQ[j-2*n] && Not[NegativeQ[n]]


(* ::Code:: *)
Int[x_^m_/(a_+b_.*x_^n_+c_.*x_^j_),x_Symbol] :=
  x^(m+1)/(a*(m+1)) -
  Dist[1/a,Int[x^(m+n)*(b+c*x^n)/(a+b*x^n+c*x^(2*n)),x]] /;
FreeQ[{a,b,c},x] && NonzeroQ[b^2-4*a*c] && ZeroQ[j-2*n] && IntegersQ[m,n] && n>0 && m<-1


(* ::Code:: *)
Int[x_^m_./(a_+b_.*x_^n_+c_.*x_^j_),x_Symbol] :=
  x^(m-2*n+1)/(c*(m-2*n+1)) -
  Dist[1/c,Int[x^(m-2*n)*(a+b*x^n)/(a+b*x^n+c*x^(2*n)),x]] /;
FreeQ[{a,b,c},x] && NonzeroQ[b^2-4*a*c] && ZeroQ[j-2*n] && IntegersQ[m,n] && 0<2*n<=m


(* ::Code:: *)
Int[x_^m_./(a_+b_.*x_^n_+c_.*x_^j_),x_Symbol] :=
  Module[{q=Rt[a*c,2]},
  Module[{r=Rt[2*c*q-b*c,2]},
  Dist[c/(2*r),Int[x^(m-n/2)/(q-r*x^(n/2)+c*x^n),x]] - 
  Dist[c/(2*r),Int[x^(m-n/2)/(q+r*x^(n/2)+c*x^n),x]]] /;
 Not[NegativeQ[2*c*q-b*c]]] /;
FreeQ[{a,b,c},x] && NegativeQ[b^2-4*a*c] && ZeroQ[j-2*n] && IntegersQ[m,n/2] && 
  1<n/2<=m<2*n && CoprimeQ[m+1,n] && PosQ[a*c]


(* ::Code:: *)
Int[x_^m_./(a_+b_.*x_^n_+c_.*x_^j_),x_Symbol] :=
  Module[{q=Rt[b^2-4*a*c,2]},
  Dist[2*c/q,Int[x^m/(b-q+2*c*x^n),x]] -
  Dist[2*c/q,Int[x^m/(b+q+2*c*x^n),x]]] /;
FreeQ[{a,b,c},x] && NonzeroQ[b^2-4*a*c] && ZeroQ[j-2*n] && IntegersQ[m,n] && 0<m<n && 
  CoprimeQ[m+1,n] && Not[IntegerQ[n/2] && NegativeQ[b^2-4*a*c] && PosQ[a*c]]


(* ::Code:: *)
Int[x_^m_/(a_+b_.*x_^n_+c_.*x_^j_),x_Symbol] :=
  Module[{q=Rt[b^2-4*a*c,2]},
  Dist[1-b/q,Int[x^(m-n)/(b-q+2*c*x^n),x]] +
  Dist[1+b/q,Int[x^(m-n)/(b+q+2*c*x^n),x]]] /;
FreeQ[{a,b,c},x] && NonzeroQ[b^2-4*a*c] && ZeroQ[j-2*n] && IntegersQ[m,n] && n<m<2*n && 
  CoprimeQ[m+1,n] && Not[IntegerQ[n/2] && NegativeQ[b^2-4*a*c] && PosQ[a*c]]


(* ::Code:: *)
Int[(d_.+e_.*x_^n_)/(a_+b_.*x_^n_+c_.*x_^j_),x_Symbol] :=
  Module[{q=Rt[a*c,2]},
  Module[{r=Rt[2*c*q-b*c,2]},
  Dist[c/(2*q*r),Int[(d*r-(c*d-e*q)*x^(n/2))/(q-r*x^(n/2)+c*x^n),x]] + 
  Dist[c/(2*q*r),Int[(d*r+(c*d-e*q)*x^(n/2))/(q+r*x^(n/2)+c*x^n),x]]] /;
 Not[NegativeQ[2*c*q-b*c]]] /;
FreeQ[{a,b,c,d,e},x] && NegativeQ[b^2-4*a*c] && ZeroQ[j-2*n] && IntegerQ[n/2] && n>2 && PosQ[a*c]


(* ::Code:: *)
Int[(d_.+e_.*x_^n_)/(a_+b_.*x_^n_+c_.*x_^j_),x_Symbol] :=
  Module[{q=Rt[b^2-4*a*c,2]},
  Dist[(e+(2*c*d-b*e)/q),Int[1/(b-q+2*c*x^n),x]] +
  Dist[(e-(2*c*d-b*e)/q),Int[1/(b+q+2*c*x^n),x]]] /;
FreeQ[{a,b,c,d,e},x] && NonzeroQ[b^2-4*a*c] && ZeroQ[j-2*n] && IntegerQ[n] && n>1 && 
  Not[IntegerQ[n/2] && NegativeQ[b^2-4*a*c] && PosQ[a*c]]


(* ::Code:: *)
Int[(d_+e_.*x_^n_)/(x_*(a_+b_.*x_^n_+c_.*x_^j_)),x_Symbol] :=
  d*Log[x]/a - Dist[1/a,Int[x^(n-1)*(b*d-a*e+c*d*x^n)/(a+b*x^n+c*x^(2*n)),x]] /;
FreeQ[{a,b,c,d,e,n},x] && NonzeroQ[b^2-4*a*c] && ZeroQ[j-2*n]


(* ::Code:: *)
Int[x_^m_*(d_+e_.*x_^n_)/(a_+b_.*x_^n_+c_.*x_^j_),x_Symbol] :=
  d*x^(m+1)/(a*(m+1)) -
  Dist[1/a,Int[x^(m+n)*(b*d-a*e+c*d*x^n)/(a+b*x^n+c*x^(2*n)),x]] /;
FreeQ[{a,b,c,d,e},x] && NonzeroQ[b^2-4*a*c] && ZeroQ[j-2*n] && IntegersQ[m,n] && n>0 && m<-1


(* ::Code:: *)
Int[x_^m_.*(d_+e_.*x_^n_)/(a_+b_.*x_^n_+c_.*x_^j_),x_Symbol] :=
  e*x^(m-n+1)/(c*(m-n+1)) -
  Dist[1/c,Int[x^(m-n)*(a*e+(b*e-c*d)*x^n)/(a+b*x^n+c*x^(2*n)),x]] /;
FreeQ[{a,b,c,d,e},x] && NonzeroQ[b^2-4*a*c] && ZeroQ[j-2*n] && IntegersQ[m,n] && 0<n<=m


(* ::Code:: *)
Int[x_^m_*(d_+e_.*x_^n_)/(a_+b_.*x_^n_+c_.*x_^j_),x_Symbol] :=
  Module[{q=Rt[a*c,2]},
  Module[{r=Rt[2*c*q-b*c,2]},
  Dist[c/(2*q*r),Int[x^m*(d*r-(c*d-e*q)*x^(n/2))/(q-r*x^(n/2)+c*x^n),x]] + 
  Dist[c/(2*q*r),Int[x^m*(d*r+(c*d-e*q)*x^(n/2))/(q+r*x^(n/2)+c*x^n),x]]] /;
 Not[NegativeQ[2*c*q-b*c]]] /;
FreeQ[{a,b,c,d,e},x] && NegativeQ[b^2-4*a*c] && ZeroQ[j-2*n] && IntegersQ[m,n/2] && 
  0<m<n && CoprimeQ[m+1,n] && PosQ[a*c]


(* ::Code:: *)
Int[x_^m_.*(d_+e_.*x_^n_)/(a_+b_.*x_^n_+c_.*x_^j_),x_Symbol] :=
  Module[{q=Rt[b^2-4*a*c,2]},
  Dist[(e+(2*c*d-b*e)/q),Int[x^m/(b-q+2*c*x^n),x]] +
  Dist[(e-(2*c*d-b*e)/q),Int[x^m/(b+q+2*c*x^n),x]]] /;
FreeQ[{a,b,c,d,e},x] && NonzeroQ[b^2-4*a*c] && ZeroQ[j-2*n] && IntegersQ[m,n] && 
  0<m<n && CoprimeQ[m+1,n] && Not[IntegerQ[n/2] && NegativeQ[b^2-4*a*c] && PosQ[a*c]]


(* ::Code:: *)
Int[(a_+b_.*x_^n_+c_.*x_^j_)^p_,x_Symbol] :=
  Dist[1/c^p,Int[(b/2+c*x^n)^(2*p),x]] /;
FreeQ[{a,b,c},x] && ZeroQ[j-2*n] && IntegersQ[n,p] && n>1 && p<0 && ZeroQ[b^2-4*a*c]


(* ::Code:: *)
Int[(a_+b_.*x_^n_+c_.*x_^j_)^p_,x_Symbol] :=
  -x*(b^2-2*a*c+b*c*x^n)*(a+b*x^n+c*x^j)^(p+1)/(a*n*(p+1)*(b^2-4*a*c)) +
  Dist[1/(a*n*(p+1)*(b^2-4*a*c)),
    Int[(b^2-2*a*c+n*(p+1)*(b^2-4*a*c)+b*c*(n*(2*p+3)+1)*x^n)*(a+b*x^n+c*x^(2*n))^(p+1),x]] /;
FreeQ[{a,b,c},x] && ZeroQ[j-2*n] && IntegerQ[n] && n>1 && RationalQ[p] && p<-1 && 
NonzeroQ[b^2-4*a*c]


(* ::Code:: *)
Int[x_^m_.*(a_+b_.*x_^n_+c_.*x_^j_)^p_,x_Symbol] :=
  Dist[1/c^p,Int[x^m*(b/2+c*x^n)^(2*p),x]] /;
FreeQ[{a,b,c},x] && ZeroQ[j-2*n] && IntegersQ[m,n,p] && n>1 && p<0 && ZeroQ[b^2-4*a*c]


(* ::Code:: *)
Int[x_^m_.*(a_+b_.*x_^n_.+c_.*x_^j_)^p_.,x_Symbol] :=
  x^(m-2*n+1)*(a+b*x^n+c*x^(2*n))^(p+1)/(c*(2*n*p+m+1)) - 
  Dist[1/(c*(2*n*p+m+1)),
    Int[x^(m-2*n)*Sim[a*(m-2*n+1)+(b*(n*p-n+m+1))*x^n,x]*(a+b*x^n+c*x^(2*n))^p,x]] /;
FreeQ[{a,b,c,p},x] && NonzeroQ[b^2-4*a*c] && ZeroQ[j-2*n] && IntegersQ[m,n] && 0<n<=m


(* ::Code:: *)
Int[x_^m_*(a_+b_.*x_^n_.+c_.*x_^j_.)^p_,x_Symbol] :=
  x^(m+1)*(a+b*x^n+c*x^j)^(p+1)/(a*(m+1)) +
  Dist[c/a,Int[x^(m+2*n)*(a+b*x^n+c*x^j)^p,x]] /;
FreeQ[{a,b,c,p},x] && ZeroQ[j-2*n] && IntegersQ[m,n] && m<-1 && n>0 && ZeroQ[m+n*(p+1)+1] &&
Not[IntegerQ[p] && p>0]


(* ::Code:: *)
Int[x_^m_*(a_+b_.*x_^n_.+c_.*x_^j_.)^p_,x_Symbol] :=
  x^(m+1)*(a+b*x^n+c*x^j)^(p+1)/(a*(m+1)) -
  Dist[b/(2*a),Int[x^(m+n)*(a+b*x^n+c*x^j)^p,x]] /;
FreeQ[{a,b,c,p},x] && ZeroQ[j-2*n] && IntegersQ[m,n] && m<-1 && n>0 && ZeroQ[m+2*n*(p+1)+1] &&
Not[IntegerQ[p] && p>0]


(* ::Code:: *)
Int[x_^m_.*(a_+b_.*x_^n_+c_.*x_^j_)^p_,x_Symbol] :=
  Dist[1/(m+1),Subst[Int[(a+b*x^(n/(m+1))+c*x^(2*n/(m+1)))^p,x],x,x^(m+1)]] /;
FreeQ[{a,b,c,m,n},x] && NonzeroQ[b^2-4*a*c] && ZeroQ[j-2*n] && NonzeroQ[m+1] && 
  IntegersQ[p,n/(m+1)] && Not[NegativeQ[m+1]] && p<0


(* ::Code:: *)
Int[x_^m_.*(a_+b_.*x_^n_+c_.*x_^j_)^p_,x_Symbol] :=
  Dist[1/n,Subst[Int[x^((m+1)/n-1)*(a+b*x+c*x^2)^p,x],x,x^n]] /;
FreeQ[{a,b,c,m,n},x] && NonzeroQ[b^2-4*a*c] && ZeroQ[j-2*n] && IntegersQ[p,(m+1)/n] && 
  Not[NegativeQ[n]] && p<0 && ((m+1)/n>0 || Not[IntegerQ[m]])


(* ::Code:: *)
Int[x_^m_.*(a_+b_.*x_^n_+c_.*x_^j_)^p_,x_Symbol] :=
  Module[{g=GCD[m+1,n]},
  Dist[1/g,Subst[Int[x^((m+1)/g-1)*(a+b*x^(n/g)+c*x^(2*n/g))^p,x],x,x^g]]] /; 
FreeQ[{a,b,c,m,n},x] && NonzeroQ[b^2-4*a*c] && ZeroQ[j-2*n] && NonzeroQ[m+1] && 
  IntegersQ[m,n,p] && Not[CoprimeQ[m+1,n]] && p<0 && (m+1)/n>0


(* ::Code:: *)
Int[(d_.+e_.*x_^n_)*(a_+b_.*x_^n_+c_.*x_^j_)^p_,x_Symbol] :=
  Dist[1/c^p,Int[(d+e*x^n)*(b/2+c*x^n)^(2*p),x]] /;
FreeQ[{a,b,c,d,e},x] && ZeroQ[j-2*n] && IntegersQ[n,p] && n>1 && p<0 && ZeroQ[b^2-4*a*c]


(* ::Code:: *)
Int[(d_.+e_.*x_^n_)*(a_+b_.*x_^n_+c_.*x_^j_)^p_,x_Symbol] :=
  x*(a*b*e-b^2*d+2*a*c*d+c*(2*a*e-b*d)*x^n)*(a+b*x^n+c*x^(2*n))^(p+1)/(a*n*(p+1)*(b^2-4*a*c)) -
  Dist[1/(a*n*(p+1)*(b^2-4*a*c)),
    Int[(a*b*e-b^2*d+2*a*c*d-d*n*(p+1)*(b^2-4*a*c)+c*(2*a*e-b*d)*(n*(2*p+3)+1)*x^n)*
      (a+b*x^n+c*x^(2*n))^(p+1),x]] /;
FreeQ[{a,b,c,d,e},x] && ZeroQ[j-2*n] && IntegerQ[n] && n>1 && RationalQ[p] && p<-1 && 
NonzeroQ[b^2-4*a*c]


(* ::Code:: *)
Int[x_^m_.*(d_+e_.*x_^n_.)*(a_+b_.*x_^n_.+c_.*x_^j_)^p_.,x_Symbol] :=
  e*x^(m-n+1)*(a+b*x^n+c*x^(2*n))^(p+1)/(c*(2*n*p+n+m+1)) - 
  Dist[1/(c*(2*n*p+n+m+1)),
    Int[x^(m-n)*Sim[a*e*(m-n+1)+(b*e*(n*p+m+1)-c*d*(2*n*p+n+m+1))*x^n,x]*(a+b*x^n+c*x^(2*n))^p,x]] /;
FreeQ[{a,b,c,d,e,p},x] && NonzeroQ[b^2-4*a*c] && ZeroQ[j-2*n] && IntegersQ[m,n] && 0<n<=m


(* ::Code:: *)
Int[x_^m_.*(d_+e_.*x_^n_)*(a_+b_.*x_^n_+c_.*x_^j_)^p_,x_Symbol] :=
  Dist[1/(m+1),Subst[Int[(d+e*x^(n/(m+1)))*(a+b*x^(n/(m+1))+c*x^(2*n/(m+1)))^p,x],x,x^(m+1)]] /;
FreeQ[{a,b,c,d,e,m,n},x] && NonzeroQ[b^2-4*a*c] && ZeroQ[j-2*n] && NonzeroQ[m+1] && 
  IntegersQ[p,n/(m+1)] && Not[NegativeQ[m+1]] && p<0


(* ::Code:: *)
Int[x_^m_.*(d_+e_.*x_^n_)*(a_+b_.*x_^n_+c_.*x_^j_)^p_,x_Symbol] :=
  Dist[1/n,Subst[Int[x^((m+1)/n-1)*(d+e*x)*(a+b*x+c*x^2)^p,x],x,x^n]] /;
FreeQ[{a,b,c,d,e,m,n},x] && NonzeroQ[b^2-4*a*c] && ZeroQ[j-2*n] && IntegersQ[p,(m+1)/n] && 
  Not[NegativeQ[n]] && p<0 && ((m+1)/n>0 || Not[IntegerQ[m]])


(* ::Code:: *)
Int[x_^m_.*(d_+e_.*x_^n_)*(a_+b_.*x_^n_+c_.*x_^j_)^p_,x_Symbol] :=
  Module[{g=GCD[m+1,n]},
  Dist[1/g,Subst[Int[x^((m+1)/g-1)*(d+e*x^(n/g))*(a+b*x^(n/g)+c*x^(2*n/g))^p,x],x,x^g]]] /; 
FreeQ[{a,b,c,d,e,m,n},x] && NonzeroQ[b^2-4*a*c] && ZeroQ[j-2*n] && NonzeroQ[m+1] && 
  IntegersQ[m,n,p] && Not[CoprimeQ[m+1,n]] && p<0 && (m+1)/n>0


(* ::Code:: *)
Int[(a_+b_.*x_^n_)/(c_+d_.*x_^2+e_.*x_^n_+f_.*x_^j_), x_Symbol] :=
  a/Rt[c*d,2]*ArcTan[(n-1)*a*Rt[c*d,2]*x/(c*(a*(n-1)-b*x^n))] /;
FreeQ[{a,b,c,d,e,f,n},x] && ZeroQ[j-2*n] &&
ZeroQ[b^2*c-a^2*f*(n-1)^2] && ZeroQ[b*e+2*a*f*(n-1)] && PosQ[c*d]


(* ::Code:: *)
Int[(a_+b_.*x_^n_)/(c_+d_.*x_^2+e_.*x_^n_+f_.*x_^j_), x_Symbol] :=
  a/Rt[-c*d,2]*ArcTanh[a*(n-1)*Rt[-c*d,2]*x/(c*(a*(n-1)-b*x^n))] /;
FreeQ[{a,b,c,d,e,f,n},x] && ZeroQ[j-2*n] &&
ZeroQ[b^2*c-a^2*f*(n-1)^2] && ZeroQ[b*e+2*a*f*(n-1)] && NegQ[c*d]


(* ::Code:: *)
Int[x_^m_.*(a_+b_.*x_^n_.)/(c_+d_.*x_^k_.+e_.*x_^n_.+f_.*x_^j_), x_Symbol] :=
  a*ArcTan[a*(m-n+1)*Rt[c*d,2]*x^(m+1)/(c*(a*(m-n+1)+b*(m+1)*x^n))]/((m+1)*Rt[c*d,2]) /;
FreeQ[{a,b,c,d,e,f,m,n},x] && ZeroQ[j-2*n] && ZeroQ[k-2*(m+1)] &&
ZeroQ[a^2*f*(m-n+1)^2-b^2*c*(m+1)^2] && ZeroQ[b*e*(m+1)-2*a*f*(m-n+1)] && PosQ[c*d]


(* ::Code:: *)
Int[x_^m_.*(a_+b_.*x_^n_.)/(c_+d_.*x_^k_.+e_.*x_^n_.+f_.*x_^j_), x_Symbol] :=
  a*ArcTanh[a*(m-n+1)*Rt[-c*d,2]*x^(m+1)/(c*(a*(m-n+1)+b*(m+1)*x^n))]/((m+1)*Rt[-c*d,2]) /;
FreeQ[{a,b,c,d,e,f,m,n},x] && ZeroQ[j-2*n] && ZeroQ[k-2*(m+1)] &&
ZeroQ[a^2*f*(m-n+1)^2-b^2*c*(m+1)^2] && ZeroQ[b*e*(m+1)-2*a*f*(m-n+1)] && NegQ[c*d]


(* ::Code:: *)
Int[(d_.+e_.*x_+f_.*x_^2+g_.*x_^3)/(a_+b_.*x_+c_.*x_^2+b_.*x_^3+a_.*x_^4),x_Symbol] :=
  Module[{q=Sqrt[8*a^2+b^2-4*a*c]},
  Dist[1/q,Int[(b*d-2*a*e+2*a*g+d*q+(2*a*d-2*a*f+b*g+g*q)*x)/(2*a+(b+q)*x+2*a*x^2),x]] -
  Dist[1/q,Int[(b*d-2*a*e+2*a*g-d*q+(2*a*d-2*a*f+b*g-g*q)*x)/(2*a+(b-q)*x+2*a*x^2),x]]] /;
FreeQ[{a,b,c,d,e,f,g},x] && PosQ[8*a^2+b^2-4*a*c]


(* ::Code:: *)
Int[(d_.+e_.*x_+g_.*x_^3)/(a_+b_.*x_+c_.*x_^2+b_.*x_^3+a_.*x_^4),x_Symbol] :=
  Module[{q=Sqrt[8*a^2+b^2-4*a*c]},
  Dist[1/q,Int[(b*d-2*a*e+2*a*g+d*q+(2*a*d+b*g+g*q)*x)/(2*a+(b+q)*x+2*a*x^2),x]] -
  Dist[1/q,Int[(b*d-2*a*e+2*a*g-d*q+(2*a*d+b*g-g*q)*x)/(2*a+(b-q)*x+2*a*x^2),x]]] /;
FreeQ[{a,b,c,d,e,g},x] && PosQ[8*a^2+b^2-4*a*c]


(* ::Code:: *)
If[ShowSteps,

Int[u_*v_^p_,x_Symbol] :=
  Module[{m=Exponent[u,x],n=Exponent[v,x]},
  Module[{c=Coefficient[u,x,m]/(Coefficient[v,x,n]*(m+1+n*p)),w},
  w=Apart[u-c*x^(m-n)*((m-n+1)*v+(p+1)*x*D[v,x]),x];
  If[ZeroQ[w],
    ShowStep["
If p>1, 1<n<=m+1, and m+1-n*p<0, let c=pm/(qn*(m+1-n*p)), then if (Pm[x]-c*x^(m-n)*((m-n+1)*Qn[x]+(1-p)*x*D[Qn[x],x]))==0,",
	  "Int[Pm[x]/Qn[x]^p,x]", "c*x^(m-n+1)/Qn[x]^(p-1)",
      Hold[c*x^(m-n+1)*v^(p+1)]],
  ShowStep["If p>1, 1<n<=m+1, and m+1-n*p<0, let c=pm/(qn*(m+1-n*p)), then",
	"Int[Pm[x]/Qn[x]^p,x]",
	"c*x^(m-n+1)/Qn[x]^(p-1)+Int[(Pm[x]-c*x^(m-n)*((m-n+1)*Qn[x]+(1-p)*x*D[Qn[x],x]))/Qn[x]^p,x]",
	Hold[c*x^(m-n+1)*v^(p+1) + Int[w*v^p,x]]]]] /;
 m+1>=n>1 && m+n*p<-1 && FalseQ[DerivativeDivides[v,u,x]]] /;
SimplifyFlag && RationalQ[p] && p<-1 && PolynomialQ[u,x] && PolynomialQ[v,x] && SumQ[v] && 
Not[MonomialQ[u,x] && BinomialQ[v,x]] && 
Not[ZeroQ[Coefficient[u,x,0]] && ZeroQ[Coefficient[v,x,0]]],

Int[u_*v_^p_,x_Symbol] :=
  Module[{m=Exponent[u,x],n=Exponent[v,x]},
  Module[{c=Coefficient[u,x,m]/(Coefficient[v,x,n]*(m+1+n*p)),w},
  c=Coefficient[u,x,m]/(Coefficient[v,x,n]*(m+1+n*p));
  w=Apart[u-c*x^(m-n)*((m-n+1)*v+(p+1)*x*D[v,x]),x];
  If[ZeroQ[w],
    c*x^(m-n+1)*v^(p+1),
  c*x^(m-n+1)*v^(p+1) + Int[w*v^p,x]]] /;
 m+1>=n>1 && m+n*p<-1 && FalseQ[DerivativeDivides[v,u,x]]] /;
RationalQ[p] && p<-1 && PolynomialQ[u,x] && PolynomialQ[v,x] && SumQ[v] && 
Not[MonomialQ[u,x] && BinomialQ[v,x]] && 
Not[ZeroQ[Coefficient[u,x,0]] && ZeroQ[Coefficient[v,x,0]]]]


(* ::Code:: *)
Int[f_'[u_]*g_[v_]*w_. + f_[u_]*g_'[v_]*t_.,x_Symbol] :=
  f[u]*g[v] /;
FreeQ[{f,g},x] && ZeroQ[w-D[u,x]] && ZeroQ[t-D[v,x]]


(* ::Code:: *)
If[ShowSteps,

Int[u_,x_Symbol] :=
  If[SplitFreeTerms[u,x][[1]]===0,
    ShowStep["","Int[a*u+b*v+\[CenterEllipsis],x]","a*Int[u,x]+b*Int[v,x]+\[CenterEllipsis]",Hold[
    SplitFreeIntegrate[u,x]]],
  ShowStep["","Int[a+b*u+c*v+\[CenterEllipsis],x]","a*x+b*Int[u,x]+c*Int[v,x]+\[CenterEllipsis]",Hold[
  SplitFreeIntegrate[u,x]]]] /;
SimplifyFlag && SumQ[u],

Int[u_,x_Symbol] :=
  SplitFreeIntegrate[u,x] /;
SumQ[u]]


(* ::Code:: *)
SplitFreeIntegrate[u_,x_Symbol] :=
  If[SumQ[u],
    Map[Function[SplitFreeIntegrate[#,x]],u],
  If[FreeQ[u,x],
    u*x,
  If[MatchQ[u,c_*(a_+b_.*x) /; FreeQ[{a,b,c},x]],
    Int[u,x],
  Module[{lst=SplitFreeFactors[u,x]},
  Dist[lst[[1]], Int[lst[[2]],x]]]]]]
(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Code:: *)
Int[1/(a_+b_.*x_^2),x_Symbol] :=
  Rt[a/b,2]/a*ArcTan[x/Rt[a/b,2]] /;
FreeQ[{a,b},x] && PosQ[a/b]


(* ::Code:: *)
Int[1/(a_+b_.*x_^2),x_Symbol] :=
  Rt[-a/b,2]/a*ArcTanh[x/Rt[-a/b,2]] /;
FreeQ[{a,b},x] && NegQ[a/b]


(* ::Code:: *)
Int[1/(a_+b_.*x_^3),x_Symbol] :=
  Module[{r=Numerator[Rt[a/b,3]], s=Denominator[Rt[a/b,3]]},
  Dist[r/(3*a),Int[1/(r+s*x),x]] +
  Dist[r/(3*a),Int[(2*r-s*x)/(r^2-r*s*x+s^2*x^2),x]]] /;
FreeQ[{a,b},x] && PosQ[a/b]


(* ::Code:: *)
Int[1/(a_+b_.*x_^3),x_Symbol] :=
  Module[{r=Numerator[Rt[-a/b,3]], s=Denominator[Rt[-a/b,3]]},
  Dist[r/(3*a),Int[1/(r-s*x),x]] +
  Dist[r/(3*a),Int[(2*r+s*x)/(r^2+r*s*x+s^2*x^2),x]]] /;
FreeQ[{a,b},x] && NegQ[a/b]


(* ::Code:: *)
Int[1/(a_+b_.*x_^n_),x_Symbol] :=
  Module[{r=Numerator[Rt[a/b,4]], s=Denominator[Rt[a/b,4]]},
  Dist[r/(2*Sqrt[2]*a),Int[(Sqrt[2]*r-s*x^(n/4))/(r^2-Sqrt[2]*r*s*x^(n/4)+s^2*x^(n/2)),x]] +
  Dist[r/(2*Sqrt[2]*a),Int[(Sqrt[2]*r+s*x^(n/4))/(r^2+Sqrt[2]*r*s*x^(n/4)+s^2*x^(n/2)),x]]] /;
FreeQ[{a,b},x] && IntegerQ[n/4] && n>2 && PositiveQ[a/b]


(* ::Code:: *)
Int[1/(a_+b_.*x_^n_),x_Symbol] :=
  Module[{r=Numerator[Rt[-a/b,2]], s=Denominator[Rt[-a/b,2]]},
  Dist[r/(2*a),Int[1/(r-s*x^(n/2)),x]] +
  Dist[r/(2*a),Int[1/(r+s*x^(n/2)),x]]] /;
FreeQ[{a,b},x] && IntegerQ[n/4] && n>2 && Not[PositiveQ[a/b]]


(* ::Code:: *)
Int[1/(a_+b_.*x_^n_),x_Symbol] :=
  Module[{r=Numerator[Rt[a/b,n/2]], s=Denominator[Rt[a/b,n/2]]},
  Dist[2*r/(a*n),Int[1/(r+s*x^2),x]] +
  Dist[4*r/(a*n),Int[Sum[(r-s*Cos[2*(2*k-1)*Pi/n]*x^2)/(r^2-2*r*s*Cos[2*(2*k-1)*Pi/n]*x^2+s^2*x^4),
    {k,1,(n-2)/4}],x]]] /;
FreeQ[{a,b},x] && IntegerQ[(n-2)/4] && n>2 && PosQ[a/b]


(* ::Code:: *)
Int[1/(a_+b_.*x_^n_),x_Symbol] :=
  Module[{r=Numerator[Rt[-a/b,n/2]], s=Denominator[Rt[-a/b,n/2]]},
  Dist[2*r/(a*n),Int[1/(r-s*x^2),x]] +
  Dist[4*r/(a*n),Int[Sum[(r-s*Cos[4*k*Pi/n]*x^2)/(r^2-2*r*s*Cos[4*k*Pi/n]*x^2+s^2*x^4),
    {k,1,(n-2)/4}],x]]] /;
FreeQ[{a,b},x] && IntegerQ[(n-2)/4] && n>2 && NegQ[a/b]


(* ::Code:: *)
Int[1/(a_+b_.*x_^n_),x_Symbol] :=
  Module[{r=Numerator[Rt[a/b,n]], s=Denominator[Rt[a/b,n]]},
  Int[r/(a*n*(r+s*x)) +
	Sum[2*r*(r-s*Cos[(2*k-1)*Pi/n]*x)/(a*n*(r^2-2*r*s*Cos[(2*k-1)*Pi/n]*x+s^2*x^2)),
      {k,1,(n-1)/2}],x]] /;
FreeQ[{a,b},x] && OddQ[n] && n>1 && PosQ[a/b]


(* ::Code:: *)
Int[1/(a_+b_.*x_^n_),x_Symbol] :=
  Module[{r=Numerator[Rt[-a/b,n]], s=Denominator[Rt[-a/b,n]]},
  Int[r/(a*n*(r-s*x)) +
	Sum[2*r*(r+s*Cos[(2*k-1)*Pi/n]*x)/(a*n*(r^2+2*r*s*Cos[(2*k-1)*Pi/n]*x+s^2*x^2)),
      {k,1,(n-1)/2}],x]] /;
FreeQ[{a,b},x] && OddQ[n] && n>1 && NegQ[a/b]


(* ::Code:: *)
Int[x_/(a_+b_.*x_^3),x_Symbol] :=
  Module[{r=Numerator[Rt[a/b,3]], s=Denominator[Rt[a/b,3]]},
  Dist[-r^2/(3*a*s),Int[1/(r+s*x),x]] +
  Dist[r^2/(3*a*s),Int[(r+s*x)/(r^2-r*s*x+s^2*x^2),x]]] /;
FreeQ[{a,b},x] && PosQ[a/b]


(* ::Code:: *)
Int[x_/(a_+b_.*x_^3),x_Symbol] :=
  Module[{r=Numerator[Rt[-a/b,3]], s=Denominator[Rt[-a/b,3]]},
  Dist[r^2/(3*a*s),Int[1/(r-s*x),x]] -
  Dist[r^2/(3*a*s),Int[(r-s*x)/(r^2+r*s*x+s^2*x^2),x]]] /;
FreeQ[{a,b},x] && NegQ[a/b]


(* ::Code:: *)
Int[x_^m_./(a_+b_.*x_^n_),x_Symbol] :=
  Module[{g=GCD[m+1,n]},
  Dist[1/g,Subst[Int[x^((m+1)/g-1)/(a+b*x^(n/g)),x],x,x^g]] /;
 g>1] /;
FreeQ[{a,b},x] && IntegersQ[m,n] && 0<m+1<n


(* ::Code:: *)
Int[x_^m_/(a_+b_.*x_^n_),x_Symbol] :=
  Module[{r=Numerator[Rt[a/b,4]], s=Denominator[Rt[a/b,4]]},
  Dist[s^3/(2*Sqrt[2]*b*r),Int[x^(m/2)/(r^2-Sqrt[2]*r*s*x^(m/2)+s^2*x^m),x]] -
  Dist[s^3/(2*Sqrt[2]*b*r),Int[x^(m/2)/(r^2+Sqrt[2]*r*s*x^(m/2)+s^2*x^m),x]]] /;
FreeQ[{a,b},x] && IntegerQ[m/2] && m>0 && ZeroQ[n-2*m] && PositiveQ[a/b]


(* ::Code:: *)
Int[x_^m_/(a_+b_.*x_^n_),x_Symbol] :=
  Module[{r=Numerator[Rt[-a/b,2]], s=Denominator[Rt[-a/b,2]]},
  Dist[s/(2*b),Int[1/(r+s*x^m),x]] -
  Dist[s/(2*b),Int[1/(r-s*x^m),x]]] /;
FreeQ[{a,b},x] && EvenQ[m] && m>0 && ZeroQ[n-2*m] && Not[PositiveQ[a/b]]


(* ::Code:: *)
Int[x_^m_./(a_+b_.*x_^n_),x_Symbol] :=
  Module[{r=Numerator[Rt[a/b,n/2]], s=Denominator[Rt[a/b,n/2]]},
  Dist[-2*(-r)^(m/2+1)/(a*n*s^(m/2)),Int[1/(r+s*x^2),x]] +
  Dist[4*r^(m/2+1)/(a*n*s^(m/2)),
	Int[Sum[(r*Cos[(2*k-1)*m*Pi/n]-s*Cos[(2*k-1)*(m+2)*Pi/n]*x^2)/
      (r^2-2*r*s*Cos[2*(2*k-1)*Pi/n]*x^2+s^2*x^4),{k,1,(n-2)/4}],x]]] /;
 FreeQ[{a,b},x] && IntegersQ[(n-2)/4,m/2] && 0<m<n && CoprimeQ[m+1,n] && PosQ[a/b]


(* ::Code:: *)
Int[x_^m_./(a_+b_.*x_^n_),x_Symbol] :=
  Module[{r=Numerator[Rt[-a/b,n/2]], s=Denominator[Rt[-a/b,n/2]]},
  Dist[2*r^(m/2+1)/(a*n*s^(m/2)),Int[1/(r-s*x^2),x]] +
  Dist[4*r^(m/2+1)/(a*n*s^(m/2)),
	Int[Sum[(r*Cos[2*k*m*Pi/n]-s*Cos[2*k*(m+2)*Pi/n]*x^2)/
      (r^2-2*r*s*Cos[4*k*Pi/n]*x^2+s^2*x^4),{k,1,(n-2)/4}],x]]] /;
 FreeQ[{a,b},x] && IntegersQ[(n-2)/4,m/2] && 0<m<n && CoprimeQ[m+1,n] && NegQ[a/b]


(* ::Code:: *)
Int[x_^m_./(a_+b_.*x_^n_),x_Symbol] :=
  Module[{r=Numerator[Rt[a/b,n]], s=Denominator[Rt[a/b,n]]},
  Int[-(-r)^(m+1)/(a*n*s^m*(r+s*x)) +
    Sum[2*r^(m+1)*(r*Cos[(2*k-1)*m*Pi/n]-s*Cos[(2*k-1)*(m+1)*Pi/n]*x)/
      (a*n*s^m*(r^2-2*r*s*Cos[(2*k-1)*Pi/n]*x+s^2*x^2)),{k,1,(n-1)/2}],x]] /;
FreeQ[{a,b},x] && IntegersQ[(n-1)/2,m] && 0<m<n && CoprimeQ[m+1,n] && PosQ[a/b]


(* ::Code:: *)
Int[x_^m_./(a_+b_.*x_^n_),x_Symbol] :=
  Module[{r=Numerator[Rt[-a/b,n]], s=Denominator[Rt[-a/b,n]]},
  Int[r^(m+1)/(a*n*s^m*(r-s*x)) -
    Sum[2*(-r)^(m+1)*(r*Cos[(2*k-1)*m*Pi/n]+s*Cos[(2*k-1)*(m+1)*Pi/n]*x)/
      (a*n*s^m*(r^2+2*r*s*Cos[(2*k-1)*Pi/n]*x+s^2*x^2)),{k,1,(n-1)/2}],x]] /;
FreeQ[{a,b},x] && IntegersQ[(n-1)/2,m] && 0<m<n && CoprimeQ[m+1,n] && NegQ[a/b]


(* ::Code:: *)
Int[(c_.+d_.*x_^m_)/(a_+b_.*x_^n_),x_Symbol] :=
  Module[{r=Numerator[Rt[a/b,4]], s=Denominator[Rt[a/b,4]]},
  Dist[r/(2*Sqrt[2]*a*s),
    Int[(Sqrt[2]*c*r*s+(c*s^2-d*r^2)*x^(m/2))/(r^2+Sqrt[2]*r*s*x^(m/2)+s^2*x^m),x]] +
  Dist[r/(2*Sqrt[2]*a*s),
    Int[(Sqrt[2]*c*r*s-(c*s^2-d*r^2)*x^(m/2))/(r^2-Sqrt[2]*r*s*x^(m/2)+s^2*x^m),x]]] /;
FreeQ[{a,b,c,d},x] && IntegerQ[m/2] && m>0 && ZeroQ[n-2*m] && PosQ[a/b]


(* ::Code:: *)
Int[(c_.+d_.*x_^m_)/(a_+b_.*x_^n_),x_Symbol] :=
  Module[{r=Numerator[Rt[-a/b,2]], s=Denominator[Rt[-a/b,2]]},
  Dist[(c*s+d*r)/2, Int[1/(a*s+b*r*x^m),x]] +
  Dist[(c*s-d*r)/2, Int[1/(a*s-b*r*x^m),x]]] /;
FreeQ[{a,b,c,d},x] && IntegerQ[m/2] && m>0 && ZeroQ[n-2*m] && NegQ[a/b] && NonzeroQ[b*c^2+a*d^2]


(* ::Code:: *)
Int[(a_+b_.*x_^n_)^p_,x_Symbol] :=
  x*(a+b*x^n)^(p+1)/a /;
FreeQ[{a,b,n,p},x] && ZeroQ[n*(p+1)+1]


(* ::Code:: *)
Int[(a_+b_.*x_^n_)^p_,x_Symbol] :=
  -x*(a+b*x^n)^(p+1)/(a*n*(p+1)) +
  Dist[(n*(p+1)+1)/(a*n*(p+1)),Int[(a+b*x^n)^(p+1),x]] /;
FreeQ[{a,b},x] && IntegersQ[n,p] && n>1 && p<-1


(* ::Code:: *)
Int[x_^m_.*(a_+b_.*x_^n_)^p_,x_Symbol] :=
  x^(m+1)*(a+b*x^n)^(p+1)/(a*(m+1)) /;
FreeQ[{a,b,m,n,p},x] && ZeroQ[m+n*(p+1)+1] && NonzeroQ[m+1] && NonzeroQ[p+2]


(* ::Code:: *)
Int[x_^m_.*(a_+b_.*x_^n_)^p_,x_Symbol] :=
  x^(m-n+1)*(a+b*x^n)^(p+1)/(b*n*(p+1)) -
  Dist[(m-n+1)/(b*n*(p+1)),Int[x^(m-n)*(a+b*x^n)^(p+1),x]] /;
FreeQ[{a,b},x] && IntegersQ[m,n,p] && 1<n<=m<2*n-1 && p<-1


(* ::Code:: *)
Int[x_^m_.*(a_+b_.*x_^n_)^p_,x_Symbol] :=
  -x^(m+1)*(a+b*x^n)^(p+1)/(a*n*(p+1)) +
  Dist[(m+n*(p+1)+1)/(a*n*(p+1)),Int[x^m*(a+b*x^n)^(p+1),x]] /;
FreeQ[{a,b},x] && IntegersQ[m,n,p] && n>1 && 0<m+1<n && p<-1 && NonzeroQ[m+n*(p+1)+1]


(* ::Code:: *)
Int[x_^m_.*(a_+b_.*x_^n_)^p_,x_Symbol] :=
  x^(m+1)*(a+b*x^n)^(p+1)/(a*(m+1)) -
  Dist[b*(m+n*(p+1)+1)/(a*(m+1)),Int[x^(m+n)*(a+b*x^n)^p,x]] /;
FreeQ[{a,b},x] && IntegersQ[m,n,p,(m+n*(p+1)+1)/n] && m<-1 && n>0 &&
0<n-2(m+n*(p+1)+1)<n*p


(* ::Code:: *)
Int[x_^m_.*(a_+b_.*x_^n_)^p_,x_Symbol] :=
  x^(m-n+1)*(a+b*x^n)^(p+1)/(b*(m+n*p+1)) -
  Dist[a*(m-n+1)/(b*(m+n*p+1)),Int[x^(m-n)*(a+b*x^n)^p,x]] /;
FreeQ[{a,b},x] && IntegersQ[m,n,p,(m+1)/n] && NonzeroQ[m+n*p+1] && 
(m+1)/n>0 && 2*m/n<p+1 && 0<n<=m


(* ::Code:: *)
Int[x_^m_.*(a_+b_.*x_^n_.)^p_.,x_Symbol] :=
  Int[Expand[x^m*(a+b*x^n)^p],x] /;
FreeQ[{a,b,m,n},x] && IntegerQ[p] && p>0 && ExpandIntegrandQ[m,n,p]


(* ::Code:: *)
Int[(c_+d_.*x_)^m_.*(a_+b_.*(c_+d_.*x_)^n_)^p_,x_Symbol] :=
  (c+d*x)^(m-n+1)*(a+b*(c+d*x)^n)^(p+1)/(b*d*n*(p+1)) -
  Dist[(m-n+1)/(b*n*(p+1)),Int[(c+d*x)^(m-n)*(a+b*(c+d*x)^n)^(p+1),x]] /;
FreeQ[{a,b,c,d},x] && IntegersQ[m,n,p] && n>1 && p<-1 && n<=m<2*n-1


(* ::Code:: *)
Int[(a_+b_.*x_^n_.)^m_/(b_+a_.*x_^p_.),x_Symbol] :=
  Int[x^n*(a+b*x^n)^(m-1), x] /;
FreeQ[{a,b,m,n,p},x] && ZeroQ[n+p]


(* ::Code:: *)
Int[(a_.*x_^p_.+b_.*x_^q_.)^n_,x_Symbol] :=
  Int[x^(n*p)*(a+b*x^(q-p))^n,x] /;
FreeQ[{a,b,p,q},x] && IntegerQ[n] && Not[FractionQ[p]] && Not[FractionQ[q]] && Not[NegativeQ[q-p]]


(* ::Code:: *)
Int[x_^m_.*(a_.*x_^p_.+b_.*x_^q_.)^n_,x_Symbol] :=
  Int[x^(m+n*p)*(a+b*x^(q-p))^n,x] /;
FreeQ[{a,b,m,p,q},x] && IntegerQ[n] && 
Not[FractionQ[p]] && Not[FractionQ[q]] && Not[FractionQ[m]] && Not[NegativeQ[q-p]]
(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Code:: *)
Int[ArcSech[a_.+b_.*x_],x_Symbol] :=
  (a+b*x)*ArcSech[a+b*x]/b - 2*ArcTan[Sqrt[(1-a-b*x)/(1+a+b*x)]]/b /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[x_^m_.*ArcSech[a_+b_.*x_],x_Symbol] :=
  Dist[1/b,Subst[Int[(-a/b+x/b)^m*ArcSech[x],x],x,a+b*x]] /;
FreeQ[{a,b},x] && IntegerQ[m] && m>0


(* ::Code:: *)
Int[x_^m_.*ArcSech[a_.*x_],x_Symbol] :=
  x^(m+1)*ArcSech[a*x]/(m+1) + 
  Dist[1/(m+1),Int[x^m/(Sqrt[(1-a*x)/(1+a*x)]*(1+a*x)),x]] /;
FreeQ[{a,m},x] && NonzeroQ[m+1]


(* Int[ArcSech[a_.*x_^n_.]/x_,x_Symbol] :=
(*   Int[ArcCosh[1/a*x^(-n)]/x,x] /; *)
  -ArcSech[a*x^n]^2/(2*n) - 
  ArcSech[a*x^n]*Log[1+E^(-2*ArcSech[a*x^n])]/n + 
  PolyLog[2,-E^(-2*ArcSech[a*x^n])]/(2*n) /;
(* -ArcSech[a*x^n]^2/(2*n) - 
  ArcSech[a*x^n]*Log[1+1/(1/(a*x^n)+Sqrt[-1+1/(a*x^n)]*Sqrt[1+1/(a*x^n)])^2]/n + 
  PolyLog[2,-1/(1/(a*x^n)+Sqrt[-1+1/(a*x^n)]*Sqrt[1+1/(a*x^n)])^2]/(2*n) /; *)
FreeQ[{a,n},x] *)


(* ::Code:: *)
Int[u_.*ArcSech[c_./(a_.+b_.*x_^n_.)]^m_.,x_Symbol] :=
  Int[u*ArcCosh[a/c+b*x^n/c]^m,x] /;
FreeQ[{a,b,c,n,m},x]


(* ::Code:: *)
(* Int[ArcSech[u_],x_Symbol] :=
  x*ArcSech[u] +
  Int[Regularize[x*D[u,x]/(u^2*Sqrt[-1+1/u]*Sqrt[1+1/u]),x],x] /;
InverseFunctionFreeQ[u,x] && Not[FunctionOfExponentialOfLinear[u,x]] *)


(* ::Code:: *)
Int[E^(n_.*ArcSech[u_]), x_Symbol] :=
  Int[(1/u + Sqrt[(1-u)/(1+u)] + Sqrt[(1-u)/(1+u)]/u)^n,x] /;
IntegerQ[n] && PolynomialQ[u,x]


(* ::Code:: *)
Int[x_^m_.*E^(n_.*ArcSech[u_]), x_Symbol] :=
  Int[x^m*(1/u + Sqrt[(1-u)/(1+u)] + Sqrt[(1-u)/(1+u)]/u)^n,x] /;
RationalQ[m] && IntegerQ[n] && PolynomialQ[u,x]
(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Code:: *)
Int[ArcCoth[a_.*x_],x_Symbol] :=
  x*ArcCoth[a*x] + Log[1-a^2*x^2]/(2*a) /;
FreeQ[a,x]


(* ::Code:: *)
Int[ArcCoth[a_.*x_]^n_,x_Symbol] :=
  x*ArcCoth[a*x]^n -
  Dist[a*n,Int[x*ArcCoth[a*x]^(n-1)/(1-a^2*x^2),x]] /;
FreeQ[a,x] && IntegerQ[n] && n>1


(* ::Code:: *)
Int[x_*ArcCoth[a_.*x_]^n_.,x_Symbol] :=
  -ArcCoth[a*x]^n/(2*a^2) + x^2*ArcCoth[a*x]^n/2 +
  Dist[n/(2*a),Int[ArcCoth[a*x]^(n-1),x]] /;
FreeQ[a,x] && IntegerQ[n] && n>0


(* ::Code:: *)
Int[x_^m_*ArcCoth[a_.*x_]^n_.,x_Symbol] :=
  -x^(m-1)*ArcCoth[a*x]^n/(a^2*(m+1)) + x^(m+1)*ArcCoth[a*x]^n/(m+1) +
  Dist[n/(a*(m+1)),Int[x^(m-1)*ArcCoth[a*x]^(n-1),x]] +
  Dist[(m-1)/(a^2*(m+1)),Int[x^(m-2)*ArcCoth[a*x]^n,x]] /;
FreeQ[a,x] && IntegerQ[n] && n>0 && RationalQ[m] && m>1


(* ::Code:: *)
Int[ArcCoth[a_.*x_]^n_/x_,x_Symbol] :=
  2*ArcCoth[a*x]^n*ArcCoth[1-2/(1-a*x)] -
  Dist[2*a*n,Int[ArcCoth[a*x]^(n-1)*ArcCoth[1-2/(1-a*x)]/(1-a^2*x^2),x]] /;
FreeQ[a,x] && IntegerQ[n] && n>1


(* ::Code:: *)
Int[ArcCoth[a_.*x_]^n_./x_^2,x_Symbol] :=
  -ArcCoth[a*x]^n/x +
  Dist[a*n,Int[ArcCoth[a*x]^(n-1)/(x*(1-a^2*x^2)),x]] /;
FreeQ[a,x] && IntegerQ[n] && n>0


(* ::Code:: *)
Int[ArcCoth[a_.*x_]^n_./x_^3,x_Symbol] :=
  a^2*ArcCoth[a*x]^n/2 - ArcCoth[a*x]^n/(2*x^2) +
  Dist[a*n/2,Int[ArcCoth[a*x]^(n-1)/x^2,x]] /;
FreeQ[a,x] && IntegerQ[n] && n>0


(* ::Code:: *)
Int[x_^m_*ArcCoth[a_.*x_]^n_.,x_Symbol] :=
  x^(m+1)*ArcCoth[a*x]^n/(m+1) - a^2*x^(m+3)*ArcCoth[a*x]^n/(m+1) -
  Dist[a*n/(m+1),Int[x^(m+1)*ArcCoth[a*x]^(n-1),x]] +
  Dist[a^2*(m+3)/(m+1),Int[x^(m+2)*ArcCoth[a*x]^n,x]] /;
FreeQ[a,x] && IntegerQ[n] && n>0 && RationalQ[m] && m<-3


(* ::Code:: *)
Int[ArcCoth[a_.*x_]^n_./(c_+d_.*x_),x_Symbol] :=
  -ArcCoth[a*x]^n*Log[2*c/(c+d*x)]/d +
  Dist[a*n/d,Int[ArcCoth[a*x]^(n-1)*Log[2*c/(c+d*x)]/(1-a^2*x^2),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c^2-d^2] && IntegerQ[n] && n>0


(* ::Code:: *)
Int[ArcCoth[a_.*x_]^n_./(x_*(c_+d_.*x_)),x_Symbol] :=
  ArcCoth[a*x]^n*Log[2-2*c/(c+d*x)]/c -
  Dist[a*n/c,Int[ArcCoth[a*x]^(n-1)*Log[2-2*c/(c+d*x)]/(1-a^2*x^2),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c^2-d^2] && IntegerQ[n] && n>0


(* ::Code:: *)
Int[ArcCoth[a_.*x_]^n_./(c_.*x_+d_.*x_^2),x_Symbol] :=
  ArcCoth[a*x]^n*Log[2-2*c/(c+d*x)]/c -
  Dist[a*n/c,Int[ArcCoth[a*x]^(n-1)*Log[2-2*c/(c+d*x)]/(1-a^2*x^2),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c^2-d^2] && IntegerQ[n] && n>0


(* ::Code:: *)
Int[x_^m_.*ArcCoth[a_.*x_]^n_./(c_+d_.*x_),x_Symbol] :=
  Dist[1/d,Int[x^(m-1)*ArcCoth[a*x]^n,x]] -
  Dist[c/d,Int[x^(m-1)*ArcCoth[a*x]^n/(c+d*x),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c^2-d^2] && RationalQ[m] && m>0 && IntegerQ[n] && n>0


(* ::Code:: *)
Int[x_^m_*ArcCoth[a_.*x_]^n_./(c_+d_.*x_),x_Symbol] :=
  Dist[1/c,Int[x^m*ArcCoth[a*x]^n,x]] -
  Dist[d/c,Int[x^(m+1)*ArcCoth[a*x]^n/(c+d*x),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c^2-d^2] && RationalQ[m] && m<-1 && IntegerQ[n] && n>0


(* ::Code:: *)
Int[1/((c_+d_.*x_^2)*ArcCoth[a_.*x_]),x_Symbol] :=
  Log[ArcCoth[a*x]]/(a*c) /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d]


(* ::Code:: *)
Int[ArcCoth[a_.*x_]^n_./(c_+d_.*x_^2),x_Symbol] :=
  ArcCoth[a*x]^(n+1)/(a*c*(n+1)) /;
FreeQ[{a,c,d,n},x] && ZeroQ[a^2*c+d] && NonzeroQ[n+1]


(* ::Code:: *)
Int[x_*ArcCoth[a_.*x_]^n_./(c_+d_.*x_^2),x_Symbol] :=
  ArcCoth[a*x]^(n+1)/(d*(n+1)) +
  Dist[1/(a*c),Int[ArcCoth[a*x]^n/(1-a*x),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && RationalQ[n] && n>0


(* ::Code:: *)
Int[ArcCoth[a_.*x_]^n_./(x_*(c_+d_.*x_^2)),x_Symbol] :=
  ArcCoth[a*x]^(n+1)/(c*(n+1)) +
  Dist[1/c,Int[ArcCoth[a*x]^n/(x*(1+a*x)),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && RationalQ[n] && n>0


(* ::Code:: *)
Int[ArcCoth[a_.*x_]^n_./(c_.*x_+d_.*x_^3),x_Symbol] :=
  ArcCoth[a*x]^(n+1)/(c*(n+1)) +
  Dist[1/c,Int[ArcCoth[a*x]^n/(x*(1+a*x)),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && RationalQ[n] && n>0


(* ::Code:: *)
Int[x_^m_*ArcCoth[a_.*x_]^n_./(c_+d_.*x_^2),x_Symbol] :=
  Dist[1/d,Int[x^(m-2)*ArcCoth[a*x]^n,x]] -
  Dist[c/d,Int[x^(m-2)*ArcCoth[a*x]^n/(c+d*x^2),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && RationalQ[{m,n}] && m>1 && n>0


(* ::Code:: *)
Int[x_^m_*ArcCoth[a_.*x_]^n_./(c_+d_.*x_^2),x_Symbol] :=
  Dist[1/c,Int[x^m*ArcCoth[a*x]^n,x]] -
  Dist[d/c,Int[x^(m+2)*ArcCoth[a*x]^n/(c+d*x^2),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && RationalQ[{m,n}] && m<-1 && n>0


(* ::Code:: *)
Int[x_^m_.*ArcCoth[a_.*x_]^n_/(c_+d_.*x_^2),x_Symbol] :=
  Dist[1/(a^(m+1)*c),Subst[Int[x^n*Coth[x]^m,x],x,ArcCoth[a*x]]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && RationalQ[{m,n}] && (n<0 || Not[IntegerQ[n]]) && (IntegerQ[m] || PositiveQ[a])


(* ::Code:: *)
Int[x_^m_.*ArcCoth[a_.*x_]^n_/(c_+d_.*x_^2),x_Symbol] :=
  Dist[1/(a*c),Subst[Int[x^n*(Coth[x]/a)^m,x],x,ArcCoth[a*x]]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && RationalQ[{m,n}] && (n<0 || Not[IntegerQ[n]]) && Not[IntegerQ[m] || PositiveQ[a]]


(* ::Code:: *)
Int[ArcCoth[a_.*x_]^n_.*ArcCoth[u_]/(c_+d_.*x_^2),x_Symbol] :=
  Dist[1/2,Int[ArcCoth[a*x]^n*Log[Regularize[1+1/u,x]]/(c+d*x^2),x]] -
  Dist[1/2,Int[ArcCoth[a*x]^n*Log[Regularize[1-1/u,x]]/(c+d*x^2),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && RationalQ[n] && n>0 && (ZeroQ[u^2-(1-2/(1+a*x))^2] || ZeroQ[u^2-(1-2/(1-a*x))^2])


(* ::Code:: *)
Int[ArcCoth[a_.*x_]^n_.*Log[u_]/(c_+d_.*x_^2),x_Symbol] :=
  ArcCoth[a*x]^n*PolyLog[2,1-u]/(2*a*c) -
  Dist[n/2,Int[ArcCoth[a*x]^(n-1)*PolyLog[2,1-u]/(c+d*x^2),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && RationalQ[n] && n>0 && ZeroQ[(1-u)^2-(1-2/(1+a*x))^2]


(* ::Code:: *)
Int[ArcCoth[a_.*x_]^n_.*Log[u_]/(c_+d_.*x_^2),x_Symbol] :=
  -ArcCoth[a*x]^n*PolyLog[2,1-u]/(2*a*c) +
  Dist[n/2,Int[ArcCoth[a*x]^(n-1)*PolyLog[2,1-u]/(c+d*x^2),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && RationalQ[n] && n>0 && ZeroQ[(1-u)^2-(1-2/(1-a*x))^2]


(* ::Code:: *)
Int[ArcCoth[a_.*x_]^n_.*PolyLog[p_,u_]/(c_+d_.*x_^2),x_Symbol] :=
  -ArcCoth[a*x]^n*PolyLog[p+1,u]/(2*a*c) +
  Dist[n/2,Int[ArcCoth[a*x]^(n-1)*PolyLog[p+1,u]/(c+d*x^2),x]] /;
FreeQ[{a,c,d,p},x] && ZeroQ[a^2*c+d] && RationalQ[n] && n>0 && ZeroQ[u^2-(1-2/(1+a*x))^2]


(* ::Code:: *)
Int[ArcCoth[a_.*x_]^n_.*PolyLog[p_,u_]/(c_+d_.*x_^2),x_Symbol] :=
  ArcCoth[a*x]^n*PolyLog[p+1,u]/(2*a*c) -
  Dist[n/2,Int[ArcCoth[a*x]^(n-1)*PolyLog[p+1,u]/(c+d*x^2),x]] /;
FreeQ[{a,c,d,p},x] && ZeroQ[a^2*c+d] && RationalQ[n] && n>0 && ZeroQ[u^2-(1-2/(1-a*x))^2]


(* ::Code:: *)
Int[ArcTanh[a_.*x_]^m_.*ArcCoth[a_.*x_]^n_./(c_+d_.*x_^2),x_Symbol] :=
  ArcTanh[a*x]^(m+1)*ArcCoth[a*x]^n/(a*c*(m+1)) -
  Dist[n/(m+1),Int[ArcTanh[a*x]^(m+1)*ArcCoth[a*x]^(n-1)/(c+d*x^2),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && IntegersQ[m,n] && 0<n<m


(* ::Code:: *)
Int[ArcCoth[a_.*x_]/Sqrt[c_+d_.*x_^2],x_Symbol] :=
  -2*ArcCoth[a*x]*ArcTan[Sqrt[1-a*x]/Sqrt[1+a*x]]/(a*Sqrt[c]) - 
  I*PolyLog[2,-I*Sqrt[1-a*x]/Sqrt[1+a*x]]/(a*Sqrt[c]) + 
  I*PolyLog[2,I*Sqrt[1-a*x]/Sqrt[1+a*x]]/(a*Sqrt[c]) /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && PositiveQ[c]


(* ::Code:: *)
Int[ArcCoth[a_.*x_]/Sqrt[c_+d_.*x_^2],x_Symbol] :=
  Sqrt[1-a^2*x^2]/Sqrt[c+d*x^2]*Int[ArcCoth[a*x]/Sqrt[1-a^2*x^2],x] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && Not[PositiveQ[c]]


(* ::Code:: *)
Int[ArcCoth[a_.*x_]/(c_+d_.*x_^2)^(3/2),x_Symbol] :=
  -1/(a*c*Sqrt[c+d*x^2]) +
  x*ArcCoth[a*x]/(c*Sqrt[c+d*x^2]) /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d]


(* ::Code:: *)
Int[ArcCoth[a_.*x_]^n_/(c_+d_.*x_^2)^(3/2),x_Symbol] :=
  -n*ArcCoth[a*x]^(n-1)/(a*c*Sqrt[c+d*x^2]) +
  x*ArcCoth[a*x]^n/(c*Sqrt[c+d*x^2]) +
  Dist[n*(n-1),Int[ArcCoth[a*x]^(n-2)/(c+d*x^2)^(3/2),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && RationalQ[n] && n>1


(* ::Code:: *)
Int[ArcCoth[a_.*x_]^n_/(c_+d_.*x_^2)^(3/2),x_Symbol] :=
  ArcCoth[a*x]^(n+1)/(a*c*(n+1)*Sqrt[c+d*x^2]) -
  x*ArcCoth[a*x]^(n+2)/(c*(n+1)*(n+2)*Sqrt[c+d*x^2]) +
  Dist[1/((n+1)*(n+2)),Int[ArcCoth[a*x]^(n+2)/(c+d*x^2)^(3/2),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && RationalQ[n] && n<-1 && n!=-2


(* ::Code:: *)
Int[(c_+d_.*x_^2)^m_.*ArcCoth[a_.*x_],x_Symbol] :=
  (c+d*x^2)^m/(2*a*m*(2*m+1)) +
  x*(c+d*x^2)^m*ArcCoth[a*x]/(2*m+1) +
  Dist[2*c*m/(2*m+1),Int[(c+d*x^2)^(m-1)*ArcCoth[a*x],x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && RationalQ[m] && m>0


(* ::Code:: *)
Int[(c_+d_.*x_^2)^m_*ArcCoth[a_.*x_],x_Symbol] :=
  -(c+d*x^2)^(m+1)/(4*a*c*(m+1)^2) -
  x*(c+d*x^2)^(m+1)*ArcCoth[a*x]/(2*c*(m+1)) +
  Dist[(2*m+3)/(2*c*(m+1)),Int[(c+d*x^2)^(m+1)*ArcCoth[a*x],x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && RationalQ[m] && m<-1 && m!=-3/2


(* ::Code:: *)
Int[(c_+d_.*x_^2)^m_*ArcCoth[a_.*x_]^n_,x_Symbol] :=
  -n*(c+d*x^2)^(m+1)*ArcCoth[a*x]^(n-1)/(4*a*c*(m+1)^2) -
  x*(c+d*x^2)^(m+1)*ArcCoth[a*x]^n/(2*c*(m+1)) +
  Dist[(2*m+3)/(2*c*(m+1)),Int[(c+d*x^2)^(m+1)*ArcCoth[a*x]^n,x]] +
  Dist[n*(n-1)/(4*(m+1)^2),Int[(c+d*x^2)^m*ArcCoth[a*x]^(n-2),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && RationalQ[{m,n}] && m<-1 && m!=-3/2 && n>1


(* ::Code:: *)
Int[(c_+d_.*x_^2)^m_*ArcCoth[a_.*x_]^n_,x_Symbol] :=
  (c+d*x^2)^(m+1)*ArcCoth[a*x]^(n+1)/(a*c*(n+1)) +
  Dist[2*a*(m+1)/(n+1),Int[x*(c+d*x^2)^m*ArcCoth[a*x]^(n+1),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && RationalQ[{m,n}] && m<-1 && n<-1


(* ::Code:: *)
Int[(c_+d_.*x_^2)^m_*ArcCoth[a_.*x_]^n_,x_Symbol] :=
  -Dist[(-c)^m/a,Subst[Int[x^n*Csch[x]^(2*(m+1)),x],x,ArcCoth[a*x]]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && IntegerQ[m] && RationalQ[n] && m<-1 && (n<0 || Not[IntegerQ[n]])


(* ::Code:: *)
(* Int[(c_+d_.*x_^2)^m_*ArcCoth[a_.*x_]^n_,x_Symbol] :=
  c^(m-1/2)*Sqrt[c+d*x^2]/Sqrt[1-a^2*x^2]*Int[(1-a^2*x^2)^m*ArcCoth[a*x]^n,x] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && RationalQ[{m,n}] && m<-1 && (n<0 || Not[IntegerQ[n]]) && IntegerQ[m-1/2] && Not[PositiveQ[c]] *)


(* ::Code:: *)
Int[x_*(c_+d_.*x_^2)^p_.*ArcCoth[a_.*x_]^n_.,x_Symbol] :=
  (c+d*x^2)^(p+1)*ArcCoth[a*x]^n/(2*d*(p+1)) +
  Dist[n/(2*a*(p+1)),Int[(c+d*x^2)^p*ArcCoth[a*x]^(n-1),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && RationalQ[{n,p}] && n>0 && p!=-1


(* ::Code:: *)
Int[x_*(c_+d_.*x_^2)^p_./ArcCoth[a_.*x_]^2,x_Symbol] :=
  -x*(c+d*x^2)^(p+1)/(a*c*ArcCoth[a*x]) +
  Dist[1/a,Int[(1-(2*p+3)*a^2*x^2)*(c+d*x^2)^p/ArcCoth[a*x],x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && RationalQ[p]


(* ::Code:: *)
Int[x_*ArcCoth[a_.*x_]^n_/(c_+d_.*x_^2)^2,x_Symbol] :=
  x*ArcCoth[a*x]^(n+1)/(a*c*(n+1)*(c+d*x^2)) +
  (1+a^2*x^2)*ArcCoth[a*x]^(n+2)/(d*(n+1)*(n+2)*(c+d*x^2)) +
  Dist[4/((n+1)*(n+2)),Int[x*ArcCoth[a*x]^(n+2)/(c+d*x^2)^2,x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && RationalQ[n] && n<-1 && n!=-2


(* ::Code:: *)
Int[x_^m_*(c_+d_.*x_^2)^p_.*ArcCoth[a_.*x_]^n_.,x_Symbol] :=
  x^(m+1)*(c+d*x^2)^(p+1)*ArcCoth[a*x]^n/(c*(m+1)) -
  Dist[a*n/(m+1),Int[x^(m+1)*(c+d*x^2)^p*ArcCoth[a*x]^(n-1),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && IntegersQ[m,n,2*p] && m<-1 && n>0 && ZeroQ[m+2*p+3]


(* ::Code:: *)
Int[x_^m_*(c_+d_.*x_^2)^p_.*ArcCoth[a_.*x_]^n_.,x_Symbol] :=
  x^m*(c+d*x^2)^(p+1)*ArcCoth[a*x]^(n+1)/(a*c*(n+1)) -
  Dist[m/(a*(n+1)),Int[x^(m-1)*(c+d*x^2)^p*ArcCoth[a*x]^(n+1),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && IntegersQ[m,n,2*p] && n<-1 && ZeroQ[m+2*p+2]


(* ::Code:: *)
Int[x_^m_*(c_+d_.*x_^2)^p_*ArcCoth[a_.*x_]^n_.,x_Symbol] :=
  Dist[1/d,Int[x^(m-2)*(c+d*x^2)^(p+1)*ArcCoth[a*x]^n,x]] -
  Dist[c/d,Int[x^(m-2)*(c+d*x^2)^p*ArcCoth[a*x]^n,x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && IntegersQ[m,n,2*p] && m>1 && n!=-1 && p<-1


(* ::Code:: *)
Int[x_^m_*(c_+d_.*x_^2)^p_*ArcCoth[a_.*x_]^n_.,x_Symbol] :=
  Dist[1/c,Int[x^m*(c+d*x^2)^(p+1)*ArcCoth[a*x]^n,x]] -
  Dist[d/c,Int[x^(m+2)*(c+d*x^2)^p*ArcCoth[a*x]^n,x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && IntegersQ[m,n,2*p] && m<0 && n!=-1 && p<-1


(* ::Code:: *)
Int[x_^m_*(c_+d_.*x_^2)^p_.*ArcCoth[a_.*x_]^n_.,x_Symbol] :=
  x^(m+1)*(c+d*x^2)^(p+1)*ArcCoth[a*x]^n/(c*(m+1)) -
  Dist[a*n/(m+1),Int[x^(m+1)*(c+d*x^2)^p*ArcCoth[a*x]^(n-1),x]] +
  Dist[a^2*(m+2*p+3)/(m+1),Int[x^(m+2)*(c+d*x^2)^p*ArcCoth[a*x]^n,x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && IntegersQ[m,n,2*p] && m<-1 && n>0 && NonzeroQ[m+2*p+3]


(* ::Code:: *)
Int[x_^m_.*(c_+d_.*x_^2)^p_.*ArcCoth[a_.*x_]^n_.,x_Symbol] :=
  x^m*(c+d*x^2)^(p+1)*ArcCoth[a*x]^(n+1)/(a*c*(n+1)) -
  Dist[m/(a*(n+1)),Int[x^(m-1)*(c+d*x^2)^p*ArcCoth[a*x]^(n+1),x]] +
  Dist[a*(m+2*p+2)/(n+1),Int[x^(m+1)*(c+d*x^2)^p*ArcCoth[a*x]^(n+1),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && IntegersQ[m,n,2*p] && n<-1 && NonzeroQ[m+2*p+2]


(* ::Code:: *)
Int[(e_.+f_.*x_^m_.)*(c_+d_.*x_^2)^p_*ArcCoth[a_.*x_]^n_,x_Symbol] :=
  -Dist[(-c)^p/a^(m+1),Subst[Int[Expand[x^n*TrigReduce[Regularize[(e*a^m+f*Coth[x]^m)*Csch[x]^(2*(p+1)),x]]],x],x,ArcCoth[a*x]]] /;
FreeQ[{a,c,d,e,f},x] && ZeroQ[a^2*c+d] && RationalQ[{m,n}] && IntegerQ[p] && p<-1 && (n<0 || Not[IntegerQ[n]]) && (IntegerQ[m] || PositiveQ[a])


(* ::Code:: *)
Int[x_^m_.*(c_+d_.*x_^2)^p_*ArcCoth[a_.*x_]^n_,x_Symbol] :=
  -Dist[(-c)^p/a,Subst[Int[x^n*(Coth[x]/a)^m*Csch[x]^(2*(p+1)),x],x,ArcCoth[a*x]]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && RationalQ[{m,n}] && IntegerQ[p] && p<-1 && (n<0 || Not[IntegerQ[n]]) && Not[IntegerQ[m] || PositiveQ[a]]


(* ::Code:: *)
(* Int[x_^m_.*(c_+d_.*x_^2)^p_*ArcCoth[a_.*x_]^n_,x_Symbol] :=
  c^(p-1/2)*Sqrt[c+d*x^2]/Sqrt[1-a^2*x^2]*Int[x^m*(1-a^2*x^2)^p*ArcCoth[a*x]^n,x] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && RationalQ[{m,n,p}] && p<-1 && (n<0 || Not[IntegerQ[n]]) && IntegerQ[p-1/2] && Not[PositiveQ[c]] *)


(* ::Code:: *)
Int[ArcCoth[a_+b_.*x_],x_Symbol] :=
  (a+b*x)*ArcCoth[a+b*x]/b + Log[1-(a+b*x)^2]/(2*b) /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[ArcCoth[a_+b_.*x_^n_],x_Symbol] :=
  x*ArcCoth[a+b*x^n] -
  Dist[b*n,Int[x^n/(1-a^2-2*a*b*x^n-b^2*x^(2*n)),x]] /;
FreeQ[{a,b},x] && RationalQ[n]


(* ::Code:: *)
Int[ArcCoth[a_.+b_.*x_^n_.]/x_,x_Symbol] :=
  Dist[1/2,Int[Log[1+1/(a+b*x^n)]/x,x]] -
  Dist[1/2,Int[Log[1-1/(a+b*x^n)]/x,x]] /;
FreeQ[{a,b,n},x]


(* ::Code:: *)
Int[x_^m_.*ArcCoth[a_+b_.*x_^n_.],x_Symbol] :=
  x^(m+1)*ArcCoth[a+b*x^n]/(m+1) -
  Dist[b*n/(m+1),Int[x^(m+n)/(1-a^2-2*a*b*x^n-b^2*x^(2*n)),x]] /;
FreeQ[{a,b},x] && RationalQ[{m,n}] && m+1!=0 && m+1!=n


(* ::Code:: *)
Int[ArcCoth[a_+b_.*x_]^n_.,x_Symbol] :=
  Dist[1/b,Subst[Int[ArcCoth[x]^n,x],x,a+b*x]] /;
FreeQ[{a,b},x] && IntegerQ[n] && n>1


(* ::Code:: *)
Int[x_^m_.*ArcCoth[a_+b_.*x_]^n_,x_Symbol] :=
  Dist[1/b^(m+1),Subst[Int[(x-a)^m*ArcCoth[x]^n,x],x,a+b*x]] /;
FreeQ[{a,b},x] && IntegersQ[m,n] && m>0 && n>1


(* ::Code:: *)
Int[ArcCoth[b_.*x_]/(c_+d_.*x_^n_.),x_Symbol] :=
  Dist[1/2,Int[Log[1+1/(b*x)]/(c+d*x^n),x]] -
  Dist[1/2,Int[Log[1-1/(b*x)]/(c+d*x^n),x]] /;
FreeQ[{b,c,d},x] && IntegerQ[n] && Not[n==2 && ZeroQ[b^2*c+d]]


(* ::Code:: *)
Int[ArcCoth[a_+b_.*x_]/(c_+d_.*x_^n_.),x_Symbol] :=
  Dist[1/2,Int[Log[1+1/(a+b*x)]/(c+d*x^n),x]] -
  Dist[1/2,Int[Log[1-1/(a+b*x)]/(c+d*x^n),x]] /;
FreeQ[{a,b,c,d},x] && IntegerQ[n] && Not[n==1 && ZeroQ[a*d-b*c]]


(* ::Code:: *)
Int[u_.*ArcCoth[c_./(a_.+b_.*x_^n_.)]^m_.,x_Symbol] :=
  Int[u*ArcTanh[a/c+b*x^n/c]^m,x] /;
FreeQ[{a,b,c,n,m},x]


(* ::Code:: *)
If[ShowSteps,

Int[u_*v_^n_.,x_Symbol] :=
  Module[{tmp=InverseFunctionOfLinear[u,x]},
  ShowStep["","Int[f[x,ArcCoth[a+b*x]]/(1-(a+b*x)^2),x]",
		   "Subst[Int[f[-a/b+Coth[x]/b,x],x],x,ArcCoth[a+b*x]]/b",Hold[
  Dist[(-Discriminant[v,x]/(4*Coefficient[v,x,2]))^n/Coefficient[tmp[[1]],x,1],
	Subst[Int[Regularize[SubstForInverseFunction[u,tmp,x]*(-Csch[x]^2)^(n+1),x],x], x, tmp]]]] /;
 NotFalseQ[tmp] && Head[tmp]===ArcCoth && ZeroQ[Discriminant[v,x]*tmp[[1]]^2-D[v,x]^2]] /;
SimplifyFlag && QuadraticQ[v,x] && IntegerQ[n] && n<0 && PosQ[Discriminant[v,x]] && MatchQ[u,r_.*f_^w_ /; FreeQ[f,x]],

Int[u_*v_^n_.,x_Symbol] :=
  Module[{tmp=InverseFunctionOfLinear[u,x]},
  Dist[(-Discriminant[v,x]/(4*Coefficient[v,x,2]))^n/Coefficient[tmp[[1]],x,1],
	Subst[Int[Regularize[SubstForInverseFunction[u,tmp,x]*(-Csch[x]^2)^(n+1),x],x], x, tmp]] /;
 NotFalseQ[tmp] && Head[tmp]===ArcCoth && ZeroQ[Discriminant[v,x]*tmp[[1]]^2-D[v,x]^2]] /;
QuadraticQ[v,x] && IntegerQ[n] && n<0 && PosQ[Discriminant[v,x]] && MatchQ[u,r_.*f_^w_ /; FreeQ[f,x]]]


(* ::Code:: *)
Int[u_.*E^(n_.*ArcCoth[v_]),x_Symbol] :=
  Int[u*(1+v)^(n/2)/(-1+v)^(n/2),x] /;
EvenQ[n]


(* ::Code:: *)
Int[E^(n_.*ArcCoth[v_]),x_Symbol] :=
  Int[Expand[(1/Sqrt[1-1/v^2] + 1/(x*Sqrt[1-1/v^2]))^n],x] /;
OddQ[n]


(* ::Code:: *)
Int[x_^m_.*E^(n_.*ArcCoth[v_]),x_Symbol] :=
  Int[Expand[x^m*(1/Sqrt[1-1/v^2] + 1/(x*Sqrt[1-1/v^2]))^n],x] /;
RationalQ[m] && OddQ[n]


(* ::Code:: *)
Int[E^(ArcCoth[a_.+b_.*x_]/2), x_Symbol] :=
  x*E^(ArcCoth[a+b*x]/2) -
  Dist[b/2,Int[x*E^(ArcCoth[a+b*x]/2)/(1-(a+b*x)^2),x]] /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[x_^m_.*E^(ArcCoth[a_.+b_.*x_]/2), x_Symbol] :=
  x^(m+1)*E^(ArcCoth[a+b*x]/2)/(m+1) -
  Dist[b/(2*(m+1)),Int[x^(m+1)*E^(ArcCoth[a+b*x]/2)/(1-(a+b*x)^2),x]] /;
FreeQ[{a,b},x] && IntegerQ[m] && m>0


(* ::Code:: *)
Int[u_.*E^(n_.*ArcCoth[v_])*(1-v_^2)^m_.,x_Symbol] :=
  -(-1)^((n-1)/2)*v*Sqrt[1-1/v^2]/Sqrt[1-v^2]*Int[u*(1-v)^(m-n/2)*(1+v)^(m+n/2),x] /;
OddQ[n] && IntegerQ[m-1/2]


(* ::Code:: *)
Int[u_.*E^ArcCoth[v_]*(a_+b_.*v_^2)^m_.,x_Symbol] :=
  -Dist[a^m,Int[Expand[u*v*(1+v)*Sqrt[1-1/v^2]*(1-v^2)^(m-1),x],x]] /;
FreeQ[{a,b},x] && ZeroQ[a+b] && IntegerQ[m] && m>0


(* ::Code:: *)
Int[u_.*E^ArcCoth[v_]*(a_+b_.*v_^2)^m_.,x_Symbol] :=
  (a+b*v^2)^m/(1-v^2)^m*Int[u*E^ArcCoth[v]*(1-v^2)^m,x] /;
FreeQ[{a,b},x] && ZeroQ[a+b] && NonzeroQ[a-1]


(* ::Code:: *)
Int[u_.*E^(n_.*ArcCoth[v_])*(1-1/v_^2)^m_.,x_Symbol] :=
  Int[u*(1+v)^(m+n/2)*(-1+v)^(m-n/2)/v^(2*m),x] /;
IntegerQ[n] && IntegerQ[m-n/2]


(* ::Code:: *)
Int[u_.*E^(n_.*ArcCoth[v_])*(1-1/v_^2)^m_.,x_Symbol] :=
  Int[Expand[u*(1+1/v)^n*(1-1/v^2)^(m-n/2),x],x] /;
RationalQ[n] && IntegerQ[2*m]


(* ::Code:: *)
Int[u_.*E^ArcCoth[v_]*(a_+b_./v_^2)^m_.,x_Symbol] :=
  (a+b/v^2)^m/(1-1/v^2)^m*Int[u*(1+1/v)*(1-1/v^2)^(m-1/2),x] /;
FreeQ[{a,b},x] && ZeroQ[a+b] && IntegerQ[2*m]


(* ::Code:: *)
Int[ArcCoth[b_.*f_^(c_.+d_.*x_)],x_Symbol] :=
  Dist[1/2,Int[Log[1+1/(b*f^(c+d*x))],x]] -
  Dist[1/2,Int[Log[1-1/(b*f^(c+d*x))],x]] /;
FreeQ[{b,c,d,f},x] 


(* ::Code:: *)
Int[x_^m_.*ArcCoth[b_.*f_^(c_.+d_.*x_)],x_Symbol] :=
  Dist[1/2,Int[x^m*Log[1+1/(b*f^(c+d*x))],x]] -
  Dist[1/2,Int[x^m*Log[1-1/(b*f^(c+d*x))],x]] /;
FreeQ[{b,c,d,f},x] && IntegerQ[m] && m>0


(* ::Code:: *)
Int[ArcCoth[u_],x_Symbol] :=
  x*ArcCoth[u] -
  Int[Regularize[x*D[u,x]/(1-u^2),x],x] /;
InverseFunctionFreeQ[u,x]


(* ::Code:: *)
Int[x_^m_.*ArcCoth[u_],x_Symbol] :=
  x^(m+1)*ArcCoth[u]/(m+1) -
  Dist[1/(m+1),Int[Regularize[x^(m+1)*D[u,x]/(1-u^2),x],x]] /;
FreeQ[m,x] && NonzeroQ[m+1] && InverseFunctionFreeQ[u,x] && 
	Not[FunctionOfQ[x^(m+1),u,x]] && 
	FalseQ[PowerVariableExpn[u,m+1,x]]


(* ::Code:: *)
Int[v_*ArcCoth[u_],x_Symbol] :=
  Module[{w=Block[{ShowSteps=False,StepCounter=Null}, Int[v,x]]},  
  w*ArcCoth[u] -
  Int[Regularize[w*D[u,x]/(1-u^2),x],x] /;
 InverseFunctionFreeQ[w,x]] /;
InverseFunctionFreeQ[u,x] && 
	Not[MatchQ[v, x^m_. /; FreeQ[m,x]]] &&
	FalseQ[FunctionOfLinear[v*ArcCoth[u],x]]
(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Code:: *)
Int[ArcTanh[a_.*x_],x_Symbol] :=
  x*ArcTanh[a*x] + Log[1-a^2*x^2]/(2*a) /;
FreeQ[a,x]


(* ::Code:: *)
Int[ArcTanh[a_.*x_]^n_,x_Symbol] :=
  x*ArcTanh[a*x]^n -
  Dist[a*n,Int[x*ArcTanh[a*x]^(n-1)/(1-a^2*x^2),x]] /;
FreeQ[a,x] && IntegerQ[n] && n>1


(* ::Code:: *)
Int[x_*ArcTanh[a_.*x_]^n_.,x_Symbol] :=
  -ArcTanh[a*x]^n/(2*a^2) + x^2*ArcTanh[a*x]^n/2 +
  Dist[n/(2*a),Int[ArcTanh[a*x]^(n-1),x]] /;
FreeQ[a,x] && IntegerQ[n] && n>0


(* ::Code:: *)
Int[x_^m_*ArcTanh[a_.*x_]^n_.,x_Symbol] :=
  -x^(m-1)*ArcTanh[a*x]^n/(a^2*(m+1)) + x^(m+1)*ArcTanh[a*x]^n/(m+1) +
  Dist[n/(a*(m+1)),Int[x^(m-1)*ArcTanh[a*x]^(n-1),x]] +
  Dist[(m-1)/(a^2*(m+1)),Int[x^(m-2)*ArcTanh[a*x]^n,x]] /;
FreeQ[a,x] && IntegerQ[n] && n>0 && RationalQ[m] && m>1


(* ::Code:: *)
Int[ArcTanh[a_.*x_]^n_/x_,x_Symbol] :=
  2*ArcTanh[a*x]^n*ArcTanh[1-2/(1-a*x)] -
  Dist[2*a*n,Int[ArcTanh[a*x]^(n-1)*ArcTanh[1-2/(1-a*x)]/(1-a^2*x^2),x]] /;
FreeQ[a,x] && IntegerQ[n] && n>1


(* ::Code:: *)
Int[ArcTanh[a_.*x_]^n_./x_^2,x_Symbol] :=
  -ArcTanh[a*x]^n/x +
  Dist[a*n,Int[ArcTanh[a*x]^(n-1)/(x*(1-a^2*x^2)),x]] /;
FreeQ[a,x] && IntegerQ[n] && n>0


(* ::Code:: *)
Int[ArcTanh[a_.*x_]^n_./x_^3,x_Symbol] :=
  a^2*ArcTanh[a*x]^n/2 - ArcTanh[a*x]^n/(2*x^2) +
  Dist[a*n/2,Int[ArcTanh[a*x]^(n-1)/x^2,x]] /;
FreeQ[a,x] && IntegerQ[n] && n>0


(* ::Code:: *)
Int[x_^m_*ArcTanh[a_.*x_]^n_.,x_Symbol] :=
  x^(m+1)*ArcTanh[a*x]^n/(m+1) - a^2*x^(m+3)*ArcTanh[a*x]^n/(m+1) -
  Dist[a*n/(m+1),Int[x^(m+1)*ArcTanh[a*x]^(n-1),x]] +
  Dist[a^2*(m+3)/(m+1),Int[x^(m+2)*ArcTanh[a*x]^n,x]] /;
FreeQ[a,x] && IntegerQ[n] && n>0 && RationalQ[m] && m<-3


(* ::Code:: *)
Int[ArcTanh[a_.*x_]^n_./(c_+d_.*x_),x_Symbol] :=
  -ArcTanh[a*x]^n*Log[2*c/(c+d*x)]/d +
  Dist[a*n/d,Int[ArcTanh[a*x]^(n-1)*Log[2*c/(c+d*x)]/(1-a^2*x^2),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c^2-d^2] && IntegerQ[n] && n>0


(* ::Code:: *)
Int[ArcTanh[a_.*x_]^n_./(x_*(c_+d_.*x_)),x_Symbol] :=
  ArcTanh[a*x]^n*Log[2-2*c/(c+d*x)]/c -
  Dist[a*n/c,Int[ArcTanh[a*x]^(n-1)*Log[2-2*c/(c+d*x)]/(1-a^2*x^2),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c^2-d^2] && IntegerQ[n] && n>0


(* ::Code:: *)
Int[ArcTanh[a_.*x_]^n_./(c_.*x_+d_.*x_^2),x_Symbol] :=
  ArcTanh[a*x]^n*Log[2-2*c/(c+d*x)]/c -
  Dist[a*n/c,Int[ArcTanh[a*x]^(n-1)*Log[2-2*c/(c+d*x)]/(1-a^2*x^2),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c^2-d^2] && IntegerQ[n] && n>0


(* ::Code:: *)
Int[x_^m_.*ArcTanh[a_.*x_]^n_./(c_+d_.*x_),x_Symbol] :=
  Dist[1/d,Int[x^(m-1)*ArcTanh[a*x]^n,x]] -
  Dist[c/d,Int[x^(m-1)*ArcTanh[a*x]^n/(c+d*x),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c^2-d^2] && RationalQ[m] && m>0 && IntegerQ[n] && n>0


(* ::Code:: *)
Int[x_^m_*ArcTanh[a_.*x_]^n_./(c_+d_.*x_),x_Symbol] :=
  Dist[1/c,Int[x^m*ArcTanh[a*x]^n,x]] -
  Dist[d/c,Int[x^(m+1)*ArcTanh[a*x]^n/(c+d*x),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c^2-d^2] && RationalQ[m] && m<-1 && IntegerQ[n] && n>0


(* ::Code:: *)
Int[1/((c_+d_.*x_^2)*ArcTanh[a_.*x_]),x_Symbol] :=
  Log[ArcTanh[a*x]]/(a*c) /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d]


(* ::Code:: *)
Int[ArcTanh[a_.*x_]^n_./(c_+d_.*x_^2),x_Symbol] :=
  ArcTanh[a*x]^(n+1)/(a*c*(n+1)) /;
FreeQ[{a,c,d,n},x] && ZeroQ[a^2*c+d] && NonzeroQ[n+1]


(* ::Code:: *)
Int[x_*ArcTanh[a_.*x_]^n_./(c_+d_.*x_^2),x_Symbol] :=
  ArcTanh[a*x]^(n+1)/(d*(n+1)) +
  Dist[1/(a*c),Int[ArcTanh[a*x]^n/(1-a*x),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && RationalQ[n] && n>0


(* ::Code:: *)
Int[ArcTanh[a_.*x_]^n_./(x_*(c_+d_.*x_^2)),x_Symbol] :=
  ArcTanh[a*x]^(n+1)/(c*(n+1)) +
  Dist[1/c,Int[ArcTanh[a*x]^n/(x*(1+a*x)),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && RationalQ[n] && n>0


(* ::Code:: *)
Int[ArcTanh[a_.*x_]^n_./(c_.*x_+d_.*x_^3),x_Symbol] :=
  ArcTanh[a*x]^(n+1)/(c*(n+1)) +
  Dist[1/c,Int[ArcTanh[a*x]^n/(x*(1+a*x)),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && RationalQ[n] && n>0


(* ::Code:: *)
Int[x_^m_*ArcTanh[a_.*x_]^n_./(c_+d_.*x_^2),x_Symbol] :=
  Dist[1/d,Int[x^(m-2)*ArcTanh[a*x]^n,x]] -
  Dist[c/d,Int[x^(m-2)*ArcTanh[a*x]^n/(c+d*x^2),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && RationalQ[{m,n}] && m>1 && n>0


(* ::Code:: *)
Int[x_^m_*ArcTanh[a_.*x_]^n_./(c_+d_.*x_^2),x_Symbol] :=
  Dist[1/c,Int[x^m*ArcTanh[a*x]^n,x]] -
  Dist[d/c,Int[x^(m+2)*ArcTanh[a*x]^n/(c+d*x^2),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && RationalQ[{m,n}] && m<-1 && n>0


(* ::Code:: *)
Int[x_^m_.*ArcTanh[a_.*x_]^n_/(c_+d_.*x_^2),x_Symbol] :=
  Dist[1/(a^(m+1)*c),Subst[Int[x^n*Tanh[x]^m,x],x,ArcTanh[a*x]]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && RationalQ[{m,n}] && (n<0 || Not[IntegerQ[n]]) && (IntegerQ[m] || PositiveQ[a])


(* ::Code:: *)
Int[x_^m_.*ArcTanh[a_.*x_]^n_/(c_+d_.*x_^2),x_Symbol] :=
  Dist[1/(a*c),Subst[Int[x^n*(Tanh[x]/a)^m,x],x,ArcTanh[a*x]]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && RationalQ[{m,n}] && (n<0 || Not[IntegerQ[n]]) && Not[IntegerQ[m] || PositiveQ[a]]


(* ::Code:: *)
Int[ArcTanh[a_.*x_]^n_.*ArcTanh[u_]/(c_+d_.*x_^2),x_Symbol] :=
  Dist[1/2,Int[ArcTanh[a*x]^n*Log[1+u]/(c+d*x^2),x]] -
  Dist[1/2,Int[ArcTanh[a*x]^n*Log[1-u]/(c+d*x^2),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && RationalQ[n] && n>0 && (ZeroQ[u^2-(1-2/(1+a*x))^2] || ZeroQ[u^2-(1-2/(1-a*x))^2])


(* ::Code:: *)
Int[ArcTanh[a_.*x_]^n_.*Log[u_]/(c_+d_.*x_^2),x_Symbol] :=
  ArcTanh[a*x]^n*PolyLog[2,1-u]/(2*a*c) -
  Dist[n/2,Int[ArcTanh[a*x]^(n-1)*PolyLog[2,1-u]/(c+d*x^2),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && RationalQ[n] && n>0 && ZeroQ[(1-u)^2-(1-2/(1+a*x))^2]


(* ::Code:: *)
Int[ArcTanh[a_.*x_]^n_.*Log[u_]/(c_+d_.*x_^2),x_Symbol] :=
  -ArcTanh[a*x]^n*PolyLog[2,1-u]/(2*a*c) +
  Dist[n/2,Int[ArcTanh[a*x]^(n-1)*PolyLog[2,1-u]/(c+d*x^2),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && RationalQ[n] && n>0 && ZeroQ[(1-u)^2-(1-2/(1-a*x))^2]


(* ::Code:: *)
Int[ArcTanh[a_.*x_]^n_.*PolyLog[p_,u_]/(c_+d_.*x_^2),x_Symbol] :=
  -ArcTanh[a*x]^n*PolyLog[p+1,u]/(2*a*c) +
  Dist[n/2,Int[ArcTanh[a*x]^(n-1)*PolyLog[p+1,u]/(c+d*x^2),x]] /;
FreeQ[{a,c,d,p},x] && ZeroQ[a^2*c+d] && RationalQ[n] && n>0 && ZeroQ[u^2-(1-2/(1+a*x))^2]


(* ::Code:: *)
Int[ArcTanh[a_.*x_]^n_.*PolyLog[p_,u_]/(c_+d_.*x_^2),x_Symbol] :=
  ArcTanh[a*x]^n*PolyLog[p+1,u]/(2*a*c) -
  Dist[n/2,Int[ArcTanh[a*x]^(n-1)*PolyLog[p+1,u]/(c+d*x^2),x]] /;
FreeQ[{a,c,d,p},x] && ZeroQ[a^2*c+d] && RationalQ[n] && n>0 && ZeroQ[u^2-(1-2/(1-a*x))^2]


(* ::Code:: *)
Int[1/(ArcCoth[a_.*x_]*ArcTanh[a_.*x_]*(c_+d_.*x_^2)),x_Symbol] :=
  (-Log[ArcCoth[a*x]]+Log[ArcTanh[a*x]])/(a*c*ArcCoth[a*x]-a*c*ArcTanh[a*x]) /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d]


(* ::Code:: *)
Int[ArcCoth[a_.*x_]^m_.*ArcTanh[a_.*x_]^n_./(c_+d_.*x_^2),x_Symbol] :=
  ArcCoth[a*x]^(m+1)*ArcTanh[a*x]^n/(a*c*(m+1)) -
  Dist[n/(m+1),Int[ArcCoth[a*x]^(m+1)*ArcTanh[a*x]^(n-1)/(c+d*x^2),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && IntegersQ[m,n] && 0<n<=m


(* ::Code:: *)
Int[ArcTanh[a_.*x_]/Sqrt[c_+d_.*x_^2],x_Symbol] :=
  -2*ArcTanh[a*x]*ArcTan[Sqrt[1-a*x]/Sqrt[1+a*x]]/(a*Sqrt[c]) - 
  I*PolyLog[2,-I*Sqrt[1-a*x]/Sqrt[1+a*x]]/(a*Sqrt[c]) + 
  I*PolyLog[2,I*Sqrt[1-a*x]/Sqrt[1+a*x]]/(a*Sqrt[c]) /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && PositiveQ[c]


(* ::Code:: *)
Int[ArcTanh[a_.*x_]/Sqrt[c_+d_.*x_^2],x_Symbol] :=
  Sqrt[1-a^2*x^2]/Sqrt[c+d*x^2]*Int[ArcTanh[a*x]/Sqrt[1-a^2*x^2],x] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && Not[PositiveQ[c]]


(* ::Code:: *)
Int[ArcTanh[a_.*x_]/(c_+d_.*x_^2)^(3/2),x_Symbol] :=
  -1/(a*c*Sqrt[c+d*x^2]) +
  x*ArcTanh[a*x]/(c*Sqrt[c+d*x^2]) /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d]


(* ::Code:: *)
Int[ArcTanh[a_.*x_]^n_/(c_+d_.*x_^2)^(3/2),x_Symbol] :=
  -n*ArcTanh[a*x]^(n-1)/(a*c*Sqrt[c+d*x^2]) +
  x*ArcTanh[a*x]^n/(c*Sqrt[c+d*x^2]) +
  Dist[n*(n-1),Int[ArcTanh[a*x]^(n-2)/(c+d*x^2)^(3/2),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && RationalQ[n] && n>1


(* ::Code:: *)
Int[ArcTanh[a_.*x_]^n_/(c_+d_.*x_^2)^(3/2),x_Symbol] :=
  ArcTanh[a*x]^(n+1)/(a*c*(n+1)*Sqrt[c+d*x^2]) -
  x*ArcTanh[a*x]^(n+2)/(c*(n+1)*(n+2)*Sqrt[c+d*x^2]) +
  Dist[1/((n+1)*(n+2)),Int[ArcTanh[a*x]^(n+2)/(c+d*x^2)^(3/2),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && RationalQ[n] && n<-1 && n!=-2


(* ::Code:: *)
Int[(c_+d_.*x_^2)^m_.*ArcTanh[a_.*x_],x_Symbol] :=
  (c+d*x^2)^m/(2*a*m*(2*m+1)) +
  x*(c+d*x^2)^m*ArcTanh[a*x]/(2*m+1) +
  Dist[2*c*m/(2*m+1),Int[(c+d*x^2)^(m-1)*ArcTanh[a*x],x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && RationalQ[m] && m>0


(* ::Code:: *)
Int[(c_+d_.*x_^2)^m_*ArcTanh[a_.*x_],x_Symbol] :=
  -(c+d*x^2)^(m+1)/(4*a*c*(m+1)^2) -
  x*(c+d*x^2)^(m+1)*ArcTanh[a*x]/(2*c*(m+1)) +
  Dist[(2*m+3)/(2*c*(m+1)),Int[(c+d*x^2)^(m+1)*ArcTanh[a*x],x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && RationalQ[m] && m<-1 && m!=-3/2


(* ::Code:: *)
Int[(c_+d_.*x_^2)^m_*ArcTanh[a_.*x_]^n_,x_Symbol] :=
  -n*(c+d*x^2)^(m+1)*ArcTanh[a*x]^(n-1)/(4*a*c*(m+1)^2) -
  x*(c+d*x^2)^(m+1)*ArcTanh[a*x]^n/(2*c*(m+1)) +
  Dist[(2*m+3)/(2*c*(m+1)),Int[(c+d*x^2)^(m+1)*ArcTanh[a*x]^n,x]] +
  Dist[n*(n-1)/(4*(m+1)^2),Int[(c+d*x^2)^m*ArcTanh[a*x]^(n-2),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && RationalQ[{m,n}] && m<-1 && m!=-3/2 && n>1


(* ::Code:: *)
Int[(c_+d_.*x_^2)^m_*ArcTanh[a_.*x_]^n_,x_Symbol] :=
  (c+d*x^2)^(m+1)*ArcTanh[a*x]^(n+1)/(a*c*(n+1)) +
  Dist[2*a*(m+1)/(n+1),Int[x*(c+d*x^2)^m*ArcTanh[a*x]^(n+1),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && RationalQ[{m,n}] && m<-1 && n<-1


(* ::Code:: *)
Int[(c_+d_.*x_^2)^m_*ArcTanh[a_.*x_]^n_,x_Symbol] :=
  Dist[c^m/a,Subst[Int[x^n*Sech[x]^(2*(m+1)),x],x,ArcTanh[a*x]]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && RationalQ[{m,n}] && m<-1 && (n<0 || Not[IntegerQ[n]]) && (IntegerQ[m] || PositiveQ[c])


(* ::Code:: *)
Int[(c_+d_.*x_^2)^m_*ArcTanh[a_.*x_]^n_,x_Symbol] :=
  c^(m-1/2)*Sqrt[c+d*x^2]/Sqrt[1-a^2*x^2]*Int[(1-a^2*x^2)^m*ArcTanh[a*x]^n,x] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && RationalQ[{m,n}] && m<-1 && (n<0 || Not[IntegerQ[n]]) && IntegerQ[m-1/2] && Not[PositiveQ[c]]


(* ::Code:: *)
Int[x_*(c_+d_.*x_^2)^p_.*ArcTanh[a_.*x_]^n_.,x_Symbol] :=
  (c+d*x^2)^(p+1)*ArcTanh[a*x]^n/(2*d*(p+1)) +
  Dist[n/(2*a*(p+1)),Int[(c+d*x^2)^p*ArcTanh[a*x]^(n-1),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && RationalQ[{n,p}] && n>0 && p!=-1


(* ::Code:: *)
Int[x_*(c_+d_.*x_^2)^p_./ArcTanh[a_.*x_]^2,x_Symbol] :=
  -x*(c+d*x^2)^(p+1)/(a*c*ArcTanh[a*x]) +
  Dist[1/a,Int[(1-(2*p+3)*a^2*x^2)*(c+d*x^2)^p/ArcTanh[a*x],x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && RationalQ[p]


(* ::Code:: *)
Int[x_*ArcTanh[a_.*x_]^n_/(c_+d_.*x_^2)^2,x_Symbol] :=
  x*ArcTanh[a*x]^(n+1)/(a*c*(n+1)*(c+d*x^2)) +
  (1+a^2*x^2)*ArcTanh[a*x]^(n+2)/(d*(n+1)*(n+2)*(c+d*x^2)) +
  Dist[4/((n+1)*(n+2)),Int[x*ArcTanh[a*x]^(n+2)/(c+d*x^2)^2,x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && RationalQ[n] && n<-1 && n!=-2


(* ::Code:: *)
Int[x_^m_*(c_+d_.*x_^2)^p_.*ArcTanh[a_.*x_]^n_.,x_Symbol] :=
  x^(m+1)*(c+d*x^2)^(p+1)*ArcTanh[a*x]^n/(c*(m+1)) -
  Dist[a*n/(m+1),Int[x^(m+1)*(c+d*x^2)^p*ArcTanh[a*x]^(n-1),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && IntegersQ[m,n,2*p] && m<-1 && n>0 && ZeroQ[m+2*p+3]


(* ::Code:: *)
Int[x_^m_*(c_+d_.*x_^2)^p_.*ArcTanh[a_.*x_]^n_.,x_Symbol] :=
  x^m*(c+d*x^2)^(p+1)*ArcTanh[a*x]^(n+1)/(a*c*(n+1)) -
  Dist[m/(a*(n+1)),Int[x^(m-1)*(c+d*x^2)^p*ArcTanh[a*x]^(n+1),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && IntegersQ[m,n,2*p] && n<-1 && ZeroQ[m+2*p+2]


(* ::Code:: *)
Int[x_^m_*(c_+d_.*x_^2)^p_*ArcTanh[a_.*x_]^n_.,x_Symbol] :=
  Dist[1/d,Int[x^(m-2)*(c+d*x^2)^(p+1)*ArcTanh[a*x]^n,x]] -
  Dist[c/d,Int[x^(m-2)*(c+d*x^2)^p*ArcTanh[a*x]^n,x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && IntegersQ[m,n,2*p] && m>1 && n!=-1 && p<-1


(* ::Code:: *)
Int[x_^m_*(c_+d_.*x_^2)^p_*ArcTanh[a_.*x_]^n_.,x_Symbol] :=
  Dist[1/c,Int[x^m*(c+d*x^2)^(p+1)*ArcTanh[a*x]^n,x]] -
  Dist[d/c,Int[x^(m+2)*(c+d*x^2)^p*ArcTanh[a*x]^n,x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && IntegersQ[m,n,2*p] && m<0 && n!=-1 && p<-1


(* ::Code:: *)
Int[x_^m_*(c_+d_.*x_^2)^p_.*ArcTanh[a_.*x_]^n_.,x_Symbol] :=
  x^(m+1)*(c+d*x^2)^(p+1)*ArcTanh[a*x]^n/(c*(m+1)) -
  Dist[a*n/(m+1),Int[x^(m+1)*(c+d*x^2)^p*ArcTanh[a*x]^(n-1),x]] +
  Dist[a^2*(m+2*p+3)/(m+1),Int[x^(m+2)*(c+d*x^2)^p*ArcTanh[a*x]^n,x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && IntegersQ[m,n,2*p] && m<-1 && n>0 && NonzeroQ[m+2*p+3]


(* ::Code:: *)
Int[x_^m_.*(c_+d_.*x_^2)^p_.*ArcTanh[a_.*x_]^n_.,x_Symbol] :=
  x^m*(c+d*x^2)^(p+1)*ArcTanh[a*x]^(n+1)/(a*c*(n+1)) -
  Dist[m/(a*(n+1)),Int[x^(m-1)*(c+d*x^2)^p*ArcTanh[a*x]^(n+1),x]] +
  Dist[a*(m+2*p+2)/(n+1),Int[x^(m+1)*(c+d*x^2)^p*ArcTanh[a*x]^(n+1),x]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && IntegersQ[m,n,2*p] && n<-1 && NonzeroQ[m+2*p+2] && Not[m==1 && n==-2]


(* ::Code:: *)
Int[(e_.+f_.*x_^m_.)*(c_+d_.*x_^2)^p_*ArcTanh[a_.*x_]^n_,x_Symbol] :=
  Dist[c^p/a^(m+1),Subst[Int[Expand[x^n*TrigReduce[Regularize[(e*a^m+f*Tanh[x]^m)*Sech[x]^(2*(p+1)),x]]],x],x,ArcTanh[a*x]]] /;
FreeQ[{a,c,d,e,f},x] && ZeroQ[a^2*c+d] && RationalQ[{m,n,p}] && p<-1 && (n<0 || Not[IntegerQ[n]]) && (IntegerQ[p] || PositiveQ[c]) && (IntegerQ[m] || PositiveQ[a])


(* ::Code:: *)
Int[x_^m_.*(c_+d_.*x_^2)^p_*ArcTanh[a_.*x_]^n_,x_Symbol] :=
  Dist[c^p/a,Subst[Int[x^n*(Tanh[x]/a)^m*Sech[x]^(2*(p+1)),x],x,ArcTanh[a*x]]] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && RationalQ[{m,n,p}] && p<-1 && (n<0 || Not[IntegerQ[n]]) && (IntegerQ[p] || PositiveQ[c]) && Not[IntegerQ[m] || PositiveQ[a]]


(* ::Code:: *)
Int[x_^m_.*(c_+d_.*x_^2)^p_*ArcTanh[a_.*x_]^n_,x_Symbol] :=
  c^(p-1/2)*Sqrt[c+d*x^2]/Sqrt[1-a^2*x^2]*Int[x^m*(1-a^2*x^2)^p*ArcTanh[a*x]^n,x] /;
FreeQ[{a,c,d},x] && ZeroQ[a^2*c+d] && RationalQ[{m,n,p}] && p<-1 && (n<0 || Not[IntegerQ[n]]) && IntegerQ[p-1/2] && Not[PositiveQ[c]]


(* ::Code:: *)
Int[ArcTanh[a_+b_.*x_],x_Symbol] :=
  (a+b*x)*ArcTanh[a+b*x]/b + Log[1-(a+b*x)^2]/(2*b) /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[ArcTanh[a_+b_.*x_^n_],x_Symbol] :=
  x*ArcTanh[a+b*x^n] -
  Dist[b*n,Int[x^n/(1-a^2-2*a*b*x^n-b^2*x^(2*n)),x]] /;
FreeQ[{a,b},x] && RationalQ[n]


(* ::Code:: *)
Int[ArcTanh[a_.+b_.*x_^n_.]/x_,x_Symbol] :=
  Dist[1/2,Int[Log[1+a+b*x^n]/x,x]] -
  Dist[1/2,Int[Log[1-a-b*x^n]/x,x]] /;
FreeQ[{a,b,n},x]


(* ::Code:: *)
Int[x_^m_.*ArcTanh[a_+b_.*x_^n_.],x_Symbol] :=
  x^(m+1)*ArcTanh[a+b*x^n]/(m+1) -
  Dist[b*n/(m+1),Int[x^(m+n)/(1-a^2-2*a*b*x^n-b^2*x^(2*n)),x]] /;
FreeQ[{a,b},x] && RationalQ[{m,n}] && m+1!=0 && m+1!=n


(* ::Code:: *)
Int[ArcTanh[a_+b_.*x_]^n_,x_Symbol] :=
  Dist[1/b,Subst[Int[ArcTanh[x]^n,x],x,a+b*x]] /;
FreeQ[{a,b},x] && IntegerQ[n] && n>1


(* ::Code:: *)
Int[x_^m_.*ArcTanh[a_+b_.*x_]^n_,x_Symbol] :=
  Dist[1/b^(m+1),Subst[Int[(x-a)^m*ArcTanh[x]^n,x],x,a+b*x]] /;
FreeQ[{a,b},x] && IntegersQ[m,n] && m>0 && n>1


(* ::Code:: *)
Int[ArcTanh[b_.*x_]/(c_+d_.*x_^n_.),x_Symbol] :=
  Dist[1/2,Int[Log[1+b*x]/(c+d*x^n),x]] -
  Dist[1/2,Int[Log[1-b*x]/(c+d*x^n),x]] /;
FreeQ[{b,c,d},x] && IntegerQ[n] && Not[n==2 && ZeroQ[b^2*c+d]]


(* ::Code:: *)
Int[ArcTanh[a_+b_.*x_]/(c_+d_.*x_^n_.),x_Symbol] :=
  Dist[1/2,Int[Log[1+a+b*x]/(c+d*x^n),x]] -
  Dist[1/2,Int[Log[1-a-b*x]/(c+d*x^n),x]] /;
FreeQ[{a,b,c,d},x] && IntegerQ[n] && Not[n==1 && ZeroQ[a*d-b*c]]


(* ::Code:: *)
Int[u_.*ArcTanh[c_./(a_.+b_.*x_^n_.)]^m_.,x_Symbol] :=
  Int[u*ArcCoth[a/c+b*x^n/c]^m,x] /;
FreeQ[{a,b,c,n,m},x]


(* ::Code:: *)
If[ShowSteps,

Int[u_*v_^n_.,x_Symbol] :=
  Module[{tmp=InverseFunctionOfLinear[u,x]},
  ShowStep["","Int[f[x,ArcTanh[a+b*x]]/(1-(a+b*x)^2),x]",
		   "Subst[Int[f[-a/b+Tanh[x]/b,x],x],x,ArcTanh[a+b*x]]/b",Hold[
  Dist[(-Discriminant[v,x]/(4*Coefficient[v,x,2]))^n/Coefficient[tmp[[1]],x,1],
	Subst[Int[Regularize[SubstForInverseFunction[u,tmp,x]*Sech[x]^(2*(n+1)),x],x], x, tmp]]]] /;
 NotFalseQ[tmp] && Head[tmp]===ArcTanh && ZeroQ[Discriminant[v,x]*tmp[[1]]^2-D[v,x]^2]] /;
SimplifyFlag && QuadraticQ[v,x] && IntegerQ[n] && n<0 && PosQ[Discriminant[v,x]] && MatchQ[u,r_.*f_^w_ /; FreeQ[f,x]],

Int[u_*v_^n_.,x_Symbol] :=
  Module[{tmp=InverseFunctionOfLinear[u,x]},
  Dist[(-Discriminant[v,x]/(4*Coefficient[v,x,2]))^n/Coefficient[tmp[[1]],x,1],
	Subst[Int[Regularize[SubstForInverseFunction[u,tmp,x]*Sech[x]^(2*(n+1)),x],x], x, tmp]] /;
 NotFalseQ[tmp] && Head[tmp]===ArcTanh && ZeroQ[Discriminant[v,x]*tmp[[1]]^2-D[v,x]^2]] /;
QuadraticQ[v,x] && IntegerQ[n] && n<0 && PosQ[Discriminant[v,x]] && MatchQ[u,r_.*f_^w_ /; FreeQ[f,x]]]


(* ::Code:: *)
Int[u_.*E^(n_.*ArcTanh[v_]),x_Symbol] :=
  Int[u*(1+v)^(n/2)/(1-v)^(n/2),x] /;
EvenQ[n]


(* ::Code:: *)
Int[E^(n_.*ArcTanh[v_]),x_Symbol] :=
  Int[(1+v)^(n/2)/(1-v)^(n/2),x] /;
RationalQ[n]


(* ::Code:: *)
Int[x_^m_.*E^(n_.*ArcTanh[v_]), x_Symbol] :=
  Int[x^m*(1+v)^n/(1-v^2)^(n/2),x] /;
RationalQ[m] && OddQ[n] && PolynomialQ[v,x]


(* ::Code:: *)
Int[u_.*E^(n_.*ArcTanh[v_])*(1-v_^2)^m_.,x_Symbol] :=
  Int[u*(1-v)^(m-n/2)*(1+v)^(m+n/2),x] /;
RationalQ[{m,n}] && IntegerQ[m-n/2] && IntegerQ[m+n/2]


(* ::Code:: *)
Int[u_.*E^(n_.*ArcTanh[v_])*(a_+b_.*v_^2)^m_.,x_Symbol] :=
  (a+b*v^2)^m/(1-v^2)^m*Int[u*(1-v)^(m-n/2)*(1+v)^(m+n/2),x] /;
FreeQ[{a,b},x] && ZeroQ[a+b] && RationalQ[{m,n}] && IntegerQ[m-n/2] && IntegerQ[m+n/2]


(* ::Code:: *)
Int[u_.*E^(n_.*ArcTanh[v_])*(a_+b_. v_^2)^m_.,x_Symbol] :=
  Dist[a^m,Int[u*(1+v)^n*(1-v^2)^(m-n/2),x]] /;
FreeQ[{a,b},x] && ZeroQ[a+b] && RationalQ[n] && IntegerQ[m] && m>0


(* ::Code:: *)
Int[u_.*E^(n_.*ArcTanh[v_])*(1+v_)^m_.,x_Symbol] :=
  Int[u*(1+v)^(m+n)/(1-v^2)^(n/2),x] /;
RationalQ[{m,n}] && IntegerQ[m+n]


(* ::Code:: *)
Int[u_.*E^(n_.*ArcTanh[v_])*(1+v_)^m_.,x_Symbol] :=
  Int[u*(1+v)^(m+n/2)/(1-v)^(n/2),x] /;
RationalQ[{m,n}]


(* ::Code:: *)
Int[u_.*E^(n_.*ArcTanh[v_])*(1-v_)^m_.,x_Symbol] :=
  Int[u*(1+v)^(n/2)*(1-v)^(m-n/2),x] /;
RationalQ[{m,n}]


(* ::Code:: *)
Int[u_.*E^(n_.*ArcTanh[v_])*(a_+b_.*v_)^m_.,x_Symbol] :=
  Dist[a^m,Int[u*E^(n*ArcTanh[v])*(1+b/a*v)^m,x]] /;
FreeQ[{a,b},x] && IntegerQ[m] && RationalQ[n] && NonzeroQ[a-1] && ZeroQ[a^2-b^2]


(* ::Code:: *)
Int[u_.*E^ArcTanh[v_]*(a_+b_./v_^2)^m_.,x_Symbol] :=
  b^m*Int[u*(1-v^2)^(m-1/2)/v^(2*m),x] + 
  b^m*Int[u*(1-v^2)^(m-1/2)/v^(2*m-1),x] /;
FreeQ[{a,b},x] && ZeroQ[a+b] && IntegerQ[m]


(* ::Code:: *)
Int[ArcTanh[b_.*f_^(c_.+d_.*x_)],x_Symbol] :=
  Dist[1/2,Int[Log[1+b*f^(c+d*x)],x]] -
  Dist[1/2,Int[Log[1-b*f^(c+d*x)],x]] /;
FreeQ[{b,c,d,f},x] 


(* ::Code:: *)
Int[x_^m_.*ArcTanh[b_.*f_^(c_.+d_.*x_)],x_Symbol] :=
  Dist[1/2,Int[x^m*Log[1+b*f^(c+d*x)],x]] -
  Dist[1/2,Int[x^m*Log[1-b*f^(c+d*x)],x]] /;
FreeQ[{b,c,d,f},x] && IntegerQ[m] && m>0


(* ::Code:: *)
Int[ArcTanh[u_],x_Symbol] :=
  x*ArcTanh[u] -
  Int[Regularize[x*D[u,x]/(1-u^2),x],x] /;
InverseFunctionFreeQ[u,x]


(* ::Code:: *)
Int[x_^m_.*ArcTanh[u_],x_Symbol] :=
  x^(m+1)*ArcTanh[u]/(m+1) -
  Dist[1/(m+1),Int[Regularize[x^(m+1)*D[u,x]/(1-u^2),x],x]] /;
FreeQ[m,x] && NonzeroQ[m+1] && InverseFunctionFreeQ[u,x] && 
	Not[FunctionOfQ[x^(m+1),u,x]] && 
	FalseQ[PowerVariableExpn[u,m+1,x]]


(* ::Code:: *)
Int[v_*ArcTanh[u_],x_Symbol] :=
  Module[{w=Block[{ShowSteps=False,StepCounter=Null}, Int[v,x]]},  
  w*ArcTanh[u] -
  Int[Regularize[w*D[u,x]/(1-u^2),x],x] /;
 InverseFunctionFreeQ[w,x]] /;
InverseFunctionFreeQ[u,x] && 
	Not[MatchQ[v, x^m_. /; FreeQ[m,x]]] &&
	FalseQ[FunctionOfLinear[v*ArcTanh[u],x]]
(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Code:: *)
Int[ArcSinh[a_.+b_.*x_],x_Symbol] :=
  (a+b*x)*ArcSinh[a+b*x]/b - Sqrt[1+(a+b*x)^2]/b /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[ArcSinh[a_.+b_.*x_]^n_,x_Symbol] :=
  (a+b*x)*ArcSinh[a+b*x]^n/b -
  n*Sqrt[1+(a+b*x)^2]*ArcSinh[a+b*x]^(n-1)/b +
  Dist[n*(n-1),Int[ArcSinh[a+b*x]^(n-2),x]] /;
FreeQ[{a,b},x] && RationalQ[n] && n>1


(* ::Code:: *)
Int[1/ArcSinh[a_.+b_.*x_],x_Symbol] :=
  CoshIntegral[ArcSinh[a+b*x]]/b /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[1/ArcSinh[a_.+b_.*x_]^2,x_Symbol] :=
  -Sqrt[1+(a+b*x)^2]/(b*ArcSinh[a+b*x]) + SinhIntegral[ArcSinh[a+b*x]]/b /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[1/Sqrt[ArcSinh[a_.+b_.*x_]],x_Symbol] :=
  Sqrt[Pi]*Erf[Sqrt[ArcSinh[a+b*x]]]/(2*b) +
  Sqrt[Pi]*Erfi[Sqrt[ArcSinh[a+b*x]]]/(2*b) /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[Sqrt[ArcSinh[a_.+b_.*x_]],x_Symbol] :=
  (a+b*x)*Sqrt[ArcSinh[a+b*x]]/b +
  Sqrt[Pi]*Erf[Sqrt[ArcSinh[a+b*x]]]/(4*b) -
  Sqrt[Pi]*Erfi[Sqrt[ArcSinh[a+b*x]]]/(4*b) /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[ArcSinh[a_.+b_.*x_]^n_,x_Symbol] :=
  -(a+b*x)*ArcSinh[a+b*x]^(n+2)/(b*(n+1)*(n+2)) +
  Sqrt[1+(a+b*x)^2]*ArcSinh[a+b*x]^(n+1)/(b*(n+1)) +
  Dist[1/((n+1)*(n+2)),Int[ArcSinh[a+b*x]^(n+2),x]] /;
FreeQ[{a,b},x] && RationalQ[n] && n<-1 && n!=-2


(* ::Code:: *)
Int[ArcSinh[a_.+b_.*x_]^n_,x_Symbol] :=
  ArcSinh[a+b*x]^n*Gamma[n+1,-ArcSinh[a+b*x]]/(2*b*(-ArcSinh[a+b*x])^n) -
  Gamma[n+1,ArcSinh[a+b*x]]/(2*b) /;
FreeQ[{a,b,n},x] && (Not[RationalQ[n]] || -1<n<1)


(* ::Code:: *)
Int[x_^m_.*ArcSinh[a_.+b_.*x_],x_Symbol] :=
  x^(m+1)*ArcSinh[a+b*x]/(m+1) - 
  Dist[b/(m+1),Int[x^(m+1)/Sqrt[1+a^2+2*a*b*x+b^2*x^2],x]] /;
FreeQ[{a,b,m},x] && NonzeroQ[m+1]


(* ::Code:: *)
Int[x_/Sqrt[ArcSinh[a_.*x_]],x_Symbol] :=
  -Sqrt[Pi/2]*Erf[Sqrt[2]*Sqrt[ArcSinh[a*x]]]/(4*a^2) + 
  Sqrt[Pi/2]*Erfi[Sqrt[2]*Sqrt[ArcSinh[a*x]]]/(4*a^2) /;
FreeQ[a,x]


(* ::Code:: *)
Int[x_/ArcSinh[a_.*x_]^(3/2),x_Symbol] :=
  -2*x*Sqrt[1+a^2*x^2]/(a*Sqrt[ArcSinh[a*x]]) +
  Sqrt[Pi/2]*Erf[Sqrt[2]*Sqrt[ArcSinh[a*x]]]/a^2 +
  Sqrt[Pi/2]*Erfi[Sqrt[2]*Sqrt[ArcSinh[a*x]]]/a^2 /;
FreeQ[a,x]


(* ::Code:: *)
Int[x_*ArcSinh[a_.*x_]^n_,x_Symbol] :=
  -n*x*Sqrt[1+a^2*x^2]*ArcSinh[a*x]^(n-1)/(4*a) +
  ArcSinh[a*x]^n/(4*a^2) + x^2*ArcSinh[a*x]^n/2 +
  Dist[n*(n-1)/4,Int[x*ArcSinh[a*x]^(n-2),x]] /;
FreeQ[a,x] && RationalQ[n] && n>0


(* ::Code:: *)
Int[x_*ArcSinh[a_.*x_]^n_,x_Symbol] :=
  x*Sqrt[1+a^2*x^2]*ArcSinh[a*x]^(n+1)/(a*(n+1)) -
  ArcSinh[a*x]^(n+2)/(a^2*(n+1)*(n+2)) -
  2*x^2*ArcSinh[a*x]^(n+2)/((n+1)*(n+2)) +
  Dist[4/((n+1)*(n+2)),Int[x*ArcSinh[a*x]^(n+2),x]] /;
FreeQ[a,x] && RationalQ[n] && n<-1 && n!=-2


(* ::Code:: *)
Int[ArcSinh[a_.*x_]^n_/x_^3,x_Symbol] :=
  -a*n*Sqrt[1+a^2*x^2]*ArcSinh[a*x]^(n-1)/(2*x) -
  ArcSinh[a*x]^n/(2*x^2) +
  Dist[a^2*n*(n-1)/2,Int[ArcSinh[a*x]^(n-2)/x,x]] /;
FreeQ[a,x] && RationalQ[n] && n>1


(* ::Code:: *)
Int[x_^m_*ArcSinh[a_.*x_]^n_,x_Symbol] :=
  -a*n*x^(m+2)*Sqrt[1+a^2*x^2]*ArcSinh[a*x]^(n-1)/((m+1)*(m+2)) +
  x^(m+1)*ArcSinh[a*x]^n/(m+1) +
  a^2*(m+3)*x^(m+3)*ArcSinh[a*x]^n/((m+1)*(m+2)) -
  Dist[a^2*(m+3)^2/((m+1)*(m+2)),Int[x^(m+2)*ArcSinh[a*x]^n,x]] +
  Dist[a^2*n*(n-1)/((m+1)*(m+2)),Int[x^(m+2)*ArcSinh[a*x]^(n-2),x]] /;
FreeQ[a,x] && IntegerQ[m] && RationalQ[n] && m<-3 && n>1


(* ::Code:: *)
Int[x_^m_*ArcSinh[a_.*x_]^n_,x_Symbol] :=
  x^m*Sqrt[1+a^2*x^2]*ArcSinh[a*x]^(n+1)/(a*(n+1)) -
  m*x^(m-1)*ArcSinh[a*x]^(n+2)/(a^2*(n+1)*(n+2)) -
  (m+1)*x^(m+1)*ArcSinh[a*x]^(n+2)/((n+1)*(n+2)) +
  Dist[(m+1)^2/((n+1)*(n+2)),Int[x^m*ArcSinh[a*x]^(n+2),x]] +
  Dist[m*(m-1)/(a^2*(n+1)*(n+2)),Int[x^(m-2)*ArcSinh[a*x]^(n+2),x]] /;
FreeQ[a,x] && IntegerQ[m] && RationalQ[n] && m>1 && n<-1 && n!=-2


(* ::Code:: *)
Int[ArcSinh[a_.*x_^p_.]^n_./x_,x_Symbol] :=
  Dist[1/p,Subst[Int[x^n*Coth[x],x],x,ArcSinh[a*x^p]]] /;
FreeQ[{a,p},x] && IntegerQ[n] && n>0


(* ::Code:: *)
Int[x_^m_.*ArcSinh[a_.*x_]^n_,x_Symbol] :=
  x^(m+1)*ArcSinh[a*x]^n/(m+1) -
  Dist[n/(a^(m+1)*(m+1)),Subst[Int[x^(n-1)*Sinh[x]^(m+1),x],x,ArcSinh[a*x]]] /;
FreeQ[{a,n},x] && IntegerQ[m] && m!=-1


(* ::Code:: *)
Int[(a_+b_.*ArcSinh[c_.+d_.*x_])^n_,x_Symbol] :=
  Dist[1/d,Subst[Int[(a+b*x)^n*Cosh[x],x],x,ArcSinh[c+d*x]]] /;
FreeQ[{a,b,c,d},x] && Not[IntegerQ[n]]


(* ::Code:: *)
Int[x_^m_.*(a_+b_.*ArcSinh[c_.+d_.*x_])^n_,x_Symbol] :=
  Dist[1/d^(m+1),Subst[Int[(a+b*x)^n*(Sinh[x]-c)^m*Cosh[x],x],x,ArcSinh[c+d*x]]] /;
FreeQ[{a,b,c,d},x] && IntegerQ[m] && Not[IntegerQ[n]] && m>0


(* ::Code:: *)
Int[x_*ArcSinh[a_.+b_.*x_]^n_/Sqrt[u_],x_Symbol] :=
  Sqrt[u]*ArcSinh[a+b*x]^n/b^2 -
  Dist[n/b,Int[ArcSinh[a+b*x]^(n-1),x]] -
  Dist[a/b,Int[ArcSinh[a+b*x]^n/Sqrt[u],x]] /;
FreeQ[{a,b},x] && ZeroQ[u-1-(a+b*x)^2] && RationalQ[n] && n>1


(* ::Code:: *)
Int[u_.*ArcSinh[c_./(a_.+b_.*x_^n_.)]^m_.,x_Symbol] :=
  Int[u*ArcCsch[a/c+b*x^n/c]^m,x] /;
FreeQ[{a,b,c,n,m},x]


(* ::Code:: *)
Int[f_^(c_.*ArcSinh[a_.+b_.*x_]),x_Symbol] :=
  f^(c*ArcSinh[a+b*x])*(a+b*x-c*Sqrt[1+(a+b*x)^2]*Log[f])/(b*(1-c^2*Log[f]^2)) /;
FreeQ[{a,b,c,f},x] && NonzeroQ[1-c^2*Log[f]^2]


(* ::Code:: *)
Int[ArcSinh[u_],x_Symbol] :=
  x*ArcSinh[u] -
  Int[Regularize[x*D[u,x]/Sqrt[1+u^2],x],x] /;
InverseFunctionFreeQ[u,x] && Not[FunctionOfExponentialOfLinear[u,x]]


(* ::Code:: *)
Int[E^(n_.*ArcSinh[u_]), x_Symbol] :=
  Int[(u+Sqrt[1+u^2])^n,x] /;
IntegerQ[n] && PolynomialQ[u,x]


(* ::Code:: *)
Int[x_^m_.*E^(n_.*ArcSinh[u_]), x_Symbol] :=
  Int[x^m*(u+Sqrt[1+u^2])^n,x] /;
RationalQ[m] && IntegerQ[n] && PolynomialQ[u,x]
(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Code:: *)
Int[ArcCosh[a_.+b_.*x_],x_Symbol] :=
  (a+b*x)*ArcCosh[a+b*x]/b - Sqrt[-1+a+b*x]*Sqrt[1+a+b*x]/b /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[ArcCosh[a_.+b_.*x_]^n_,x_Symbol] :=
  (a+b*x)*ArcCosh[a+b*x]^n/b -
  n*Sqrt[-1+a+b*x]*Sqrt[1+a+b*x]*ArcCosh[a+b*x]^(n-1)/b +
  Dist[n*(n-1),Int[ArcCosh[a+b*x]^(n-2),x]] /;
FreeQ[{a,b},x] && RationalQ[n] && n>1


(* ::Code:: *)
Int[1/ArcCosh[a_.+b_.*x_],x_Symbol] :=
  SinhIntegral[ArcCosh[a+b*x]]/b /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[1/ArcCosh[a_.+b_.*x_]^2,x_Symbol] :=
  -Sqrt[-1+a+b*x]*Sqrt[1+a+b*x]/(b*ArcCosh[a+b*x]) + CoshIntegral[ArcCosh[a+b*x]]/b /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[1/Sqrt[ArcCosh[a_.+b_.*x_]],x_Symbol] :=
  -Sqrt[Pi]*Erf[Sqrt[ArcCosh[a+b*x]]]/(2*b) +
  Sqrt[Pi]*Erfi[Sqrt[ArcCosh[a+b*x]]]/(2*b) /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[Sqrt[ArcCosh[a_.+b_.*x_]],x_Symbol] :=
  (a+b*x)*Sqrt[ArcCosh[a+b*x]]/b -
  Sqrt[Pi]*Erf[Sqrt[ArcCosh[a+b*x]]]/(4*b) -
  Sqrt[Pi]*Erfi[Sqrt[ArcCosh[a+b*x]]]/(4*b) /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[ArcCosh[a_.+b_.*x_]^n_,x_Symbol] :=
  -(a+b*x)*ArcCosh[a+b*x]^(n+2)/(b*(n+1)*(n+2)) +
  Sqrt[-1+a+b*x]*Sqrt[1+a+b*x]*ArcCosh[a+b*x]^(n+1)/(b*(n+1)) +
  Dist[1/((n+1)*(n+2)),Int[ArcCosh[a+b*x]^(n+2),x]] /;
FreeQ[{a,b},x] && RationalQ[n] && n<-1 && n!=-2


(* ::Code:: *)
Int[ArcCosh[a_.+b_.*x_]^n_,x_Symbol] :=
  ArcCosh[a+b*x]^n*Gamma[n+1,-ArcCosh[a+b*x]]/(2*b*(-ArcCosh[a+b*x])^n) +
  Gamma[n+1,ArcCosh[a+b*x]]/(2*b) /;
FreeQ[{a,b,n},x] && (Not[RationalQ[n]] || -1<n<1)


(* ::Code:: *)
Int[x_^m_.*ArcCosh[a_.+b_.*x_],x_Symbol] :=
  x^(m+1)*ArcCosh[a+b*x]/(m+1) - 
  Dist[b/(m+1),Int[x^(m+1)/(Sqrt[-1+a+b*x]*Sqrt[1+a+b*x]),x]] /;
FreeQ[{a,b,m},x] && NonzeroQ[m+1]


(* ::Code:: *)
Int[x_/Sqrt[ArcCosh[a_.*x_]],x_Symbol] :=
  -Sqrt[Pi/2]*Erf[Sqrt[2]*Sqrt[ArcCosh[a*x]]]/(4*a^2) + 
  Sqrt[Pi/2]*Erfi[Sqrt[2]*Sqrt[ArcCosh[a*x]]]/(4*a^2) /;
FreeQ[a,x]


(* ::Code:: *)
Int[x_/ArcCosh[a_.*x_]^(3/2),x_Symbol] :=
  -2*x*Sqrt[-1+a*x]*Sqrt[1+a*x]/(a*Sqrt[ArcCosh[a*x]]) +
  Sqrt[Pi/2]*Erf[Sqrt[2]*Sqrt[ArcCosh[a*x]]]/a^2 +
  Sqrt[Pi/2]*Erfi[Sqrt[2]*Sqrt[ArcCosh[a*x]]]/a^2 /;
FreeQ[a,x]


(* ::Code:: *)
Int[x_*ArcCosh[a_.*x_]^n_,x_Symbol] :=
  -n*x*Sqrt[-1+a*x]*Sqrt[1+a*x]*ArcCosh[a*x]^(n-1)/(4*a) -
  ArcCosh[a*x]^n/(4*a^2) + x^2*ArcCosh[a*x]^n/2 +
  Dist[n*(n-1)/4,Int[x*ArcCosh[a*x]^(n-2),x]] /;
FreeQ[a,x] && RationalQ[n] && n>0


(* ::Code:: *)
Int[x_*ArcCosh[a_.*x_]^n_,x_Symbol] :=
  x*Sqrt[-1+a*x]*Sqrt[1+a*x]*ArcCosh[a*x]^(n+1)/(a*(n+1)) +
  ArcCosh[a*x]^(n+2)/(a^2*(n+1)*(n+2)) -
  2*x^2*ArcCosh[a*x]^(n+2)/((n+1)*(n+2)) +
  Dist[4/((n+1)*(n+2)),Int[x*ArcCosh[a*x]^(n+2),x]] /;
FreeQ[a,x] && RationalQ[n] && n<-1 && n!=-2


(* ::Code:: *)
Int[ArcCosh[a_.*x_]^n_/x_^3,x_Symbol] :=
  a*n*Sqrt[-1+a*x]*Sqrt[1+a*x]*ArcCosh[a*x]^(n-1)/(2*x) -
  ArcCosh[a*x]^n/(2*x^2) -
  Dist[a^2*n*(n-1)/2,Int[ArcCosh[a*x]^(n-2)/x,x]] /;
FreeQ[a,x] && RationalQ[n] && n>1


(* ::Code:: *)
Int[x_^m_*ArcCosh[a_.*x_]^n_,x_Symbol] :=
  a*n*x^(m+2)*Sqrt[-1+a*x]*Sqrt[1+a*x]*ArcCosh[a*x]^(n-1)/((m+1)*(m+2)) +
  x^(m+1)*ArcCosh[a*x]^n/(m+1) -
  a^2*(m+3)*x^(m+3)*ArcCosh[a*x]^n/((m+1)*(m+2)) +
  Dist[a^2*(m+3)^2/((m+1)*(m+2)),Int[x^(m+2)*ArcCosh[a*x]^n,x]] -
  Dist[a^2*n*(n-1)/((m+1)*(m+2)),Int[x^(m+2)*ArcCosh[a*x]^(n-2),x]] /;
FreeQ[a,x] && IntegerQ[m] && RationalQ[n] && m<-3 && n>1


(* ::Code:: *)
Int[x_^m_*ArcCosh[a_.*x_]^n_,x_Symbol] :=
  x^m*Sqrt[-1+a*x]*Sqrt[1+a*x]*ArcCosh[a*x]^(n+1)/(a*(n+1)) +
  m*x^(m-1)*ArcCosh[a*x]^(n+2)/(a^2*(n+1)*(n+2)) -
  (m+1)*x^(m+1)*ArcCosh[a*x]^(n+2)/((n+1)*(n+2)) +
  Dist[(m+1)^2/((n+1)*(n+2)),Int[x^m*ArcCosh[a*x]^(n+2),x]] -
  Dist[m*(m-1)/(a^2*(n+1)*(n+2)),Int[x^(m-2)*ArcCosh[a*x]^(n+2),x]] /;
FreeQ[a,x] && IntegerQ[m] && RationalQ[n] && m>1 && n<-1 && n!=-2


(* ::Code:: *)
Int[ArcCosh[a_.*x_^p_.]^n_./x_,x_Symbol] :=
  Dist[1/p,Subst[Int[x^n*Tanh[x],x],x,ArcCosh[a*x^p]]] /;
FreeQ[{a,p},x] && IntegerQ[n] && n>0


(* ::Code:: *)
Int[x_^m_.*ArcCosh[a_.*x_]^n_,x_Symbol] :=
  x^(m+1)*ArcCosh[a*x]^n/(m+1) -
  Dist[n/(a^(m+1)*(m+1)),Subst[Int[x^(n-1)*Cosh[x]^(m+1),x],x,ArcCosh[a*x]]] /;
FreeQ[{a,n},x] && IntegerQ[m] && m!=-1


(* ::Code:: *)
Int[(a_+b_.*ArcCosh[c_.+d_.*x_])^n_,x_Symbol] :=
  Dist[1/d,Subst[Int[(a+b*x)^n*Sinh[x],x],x,ArcCosh[c+d*x]]] /;
FreeQ[{a,b,c,d},x] && Not[IntegerQ[n]]


(* ::Code:: *)
Int[x_^m_.*(a_+b_.*ArcCosh[c_.+d_.*x_])^n_,x_Symbol] :=
  Dist[1/d^(m+1),Subst[Int[(a+b*x)^n*(Cosh[x]-c)^m*Sinh[x],x],x,ArcCosh[c+d*x]]] /;
FreeQ[{a,b,c,d},x] && IntegerQ[m] && Not[IntegerQ[n]] && m>0


(* ::Code:: *)
Int[u_.*ArcCosh[c_./(a_.+b_.*x_^n_.)]^m_.,x_Symbol] :=
  Int[u*ArcSech[a/c+b*x^n/c]^m,x] /;
FreeQ[{a,b,c,n,m},x]


(* ::Code:: *)
Int[f_^(c_.*ArcCosh[a_.+b_.*x_]),x_Symbol] :=
  (a+b*x-c*Sqrt[(-1+a+b*x)/(1+a+b*x)]*(1+a+b*x)*Log[f])/(b*(1-c^2*Log[f]^2))*
    f^(c*ArcCosh[a+b*x]) /;
FreeQ[{a,b,c,f},x] && NonzeroQ[1-c^2*Log[f]^2]


(* ::Code:: *)
Int[ArcCosh[u_],x_Symbol] :=
  x*ArcCosh[u] - 
  Int[Regularize[x*D[u,x]/(Sqrt[-1+u]*Sqrt[1+u]),x],x] /;
InverseFunctionFreeQ[u,x] && Not[FunctionOfExponentialOfLinear[u,x]]


(* ::Code:: *)
Int[E^(n_.*ArcCosh[u_]), x_Symbol] :=
  Int[(u+Sqrt[-1+u]*Sqrt[1+u])^n,x] /;
IntegerQ[n] && PolynomialQ[u,x]


(* ::Code:: *)
Int[x_^m_.*E^(n_.*ArcCosh[u_]), x_Symbol] :=
  Int[x^m*(u+Sqrt[-1+u]*Sqrt[1+u])^n,x] /;
RationalQ[m] && IntegerQ[n] && PolynomialQ[u,x]
(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Code:: *)
Int[ArcCsch[a_.+b_.*x_],x_Symbol] :=
  (a+b*x)*ArcCsch[a+b*x]/b + ArcTanh[Sqrt[1+1/(a+b*x)^2]]/b /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[x_^m_.*ArcCsch[a_+b_.*x_],x_Symbol] :=
  Dist[1/b,Subst[Int[(-a/b+x/b)^m*ArcCsch[x],x],x,a+b*x]] /;
FreeQ[{a,b},x] && IntegerQ[m] && m>0


(* ::Code:: *)
Int[x_^m_.*ArcCsch[a_.+b_.*x_],x_Symbol] :=
  x^(m+1)*ArcCsch[a+b*x]/(m+1) + 
  Dist[b/(m+1),Int[x^(m+1)/((a+b*x)^2*Sqrt[1+1/(a+b*x)^2]),x]] /;
FreeQ[{a,b,m},x] && NonzeroQ[m+1]


(* Int[ArcCsch[a_.*x_^n_.]/x_,x_Symbol] :=
(* Int[ArcCsch[1/a*x^(-n)]/x,x] /; *)
  -ArcCsch[a*x^n]^2/(2*n) - 
  ArcCsch[a*x^n]*Log[1-E^(-2*ArcCsch[a*x^n])]/n + 
  PolyLog[2,E^(-2*ArcCsch[a*x^n])]/(2*n) /;
(* -ArcCsch[a*x^n]^2/(2*n) - 
  ArcCsch[a*x^n]*Log[1-1/(1/(a*x^n)+Sqrt[1+1/(a^2*x^(2*n))])^2]/n + 
  PolyLog[2,1/(1/(a*x^n)+Sqrt[1+1/(a^2*x^(2*n))])^2]/(2*n) /; *)
FreeQ[{a,n},x] *)


(* ::Code:: *)
Int[u_.*ArcCsch[c_./(a_.+b_.*x_^n_.)]^m_.,x_Symbol] :=
  Int[u*ArcSinh[a/c+b*x^n/c]^m,x] /;
FreeQ[{a,b,c,n,m},x]


(* ::Code:: *)
Int[ArcCsch[u_],x_Symbol] :=
  x*ArcCsch[u] +
  Int[Regularize[x*D[u,x]/(u^2*Sqrt[1+1/u^2]),x],x] /;
InverseFunctionFreeQ[u,x] && Not[FunctionOfExponentialOfLinear[u,x]]


(* ::Code:: *)
Int[E^(n_.*ArcCsch[u_]), x_Symbol] :=
  Int[(1/u+Sqrt[1+1/u^2])^n,x] /;
IntegerQ[n] && PolynomialQ[u,x]


(* ::Code:: *)
Int[x_^m_.*E^(n_.*ArcCsch[u_]), x_Symbol] :=
  Int[x^m*(1/u+Sqrt[1+1/u^2])^n,x] /;
RationalQ[m] && IntegerQ[n] && PolynomialQ[u,x]
(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Code:: *)
Int[x_*(A_+B_.*Sinh[c_.+d_.*x_])/(a_+b_.*Sinh[c_.+d_.*x_])^2,x_Symbol] :=
  B*x*Cosh[c+d*x]/(a*d*(a+b*Sinh[c+d*x])) -
  Dist[B/(a*d),Int[Cosh[c+d*x]/(a+b*Sinh[c+d*x]),x]] /;
FreeQ[{a,b,c,d,A,B},x] && ZeroQ[a*A+b*B]


(* ::Code:: *)
Int[x_*(A_+B_.*Cosh[c_.+d_.*x_])/(a_+b_.*Cosh[c_.+d_.*x_])^2,x_Symbol] :=
  B*x*Sinh[c+d*x]/(a*d*(a+b*Cosh[c+d*x])) -
  Dist[B/(a*d),Int[Sinh[c+d*x]/(a+b*Cosh[c+d*x]),x]] /;
FreeQ[{a,b,c,d,A,B},x] && ZeroQ[a*A-b*B]


(* ::Code:: *)
Int[Sinh[a_.+b_.*x_]*Tanh[a_.+b_.*x_],x_Symbol] :=
  Sinh[a+b*x]/b - Int[Sech[a+b*x],x] /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[Cosh[a_.+b_.*x_]*Coth[a_.+b_.*x_],x_Symbol] :=
  Cosh[a+b*x]/b + Int[Csch[a+b*x],x] /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[Sinh[a_.+b_.*x_]^m_*Tanh[a_.+b_.*x_]^n_,x_Symbol]:=
  Sinh[a+b*x]^m*Tanh[a+b*x]^(n-1)/(b*m) /;
FreeQ[{a,b,m,n},x] && ZeroQ[m+n-1]


(* ::Code:: *)
Int[Cosh[a_.+b_.*x_]^m_*Coth[a_.+b_.*x_]^n_,x_Symbol] :=
  Cosh[a+b*x]^m*Coth[a+b*x]^(n-1)/(b*m) /;
FreeQ[{a,b,m,n},x] && ZeroQ[m+n-1]


(* ::Code:: *)
Int[Sinh[a_.+b_.*x_]^m_.*Tanh[a_.+b_.*x_]^n_.,x_Symbol] :=
  Dist[1/b,Subst[Int[Regularize[(-1+x^2)^((m+n-1)/2)/x^n,x],x],x,Cosh[a+b*x]]] /;
FreeQ[{a,b},x] && IntegersQ[m,n,(m+n-1)/2]


(* ::Code:: *)
Int[Cosh[a_.+b_.*x_]^m_.*Coth[a_.+b_.*x_]^n_.,x_Symbol] :=
  Dist[1/b,Subst[Int[Regularize[(1+x^2)^((m+n-1)/2)/x^n,x],x],x,Sinh[a+b*x]]] /;
FreeQ[{a,b},x] && IntegersQ[m,n,(m+n-1)/2]


(* ::Code:: *)
Int[Sinh[a_.+b_.*x_]^m_*Tanh[a_.+b_.*x_]^n_,x_Symbol] :=
  Sinh[a+b*x]^m*Tanh[a+b*x]^(n+1)/(b*m) - 
  Dist[(n+1)/m,Int[Sinh[a+b*x]^(m-2)*Tanh[a+b*x]^(n+2),x]] /;
FreeQ[{a,b},x] && RationalQ[{m,n}] && m>1 && n<-1


(* ::Code:: *)
Int[Cosh[a_.+b_.*x_]^m_*Coth[a_.+b_.*x_]^n_,x_Symbol] :=
  Cosh[a+b*x]^m*Coth[a+b*x]^(n+1)/(b*m) + 
  Dist[(n+1)/m,Int[Cosh[a+b*x]^(m-2)*Coth[a+b*x]^(n+2),x]] /;
FreeQ[{a,b},x] && RationalQ[{m,n}] && m>1 && n<-1


(* ::Code:: *)
Int[Sinh[a_.+b_.*x_]^m_*Tanh[a_.+b_.*x_]^n_,x_Symbol] :=
  Sinh[a+b*x]^(m+2)*Tanh[a+b*x]^(n-1)/(b*(n-1)) - 
  Dist[(m+2)/(n-1),Int[Sinh[a+b*x]^(m+2)*Tanh[a+b*x]^(n-2),x]] /;
FreeQ[{a,b},x] && RationalQ[{m,n}] && m<-1 && n>1


(* ::Code:: *)
Int[Cosh[a_.+b_.*x_]^m_*Coth[a_.+b_.*x_]^n_,x_Symbol] :=
  -Cosh[a+b*x]^(m+2)*Coth[a+b*x]^(n-1)/(b*(n-1)) + 
  Dist[(m+2)/(n-1),Int[Cosh[a+b*x]^(m+2)*Coth[a+b*x]^(n-2),x]] /;
FreeQ[{a,b},x] && RationalQ[{m,n}] && m<-1 && n>1


(* ::Code:: *)
Int[Sinh[a_.+b_.*x_]^m_*Tanh[a_.+b_.*x_]^n_.,x_Symbol]:=
  Sinh[a+b*x]^m*Tanh[a+b*x]^(n-1)/(b*m) - 
  Dist[(m+n-1)/m,Int[Sinh[a+b*x]^(m-2)*Tanh[a+b*x]^n,x]] /;
FreeQ[{a,b,n},x] && RationalQ[m] && m>1


(* ::Code:: *)
Int[Cosh[a_.+b_.*x_]^m_*Coth[a_.+b_.*x_]^n_.,x_Symbol] :=
  Cosh[a+b*x]^m*Coth[a+b*x]^(n-1)/(b*m) + 
  Dist[(m+n-1)/m,Int[Cosh[a+b*x]^(m-2)*Coth[a+b*x]^n,x]] /;
FreeQ[{a,b,n},x] && RationalQ[m] && m>1


(* ::Code:: *)
Int[Sinh[a_.+b_.*x_]^m_.*Tanh[a_.+b_.*x_]^n_,x_Symbol] :=
  -Sinh[a+b*x]^m*Tanh[a+b*x]^(n-1)/(b*(n-1)) + 
  Dist[(m+n-1)/(n-1),Int[Sinh[a+b*x]^m*Tanh[a+b*x]^(n-2),x]] /;
FreeQ[{a,b,m},x] && RationalQ[n] && n>1


(* ::Code:: *)
Int[Cosh[a_.+b_.*x_]^m_.*Coth[a_.+b_.*x_]^n_,x_Symbol] :=
  -Cosh[a+b*x]^m*Coth[a+b*x]^(n-1)/(b*(n-1)) + 
  Dist[(m+n-1)/(n-1),Int[Cosh[a+b*x]^m*Coth[a+b*x]^(n-2),x]] /;
FreeQ[{a,b,m},x] && RationalQ[n] && n>1


(* ::Code:: *)
Int[Sinh[a_.+b_.*x_]^m_*Tanh[a_.+b_.*x_]^n_.,x_Symbol]:=
  Sinh[a+b*x]^(m+2)*Tanh[a+b*x]^(n-1)/(b*(m+n+1)) - 
  Dist[(m+2)/(m+n+1),Int[Sinh[a+b*x]^(m+2)*Tanh[a+b*x]^n,x]] /;
FreeQ[{a,b,n},x] && RationalQ[m] && m<-1 && NonzeroQ[m+n+1]


(* ::Code:: *)
Int[Cosh[a_.+b_.*x_]^m_*Coth[a_.+b_.*x_]^n_.,x_Symbol] :=
  -Cosh[a+b*x]^(m+2)*Coth[a+b*x]^(n-1)/(b*(m+n+1)) + 
  Dist[(m+2)/(m+n+1),Int[Cosh[a+b*x]^(m+2)*Coth[a+b*x]^n,x]] /;
FreeQ[{a,b,n},x] && RationalQ[m] && m<-1 && NonzeroQ[m+n+1]


(* ::Code:: *)
Int[Sinh[a_.+b_.*x_]^m_.*Tanh[a_.+b_.*x_]^n_,x_Symbol]:=
  Sinh[a+b*x]^m*Tanh[a+b*x]^(n+1)/(b*(m+n+1)) +
  Dist[(n+1)/(m+n+1),Int[Sinh[a+b*x]^m*Tanh[a+b*x]^(n+2),x]] /;
FreeQ[{a,b,m},x] && RationalQ[n] && n<-1 && NonzeroQ[m+n+1]


(* ::Code:: *)
Int[Cosh[a_.+b_.*x_]^m_.*Coth[a_.+b_.*x_]^n_,x_Symbol] :=
  Cosh[a+b*x]^m*Coth[a+b*x]^(n+1)/(b*(m+n+1)) +
  Dist[(n+1)/(m+n+1),Int[Cosh[a+b*x]^m*Coth[a+b*x]^(n+2),x]] /;
FreeQ[{a,b,m},x] && RationalQ[n] && n<-1 && NonzeroQ[m+n+1]


(* ::Code:: *)
Int[u_.*Sinh[v_]*Cosh[w_],x_Symbol] :=
  Dist[1/2,Int[u*Regularize[Sinh[v+w],x],x]] + 
  Dist[1/2,Int[u*Regularize[Sinh[v-w],x],x]] /;
(PolynomialQ[v,x] && PolynomialQ[w,x] || IndependentQ[Cancel[v/w],x]) && NonzeroQ[v+w] && NonzeroQ[v-w]


(* ::Code:: *)
Int[u_.*Sinh[v_]*Sinh[w_],x_Symbol] :=
  Dist[1/2,Int[u*Regularize[Cosh[v+w],x],x]] - 
  Dist[1/2,Int[u*Regularize[Cosh[v-w],x],x]] /;
(PolynomialQ[v,x] && PolynomialQ[w,x] || IndependentQ[Cancel[v/w],x]) && NonzeroQ[v+w] && NonzeroQ[v-w]


(* ::Code:: *)
Int[u_.*Cosh[v_]*Cosh[w_],x_Symbol] :=
  Dist[1/2,Int[u*Regularize[Cosh[v-w],x],x]] + 
  Dist[1/2,Int[u*Regularize[Cosh[v+w],x],x]] /;
(PolynomialQ[v,x] && PolynomialQ[w,x] || IndependentQ[Cancel[v/w],x]) && NonzeroQ[v+w] && NonzeroQ[v-w]


(* ::Code:: *)
Int[u_.*Sinh[v_]*Tanh[w_]^n_.,x_Symbol] :=
  Int[u*Cosh[v]*Tanh[w]^(n-1),x] - Cosh[v-w]*Int[u*Sech[w]*Tanh[w]^(n-1),x] /;
RationalQ[n] && n>0 && FreeQ[v-w,x] && NonzeroQ[v-w]


(* ::Code:: *)
Int[u_.*Cosh[v_]*Coth[w_]^n_.,x_Symbol] :=
  Int[u*Sinh[v]*Coth[w]^(n-1),x] + Cosh[v-w]*Int[u*Csch[w]*Coth[w]^(n-1),x] /;
RationalQ[n] && n>0 && FreeQ[v-w,x] && NonzeroQ[v-w]


(* ::Code:: *)
Int[u_.*Sinh[v_]*Coth[w_]^n_.,x_Symbol] :=
  Int[u*Cosh[v]*Coth[w]^(n-1),x] + Sinh[v-w]*Int[u*Csch[w]*Coth[w]^(n-1),x] /;
RationalQ[n] && n>0 && FreeQ[v-w,x] && NonzeroQ[v-w]


(* ::Code:: *)
Int[u_.*Cosh[v_]*Tanh[w_]^n_.,x_Symbol] :=
  Int[u*Sinh[v]*Tanh[w]^(n-1),x] - Sinh[v-w]*Int[u*Sech[w]*Tanh[w]^(n-1),x] /;
RationalQ[n] && n>0 && FreeQ[v-w,x] && NonzeroQ[v-w]


(* ::Code:: *)
Int[u_.*Sinh[v_]*Sech[w_]^n_.,x_Symbol] :=
  Cosh[v-w]*Int[u*Tanh[w]*Sech[w]^(n-1),x] + Sinh[v-w]*Int[u*Sech[w]^(n-1),x] /;
RationalQ[n] && n>0 && FreeQ[v-w,x] && NonzeroQ[v-w]


(* ::Code:: *)
Int[u_.*Cosh[v_]*Csch[w_]^n_.,x_Symbol] :=
  Cosh[v-w]*Int[u*Coth[w]*Csch[w]^(n-1),x] + Sinh[v-w]*Int[u*Csch[w]^(n-1),x] /;
RationalQ[n] && n>0 && FreeQ[v-w,x] && NonzeroQ[v-w]


(* ::Code:: *)
Int[u_.*Sinh[v_]*Csch[w_]^n_.,x_Symbol] :=
  Sinh[v-w]*Int[u*Coth[w]*Csch[w]^(n-1),x] + Cosh[v-w]*Int[u*Csch[w]^(n-1),x] /;
RationalQ[n] && n>0 && FreeQ[v-w,x] && NonzeroQ[v-w]


(* ::Code:: *)
Int[u_.*Cosh[v_]*Sech[w_]^n_.,x_Symbol] :=
  Sinh[v-w]*Int[u*Tanh[w]*Sech[w]^(n-1),x] + Cosh[v-w]*Int[u*Sech[w]^(n-1),x] /;
RationalQ[n] && n>0 && FreeQ[v-w,x] && NonzeroQ[v-w]


(* ::Code:: *)
Int[x_^m_.*Sinh[a_.+b_.*x_^n_.]^p_.*Cosh[a_.+b_.*x_^n_.],x_Symbol] :=
  x^(m-n+1)*Sinh[a+b*x^n]^(p+1)/(b*n*(p+1)) -
  Dist[(m-n+1)/(b*n*(p+1)),Int[x^(m-n)*Sinh[a+b*x^n]^(p+1),x]] /;
FreeQ[{a,b},x] && IntegersQ[m,n,p] && p!=-1 && 0<n<=m


(* ::Code:: *)
Int[x_^m_.*Cosh[a_.+b_.*x_^n_.]^p_.*Sinh[a_.+b_.*x_^n_.],x_Symbol] :=
  x^(m-n+1)*Cosh[a+b*x^n]^(p+1)/(b*n*(p+1)) -
  Dist[(m-n+1)/(b*n*(p+1)),Int[x^(m-n)*Cosh[a+b*x^n]^(p+1),x]] /;
FreeQ[{a,b},x] && IntegersQ[m,n,p] && p!=-1 && 0<n<=m


(* ::Code:: *)
Int[Sinh[a_.+b_.*x_]^m_.*Cosh[a_.+b_.*x_]^n_,x_Symbol] :=
  Sinh[a+b*x]^(m+1)*Cosh[a+b*x]^(n+1)/(b*(m+1)) /;
FreeQ[{a,b,m,n},x] && ZeroQ[m+n+2] && NonzeroQ[m+1]


(* ::Code:: *)
Int[Sinh[a_.+b_.*x_]^m_*Cosh[a_.+b_.*x_]^n_,x_Symbol] :=
  Dist[1/b,Subst[Int[Regularize[x^m*(1+x^2)^((n-1)/2),x],x],x,Sinh[a+b*x]]] /;
FreeQ[{a,b,m},x] && OddQ[n] && Not[OddQ[m] && 0<m<n]


(* ::Code:: *)
Int[Sinh[a_.+b_.*x_]^m_*Cosh[a_.+b_.*x_]^n_,x_Symbol] :=
  Dist[1/b,Subst[Int[Regularize[x^n*(-1+x^2)^((m-1)/2),x],x],x,Cosh[a+b*x]]] /;
FreeQ[{a,b,n},x] && OddQ[m] && Not[OddQ[n] && 0<n<=m]


(* ::Code:: *)
Int[Sinh[a_.+b_.*x_]^m_*Cosh[a_.+b_.*x_]^n_,x_Symbol] :=
  Sinh[a+b*x]^(m-1)*Cosh[a+b*x]^(n+1)/(b*(n+1)) - 
  Dist[(m-1)/(n+1),Int[Sinh[a+b*x]^(m-2)*Cosh[a+b*x]^(n+2),x]] /;
FreeQ[{a,b},x] && RationalQ[{m,n}] && m>1 && n<-1


(* ::Code:: *)
Int[Sinh[a_.+b_.*x_]^m_*Cosh[a_.+b_.*x_]^n_,x_Symbol] :=
  Sinh[a+b*x]^(m+1)*Cosh[a+b*x]^(n-1)/(b*(m+1)) - 
  Dist[(n-1)/(m+1),Int[Sinh[a+b*x]^(m+2)*Cosh[a+b*x]^(n-2),x]] /;
FreeQ[{a,b},x] && RationalQ[{m,n}] && m<-1 && n>1


(* ::Code:: *)
Int[Sinh[a_.+b_.*x_]^m_*Cosh[a_.+b_.*x_]^n_,x_Symbol] :=
  Sinh[a+b*x]^(m-1)*Cosh[a+b*x]^(n+1)/(b*(m+n)) -
  Dist[(m-1)/(m+n),Int[Sinh[a+b*x]^(m-2)*Cosh[a+b*x]^n,x]] /;
FreeQ[{a,b,n},x] && RationalQ[m] && m>1 && NonzeroQ[m+n]


(* ::Code:: *)
Int[Sinh[a_.+b_.*x_]^m_*Cosh[a_.+b_.*x_]^n_,x_Symbol] :=
  Sinh[a+b*x]^(m+1)*Cosh[a+b*x]^(n-1)/(b*(m+n)) +
  Dist[(n-1)/(m+n),Int[Sinh[a+b*x]^m*Cosh[a+b*x]^(n-2),x]] /;
FreeQ[{a,b,m},x] && RationalQ[n] && n>1 && NonzeroQ[m+n]


(* ::Code:: *)
Int[Sinh[a_.+b_.*x_]^m_*Cosh[a_.+b_.*x_]^n_,x_Symbol] :=
  Sinh[a+b*x]^(m+1)*Cosh[a+b*x]^(n+1)/(b*(m+1)) - 
  Dist[(m+n+2)/(m+1),Int[Sinh[a+b*x]^(m+2)*Cosh[a+b*x]^n,x]] /;
FreeQ[{a,b,n},x] && RationalQ[m] && m<-1 && NonzeroQ[m+n+2]


(* ::Code:: *)
Int[Sinh[a_.+b_.*x_]^m_*Cosh[a_.+b_.*x_]^n_,x_Symbol] :=
  -Sinh[a+b*x]^(m+1)*Cosh[a+b*x]^(n+1)/(b*(n+1)) +
  Dist[(m+n+2)/(n+1),Int[Sinh[a+b*x]^m*Cosh[a+b*x]^(n+2),x]] /;
FreeQ[{a,b,m},x] && RationalQ[n] && n<-1 && NonzeroQ[m+n+2]


(* ::Code:: *)
Int[Sinh[a_.+b_.*x_]^m_*Cosh[a_.+b_.*x_]^n_,x_Symbol] :=
  Dist[1/(b*m),Subst[Int[x^(1/m)/(1-x^(2/m)),x],x,Sinh[a+b*x]^m/Cosh[a+b*x]^m]] /;
FreeQ[{a,b},x] && ZeroQ[m+n] && IntegerQ[1/m] && 1/m>1


(* ::Code:: *)
Int[Sinh[a_.+b_.*x_]^m_*Cosh[a_.+b_.*x_]^n_,x_Symbol] :=
  Dist[1/(b*n),Subst[Int[x^(1/n)/(1-x^(2/n)),x],x,Cosh[a+b*x]^n/Sinh[a+b*x]^n]] /;
FreeQ[{a,b},x] && ZeroQ[m+n] && IntegerQ[1/n] && 1/n>1


(* ::Code:: *)
Int[x_^m_./(a_.+b_.*Cosh[d_.+e_.*x_]^2+c_.*Sinh[d_.+e_.*x_]^2),x_Symbol] :=
  Dist[2,Int[x^m/(2*a+b-c+(b+c)*Cosh[2*d+2*e*x]),x]] /;
FreeQ[{a,b,c,d,e},x] && IntegerQ[m] && m>0 && NonzeroQ[a+b] && NonzeroQ[a+c]


(* ::Code:: *)
Int[x_^m_./(a_+b_.*Sinh[c_.+d_.*x_]*Cosh[c_.+d_.*x_]),x_Symbol] :=
  Int[x^m/(a+b*Sinh[2*c+2*d*x]/2),x] /;
FreeQ[{a,b,c,d},x] && IntegerQ[m] && m>0


(* ::Code:: *)
Int[(a_+b_.*Sinh[c_.+d_.*x_]*Cosh[c_.+d_.*x_])^n_,x_Symbol] :=
  Int[(a+b*Sinh[2*c+2*d*x]/2)^n,x] /;
FreeQ[{a,b,c,d},x] && HalfIntegerQ[n]


(* ::Code:: *)
Int[Sinh[a_.+b_.*x_^n_]^p_.*Cosh[a_.+b_.*x_^n_]^p_.,x_Symbol] :=
  Dist[1/2,Int[Sinh[2*a+2*b*x^n]^p,x]] /;
FreeQ[{a,b},x] && IntegersQ[n,p]


(* ::Code:: *)
Int[(a_.*Csch[c_.+d_.*x_]+b_.*Sinh[c_.+d_.*x_])^n_,x_Symbol] :=
  Int[(a*Cosh[c+d*x]*Coth[c+d*x])^n,x] /;
FreeQ[{a,b,c,d,n},x] && ZeroQ[a-b]


(* ::Code:: *)
Int[(a_.*Sech[c_.+d_.*x_]+b_.*Cosh[c_.+d_.*x_])^n_,x_Symbol] :=
  Int[(-a*Sinh[c+d*x]*Tanh[c+d*x])^n,x] /;
FreeQ[{a,b,c,d,n},x] && ZeroQ[a+b]


(* ::Code:: *)
Int[Sech[v_]^m_.*(a_+b_.*Tanh[v_])^n_., x_Symbol] :=
  Int[(a*Cosh[v]+b*Sinh[v])^n,x] /;
FreeQ[{a,b},x] && IntegersQ[m,n] && m+n==0 && OddQ[m]


(* ::Code:: *)
Int[Csch[v_]^m_.*(a_+b_.*Coth[v_])^n_., x_Symbol] :=
  Int[(b*Cosh[v]+a*Sinh[v])^n,x] /;
FreeQ[{a,b},x] && IntegersQ[m,n] && m+n==0 && OddQ[m]


(* ::Code:: *)
Int[x_^m_.*Csch[a_.+b_.*x_]^n_.*Sech[a_.+b_.*x_]^n_., x_Symbol] :=
  Dist[2^n,Int[x^m*Csch[2*a+2*b*x]^n,x]] /;
FreeQ[{a,b},x] && RationalQ[m] && IntegerQ[n]


(* ::Code:: *)
Int[x_^m_.*Csch[a_.+b_.*x_]^n_.*Sech[a_.+b_.*x_]^p_., x_Symbol] :=
  Module[{u=Block[{ShowSteps=False,StepCounter=Null}, Int[Csch[a+b*x]^n*Sech[a+b*x]^p,x]]},
  x^m*u - Dist[m,Int[x^(m-1)*u,x]]] /;
FreeQ[{a,b},x] && RationalQ[m] && IntegersQ[n,p] && m>0 && n!=p


(* ::Code:: *)
Int[(a_.*Tanh[v_]+b_.*Sech[v_])^n_,x_Symbol] :=
  Dist[a^n,Int[Tanh[v/2-Pi/4*a/b]^n,x]] /;
FreeQ[{a,b},x] && ZeroQ[a^2+b^2] && EvenQ[n]


(* ::Code:: *)
Int[(a_.*Coth[v_]+b_.*Csch[v_])^n_,x_Symbol] :=
  Dist[a^n,Int[Coth[v/2+Pi*I/4*(a-b)/b]^n,x]] /;
FreeQ[{a,b},x] && ZeroQ[a^2-b^2] && EvenQ[n]


(* ::Code:: *)
Int[u_.*(a_.*Sech[v_]^m_.+b_.*Tanh[v_]^m_.)^n_.,x_Symbol] :=
  Int[u*(a+b*Sinh[v]^m)^n/Cosh[v]^(m*n),x] /;
FreeQ[{a,b},x] && IntegersQ[m,n] && (OddQ[m*n] || m*n<0) && Not[m==2 && ZeroQ[a-b]]


(* ::Code:: *)
Int[u_.*(a_.*Csch[v_]^m_.+b_.*Coth[v_]^m_.)^n_.,x_Symbol] :=
  Int[u*(a+b*Cosh[v]^m)^n/Sinh[v]^(m*n),x] /;
FreeQ[{a,b},x] && IntegersQ[m,n] && (OddQ[m*n] || m*n<0) && Not[m==2 && ZeroQ[a+b]]



(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Code:: *)
Int[u_*Cosh[c_.*(a_.+b_.*x_)],x_Symbol] :=
  Dist[1/(b*c),Subst[Int[Regularize[SubstFor[Sinh[c*(a+b*x)],u,x],x],x],x,Sinh[c*(a+b*x)]]] /;
FreeQ[{a,b,c},x] && FunctionOfQ[Sinh[c*(a+b*x)],u,x,True]


(* ::Code:: *)
Int[u_*Coth[c_.*(a_.+b_.*x_)],x_Symbol] :=
  Dist[1/(b*c),Subst[Int[Regularize[SubstFor[Sinh[c*(a+b*x)],u,x]/x,x],x],x,Sinh[c*(a+b*x)]]] /;
FreeQ[{a,b,c},x] && FunctionOfQ[Sinh[c*(a+b*x)],u,x,True]


(* ::Code:: *)
Int[u_*Sinh[c_.*(a_.+b_.*x_)],x_Symbol] :=
  Dist[1/(b*c),Subst[Int[Regularize[SubstFor[Cosh[c*(a+b*x)],u,x],x],x],x,Cosh[c*(a+b*x)]]] /;
FreeQ[{a,b,c},x] && FunctionOfQ[Cosh[c*(a+b*x)],u,x,True]


(* ::Code:: *)
Int[u_*Tanh[c_.*(a_.+b_.*x_)],x_Symbol] :=
  Dist[1/(b*c),Subst[Int[Regularize[SubstFor[Cosh[c*(a+b*x)],u,x]/x,x],x],x,Cosh[c*(a+b*x)]]] /;
FreeQ[{a,b,c},x] && FunctionOfQ[Cosh[c*(a+b*x)],u,x,True]


(* ::Code:: *)
Int[u_*Csch[c_.*(a_.+b_.*x_)]^2,x_Symbol] :=
  -Dist[1/(b*c),Subst[Int[Regularize[SubstFor[Coth[c*(a+b*x)],u,x],x],x],x,Coth[c*(a+b*x)]]] /;
FreeQ[{a,b,c},x] && FunctionOfQ[Coth[c*(a+b*x)],u,x,True] && NonsumQ[u]


(* ::Code:: *)
Int[u_*Tanh[c_.*(a_.+b_.*x_)]^n_.,x_Symbol] :=
  Dist[1/(b*c),Subst[Int[Regularize[SubstFor[Coth[c*(a+b*x)],u,x]/(x^n*(1-x^2)),x],x],x,Coth[c*(a+b*x)]]] /;
FreeQ[{a,b,c},x] && IntegerQ[n] && FunctionOfQ[Coth[c*(a+b*x)],u,x,True] && TryPureTanhSubst[u*Tanh[c*(a+b*x)]^n,x]


(* ::Code:: *)
If[ShowSteps,

Int[u_,x_Symbol] :=
  Module[{v=FunctionOfHyperbolic[u,x]},
  ShowStep["","Int[f[Coth[a+b*x]],x]","Subst[Int[f[x]/(1-x^2),x],x,Coth[a+b*x]]/b",Hold[
  Dist[1/Coefficient[v,x,1],Subst[Int[Regularize[SubstFor[Coth[v],u,x]/(1-x^2),x],x],x,Coth[v]]]]] /;
 NotFalseQ[v] && FunctionOfQ[Coth[v],u,x,True] && TryPureTanhSubst[u,x]] /;
SimplifyFlag,

Int[u_,x_Symbol] :=
  Module[{v=FunctionOfHyperbolic[u,x]},
  Dist[1/Coefficient[v,x,1],Subst[Int[Regularize[SubstFor[Coth[v],u,x]/(1-x^2),x],x],x,Coth[v]]] /;
 NotFalseQ[v] && FunctionOfQ[Coth[v],u,x,True] && TryPureTanhSubst[u,x]]]


(* ::Code:: *)
Int[u_*Sech[c_.*(a_.+b_.*x_)]^2,x_Symbol] :=
  Dist[1/(b*c),Subst[Int[Regularize[SubstFor[Tanh[c*(a+b*x)],u,x],x],x],x,Tanh[c*(a+b*x)]]] /;
FreeQ[{a,b,c},x] && FunctionOfQ[Tanh[c*(a+b*x)],u,x,True] && NonsumQ[u]


(* ::Code:: *)
Int[u_*Coth[c_.*(a_.+b_.*x_)]^n_.,x_Symbol] :=
  Dist[1/(b*c),Subst[Int[Regularize[SubstFor[Tanh[c*(a+b*x)],u,x]/(x^n*(1-x^2)),x],x],x,Tanh[c*(a+b*x)]]] /;
FreeQ[{a,b,c},x] && IntegerQ[n] && FunctionOfQ[Tanh[c*(a+b*x)],u,x,True] && TryPureTanhSubst[u*Coth[c*(a+b*x)]^n,x]


(* ::Code:: *)
If[ShowSteps,

Int[u_,x_Symbol] :=
  Module[{v=FunctionOfHyperbolic[u,x]},
  ShowStep["","Int[f[Tanh[a+b*x]],x]","Subst[Int[f[x]/(1-x^2),x],x,Tanh[a+b*x]]/b",Hold[
  Dist[1/Coefficient[v,x,1],Subst[Int[Regularize[SubstFor[Tanh[v],u,x]/(1-x^2),x],x],x,Tanh[v]]]]] /;
 NotFalseQ[v] && FunctionOfQ[Tanh[v],u,x,True] && TryPureTanhSubst[u,x]] /;
SimplifyFlag,

Int[u_,x_Symbol] :=
  Module[{v=FunctionOfHyperbolic[u,x]},
  Dist[1/Coefficient[v,x,1],Subst[Int[Regularize[SubstFor[Tanh[v],u,x]/(1-x^2),x],x],x,Tanh[v]]] /;
 NotFalseQ[v] && FunctionOfQ[Tanh[v],u,x,True] && TryPureTanhSubst[u,x]]]


(* ::Code:: *)
Int[u_,x_Symbol] :=
  Module[{v=TrigSimplify[u]},
  Int[v,x] /;
 v=!=u] /;
Not[MatchQ[u,w_.*(a_.+b_.*v_)^m_.*(c_.+d_.*v_)^n_. /; 
		FreeQ[{a,b,c,d},x] && IntegersQ[m,n] && m<0 && n<0]]



(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Code:: *)
Int[Sech[a_.+b_.*x_],x_Symbol] :=
(* -ArcCot[Sinh[a+b*x]]/b *)
  ArcTan[Sinh[a+b*x]]/b /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[Csch[a_.+b_.*x_],x_Symbol] :=
(* -ArcTanh[Cosh[a+b*x]]/b *)
  -ArcCoth[Cosh[a+b*x]]/b /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[Sech[a_.+b_.*x_]^2,x_Symbol] :=
  Tanh[a+b*x]/b /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[Csch[a_.+b_.*x_]^2,x_Symbol] :=
  -Coth[a+b*x]/b /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[Sech[a_.+b_.*x_]^n_,x_Symbol] :=
  Dist[1/b,Subst[Int[Regularize[(1-x^2)^((n-2)/2),x],x],x,Tanh[a+b*x]]] /;
FreeQ[{a,b},x] && EvenQ[n] && n>1


(* ::Code:: *)
Int[Csch[a_.+b_.*x_]^n_,x_Symbol] :=
  Dist[-1/b,Subst[Int[Regularize[(-1+x^2)^((n-2)/2),x],x],x,Coth[a+b*x]]] /;
FreeQ[{a,b},x] && EvenQ[n] && n>1


(* ::Code:: *)
Int[Sech[a_.+b_.*x_]^n_,x_Symbol] :=
  Sinh[a+b*x]*Sech[a+b*x]^(n-1)/(b*(n-1)) + 
  Dist[(n-2)/(n-1),Int[Sech[a+b*x]^(n-2),x]] /;
FreeQ[{a,b},x] && Not[EvenQ[n]] && RationalQ[n] && n>1


(* ::Code:: *)
Int[Csch[a_.+b_.*x_]^n_,x_Symbol] :=
  -Cosh[a+b*x]*Csch[a+b*x]^(n-1)/(b*(n-1)) - 
  Dist[(n-2)/(n-1),Int[Csch[a+b*x]^(n-2),x]] /;
FreeQ[{a,b},x] && Not[EvenQ[n]] && RationalQ[n] && n>1


(* ::Code:: *)
Int[1/Sqrt[Sech[a_.+b_.*x_]],x_Symbol] :=
  Sqrt[Cosh[a+b*x]]*Sqrt[Sech[a+b*x]]*Int[Sqrt[Cosh[a+b*x]],x] /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[(c_.*Sech[a_.+b_.*x_])^n_,x_Symbol] :=
  (c*Sech[a+b*x])^n*Cosh[a+b*x]^n*Int[1/Cosh[a+b*x]^n,x] /;
FreeQ[{a,b,c},x] && RationalQ[n] && -1<n<1


(* ::Code:: *)
Int[1/Sqrt[Csch[a_.+b_.*x_]],x_Symbol] :=
  Sqrt[Csch[a+b*x]]*Sqrt[Sinh[a+b*x]]*Int[Sqrt[Sinh[a+b*x]],x] /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[(c_.*Csch[a_.+b_.*x_])^n_,x_Symbol] :=
  (c*Csch[a+b*x])^n*Sinh[a+b*x]^n*Int[1/Sinh[a+b*x]^n,x] /;
FreeQ[{a,b,c},x] && RationalQ[n] && -1<n<1


(* ::Code:: *)
Int[(c_.*Sech[a_.+b_.*x_])^n_,x_Symbol] :=
  c*Sinh[a+b*x]*(c*Sech[a+b*x])^(n-1)/(b*(n-1)) + 
  Dist[c^2*(n-2)/(n-1),Int[(c*Sech[a+b*x])^(n-2),x]] /;
FreeQ[{a,b,c},x] && FractionQ[n] && n>1


(* ::Code:: *)
Int[(c_.*Csch[a_.+b_.*x_])^n_,x_Symbol] :=
  -c*Cosh[a+b*x]*(c*Csch[a+b*x])^(n-1)/(b*(n-1)) - 
  Dist[c^2*(n-2)/(n-1),Int[(c*Csch[a+b*x])^(n-2),x]] /;
FreeQ[{a,b,c},x] && FractionQ[n] && n>1


(* ::Code:: *)
Int[(c_.*Sech[a_.+b_.*x_])^n_,x_Symbol] :=
  -Sinh[a+b*x]*(c*Sech[a+b*x])^(n+1)/(b*c*n) + 
  Dist[(n+1)/(c^2*n),Int[(c*Sech[a+b*x])^(n+2),x]] /;
FreeQ[{a,b,c},x] && FractionQ[n] && n<-1


(* ::Code:: *)
Int[(c_.*Csch[a_.+b_.*x_])^n_,x_Symbol] :=
  -Cosh[a+b*x]*(c*Csch[a+b*x])^(n+1)/(b*c*n) - 
  Dist[(n+1)/(c^2*n),Int[(c*Csch[a+b*x])^(n+2),x]] /;
FreeQ[{a,b,c},x] && FractionQ[n] && n<-1


(* ::Code:: *)
Int[Sqrt[a_+b_.*Sech[c_.+d_.*x_]],x_Symbol] :=
  2*a*ArcTan[Sqrt[-1+a/b*Sech[c+d*x]]]*Tanh[c+d*x]/
		(d*Sqrt[-1+a/b*Sech[c+d*x]]*Sqrt[a+b*Sech[c+d*x]]) /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2-b^2]


(* ::Code:: *)
Int[Sqrt[a_+b_.*Csch[c_.+d_.*x_]],x_Symbol] :=
  2*a*ArcTan[Sqrt[-1-a/b*Csch[c+d*x]]]*Coth[c+d*x]/
		(d*Sqrt[-1-a/b*Csch[c+d*x]]*Sqrt[a+b*Csch[c+d*x]]) /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2+b^2]


(* ::Code:: *)
Int[1/Sqrt[a_+b_.*Sech[c_.+d_.*x_]],x_Symbol] :=
  -Coth[c+d*x]*Sqrt[-a+b*Sech[c+d*x]]*Sqrt[a+b*Sech[c+d*x]]/(a^(3/2)*d)*
    (Sqrt[2]*ArcTan[Sqrt[2*a]/Sqrt[-a+b*Sech[c+d*x]]]+2*ArcTan[Sqrt[-a+b*Sech[c+d*x]]/Sqrt[a]]) /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2-b^2]


(* ::Code:: *)
Int[1/Sqrt[a_+b_.*Csch[c_.+d_.*x_]],x_Symbol] :=
  -Sqrt[-a+b*Csch[c+d*x]]*Sqrt[a+b*Csch[c+d*x]]*Tanh[c+d*x]/a^(3/2)*
    (Sqrt[2]*ArcTan[Sqrt[2*a]/Sqrt[-a+b*Csch[c+d*x]]]+2*ArcTan[Sqrt[-a+b*Csch[c+d*x]]/Sqrt[a]]) /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2+b^2]


(* ::Code:: *)
Int[x_^m_.*Sech[a_.+b_.*x_],x_Symbol] :=
  2*x^m*ArcTan[E^(a+b*x)]/b -
  Dist[2*m/b,Int[x^(m-1)*ArcTan[E^(a+b*x)],x]] /;
FreeQ[{a,b},x] && IntegerQ[m] && m>0


(* ::Code:: *)
Int[x_^m_.*Csch[a_.+b_.*x_],x_Symbol] :=
  -2*x^m*ArcTanh[E^(a+b x)]/b +
  Dist[2*m/b,Int[x^(m-1)*ArcTanh[E^(a+b x)],x]] /;
FreeQ[{a,b},x] && IntegerQ[m] && m>0


(* ::Code:: *)
Int[x_^m_.*Sech[a_.+b_.*x_]^2,x_Symbol] :=
  x^m*Tanh[a+b*x]/b -
  Dist[m/b,Int[x^(m-1)*Tanh[a+b*x],x]] /;
FreeQ[{a,b},x] && RationalQ[m] && m>0


(* ::Code:: *)
Int[x_^m_.*Csch[a_.+b_.*x_]^2,x_Symbol] :=
  -x^m*Coth[a+b*x]/b +
  Dist[m/b,Int[x^(m-1)*Coth[a+b*x],x]] /;
FreeQ[{a,b},x] && RationalQ[m] && m>0


(* ::Code:: *)
Int[x_*Sech[a_.+b_.*x_]^n_,x_Symbol] :=
  x*Tanh[a+b*x]*Sech[a+b*x]^(n-2)/(b*(n-1)) +
  Sech[a+b*x]^(n-2)/(b^2*(n-1)*(n-2)) +
  Dist[(n-2)/(n-1),Int[x*Sech[a+b*x]^(n-2),x]] /;
FreeQ[{a,b},x] && RationalQ[n] && n>1 && n!=2


(* ::Code:: *)
Int[x_*Csch[a_.+b_.*x_]^n_,x_Symbol] :=
  -x*Coth[a+b*x]*Csch[a+b*x]^(n-2)/(b*(n-1)) -
  Csch[a+b*x]^(n-2)/(b^2*(n-1)*(n-2)) -
  Dist[(n-2)/(n-1),Int[x*Csch[a+b*x]^(n-2),x]] /;
FreeQ[{a,b},x] && RationalQ[n] && n>1 && n!=2


(* ::Code:: *)
Int[x_^m_*Sech[a_.+b_.*x_]^n_,x_Symbol] :=
  x^m*Tanh[a+b*x]*Sech[a+b*x]^(n-2)/(b*(n-1)) +
  m*x^(m-1)*Sech[a+b*x]^(n-2)/(b^2*(n-1)*(n-2)) +
  Dist[(n-2)/(n-1),Int[x^m*Sech[a+b*x]^(n-2),x]] -
  Dist[m*(m-1)/(b^2*(n-1)*(n-2)),Int[x^(m-2)*Sech[a+b*x]^(n-2),x]] /;
FreeQ[{a,b},x] && RationalQ[{m,n}] && m>1 && n>1 && n!=2


(* ::Code:: *)
Int[x_^m_*Csch[a_.+b_.*x_]^n_,x_Symbol] :=
  -x^m*Coth[a+b*x]*Csch[a+b*x]^(n-2)/(b*(n-1)) -
  m*x^(m-1)*Csch[a+b*x]^(n-2)/(b^2*(n-1)*(n-2)) -
  Dist[(n-2)/(n-1),Int[x^m*Csch[a+b*x]^(n-2),x]] +
  Dist[m*(m-1)/(b^2*(n-1)*(n-2)),Int[x^(m-2)*Csch[a+b*x]^(n-2),x]] /;
FreeQ[{a,b},x] && RationalQ[{m,n}] && m>1 && n>1 && n!=2


(* ::Code:: *)
Int[x_*Sech[a_.+b_.*x_]^n_,x_Symbol] :=
  -Sech[a+b*x]^n/(b^2*n^2) -
  x*Sinh[a+b*x]*Sech[a+b*x]^(n+1)/(b*n) +
  Dist[(n+1)/n,Int[x*Sech[a+b*x]^(n+2),x]] /;
FreeQ[{a,b},x] && RationalQ[n] && n<-1


(* ::Code:: *)
Int[x_*Csch[a_.+b_.*x_]^n_,x_Symbol] :=
  -Csch[a+b*x]^n/(b^2*n^2) -
  x*Cosh[a+b*x]*Csch[a+b*x]^(n+1)/(b*n) -
  Dist[(n+1)/n,Int[x*Csch[a+b*x]^(n+2),x]] /;
FreeQ[{a,b},x] && RationalQ[n] && n<-1


(* ::Code:: *)
Int[x_^m_*Sech[a_.+b_.*x_]^n_,x_Symbol] :=
  -m*x^(m-1)*Sech[a+b*x]^n/(b^2*n^2) -
  x^m*Sinh[a+b*x]*Sech[a+b*x]^(n+1)/(b*n) +
  Dist[(n+1)/n,Int[x^m*Sech[a+b*x]^(n+2),x]] +
  Dist[m*(m-1)/(b^2*n^2),Int[x^(m-2)*Sech[a+b*x]^n,x]] /;
FreeQ[{a,b},x] && RationalQ[{m,n}] && m>1 && n<-1


(* ::Code:: *)
Int[x_^m_*Csch[a_.+b_.*x_]^n_,x_Symbol] :=
  -m*x^(m-1)*Csch[a+b*x]^n/(b^2*n^2) -
  x^m*Cosh[a+b*x]*Csch[a+b*x]^(n+1)/(b*n) -
  Dist[(n+1)/n,Int[x^m*Csch[a+b*x]^(n+2),x]] +
  Dist[m*(m-1)/(b^2*n^2),Int[x^(m-2)*Csch[a+b*x]^n,x]] /;
FreeQ[{a,b},x] && RationalQ[{m,n}] && m>1 && n<-1


(* ::Code:: *)
Int[(a_+b_.*Sech[v_]^n_.)^m_,x_Symbol] :=
  Int[(b+a*Cosh[v]^n)^m/Cosh[v]^(m*n),x] /;
FreeQ[{a,b},x] && IntegersQ[m,n] && m<0 && n>0


(* ::Code:: *)
Int[(a_+b_.*Csch[v_]^n_.)^m_,x_Symbol] :=
  Int[(b+a*Sinh[v]^n)^m/Sinh[v]^(m*n),x] /;
FreeQ[{a,b},x] && IntegersQ[m,n] && m<0 && n>0


(* ::Code:: *)
Int[Cosh[v_]^p_.*(a_+b_.*Sech[v_]^n_.)^m_,x_Symbol] :=
  Int[Cosh[v]^(p-m*n)*(b+a*Cosh[v]^n)^m,x] /;
FreeQ[{a,b},x] && IntegersQ[m,n,p] && m<0 && n>0


(* ::Code:: *)
Int[Sinh[v_]^p_.*(a_+b_.*Csch[v_]^n_.)^m_,x_Symbol] :=
  Int[Sinh[v]^(p-m*n)*(b+a*Sinh[v]^n)^m,x] /;
FreeQ[{a,b},x] && IntegersQ[m,n,p] && m<0 && n>0


(* ::Code:: *)
Int[Csch[a_.+b_.*x_]*Sech[a_.+b_.*x_],x_Symbol] :=
  Log[Tanh[a+b*x]]/b /;
FreeQ[{a,b},x] && PosQ[b]


(* ::Code:: *)
Int[Csch[a_.+b_.*x_]^m_*Sech[a_.+b_.*x_]^n_,x_Symbol] :=
  Csch[a+b*x]^(m-1)*Sech[a+b*x]^(n-1)/(b*(n-1)) /;
FreeQ[{a,b,m,n},x] && ZeroQ[m+n-2] && NonzeroQ[n-1] && PosQ[n]


(* ::Code:: *)
Int[Csch[a_.+b_.*x_]^m_.*Sech[a_.+b_.*x_]^n_,x_Symbol] :=
  Dist[1/b,Subst[Int[Regularize[(1-x^2)^((m+n)/2-1)/x^m,x],x],x,Tanh[a+b*x]]] /;
FreeQ[{a,b},x] && IntegersQ[m,n] && EvenQ[m+n] && 0<m<=n


(* ::Code:: *)
Int[Csch[a_.+b_.*x_]^m_*Sech[a_.+b_.*x_]^n_,x_Symbol] :=
  -Csch[a+b*x]^(m+1)*Sech[a+b*x]^(n-1)/(b*(n-1)) -
  Dist[(m+1)/(n-1),Int[Csch[a+b*x]^(m+2)*Sech[a+b*x]^(n-2),x]] /;
FreeQ[{a,b},x] && RationalQ[{m,n}] && m<-1 && n>1


(* ::Code:: *)
Int[Csch[a_.+b_.*x_]^m_.*Sech[a_.+b_.*x_]^n_,x_Symbol] :=
  Csch[a+b*x]^(m-1)*Sech[a+b*x]^(n-1)/(b*(n-1)) +
  Dist[(m+n-2)/(n-1),Int[Csch[a+b*x]^m*Sech[a+b*x]^(n-2),x]] /;
FreeQ[{a,b,m},x] && RationalQ[n] && n>1 && Not[EvenQ[m+n]] && Not[EvenQ[n] && OddQ[m] && m>1]


(* ::Code:: *)
Int[Csch[a_.+b_.*x_]^m_.*Sech[a_.+b_.*x_]^n_,x_Symbol] :=
  -Csch[a+b*x]^(m-1)*Sech[a+b*x]^(n+1)/(b*(m+n)) +
  Dist[(n+1)/(m+n),Int[Csch[a+b*x]^m*Sech[a+b*x]^(n+2),x]] /;
FreeQ[{a,b,m},x] && RationalQ[n] && n<-1 && NonzeroQ[m+n]


(* ::Code:: *)
Int[Csch[a_.+b_.*x_]*Sech[a_.+b_.*x_],x_Symbol] :=
  -Log[Coth[a+b*x]]/b /;
FreeQ[{a,b},x] && NegQ[b]


(* ::Code:: *)
Int[Csch[a_.+b_.*x_]^m_*Sech[a_.+b_.*x_]^n_,x_Symbol] :=
  -Csch[a+b*x]^(m-1)*Sech[a+b*x]^(n-1)/(b*(m-1)) /;
FreeQ[{a,b,m,n},x] && ZeroQ[m+n-2] && NonzeroQ[m-1] && PosQ[m]


(* ::Code:: *)
Int[Csch[a_.+b_.*x_]^m_*Sech[a_.+b_.*x_]^n_.,x_Symbol] :=
  Dist[-1/b,Subst[Int[Regularize[(-1+x^2)^((m+n)/2-1)/x^n,x],x],x,Coth[a+b*x]]] /;
FreeQ[{a,b},x] && IntegersQ[m,n] && EvenQ[m+n] && 0<n<m


(* ::Code:: *)
Int[Csch[a_.+b_.*x_]^m_*Sech[a_.+b_.*x_]^n_,x_Symbol] :=
  -Csch[a+b*x]^(m-1)*Sech[a+b*x]^(n+1)/(b*(m-1)) -
  Dist[(n+1)/(m-1),Int[Csch[a+b*x]^(m-2)*Sech[a+b*x]^(n+2),x]] /;
FreeQ[{a,b},x] && RationalQ[{m,n}] && m>1 && n<-1


(* ::Code:: *)
Int[Csch[a_.+b_.*x_]^m_*Sech[a_.+b_.*x_]^n_.,x_Symbol] :=
  -Csch[a+b*x]^(m-1)*Sech[a+b*x]^(n-1)/(b*(m-1)) -
  Dist[(m+n-2)/(m-1),Int[Csch[a+b*x]^(m-2)*Sech[a+b*x]^n,x]] /;
FreeQ[{a,b,n},x] && RationalQ[m] && m>1 && Not[EvenQ[m+n]] && Not[EvenQ[m] && OddQ[n] && n>1]


(* ::Code:: *)
Int[Csch[a_.+b_.*x_]^m_*Sech[a_.+b_.*x_]^n_.,x_Symbol] :=
  -Csch[a+b*x]^(m+1)*Sech[a+b*x]^(n-1)/(b*(m+n)) -
  Dist[(m+1)/(m+n),Int[Csch[a+b*x]^(m+2)*Sech[a+b*x]^n,x]] /;
FreeQ[{a,b,n},x] && RationalQ[m] && m<-1 && NonzeroQ[m+n]


(* ::Code:: *)
Int[Sech[a_.+b_.*x_]^m_.*Tanh[a_.+b_.*x_]^n_.,x_Symbol] :=
  -Sech[a+b*x]^m/(b*m) /;
FreeQ[{a,b,m},x] && n===1


(* ::Code:: *)
Int[Csch[a_.+b_.*x_]^m_.*Coth[a_.+b_.*x_]^n_.,x_Symbol] :=
  -Csch[a+b*x]^m/(b*m) /;
FreeQ[{a,b,m},x] && n===1


(* ::Code:: *)
Int[Sech[a_.+b_.*x_]^m_*Tanh[a_.+b_.*x_]^n_.,x_Symbol] :=
  Dist[1/b,Subst[Int[Regularize[x^n*(1-x^2)^((m-2)/2),x],x],x,Tanh[a+b*x]]] /;
FreeQ[{a,b,n},x] && EvenQ[m] && m>2 && Not[OddQ[n] && 0<n<m-1]


(* ::Code:: *)
Int[Csch[a_.+b_.*x_]^m_*Coth[a_.+b_.*x_]^n_.,x_Symbol] :=
  Dist[-1/b,Subst[Int[Regularize[x^n*(-1+x^2)^((m-2)/2),x],x],x,Coth[a+b*x]]] /;
FreeQ[{a,b,n},x] && EvenQ[m] && m>2 && Not[OddQ[n] && 0<n<m-1]


(* ::Code:: *)
Int[Sech[a_.+b_.*x_]^m_.*Tanh[a_.+b_.*x_]^n_.,x_Symbol] :=
  Dist[-1/b,Subst[Int[Regularize[x^(m-1)*(1-x^2)^((n-1)/2),x],x],x,Sech[a+b*x]]] /;
FreeQ[{a,b,m},x] && OddQ[n] && Not[EvenQ[m] && 0<m<=n+1]


(* ::Code:: *)
Int[Csch[a_.+b_.*x_]^m_.*Coth[a_.+b_.*x_]^n_.,x_Symbol] :=
  Dist[-1/b,Subst[Int[Regularize[x^(m-1)*(1+x^2)^((n-1)/2),x],x],x,Csch[a+b*x]]] /;
FreeQ[{a,b,m},x] && OddQ[n] && Not[EvenQ[m] && 0<m<=n+1]


(* ::Code:: *)
Int[Sech[a_.+b_.*x_]^m_*Tanh[a_.+b_.*x_]^n_,x_Symbol] :=
  Sech[a+b*x]^(m-2)*Tanh[a+b*x]^(n+1)/(b*(n+1)) +
  Dist[(m-2)/(n+1),Int[Sech[a+b*x]^(m-2)*Tanh[a+b*x]^(n+2),x]] /;
FreeQ[{a,b},x] && RationalQ[{m,n}] && m>1 && n<-1 && Not[EvenQ[m]]


(* ::Code:: *)
Int[Csch[a_.+b_.*x_]^m_.*Coth[a_.+b_.*x_]^n_,x_Symbol] :=
  -Csch[a+b*x]^(m-2)*Coth[a+b*x]^(n+1)/(b*(n+1)) -
  Dist[(m-2)/(n+1),Int[Csch[a+b*x]^(m-2)*Coth[a+b*x]^(n+2),x]] /;
FreeQ[{a,b},x] && RationalQ[{m,n}] && m>1 && n<-1 && Not[EvenQ[m]]


(* ::Code:: *)
Int[Sech[a_.+b_.*x_]^m_*Tanh[a_.+b_.*x_]^n_,x_Symbol] :=
  -Sech[a+b*x]^m*Tanh[a+b*x]^(n-1)/(b*m) +
  Dist[(n-1)/m,Int[Sech[a+b*x]^(m+2)*Tanh[a+b*x]^(n-2),x]] /;
FreeQ[{a,b},x] && RationalQ[{m,n}] && m<-1 && n>1 && Not[EvenQ[m]]


(* ::Code:: *)
Int[Csch[a_.+b_.*x_]^m_*Coth[a_.+b_.*x_]^n_,x_Symbol] :=
  -Csch[a+b*x]^m*Coth[a+b*x]^(n-1)/(b*m) -
  Dist[(n-1)/m,Int[Csch[a+b*x]^(m+2)*Coth[a+b*x]^(n-2),x]] /;
FreeQ[{a,b},x] && RationalQ[{m,n}] && m<-1 && n>1 && Not[EvenQ[m]]


(* ::Code:: *)
Int[Sech[a_.+b_.*x_]^m_*Tanh[a_.+b_.*x_]^n_,x_Symbol] :=
  -Sech[a+b*x]^m*Tanh[a+b*x]^(n+1)/(b*m) /;
FreeQ[{a,b,m,n},x] && ZeroQ[m+n+1]


(* ::Code:: *)
Int[Csch[a_.+b_.*x_]^m_.*Coth[a_.+b_.*x_]^n_,x_Symbol] :=
  -Csch[a+b*x]^m*Coth[a+b*x]^(n+1)/(b*m) /;
FreeQ[{a,b,m,n},x] && ZeroQ[m+n+1]


(* ::Code:: *)
Inth[Sech[a_.+b_.*x_]^m_*Tanh[a_.+b_.*x_]^n_,x_Symbol] :=
  -Sech[a+b*x]^m*Tanh[a+b*x]^(n+1)/(b*m) +
  Dist[(m+n+1)/m,Int[Sech[a+b*x]^(m+2)*Tanh[a+b*x]^n,x]] /;
FreeQ[{a,b,n},x] && RationalQ[m] && m<-1 && Not[EvenQ[m]]


(* ::Code:: *)
Int[Csch[a_.+b_.*x_]^m_*Coth[a_.+b_.*x_]^n_,x_Symbol] :=
  -Csch[a+b*x]^m*Coth[a+b*x]^(n+1)/(b*m) -
  Dist[(m+n+1)/m,Int[Csch[a+b*x]^(m+2)*Coth[a+b*x]^n,x]] /;
FreeQ[{a,b,n},x] && RationalQ[m] && m<-1 && Not[EvenQ[m]]


(* ::Code:: *)
Int[Sech[a_.+b_.*x_]^m_*Tanh[a_.+b_.*x_]^n_,x_Symbol] :=
  Sech[a+b*x]^(m-2)*Tanh[a+b*x]^(n+1)/(b*(m+n-1)) +
  Dist[(m-2)/(m+n-1),Int[Sech[a+b*x]^(m-2)*Tanh[a+b*x]^n,x]] /;
FreeQ[{a,b,n},x] && RationalQ[m] && m>1 && NonzeroQ[m+n-1] && Not[EvenQ[m]] && Not[OddQ[n]]


(* ::Code:: *)
Int[Csch[a_.+b_.*x_]^m_*Coth[a_.+b_.*x_]^n_,x_Symbol] :=
  -Csch[a+b*x]^(m-2)*Coth[a+b*x]^(n+1)/(b*(m+n-1)) -
  Dist[(m-2)/(m+n-1),Int[Csch[a+b*x]^(m-2)*Coth[a+b*x]^n,x]] /;
FreeQ[{a,b,n},x] && RationalQ[m] && m>1 && NonzeroQ[m+n-1] && Not[EvenQ[m]] && Not[OddQ[n]]


(* ::Code:: *)
Int[Sech[a_.+b_.*x_]^m_.*Tanh[a_.+b_.*x_]^n_,x_Symbol] :=
  -Sech[a+b*x]^m*Tanh[a+b*x]^(n-1)/(b*(m+n-1)) +
  Dist[(n-1)/(m+n-1),Int[Sech[a+b*x]^m*Tanh[a+b*x]^(n-2),x]] /;
FreeQ[{a,b,m},x] && RationalQ[n] && n>1 && NonzeroQ[m+n-1] && Not[EvenQ[m]] && Not[OddQ[n]]


(* ::Code:: *)
Int[Csch[a_.+b_.*x_]^m_.*Coth[a_.+b_.*x_]^n_,x_Symbol] :=
  -Csch[a+b*x]^m*Coth[a+b*x]^(n-1)/(b*(m+n-1)) +
  Dist[(n-1)/(m+n-1),Int[Csch[a+b*x]^m*Coth[a+b*x]^(n-2),x]] /;
FreeQ[{a,b,m},x] && RationalQ[n] && n>1 && NonzeroQ[m+n-1] && Not[EvenQ[m]] && Not[OddQ[n]]


(* ::Code:: *)
Int[Sech[a_.+b_.*x_]^m_*Tanh[a_.+b_.*x_]^n_,x_Symbol] :=
  Sech[a+b*x]^m*Tanh[a+b*x]^(n+1)/(b*(n+1)) +
  Dist[(m+n+1)/(n+1),Int[Sech[a+b*x]^m*Tanh[a+b*x]^(n+2),x]] /;
FreeQ[{a,b,m},x] && RationalQ[n] && n<-1 && Not[EvenQ[m]]


(* ::Code:: *)
Int[Csch[a_.+b_.*x_]^m_.*Coth[a_.+b_.*x_]^n_,x_Symbol] :=
  Csch[a+b*x]^m*Coth[a+b*x]^(n+1)/(b*(n+1)) +
  Dist[(m+n+1)/(n+1),Int[Csch[a+b*x]^m*Coth[a+b*x]^(n+2),x]] /;
FreeQ[{a,b,m},x] && RationalQ[n] && n<-1 && Not[EvenQ[m]]


(* ::Code:: *)
Int[x_^m_.*Sech[a_.+b_.*x_^n_.]^p_*Sinh[a_.+b_.*x_^n_.],x_Symbol] :=
  -x^(m-n+1)*Sech[a+b*x^n]^(p-1)/(b*n*(p-1)) +
  Dist[(m-n+1)/(b*n*(p-1)),Int[x^(m-n)*Sech[a+b*x^n]^(p-1),x]] /;
FreeQ[{a,b,p},x] && RationalQ[m] && IntegerQ[n] && m-n>=0 && NonzeroQ[p-1]


(* ::Code:: *)
Int[x_^m_.*Csch[a_.+b_.*x_^n_.]^p_*Cosh[a_.+b_.*x_^n_.],x_Symbol] :=
  -x^(m-n+1)*Csch[a+b*x^n]^(p-1)/(b*n*(p-1)) +
  Dist[(m-n+1)/(b*n*(p-1)),Int[x^(m-n)*Csch[a+b*x^n]^(p-1),x]] /;
FreeQ[{a,b,p},x] && RationalQ[m] && IntegerQ[n] && m-n>=0 && NonzeroQ[p-1]


(* ::Code:: *)
Int[x_^m_.*Sech[a_.+b_.*x_^n_.]^p_.*Tanh[a_.+b_.*x_^n_.]^q_.,x_Symbol] :=
  -x^(m-n+1)*Sech[a+b*x^n]^p/(b*n*p) +
  Dist[(m-n+1)/(b*n*p),Int[x^(m-n)*Sech[a+b*x^n]^p,x]] /;
FreeQ[{a,b,p},x] && RationalQ[m] && IntegerQ[n] && m-n>=0 && q===1


(* ::Code:: *)
Int[x_^m_.*Csch[a_.+b_.*x_^n_.]^p_.*Coth[a_.+b_.*x_^n_.]^q_.,x_Symbol] :=
  -x^(m-n+1)*Csch[a+b*x^n]^p/(b*n*p) +
  Dist[(m-n+1)/(b*n*p),Int[x^(m-n)*Csch[a+b*x^n]^p,x]] /;
FreeQ[{a,b,p},x] && RationalQ[m] && IntegerQ[n] && m-n>=0 && q===1


(* ::Code:: *)
Int[Sech[b_.*Log[c_.*x_^n_.]]^p_.,x_Symbol] :=
  Int[(2/((c*x^n)^b+1/(c*x^n)^b))^p,x] /;
FreeQ[c,x] && RationalQ[{b,n,p}]


(* ::Code:: *)
Int[Csch[b_.*Log[c_.*x_^n_.]]^p_.,x_Symbol] :=
  Int[(2/((c*x^n)^b - 1/(c*x^n)^b))^p,x] /;
FreeQ[c,x] && RationalQ[{b,n,p}]


(* ::Code:: *)
Int[Sech[a_.+b_.*Log[c_.*x_^n_.]]^p_,x_Symbol] :=
  x*Tanh[a+b*Log[c*x^n]]*Sech[a+b*Log[c*x^n]]^(p-2)/(b*n*(p-1)) + 
  x*Sech[a+b*Log[c*x^n]]^(p-2)/(b^2*n^2*(p-1)*(p-2)) /;
FreeQ[{a,b,c,n,p},x] && NonzeroQ[p-1] && ZeroQ[b^2*n^2*(p-2)^2-1]


(* ::Code:: *)
Int[Csch[a_.+b_.*Log[c_.*x_^n_.]]^p_,x_Symbol] :=
  -x*Coth[a+b*Log[c*x^n]]*Csch[a+b*Log[c*x^n]]^(p-2)/(b*n*(p-1)) -
  x*Csch[a+b*Log[c*x^n]]^(p-2)/(b^2*n^2*(p-1)*(p-2)) /;
FreeQ[{a,b,c,n,p},x] && NonzeroQ[p-1] && ZeroQ[b^2*n^2*(p-2)^2-1]


(* ::Code:: *)
Int[Sech[a_.+b_.*Log[c_.*x_^n_.]]^p_,x_Symbol] :=
  x*Tanh[a+b*Log[c*x^n]]*Sech[a+b*Log[c*x^n]]^(p-2)/(b*n*(p-1)) +
  x*Sech[a+b*Log[c*x^n]]^(p-2)/(b^2*n^2*(p-1)*(p-2)) +
  Dist[(b^2*n^2*(p-2)^2-1)/(b^2*n^2*(p-1)*(p-2)),Int[Sech[a+b*Log[c*x^n]]^(p-2),x]] /;
FreeQ[{a,b,c,n},x] && RationalQ[p] && p>1 && p!=2 && NonzeroQ[b^2*n^2*(p-2)^2-1]


(* ::Code:: *)
Int[Csch[a_.+b_.*Log[c_.*x_^n_.]]^p_,x_Symbol] :=
  -x*Coth[a+b*Log[c*x^n]]*Csch[a+b*Log[c*x^n]]^(p-2)/(b*n*(p-1)) -
  x*Csch[a+b*Log[c*x^n]]^(p-2)/(b^2*n^2*(p-1)*(p-2)) -
  Dist[(b^2*n^2*(p-2)^2-1)/(b^2*n^2*(p-1)*(p-2)),Int[Csch[a+b*Log[c*x^n]]^(p-2),x]] /;
FreeQ[{a,b,c,n},x] && RationalQ[p] && p>1 && p!=2 && NonzeroQ[b^2*n^2*(p-2)^2-1]


(* ::Code:: *)
Int[Sech[a_.+b_.*Log[c_.*x_^n_.]]^p_,x_Symbol] :=
  -b*n*p*x*Sech[a+b*Log[c*x^n]]^(p+1)*Sinh[a+b*Log[c*x^n]]/(b^2*n^2*p^2-1) -
  x*Sech[a+b*Log[c*x^n]]^p/(b^2*n^2*p^2-1) +
  Dist[b^2*n^2*p*(p+1)/(b^2*n^2*p^2-1),Int[Sech[a+b*Log[c*x^n]]^(p+2),x]] /;
FreeQ[{a,b,c,n},x] && RationalQ[p] && p<-1 && NonzeroQ[b^2*n^2*p^2-1]


(* ::Code:: *)
Int[Csch[a_.+b_.*Log[c_.*x_^n_.]]^p_,x_Symbol] :=
  -b*n*p*x*Cosh[a+b*Log[c*x^n]]*Csch[a+b*Log[c*x^n]]^(p+1)/(b^2*n^2*p^2-1) - 
  x*Csch[a+b*Log[c*x^n]]^p/(b^2*n^2*p^2-1) -
  Dist[b^2*n^2*p*(p+1)/(b^2*n^2*p^2-1),Int[Csch[a+b*Log[c*x^n]]^(p+2),x]] /;
FreeQ[{a,b,c,n},x] && RationalQ[p] && p<-1 && NonzeroQ[b^2*n^2*p^2-1]


(* ::Code:: *)
Int[x_^m_.Sech[b_.*Log[c_.*x_^n_.]]^p_.,x_Symbol] :=
  Int[x^m*(2/((c*x^n)^b+1/(c*x^n)^b))^p,x] /;
FreeQ[c,x] && RationalQ[{b,m,n,p}]


(* ::Code:: *)
Int[x_^m_.*Csch[b_.*Log[c_.*x_^n_.]]^p_.,x_Symbol] :=
  Int[x^m*(2/((c*x^n)^b - 1/(c*x^n)^b))^p,x] /;
FreeQ[c,x] && RationalQ[{b,m,n,p}]


(* ::Code:: *)
Int[x_^m_.*Sec[a_.+b_.*Log[c_.*x_^n_.]]^p_,x_Symbol] :=
  x^(m+1)*(b*n*(p-2)+(m+1)*Tan[a+b*Log[c*x^n]])*Sec[a+b*Log[c*x^n]]^(p-2)/(b*n*(m+1)*(p-1)) /;
FreeQ[{a,b,c,m,n,p},x] && NonzeroQ[m+1] && NonzeroQ[p-1] && ZeroQ[b^2*n^2*(p-2)^2+(m+1)^2]


(* ::Code:: *)
Int[x_^m_.*Csc[a_.+b_.*Log[c_.*x_^n_.]]^p_,x_Symbol] :=
  x^(m+1)*(b*n*(p-2)-(m+1)*Cot[a+b*Log[c*x^n]])*Csc[a+b*Log[c*x^n]]^(p-2)/(b*n*(m+1)*(p-1)) /;
FreeQ[{a,b,c,m,n,p},x] && NonzeroQ[m+1] && NonzeroQ[p-1] && ZeroQ[b^2*n^2*(p-2)^2+(m+1)^2]


(* ::Code:: *)
Int[x_^m_.*Sech[a_.+b_.*Log[c_.*x_^n_.]]^p_,x_Symbol] :=
  x^(m+1)*Tanh[a+b*Log[c*x^n]]*Sech[a+b*Log[c*x^n]]^(p-2)/(b*n*(p-1)) +
  (m+1)*x^(m+1)*Sech[a+b*Log[c*x^n]]^(p-2)/(b^2*n^2*(p-1)*(p-2)) +
  Dist[(b^2*n^2*(p-2)^2-(m+1)^2)/(b^2*n^2*(p-1)*(p-2)),Int[x^m*Sech[a+b*Log[c*x^n]]^(p-2),x]] /;
FreeQ[{a,b,c,m,n},x] && RationalQ[p] && p>1 && p!=2 && NonzeroQ[b^2*n^2*(p-2)^2-(m+1)^2]


(* ::Code:: *)
Int[x_^m_.*Csch[a_.+b_.*Log[c_.*x_^n_.]]^p_,x_Symbol] :=
  -x^(m+1)*Coth[a+b*Log[c*x^n]]*Csch[a+b*Log[c*x^n]]^(p-2)/(b*n*(p-1)) -
  (m+1)*x^(m+1)*Csch[a+b*Log[c*x^n]]^(p-2)/(b^2*n^2*(p-1)*(p-2)) -
  Dist[(b^2*n^2*(p-2)^2-(m+1)^2)/(b^2*n^2*(p-1)*(p-2)),Int[x^m*Csch[a+b*Log[c*x^n]]^(p-2),x]] /;
FreeQ[{a,b,c,m,n},x] && RationalQ[p] && p>1 && p!=2 && NonzeroQ[b^2*n^2*(p-2)^2-(m+1)^2]


(* ::Code:: *)
Int[x_^m_.*Sech[a_.+b_.*Log[c_.*x_^n_.]]^p_,x_Symbol] :=
  -(m+1)*x^(m+1)*Sech[a+b*Log[c*x^n]]^p/(b^2*n^2*p^2-(m+1)^2) -
  b*n*p*x^(m+1)*Sech[a+b*Log[c*x^n]]^(p+1)*Sinh[a+b*Log[c*x^n]]/(b^2*n^2*p^2-(m+1)^2) +
  Dist[b^2*n^2*p*(p+1)/(b^2*n^2*p^2-(m+1)^2),Int[x^m*Sech[a+b*Log[c*x^n]]^(p+2),x]] /;
FreeQ[{a,b,c,m,n},x] && RationalQ[p] && p<-1 && NonzeroQ[b^2*n^2*p^2-(m+1)^2]


(* ::Code:: *)
Int[x_^m_.*Csch[a_.+b_.*Log[c_.*x_^n_.]]^p_,x_Symbol] :=
  -(m+1)*x^(m+1)*Csch[a+b*Log[c*x^n]]^p/(b^2*n^2*p^2-(m+1)^2) -
  b*n*p*x^(m+1)*Cosh[a+b*Log[c*x^n]]*Csch[a+b*Log[c*x^n]]^(p+1)/(b^2*n^2*p^2-(m+1)^2) -
  Dist[b^2*n^2*p*(p+1)/(b^2*n^2*p^2-(m+1)^2),Int[x^m*Csch[a+b*Log[c*x^n]]^(p+2),x]] /;
FreeQ[{a,b,c,m,n},x] && RationalQ[p] && p<-1 && NonzeroQ[b^2*n^2*p^2-(m+1)^2]



(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Code:: *)
Int[(a_.*Cosh[c_.+d_.*x_]+b_.*Sinh[c_.+d_.*x_])^n_,x_Symbol] :=
  a*(a*Cosh[c+d*x]+b*Sinh[c+d*x])^n/(b*d*n) /;
FreeQ[{a,b,c,d,n},x] && ZeroQ[a^2-b^2]


(* ::Code:: *)
Int[1/(a_.*Cosh[c_.+d_.*x_]+b_.*Sinh[c_.+d_.*x_])^2,x_Symbol] :=
  Sinh[c+d*x]/(a*d*(a*Cosh[c+d*x]+b*Sinh[c+d*x])) /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2-b^2]


(* ::Code:: *)
Int[(a_.*Cosh[c_.+d_.*x_]+b_.*Sinh[c_.+d_.*x_])^n_,x_Symbol] :=
  Dist[1/d,Subst[Int[Regularize[(a^2-b^2+x^2)^((n-1)/2),x],x],x,b*Cosh[c+d*x]+a*Sinh[c+d*x]]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2-b^2] && OddQ[n] && n>0


(* ::Code:: *)
Int[(a_.*Cosh[c_.+d_.*x_]+b_.*Sinh[c_.+d_.*x_])^n_,x_Symbol] :=
  (b*Cosh[c+d*x]+a*Sinh[c+d*x])*(a*Cosh[c+d*x]+b*Sinh[c+d*x])^(n-1)/(d*n) +
  Dist[(n-1)*(a^2-b^2)/n,Int[(a*Cosh[c+d*x]+b*Sinh[c+d*x])^(n-2),x]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2-b^2] && RationalQ[n] && n>1 && Not[OddQ[n]]


(* ::Code:: *)
Int[(a_.*Cosh[c_.+d_.*x_]+b_.*Sinh[c_.+d_.*x_])^n_,x_Symbol] :=
  -(b*Cosh[c+d*x]+a*Sinh[c+d*x])*(a*Cosh[c+d*x]+b*Sinh[c+d*x])^(n+1)/(d*(n+1)*(a^2-b^2)) +
  Dist[(n+2)/((n+1)*(a^2-b^2)),Int[(a*Cosh[c+d*x]+b*Sinh[c+d*x])^(n+2),x]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2-b^2] && RationalQ[n] && n<-1 && n!=-2


(* ::Code:: *)
Int[Cosh[c_.+d_.*x_]^m_.*Sinh[c_.+d_.*x_]^n_.*(a_.*Cosh[c_.+d_.*x_]+b_.*Sinh[c_.+d_.*x_])^p_,x_Symbol] :=
  -Dist[b/(a^2-b^2),Int[Cosh[c+d*x]^m*Sinh[c+d*x]^(n-1)*(a*Cosh[c+d*x]+b*Sinh[c+d*x])^(p+1),x]] +
  Dist[a/(a^2-b^2),Int[Cosh[c+d*x]^(m-1)*Sinh[c+d*x]^n*(a*Cosh[c+d*x]+b*Sinh[c+d*x])^(p+1),x]] +
  Dist[a*b/(a^2-b^2),Int[Cosh[c+d*x]^(m-1)*Sinh[c+d*x]^(n-1)*(a*Cosh[c+d*x]+b*Sinh[c+d*x])^p,x]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2-b^2] && IntegersQ[m,n,p] && m>0 && n>0 && p<0


(* ::Code:: *)
Int[u_.*Sinh[c_.+d_.*x_]^n_/(a_.*Cosh[c_.+d_.*x_]+b_.*Sinh[c_.+d_.*x_]),x_Symbol] :=
  Dist[-b/(a^2-b^2),Int[u*Sinh[c+d*x]^(n-1),x]] +
  Dist[a/(a^2-b^2),Int[u*Sinh[c+d*x]^(n-2)*Cosh[c+d*x],x]] -
  Dist[a^2/(a^2-b^2),Int[u*Sinh[c+d*x]^(n-2)/(a*Cosh[c+d*x]+b*Sinh[c+d*x]),x]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2-b^2] && IntegerQ[n] && n>0 && 
(n>1 || MatchQ[u,v_.*Tanh[c+d*x]^m_. /; IntegerQ[m] && m>0])


(* ::Code:: *)
Int[u_.*Cosh[c_.+d_.*x_]^n_/(a_.*Cosh[c_.+d_.*x_]+b_.*Sinh[c_.+d_.*x_]),x_Symbol] :=
  Dist[a/(a^2-b^2),Int[u*Cosh[c+d*x]^(n-1),x]] -
  Dist[b/(a^2-b^2),Int[u*Cosh[c+d*x]^(n-2)*Sinh[c+d*x],x]] -
  Dist[b^2/(a^2-b^2),Int[u*Cosh[c+d*x]^(n-2)/(a*Cosh[c+d*x]+b*Sinh[c+d*x]),x]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2-b^2] && IntegerQ[n] && n>0 && 
(n>1 || MatchQ[u,v_.*Coth[c+d*x]^m_. /; IntegerQ[m] && m>0])


(* ::Code:: *)
Int[1/(a_+b_.*Cosh[d_.+e_.*x_]+c_.*Sinh[d_.+e_.*x_]),x_Symbol] :=
  Log[a+c*Tanh[(d+e*x)/2]]/(c*e) /;
FreeQ[{a,b,c,d,e},x] && ZeroQ[a-b]


(* ::Code:: *)
Int[1/(a_+b_.*Cosh[d_.+e_.*x_]+c_.*Sinh[d_.+e_.*x_]),x_Symbol] :=
  -Log[a-c*Coth[(d+e*x)/2]]/(c*e) /;
FreeQ[{a,b,c,d,e},x] && ZeroQ[a+b]


(* ::Code:: *)
Int[1/(a_+b_.*Cosh[d_.+e_.*x_]+c_.*Sinh[d_.+e_.*x_]),x_Symbol] :=
  -(c+a*Sinh[d+e*x])/(c*e*(c*Cosh[d+e*x]+b*Sinh[d+e*x])) /;
FreeQ[{a,b,c,d,e},x] && ZeroQ[a^2-b^2+c^2]


(* ::Code:: *)
Int[1/(a_.+b_.*Cosh[d_.+e_.*x_]+c_.*Sinh[d_.+e_.*x_]),x_Symbol] :=
  -2*ArcTanh[(c-(a-b)*Tanh[(d+e*x)/2])/Rt[a^2-b^2+c^2,2]]/(e*Rt[a^2-b^2+c^2,2]) /;
FreeQ[{a,b,c,d,e},x] && NonzeroQ[a^2-b^2] && PosQ[a^2-b^2+c^2]


(* ::Code:: *)
Int[1/(a_.+b_.*Cosh[d_.+e_.*x_]+c_.*Sinh[d_.+e_.*x_]),x_Symbol] :=
  2*ArcTan[(c-(a-b)*Tanh[(d+e*x)/2])/Rt[-a^2+b^2-c^2,2]]/(e*Rt[-a^2+b^2-c^2,2]) /;
FreeQ[{a,b,c,d,e},x] && NonzeroQ[a^2-b^2] && NegQ[a^2-b^2+c^2]


(* ::Code:: *)
Int[Sqrt[a_+b_.*Cosh[d_.+e_.*x_]+c_.*Sinh[d_.+e_.*x_]],x_Symbol] :=
  2*(c*Cosh[d+e*x]+b*Sinh[d+e*x])/(e*Sqrt[a+b*Cosh[d+e*x]+c*Sinh[d+e*x]]) /;
FreeQ[{a,b,c,d,e},x] && ZeroQ[a^2-b^2+c^2]


(* ::Code:: *)
Int[Sqrt[a_.+b_.*Cosh[d_.+e_.*x_]+c_.*Sinh[d_.+e_.*x_]],x_Symbol] :=
  Int[Sqrt[a-I*Sqrt[b^2-c^2]*Sinh[d+e*x+I*ArcTan[I*c,b]]],x] /;
FreeQ[{a,b,c,d,e},x] && NonzeroQ[a^2-b^2+c^2] && PositiveQ[a-Sqrt[b^2-c^2]]


(* ::Code:: *)
Int[Sqrt[a_.+b_.*Cosh[d_.+e_.*x_]+c_.*Sinh[d_.+e_.*x_]],x_Symbol] :=
  2*I*EllipticE[(Pi/2-I*(d+e*x+I*ArcTan[I*c,b]))/2,2/(1-a/Sqrt[b^2-c^2])]*
  Sqrt[a+b*Cosh[d+e*x]+c*Sinh[d+e*x]]/
  (e*Sqrt[(a+b*Cosh[d+e*x]+c*Sinh[d+e*x])/(a-Sqrt[b^2-c^2])]) /;
FreeQ[{a,b,c,d,e},x] && NonzeroQ[a^2-b^2+c^2] && Not[PositiveQ[a-Sqrt[b^2-c^2]]]


(* ::Code:: *)
Int[1/Sqrt[a_.+b_.*Cosh[d_.+e_.*x_]+c_.*Sinh[d_.+e_.*x_]],x_Symbol] :=
  Int[1/Sqrt[a-I*Sqrt[b^2-c^2]*Sinh[d+e*x+I*ArcTan[I*c,b]]],x] /;
FreeQ[{a,b,c,d,e},x] && PositiveQ[a-Sqrt[b^2-c^2]]


(* ::Code:: *)
Int[1/Sqrt[a_.+b_.*Cosh[d_.+e_.*x_]+c_.*Sinh[d_.+e_.*x_]],x_Symbol] :=
  2*I*EllipticF[(Pi/2-I*(d+e*x+I*ArcTan[I*c,b]))/2,2/(1-a/Sqrt[b^2-c^2])]*
  Sqrt[(a+b*Cosh[d+e*x]+c*Sinh[d+e*x])/(a-Sqrt[b^2-c^2])]/
  (e*Sqrt[a+b*Cosh[d+e*x]+c*Sinh[d+e*x]]) /;
FreeQ[{a,b,c,d,e},x] && NonzeroQ[a-Sqrt[b^2-c^2]] && Not[PositiveQ[a-Sqrt[b^2-c^2]]]


(* ::Code:: *)
Int[(a_+b_.*Cosh[d_.+e_.*x_]+c_.*Sinh[d_.+e_.*x_])^n_,x_Symbol] :=
  (c*Cosh[d+e*x]+b*Sinh[d+e*x])*(a+b*Cosh[d+e*x]+c*Sinh[d+e*x])^(n-1)/(e*n) +
  Dist[a*(2*n-1)/n,Int[(a+b*Cosh[d+e*x]+c*Sinh[d+e*x])^(n-1),x]] /;
FreeQ[{a,b,c,d,e},x] && ZeroQ[a^2-b^2+c^2] && RationalQ[n] && n>1


(* ::Code:: *)
Int[(a_+b_.*Cosh[d_.+e_.*x_]+c_.*Sinh[d_.+e_.*x_])^n_,x_Symbol] :=
  (c*Cosh[d+e*x]+b*Sinh[d+e*x])*(a+b*Cosh[d+e*x]+c*Sinh[d+e*x])^(n-1)/(e*n) +
  Dist[1/n,Int[(n*a^2+(n-1)*(b^2-c^2)+a*b*(2*n-1)*Cosh[d+e*x]+a*c*(2*n-1)*Sinh[d+e*x])*
    (a+b*Cosh[d+e*x]+c*Sinh[d+e*x])^(n-2),x]] /;
FreeQ[{a,b,c,d,e},x] && NonzeroQ[a^2-b^2+c^2] && RationalQ[n] && n>1


(* ::Code:: *)
Int[(a_+b_.*Cosh[d_.+e_.*x_]+c_.*Sinh[d_.+e_.*x_])^n_,x_Symbol] :=
  -(c*Cosh[d+e*x]+b*Sinh[d+e*x])*(a+b*Cosh[d+e*x]+c*Sinh[d+e*x])^n/(a*e*(2*n+1)) +
  Dist[(n+1)/(a*(2*n+1)),Int[(a+b*Cosh[d+e*x]+c*Sinh[d+e*x])^(n+1),x]] /;
FreeQ[{a,b,c,d,e},x] && ZeroQ[a^2-b^2+c^2] && RationalQ[n] && n<-1


(* ::Code:: *)
Int[1/(a_+b_.*Cosh[d_.+e_.*x_]+c_.*Sinh[d_.+e_.*x_])^2,x_Symbol] :=
  -(c*Cosh[d+e*x]+b*Sinh[d+e*x])/(e*(a^2-b^2+c^2)*(a+b*Cosh[d+e*x]+c*Sinh[d+e*x])) +
  Dist[a/(a^2-b^2+c^2),Int[1/(a+b*Cosh[d+e*x]+c*Sinh[d+e*x]),x]] /;
FreeQ[{a,b,c,d,e},x] && NonzeroQ[a^2-b^2+c^2]


(* ::Code:: *)
Int[1/(a_+b_.*Cosh[d_.+e_.*x_]+c_.*Sinh[d_.+e_.*x_])^(3/2),x_Symbol] :=
  -2*(c*Cosh[d+e*x]+b*Sinh[d+e*x])/(e*(a^2-b^2+c^2)*Sqrt[a+b*Cosh[d+e*x]+c*Sinh[d+e*x]]) +
  Dist[1/(a^2-b^2+c^2),Int[Sqrt[a+b*Cosh[d+e*x]+c*Sinh[d+e*x]],x]] /;
FreeQ[{a,b,c,d,e},x] && NonzeroQ[a^2-b^2+c^2]


(* ::Code:: *)
Int[(a_+b_.*Cosh[d_.+e_.*x_]+c_.*Sinh[d_.+e_.*x_])^n_,x_Symbol] :=
  (c*Cosh[d+e*x]+b*Sinh[d+e*x])*(a+b*Cosh[d+e*x]+c*Sinh[d+e*x])^(n+1)/(e*(n+1)*(a^2-b^2+c^2)) +
  1/((n+1)*(a^2-b^2+c^2))*
    Int[((n+1)*a-(n+2)*b*Cosh[d+e*x]-(n+2)*c*Sinh[d+e*x])*(a+b*Cosh[d+e*x]+c*Sinh[d+e*x])^(n+1),x] /;
FreeQ[{a,b,c,d,e},x] && NonzeroQ[a^2-b^2+c^2] && RationalQ[n] && n<-1 && n!=-2 && n!=-3/2


(* ::Code:: *)
Int[(A_.+B_.*Cosh[d_.+e_.*x_]+C_.*Sinh[d_.+e_.*x_])/(a_+b_.*Cosh[d_.+e_.*x_]+c_.*Sinh[d_.+e_.*x_]),x_Symbol] :=
  (2*a*A-b*B+c*C)*x/(2*a^2) - (b*B-c*C)*(b*Cosh[d+e*x]-c*Sinh[d+e*x])/(2*a*b*c*e) + 
  (a^2*(b*B+c*C)-2*a*A*b^2+b^2*(b*B-c*C))*Log[a+b*Cosh[d+e*x]+c*Sinh[d+e*x]]/(2*a^2*b*c*e) /;
FreeQ[{a,b,c,d,e,A,B,C},x] && ZeroQ[b^2-c^2]


(* ::Code:: *)
Int[(A_.+C_.*Sinh[d_.+e_.*x_])/(a_+b_.*Cosh[d_.+e_.*x_]+c_.*Sinh[d_.+e_.*x_]),x_Symbol] :=
  (2*a*A+c*C)*x/(2*a^2) + C*Cosh[d+e*x]/(2*a*e) - c*C*Sinh[d+e*x]/(2*a*b*e) + 
  (a^2*C-2*a*c*A-b^2*C)*Log[a+b*Cosh[d+e*x]+c*Sinh[d+e*x]]/(2*a^2*b*e) /;
FreeQ[{a,b,c,d,e,A,C},x] && ZeroQ[b^2-c^2]


(* ::Code:: *)
Int[(A_.+B_.*Cosh[d_.+e_.*x_])/(a_+b_.*Cosh[d_.+e_.*x_]+c_.*Sinh[d_.+e_.*x_]),x_Symbol] :=
  (2*a*A-b*B)*x/(2*a^2) - b*B*Cosh[d+e*x]/(2*a*c*e) + B*Sinh[d+e*x]/(2*a*e) + 
  (a^2*B-2*a*b*A+b^2*B)*Log[a+b*Cosh[d+e*x]+c*Sinh[d+e*x]]/(2*a^2*c*e) /;
FreeQ[{a,b,c,d,e,A,B},x] && ZeroQ[b^2-c^2]


(* ::Code:: *)
Int[(A_.+B_.*Cosh[d_.+e_.*x_]+C_.*Sinh[d_.+e_.*x_])/(a_.+b_.*Cosh[d_.+e_.*x_]+c_.*Sinh[d_.+e_.*x_]),x_Symbol] :=
  (b*B-c*C)*x/(b^2-c^2) - (c*B-b*C)*Log[a+b*Cosh[d+e*x]+c*Sinh[d+e*x]]/(e*(b^2-c^2)) /;
FreeQ[{a,b,c,d,e,A,B,C},x] && NonzeroQ[b^2-c^2] && ZeroQ[A*(b^2-c^2)-a*(b*B-c*C)]


(* ::Code:: *)
Int[(A_.+C_.*Sinh[d_.+e_.*x_])/(a_.+b_.*Cosh[d_.+e_.*x_]+c_.*Sinh[d_.+e_.*x_]),x_Symbol] :=
  -c*C*x/(b^2-c^2) + b*C*Log[a+b*Cosh[d+e*x]+c*Sinh[d+e*x]]/(e*(b^2-c^2)) /;
FreeQ[{a,b,c,d,e,A,C},x] && NonzeroQ[b^2-c^2] && ZeroQ[A*(b^2-c^2)+a*c*C]


(* ::Code:: *)
Int[(A_.+B_.*Cosh[d_.+e_.*x_])/(a_.+b_.*Cosh[d_.+e_.*x_]+c_.*Sinh[d_.+e_.*x_]),x_Symbol] :=
  b*B*x/(b^2-c^2) - c*B*Log[a+b*Cosh[d+e*x]+c*Sinh[d+e*x]]/(e*(b^2-c^2)) /;
FreeQ[{a,b,c,d,e,A,B},x] && NonzeroQ[b^2-c^2] && ZeroQ[A*(b^2-c^2)-a*b*B]


(* ::Code:: *)
Int[(A_.+B_.*Cosh[d_.+e_.*x_]+C_.*Sinh[d_.+e_.*x_])/(a_.+b_.*Cosh[d_.+e_.*x_]+c_.*Sinh[d_.+e_.*x_]),x_Symbol] :=
  (b*B-c*C)*x/(b^2-c^2) - (c*B-b*C)*Log[a+b*Cosh[d+e*x]+c*Sinh[d+e*x]]/(e*(b^2-c^2)) + 
  Dist[(A*(b^2-c^2)-a*(b*B-c*C))/(b^2-c^2),Int[1/(a+b*Cosh[d+e*x]+c*Sinh[d+e*x]),x]] /;
FreeQ[{a,b,c,d,e,A,B,C},x] && NonzeroQ[b^2-c^2] && NonzeroQ[A*(b^2-c^2)-a*(b*B-c*C)]


(* ::Code:: *)
Int[(A_.+C_.*Sinh[d_.+e_.*x_])/(a_.+b_.*Cosh[d_.+e_.*x_]+c_.*Sinh[d_.+e_.*x_]),x_Symbol] :=
  -c*C*x/(b^2-c^2) + b*C*Log[a+b*Cosh[d+e*x]+c*Sinh[d+e*x]]/(e*(b^2-c^2)) + 
  Dist[(A*(b^2-c^2)+a*c*C)/(b^2-c^2),Int[1/(a+b*Cosh[d+e*x]+c*Sinh[d+e*x]),x]] /;
FreeQ[{a,b,c,d,e,A,C},x] && NonzeroQ[b^2-c^2] && NonzeroQ[A*(b^2-c^2)+a*c*C]


(* ::Code:: *)
Int[(A_.+B_.*Cosh[d_.+e_.*x_])/(a_.+b_.*Cosh[d_.+e_.*x_]+c_.*Sinh[d_.+e_.*x_]),x_Symbol] :=
  b*B*x/(b^2-c^2) - c*B*Log[a+b*Cosh[d+e*x]+c*Sinh[d+e*x]]/(e*(b^2-c^2)) + 
  Dist[(A*(b^2-c^2)-a*b*B)/(b^2-c^2),Int[1/(a+b*Cosh[d+e*x]+c*Sinh[d+e*x]),x]] /;
FreeQ[{a,b,c,d,e,A,B},x] && NonzeroQ[b^2-c^2] && NonzeroQ[A*(b^2-c^2)-a*b*B]


(* ::Code:: *)
Int[(A_.+B_.*Cosh[d_.+e_.*x_]+C_.*Sinh[d_.+e_.*x_])/(a_.+b_.*Cosh[d_.+e_.*x_]+c_.*Sinh[d_.+e_.*x_])^2,x_Symbol] :=
  -(c*B-b*C-(a*C-c*A)*Cosh[d+e*x]+(b*A-a*B)*Sinh[d+e*x])/
    (e*(a^2-b^2+c^2)*(a+b*Cosh[d+e*x]+c*Sinh[d+e*x])) /;
FreeQ[{a,b,c,d,e,A,B,C},x] && NonzeroQ[a^2-b^2+c^2] && ZeroQ[a*A-b*B+c*C]


(* ::Code:: *)
Int[(A_.+C_.*Sinh[d_.+e_.*x_])/(a_.+b_.*Cosh[d_.+e_.*x_]+c_.*Sinh[d_.+e_.*x_])^2,x_Symbol] :=
  (b*C+(a*C-c*A)*Cosh[d+e*x]-b*A*Sinh[d+e*x])/(e*(a^2-b^2+c^2)*(a+b*Cosh[d+e*x]+c*Sinh[d+e*x])) /;
FreeQ[{a,b,c,d,e,A,C},x] && NonzeroQ[a^2-b^2+c^2] && ZeroQ[a*A+c*C]


(* ::Code:: *)
Int[(A_.+B_.*Cosh[d_.+e_.*x_])/(a_.+b_.*Cosh[d_.+e_.*x_]+c_.*Sinh[d_.+e_.*x_])^2,x_Symbol] :=
  -(c*B+c*A*Cosh[d+e*x]+(b*A-a*B)*Sinh[d+e*x])/(e*(a^2-b^2+c^2)*(a+b*Cosh[d+e*x]+c*Sinh[d+e*x])) /;
FreeQ[{a,b,c,d,e,A,B},x] && NonzeroQ[a^2-b^2+c^2] && ZeroQ[a*A-b*B]


(* ::Code:: *)
Int[(A_.+B_.*Cosh[d_.+e_.*x_]+C_.*Sinh[d_.+e_.*x_])/(a_.+b_.*Cosh[d_.+e_.*x_]+c_.*Sinh[d_.+e_.*x_])^2,x_Symbol] :=
  -(c*B-b*C-(a*C-c*A)*Cosh[d+e*x]+(b*A-a*B)*Sinh[d+e*x])/
     (e*(a^2-b^2+c^2)*(a+b*Cosh[d+e*x]+c*Sinh[d+e*x])) +
  Dist[(a*A-b*B+c*C)/(a^2-b^2+c^2),Int[1/(a+b*Cosh[d+e*x]+c*Sinh[d+e*x]),x]] /;
FreeQ[{a,b,c,d,e,A,B,C},x] && NonzeroQ[a^2-b^2+c^2] && NonzeroQ[a*A-b*B+c*C]


(* ::Code:: *)
Int[(A_.+C_.*Sinh[d_.+e_.*x_])/(a_.+b_.*Cosh[d_.+e_.*x_]+c_.*Sinh[d_.+e_.*x_])^2,x_Symbol] :=
  (b*C+(a*C-c*A)*Cosh[d+e*x]-b*A*Sinh[d+e*x])/(e*(a^2-b^2+c^2)*(a+b*Cosh[d+e*x]+c*Sinh[d+e*x])) +
  Dist[(a*A+c*C)/(a^2-b^2+c^2),Int[1/(a+b*Cosh[d+e*x]+c*Sinh[d+e*x]),x]] /;
FreeQ[{a,b,c,d,e,A,C},x] && NonzeroQ[a^2-b^2+c^2] && NonzeroQ[a*A+c*C]


(* ::Code:: *)
Int[(A_.+B_.*Cosh[d_.+e_.*x_])/(a_.+b_.*Cosh[d_.+e_.*x_]+c_.*Sinh[d_.+e_.*x_])^2,x_Symbol] :=
  -(c*B+c*A*Cosh[d+e*x]+(b*A-a*B)*Sinh[d+e*x])/(e*(a^2-b^2+c^2)*(a+b*Cosh[d+e*x]+c*Sinh[d+e*x])) +
  Dist[(a*A-b*B)/(a^2-b^2+c^2),Int[1/(a+b*Cosh[d+e*x]+c*Sinh[d+e*x]),x]] /;
FreeQ[{a,b,c,d,e,A,B},x] && NonzeroQ[a^2-b^2+c^2] && NonzeroQ[a*A-b*B]


(* ::Code:: *)
Int[(A_.+B_.*Cosh[d_.+e_.*x_]+C_.*Sinh[d_.+e_.*x_])*(a_+b_.*Cosh[d_.+e_.*x_]+c_.*Sinh[d_.+e_.*x_])^n_,x_Symbol] :=
  Dist[B/b,Int[(a+b*Cosh[d+e*x]+c*Sinh[d+e*x])^(n+1),x]] +
  Dist[(b*A-a*B)/b,Int[(a+b*Cosh[d+e*x]+c*Sinh[d+e*x])^n,x]] /;
FreeQ[{a,b,c,d,e,A,B,C},x] && ZeroQ[b*C-c*B] && NonzeroQ[b*A-a*B] && RationalQ[n] && (n==-1/2 || ZeroQ[a^2-b^2+c^2])


(* ::Code:: *)
Int[(A_.+B_.*Cosh[d_.+e_.*x_]+C_.*Sinh[d_.+e_.*x_])*(a_.+b_.*Cosh[d_.+e_.*x_]+c_.*Sinh[d_.+e_.*x_])^n_,x_Symbol] :=
  (c*B-b*C-(a*C-c*A)*Cosh[d+e*x]+(b*A-a*B)*Sinh[d+e*x])*(a+b*Cosh[d+e*x]+c*Sinh[d+e*x])^(n+1)/
    (e*(n+1)*(a^2-b^2+c^2)) +
  Dist[1/((n+1)*(a^2-b^2+c^2)),
    Int[((n+1)*(a*A-b*B+c*C)-(n+2)*(b*A-a*B)*Cosh[d+e*x]+(n+2)*(a*C-c*A)*Sinh[d+e*x])*
      (a+b*Cosh[d+e*x]+c*Sinh[d+e*x])^(n+1),x]] /;
FreeQ[{a,b,c,d,e,A,B,C},x] && NonzeroQ[a^2-b^2+c^2] && RationalQ[n] && n<-1 && n!=-2


(* ::Code:: *)
Int[(A_.+C_.*Sinh[d_.+e_.*x_])*(a_.+b_.*Cosh[d_.+e_.*x_]+c_.*Sinh[d_.+e_.*x_])^n_,x_Symbol] :=
  -(b*C+(a*C-c*A)*Cosh[d+e*x]-b*A*Sinh[d+e*x])*(a+b*Cosh[d+e*x]+c*Sinh[d+e*x])^(n+1)/
    (e*(n+1)*(a^2-b^2+c^2)) +
  Dist[1/((n+1)*(a^2-b^2+c^2)),
    Int[((n+1)*(a*A+c*C)-(n+2)*b*A*Cosh[d+e*x]+(n+2)*(a*C-c*A)*Sinh[d+e*x])*
      (a+b*Cosh[d+e*x]+c*Sinh[d+e*x])^(n+1),x]] /;
FreeQ[{a,b,c,d,e,A,C},x] && NonzeroQ[a^2-b^2+c^2] && RationalQ[n] && n<-1 && n!=-2


(* ::Code:: *)
Int[(A_.+B_.*Cosh[d_.+e_.*x_])*(a_.+b_.*Cosh[d_.+e_.*x_]+c_.*Sinh[d_.+e_.*x_])^n_,x_Symbol] :=
  (c*B+c*A*Cosh[d+e*x]+(b*A-a*B)*Sinh[d+e*x])*(a+b*Cosh[d+e*x]+c*Sinh[d+e*x])^(n+1)/
    (e*(n+1)*(a^2-b^2+c^2)) +
  Dist[1/((n+1)*(a^2-b^2+c^2)),
    Int[((n+1)*(a*A-b*B)-(n+2)*(b*A-a*B)*Cosh[d+e*x]-(n+2)*c*A*Sinh[d+e*x])*
      (a+b*Cosh[d+e*x]+c*Sinh[d+e*x])^(n+1),x]] /;
FreeQ[{a,b,c,d,e,A,B},x] && NonzeroQ[a^2-b^2+c^2] && RationalQ[n] && n<-1 && n!=-2


(* ::Code:: *)
Int[(A_.+B_.*Cosh[d_.+e_.*x_]+C_.*Sinh[d_.+e_.*x_])*(a_+b_.*Cosh[d_.+e_.*x_]+c_.*Sinh[d_.+e_.*x_])^n_,x_Symbol] :=
  (-B*c+b*C+a*C*Cosh[d+e*x]+a*B*Sinh[d+e*x])*(a+b*Cosh[d+e*x]+c*Sinh[d+e*x])^n/(a*e*(n+1)) + 
  Dist[1/(a*(n+1)),
    Int[(a*(b*B-c*C)*n + a^2*A*(n+1) + 
        (a^2*B*n - c*(b*C-c*B)*n + a*b*A*(n+1))*Cosh[d+e*x] + 
        (a^2*C*n - b*(b*C-c*B)*n + a*c*A*(n+1))*Sinh[d+e*x])*
      (a+b*Cosh[d+e*x]+c*Sinh[d+e*x])^(n-1), x]] /;
FreeQ[{a,b,c,d,e,A,B,C},x] && NonzeroQ[a^2-b^2+c^2] && RationalQ[n] && n>0


(* ::Code:: *)
Int[(A_.+C_.*Sinh[d_.+e_.*x_])*(a_+b_.*Cosh[d_.+e_.*x_]+c_.*Sinh[d_.+e_.*x_])^n_,x_Symbol] :=
  (b*C+a*C*Cosh[d+e*x])*(a+b*Cosh[d+e*x]+c*Sinh[d+e*x])^n/(a*e*(n+1)) + 
  Dist[1/(a*(n+1)),
    Int[(-a*c*C*n+a^2*A*(n+1)-b*(c*C*n-a*A*(n+1))*Cosh[d+e*x]+(a^2*C*n-b^2*C*n+a*c*A*(n+1))*Sinh[d+e*x])*
      (a+b*Cosh[d+e*x]+c*Sinh[d+e*x])^(n-1), x]] /;
FreeQ[{a,b,c,d,e,A,C},x] && NonzeroQ[a^2-b^2+c^2] && RationalQ[n] && n>0


(* ::Code:: *)
Int[(A_.+B_.*Cosh[d_.+e_.*x_])*(a_+b_.*Cosh[d_.+e_.*x_]+c_.*Sinh[d_.+e_.*x_])^n_,x_Symbol] :=
  (-B*c+a*B*Sinh[d+e*x])*(a+b*Cosh[d+e*x]+c*Sinh[d+e*x])^n/(a*e*(n+1)) + 
  Dist[1/(a*(n+1)),
    Int[(a*b*B*n+a^2*A*(n+1)+(a^2*B*n+c^2*B*n+a*b*A*(n+1))*Cosh[d+e*x]+c*(b*B*n+a*A*(n+1))*Sinh[d+e*x])*
      (a+b*Cosh[d+e*x]+c*Sinh[d+e*x])^(n-1), x]] /;
FreeQ[{a,b,c,d,e,A,B},x] && NonzeroQ[a^2-b^2+c^2] && RationalQ[n] && n>0
(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Code:: *)
Int[x_^m_.*(a_+b_.*Sinh[c_.+d_.*x_])^n_,x_Symbol] :=
  Dist[(2*a)^n,Int[x^m*Cosh[-Pi*a/(4*b)+c/2+d*x/2]^(2*n),x]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2+b^2] && RationalQ[m] && IntegerQ[n] && n<0


(* ::Code:: *)
Int[x_^m_.*(a_+b_.*Sinh[c_.+d_.*x_])^n_,x_Symbol] :=
  Dist[(2*a)^(n-1/2)*Sqrt[a+b*Sinh[c+d*x]]/Cosh[-Pi*a/(4*b)+c/2+d*x/2],
    Int[x^m*Cosh[-Pi*a/(4*b)+c/2+d*x/2]^(2*n),x]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2+b^2] && RationalQ[m] && IntegerQ[n-1/2]


(* ::Code:: *)
Int[x_/(a_+b_.*Sinh[c_.+d_.*x_])^2,x_Symbol] :=
  Dist[a/(a^2+b^2),Int[x/(a+b*Sinh[c+d*x]),x]] +
  Dist[b/(a^2+b^2),Int[x*(b-a*Sinh[c+d*x])/(a+b*Sinh[c+d*x])^2,x]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2+b^2]


(* ::Code:: *)
Int[x_^m_.*(a_+b_.*Sinh[c_.+d_.*x_])^n_,x_Symbol] :=
  Dist[1/2^n,Int[x^m*(-b+2*a*E^(c+d*x)+b*E^(2*(c+d*x)))^n/E^(n*(c+d*x)),x]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2+b^2] && RationalQ[m] && m>0 && IntegerQ[n] && n<0


(* ::Code:: *)
Int[x_^m_.*(a_+b_.*Cosh[c_.+d_.*x_])^n_,x_Symbol] :=
  Dist[(2*a)^n,Int[x^m*Cosh[c/2+d*x/2]^(2*n),x]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a-b] && RationalQ[m] && IntegerQ[n] && n<0


(* ::Code:: *)
Int[x_^m_.*(a_+b_.*Cosh[c_.+d_.*x_])^n_,x_Symbol] :=
  Dist[(-2*a)^n,Int[x^m*Sinh[c/2+d*x/2]^(2*n),x]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a+b] && RationalQ[m] && IntegerQ[n] && n<0


(* ::Code:: *)
Int[x_^m_.*(a_+b_.*Cosh[c_.+d_.*x_])^n_,x_Symbol] :=
  Dist[(2*a)^(n-1/2)*Sqrt[a+b*Cosh[c+d*x]]/Cosh[c/2+d*x/2],Int[x^m*Cosh[c/2+d*x/2]^(2*n),x]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a-b] && RationalQ[m] && IntegerQ[n-1/2]


(* ::Code:: *)
Int[x_^m_.*(a_+b_.*Cosh[c_.+d_.*x_])^n_,x_Symbol] :=
  Dist[(-2*a)^(n-1/2)*Sqrt[a+b*Cosh[c+d*x]]/Sinh[c/2+d*x/2],Int[x^m*Sinh[c/2+d*x/2]^(2*n),x]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a+b] && RationalQ[m] && IntegerQ[n-1/2]


(* ::Code:: *)
Int[x_/(a_+b_.*Cosh[c_.+d_.*x_])^2,x_Symbol] :=
  Dist[a/(a^2-b^2),Int[x/(a+b*Cosh[c+d*x]),x]] -
  Dist[b/(a^2-b^2),Int[x*(b+a*Cosh[c+d*x])/(a+b*Cosh[c+d*x])^2,x]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2-b^2]


(* ::Code:: *)
Int[x_^m_.*(a_+b_.*Cosh[c_.+d_.*x_])^n_,x_Symbol] :=
  Dist[1/2^n,Int[x^m*(b+2*a*E^(c+d*x)+b*E^(2*(c+d*x)))^n/E^(n*(c+d*x)),x]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2-b^2] && RationalQ[m] && m>0 && IntegerQ[n] && n<0


(* ::Code:: *)
Int[(a_+b_.*Sinh[c_.+d_.*x_]^2)^n_,x_Symbol] :=
  Dist[1/2^n,Int[(2*a-b+b*Cosh[2*c+2*d*x])^n,x]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a-b] && RationalQ[n] && n!=-1


(* ::Code:: *)
Int[(a_+b_.*Cosh[c_.+d_.*x_]^2)^n_,x_Symbol] :=
  Dist[1/2^n,Int[(2*a+b+b*Cosh[2*c+2*d*x])^n,x]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a+b] && RationalQ[n] && n!=-1


(* ::Code:: *)
Int[x_^m_.*(a_+b_.*Sinh[c_.+d_.*x_]^2)^n_,x_Symbol] :=
  Dist[1/2^n,Int[x^m*(2*a-b+b*Cosh[2*c+2*d*x])^n,x]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a-b] && IntegersQ[m,n] && (m>0 && n==-1 || m==1 && n==-2)


(* ::Code:: *)
Int[x_^m_.*(a_+b_.*Cosh[c_.+d_.*x_]^2)^n_,x_Symbol] :=
  Dist[1/2^n,Int[x^m*(2*a+b+b*Cosh[2*c+2*d*x])^n,x]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a+b] && IntegersQ[m,n] && (m>0 && n==-1 || m==1 && n==-2)


(* ::Code:: *)
(* Int[Sinh[b_.*x_^2],x_Symbol] :=
  -I*Sqrt[Pi/2]*FresnelS[Rt[I*b,2]*x/Sqrt[Pi/2]]/Rt[I*b,2] /;
FreeQ[b,x] *)


(* ::Code:: *)
(* Int[Cosh[b_.*x_^2],x_Symbol] :=
  Sqrt[Pi/2]*FresnelC[Rt[I*b,2]*x/Sqrt[Pi/2]]/Rt[I*b,2] /;
FreeQ[b,x] *)


(* ::Code:: *)
Int[Sinh[a_.+b_.*x_^n_],x_Symbol] :=
  Dist[1/2,Int[E^(a+b*x^n),x]] - 
  Dist[1/2,Int[E^(-a-b*x^n),x]] /;
FreeQ[{a,b,n},x] && Not[FractionOrNegativeQ[n]]


(* ::Code:: *)
Int[Cosh[a_.+b_.*x_^n_],x_Symbol] :=
  Dist[1/2,Int[E^(-a-b*x^n),x]] + 
  Dist[1/2,Int[E^(a+b*x^n),x]] /;
FreeQ[{a,b,n},x] && Not[FractionOrNegativeQ[n]]


(* ::Code:: *)
Int[Sinh[a_.+b_.*x_^n_],x_Symbol] :=
  x*Sinh[a+b*x^n] - 
  Dist[b*n,Int[x^n*Cosh[a+b*x^n],x]] /;
FreeQ[{a,b},x] && IntegerQ[n] && n<0


(* ::Code:: *)
Int[Cosh[a_.+b_.*x_^n_],x_Symbol] :=
  x*Cosh[a+b*x^n] - 
  Dist[b*n,Int[x^n*Sinh[a+b*x^n],x]] /;
FreeQ[{a,b},x] && IntegerQ[n] && n<0


(* ::Code:: *)
Int[Sinh[b_.*x_^n_.]/x_,x_Symbol] :=
  SinhIntegral[b*x^n]/n /;
FreeQ[{b,n},x]


(* ::Code:: *)
Int[Cosh[b_.*x_^n_.]/x_,x_Symbol] :=
  CoshIntegral[b*x^n]/n /;
FreeQ[{b,n},x]


(* ::Code:: *)
Int[Sinh[a_+b_.*x_^n_.]/x_,x_Symbol] :=
  Dist[Sinh[a],Int[Cosh[b*x^n]/x,x]] + 
  Dist[Cosh[a],Int[Sinh[b*x^n]/x,x]] /;
FreeQ[{a,b,n},x]


(* ::Code:: *)
Int[Cosh[a_+b_.*x_^n_.]/x_,x_Symbol] :=
  Dist[Cosh[a],Int[Cosh[b*x^n]/x,x]] + 
  Dist[Sinh[a],Int[Sinh[b*x^n]/x,x]] /;
FreeQ[{a,b,n},x]


(* ::Code:: *)
Int[x_^m_.*Sinh[a_.+b_.*x_^n_.],x_Symbol] :=
  x^(m-n+1)*Cosh[a+b*x^n]/(b*n) -
  Dist[(m-n+1)/(b*n),Int[x^(m-n)*Cosh[a+b*x^n],x]] /;
FreeQ[{a,b},x] && IntegerQ[n] && RationalQ[m] && 0<n<=m


(* ::Code:: *)
Int[x_^m_.*Cosh[a_.+b_.*x_^n_.],x_Symbol] :=
  x^(m-n+1)*Sinh[a+b*x^n]/(b*n) -
  Dist[(m-n+1)/(b*n),Int[x^(m-n)*Sinh[a+b*x^n],x]] /;
FreeQ[{a,b},x] && IntegerQ[n] && RationalQ[m] && 0<n<=m


(* ::Code:: *)
Int[x_^m_.*Sinh[a_.+b_.*x_^n_.],x_Symbol] :=
  x^(m+1)*Sinh[a+b*x^n]/(m+1) -
  Dist[b*n/(m+1),Int[x^(m+n)*Cosh[a+b*x^n],x]] /;
FreeQ[{a,b,m,n},x] && (ZeroQ[m+n+1] || IntegerQ[n] && RationalQ[m] && (n>0 && m<-1 || 0<-n<m+1))


(* ::Code:: *)
Int[x_^m_.*Cosh[a_.+b_.*x_^n_.],x_Symbol] :=
  x^(m+1)*Cosh[a+b*x^n]/(m+1) -
  Dist[b*n/(m+1),Int[x^(m+n)*Sinh[a+b*x^n],x]] /;
FreeQ[{a,b,m,n},x] && (ZeroQ[m+n+1] || IntegerQ[n] && RationalQ[m] && (n>0 && m<-1 || 0<-n<m+1))


(* ::Code:: *)
Int[x_^m_.*Sinh[a_.+b_.*x_^n_.],x_Symbol] :=
  Dist[1/2,Int[x^m*E^(a+b*x^n),x]] - 
  Dist[1/2,Int[x^m*E^(-a-b*x^n),x]] /;
FreeQ[{a,b,m,n},x] && NonzeroQ[m+1] && NonzeroQ[m-n+1] &&
Not[FractionQ[m] || FractionOrNegativeQ[n]]


(* ::Code:: *)
Int[x_^m_.*Cosh[a_.+b_.*x_^n_.],x_Symbol] :=
  Dist[1/2,Int[x^m*E^(-a-b*x^n),x]] + 
  Dist[1/2,Int[x^m*E^(a+b*x^n),x]] /;
FreeQ[{a,b,m,n},x] && NonzeroQ[m+1] && NonzeroQ[m-n+1] && 
Not[FractionQ[m] || FractionOrNegativeQ[n]]


(* ::Code:: *)
Int[x_^m_.*Sinh[a_.+b_.*x_^n_.]^p_,x_Symbol] :=
  -Sinh[a+b*x^n]^p/((n-1)*x^(n-1)) +
  Dist[b*n*p/(n-1),Int[Sinh[a+b*x^n]^(p-1)*Cosh[a+b*x^n],x]] /;
FreeQ[{a,b},x] && IntegersQ[n,p] && ZeroQ[m+n] && p>1 && NonzeroQ[n-1]


(* ::Code:: *)
Int[x_^m_.*Cosh[a_.+b_.*x_^n_.]^p_,x_Symbol] :=
  -Cosh[a+b*x^n]^p/((n-1)*x^(n-1)) +
  Dist[b*n*p/(n-1),Int[Cosh[a+b*x^n]^(p-1)*Sinh[a+b*x^n],x]] /;
FreeQ[{a,b},x] && IntegersQ[n,p] && ZeroQ[m+n] && p>1 && NonzeroQ[n-1]


(* ::Code:: *)
Int[x_^m_.*Sinh[a_.+b_.*x_^n_.]^p_,x_Symbol] :=
  -n*Sinh[a+b*x^n]^p/(b^2*n^2*p^2) +
  x^n*Cosh[a+b*x^n]*Sinh[a+b*x^n]^(p-1)/(b*n*p) -
  Dist[(p-1)/p,Int[x^m*Sinh[a+b*x^n]^(p-2),x]] /;
FreeQ[{a,b,m,n},x] && RationalQ[p] && p>1 && ZeroQ[m-2*n+1]


(* ::Code:: *)
Int[x_^m_.*Cosh[a_.+b_.*x_^n_.]^p_,x_Symbol] :=
  -n*Cosh[a+b*x^n]^p/(b^2*n^2*p^2) +
  x^n*Sinh[a+b*x^n]*Cosh[a+b*x^n]^(p-1)/(b*n*p) +
  Dist[(p-1)/p,Int[x^m*Cosh[a+b*x^n]^(p-2),x]] /;
FreeQ[{a,b,m,n},x] && RationalQ[p] && p>1 && ZeroQ[m-2*n+1]


(* ::Code:: *)
Int[x_^m_.*Sinh[a_.+b_.*x_^n_.]^p_,x_Symbol] :=
  -(m-n+1)*x^(m-2*n+1)*Sinh[a+b*x^n]^p/(b^2*n^2*p^2) +
  x^(m-n+1)*Cosh[a+b*x^n]*Sinh[a+b*x^n]^(p-1)/(b*n*p) -
  Dist[(p-1)/p,Int[x^m*Sinh[a+b*x^n]^(p-2),x]] +
  Dist[(m-n+1)*(m-2*n+1)/(b^2*n^2*p^2),Int[x^(m-2*n)*Sinh[a+b*x^n]^p,x]] /;
FreeQ[{a,b},x] && IntegersQ[m,n] && RationalQ[p] && p>1 && 0<2*n<m+1


(* ::Code:: *)
Int[x_^m_.*Cosh[a_.+b_.*x_^n_.]^p_,x_Symbol] :=
  -(m-n+1)*x^(m-2*n+1)*Cosh[a+b*x^n]^p/(b^2*n^2*p^2) +
  x^(m-n+1)*Sinh[a+b*x^n]*Cosh[a+b*x^n]^(p-1)/(b*n*p) +
  Dist[(p-1)/p,Int[x^m*Cosh[a+b*x^n]^(p-2),x]] +
  Dist[(m-n+1)*(m-2*n+1)/(b^2*n^2*p^2),Int[x^(m-2*n)*Cosh[a+b*x^n]^p,x]] /;
FreeQ[{a,b},x] && IntegersQ[m,n] && RationalQ[p] && p>1 && 0<2*n<m+1


(* ::Code:: *)
Int[x_^m_.*Sinh[a_.+b_.*x_^n_.]^p_,x_Symbol] :=
  x^n*Cosh[a+b*x^n]*Sinh[a+b*x^n]^(p+1)/(b*n*(p+1)) - 
  n*Sinh[a+b*x^n]^(p+2)/(b^2*n^2*(p+1)*(p+2)) - 
  Dist[(p+2)/(p+1),Int[x^m*Sinh[a+b*x^n]^(p+2),x]] /;
FreeQ[{a,b,m,n},x] && RationalQ[p] && p<-1 && p!=-2 && ZeroQ[m-2*n+1]


(* ::Code:: *)
Int[x_^m_.*Cosh[a_.+b_.*x_^n_.]^p_,x_Symbol] :=
  -x^n*Sinh[a+b*x^n]*Cosh[a+b*x^n]^(p+1)/(b*n*(p+1)) + 
  n*Cosh[a+b*x^n]^(p+2)/(b^2*n^2*(p+1)*(p+2)) + 
  Dist[(p+2)/(p+1),Int[x^m*Cosh[a+b*x^n]^(p+2),x]] /;
FreeQ[{a,b,m,n},x] && RationalQ[p] && p<-1 && p!=-2 && ZeroQ[m-2*n+1]


(* ::Code:: *)
Int[x_^m_.*Sinh[a_.+b_.*x_^n_.]^p_,x_Symbol] :=
  x^(m-n+1)*Cosh[a+b*x^n]*Sinh[a+b*x^n]^(p+1)/(b*n*(p+1)) -
  (m-n+1)*x^(m-2*n+1)*Sinh[a+b*x^n]^(p+2)/(b^2*n^2*(p+1)*(p+2)) -
  Dist[(p+2)/(p+1),Int[x^m*Sinh[a+b*x^n]^(p+2),x]] +
  Dist[(m-n+1)*(m-2*n+1)/(b^2*n^2*(p+1)*(p+2)),Int[x^(m-2*n)*Sinh[a+b*x^n]^(p+2),x]] /;
FreeQ[{a,b},x] && IntegersQ[m,n] && RationalQ[p] && p<-1 && p!=-2 && 0<2*n<m+1


(* ::Code:: *)
Int[x_^m_.*Cosh[a_.+b_.*x_^n_.]^p_,x_Symbol] :=
  -x^(m-n+1)*Sinh[a+b*x^n]*Cosh[a+b*x^n]^(p+1)/(b*n*(p+1)) +
  (m-n+1)*x^(m-2*n+1)*Cosh[a+b*x^n]^(p+2)/(b^2*n^2*(p+1)*(p+2)) +
  Dist[(p+2)/(p+1),Int[x^m*Cosh[a+b*x^n]^(p+2),x]] -
  Dist[(m-n+1)*(m-2*n+1)/(b^2*n^2*(p+1)*(p+2)),Int[x^(m-2*n)*Cosh[a+b*x^n]^(p+2),x]] /;
FreeQ[{a,b},x] && IntegersQ[m,n] && RationalQ[p] && p<-1 && p!=-2 && 0<2*n<m+1


(* ::Code:: *)
Int[x_^m_.*Sinh[a_.+b_.*x_^n_.]^p_,x_Symbol] :=
  x^(m+1)*Sinh[a+b*x^n]^p/(m+1) - 
  b*n*p*x^(m+n+1)*Cosh[a+b*x^n]*Sinh[a+b*x^n]^(p-1)/((m+1)*(m+n+1)) + 
  Dist[b^2*n^2*p^2/((m+1)*(m+n+1)),Int[x^(m+2*n)*Sinh[a+b*x^n]^p,x]] + 
  Dist[b^2*n^2*p*(p-1)/((m+1)*(m+n+1)),Int[x^(m+2*n)*Sinh[a+b*x^n]^(p-2),x]] /;
FreeQ[{a,b},x] && IntegersQ[m,n] && RationalQ[p] && p>1 && 0<2*n<-m+1 && NonzeroQ[m+n+1]


(* ::Code:: *)
Int[x_^m_.*Cosh[a_.+b_.*x_^n_.]^p_,x_Symbol] :=
  x^(m+1)*Cosh[a+b*x^n]^p/(m+1) - 
  b*n*p*x^(m+n+1)*Sinh[a+b*x^n]*Cosh[a+b*x^n]^(p-1)/((m+1)*(m+n+1)) + 
  Dist[b^2*n^2*p^2/((m+1)*(m+n+1)),Int[x^(m+2*n)*Cosh[a+b*x^n]^p,x]] - 
  Dist[b^2*n^2*p*(p-1)/((m+1)*(m+n+1)),Int[x^(m+2*n)*Cosh[a+b*x^n]^(p-2),x]] /;
FreeQ[{a,b},x] && IntegersQ[m,n] && RationalQ[p] && p>1 && 0<2*n<-m+1 && NonzeroQ[m+n+1]


(* ::Code:: *)
Int[x_^m_.*Sinh[a_.+b_.*(c_+d_.*x_)^n_]^p_.,x_Symbol] :=
  Dist[1/d,Subst[Int[(-c/d+x/d)^m*Sinh[a+b*x^n]^p,x],x,c+d*x]] /;
FreeQ[{a,b,c,d,n},x] && IntegerQ[m] && m>0 && RationalQ[p]


(* ::Code:: *)
Int[x_^m_.*Cosh[a_.+b_.*(c_+d_.*x_)^n_]^p_.,x_Symbol] :=
  Dist[1/d,Subst[Int[(-c/d+x/d)^m*Cosh[a+b*x^n]^p,x],x,c+d*x]] /;
FreeQ[{a,b,c,d,n},x] && IntegerQ[m] && m>0 && RationalQ[p]


(* ::Code:: *)
Int[Sinh[a_.+b_.*x_+c_.*x_^2],x_Symbol] :=
  Int[Sinh[(b+2*c*x)^2/(4*c)],x] /;
FreeQ[{a,b,c},x] && ZeroQ[b^2-4*a*c]


(* ::Code:: *)
Int[Cosh[a_.+b_.*x_+c_.*x_^2],x_Symbol] :=
  Int[Cosh[(b+2*c*x)^2/(4*c)],x] /;
FreeQ[{a,b,c},x] && ZeroQ[b^2-4*a*c]


(* ::Code:: *)
Int[Sinh[a_.+b_.*x_+c_.*x_^2],x_Symbol] :=
  Dist[1/2,Int[E^(a+b*x+c*x^2),x]] - 
  Dist[1/2,Int[E^(-a-b*x-c*x^2),x]] /;
FreeQ[{a,b,c},x] && NonzeroQ[b^2-4*a*c]


(* ::Code:: *)
Int[Cosh[a_.+b_.*x_+c_.*x_^2],x_Symbol] :=
  Dist[1/2,Int[E^(a+b*x+c*x^2),x]] + 
  Dist[1/2,Int[E^(-a-b*x-c*x^2),x]] /;
FreeQ[{a,b,c},x] && NonzeroQ[b^2-4*a*c]


(* ::Code:: *)
Int[(d_.+e_.*x_)*Sinh[a_.+b_.*x_+c_.*x_^2],x_Symbol] :=
  e*Cosh[a+b*x+c*x^2]/(2*c) /;
FreeQ[{a,b,c,d,e},x] && ZeroQ[b*e-2*c*d]


(* ::Code:: *)
Int[(d_.+e_.*x_)*Cosh[a_.+b_.*x_+c_.*x_^2],x_Symbol] :=
  e*Sinh[a+b*x+c*x^2]/(2*c) /;
FreeQ[{a,b,c,d,e},x] && ZeroQ[b*e-2*c*d]


(* ::Code:: *)
Int[(d_.+e_.*x_)*Sinh[a_.+b_.*x_+c_.*x_^2],x_Symbol] :=
  e*Cosh[a+b*x+c*x^2]/(2*c) -
  Dist[(b*e-2*c*d)/(2*c),Int[Sinh[a+b*x+c*x^2],x]] /;
FreeQ[{a,b,c,d,e},x] && NonzeroQ[b*e-2*c*d]


(* ::Code:: *)
Int[(d_.+e_.*x_)*Cosh[a_.+b_.*x_+c_.*x_^2],x_Symbol] :=
  e*Sinh[a+b*x+c*x^2]/(2*c) - 
  Dist[(b*e-2*c*d)/(2*c),Int[Cosh[a+b*x+c*x^2],x]] /;
FreeQ[{a,b,c,d,e},x] && NonzeroQ[b*e-2*c*d]


(* ::Code:: *)
Int[(d_.+e_.*x_)^m_*Sinh[a_.+b_.*x_+c_.*x_^2],x_Symbol] :=
  e*(d+e*x)^(m-1)*Cosh[a+b*x+c*x^2]/(2*c) -
  Dist[e^2*(m-1)/(2*c),Int[(d+e*x)^(m-2)*Cosh[a+b*x+c*x^2],x]] /;
FreeQ[{a,b,c,d,e},x] && RationalQ[m] && m>1 && ZeroQ[b*e-2*c*d]


(* ::Code:: *)
Int[(d_.+e_.*x_)^m_*Cosh[a_.+b_.*x_+c_.*x_^2],x_Symbol] :=
  e*(d+e*x)^(m-1)*Sinh[a+b*x+c*x^2]/(2*c) - 
  Dist[e^2*(m-1)/(2*c),Int[(d+e*x)^(m-2)*Sinh[a+b*x+c*x^2],x]] /;
FreeQ[{a,b,c,d,e},x] && RationalQ[m] && m>1 && ZeroQ[b*e-2*c*d]


(* ::Code:: *)
Int[(d_.+e_.*x_)^m_*Sinh[a_.+b_.*x_+c_.*x_^2],x_Symbol] :=
  e*(d+e*x)^(m-1)*Cosh[a+b*x+c*x^2]/(2*c) -
  Dist[(b*e-2*c*d)/(2*c),Int[(d+e*x)^(m-1)*Sinh[a+b*x+c*x^2],x]] -
  Dist[e^2*(m-1)/(2*c),Int[(d+e*x)^(m-2)*Cosh[a+b*x+c*x^2],x]] /;
FreeQ[{a,b,c,d,e},x] && RationalQ[m] && m>1 && NonzeroQ[b*e-2*c*d]


(* ::Code:: *)
Int[(d_.+e_.*x_)^m_*Cosh[a_.+b_.*x_+c_.*x_^2],x_Symbol] :=
  e*(d+e*x)^(m-1)*Sinh[a+b*x+c*x^2]/(2*c) - 
  Dist[(b*e-2*c*d)/(2*c),Int[(d+e*x)^(m-1)*Cosh[a+b*x+c*x^2],x]] - 
  Dist[e^2*(m-1)/(2*c),Int[(d+e*x)^(m-2)*Sinh[a+b*x+c*x^2],x]] /;
FreeQ[{a,b,c,d,e},x] && RationalQ[m] && m>1 && NonzeroQ[b*e-2*c*d]


(* ::Code:: *)
Int[(d_.+e_.*x_)^m_*Sinh[a_.+b_.*x_+c_.*x_^2],x_Symbol] :=
  (d+e*x)^(m+1)*Sinh[a+b*x+c*x^2]/(e*(m+1)) -
  Dist[2*c/(e^2*(m+1)),Int[(d+e*x)^(m+2)*Cosh[a+b*x+c*x^2],x]] /;
FreeQ[{a,b,c,d,e},x] && RationalQ[m] && m<-1 && ZeroQ[b*e-2*c*d]


(* ::Code:: *)
Int[(d_.+e_.*x_)^m_*Cosh[a_.+b_.*x_+c_.*x_^2],x_Symbol] :=
  (d+e*x)^(m+1)*Cosh[a+b*x+c*x^2]/(e*(m+1)) - 
  Dist[2*c/(e^2*(m+1)),Int[(d+e*x)^(m+2)*Sinh[a+b*x+c*x^2],x]] /;
FreeQ[{a,b,c,d,e},x] && RationalQ[m] && m<-1 && ZeroQ[b*e-2*c*d]


(* ::Code:: *)
Int[(d_.+e_.*x_)^m_*Sinh[a_.+b_.*x_+c_.*x_^2],x_Symbol] :=
  (d+e*x)^(m+1)*Sinh[a+b*x+c*x^2]/(e*(m+1)) -
  Dist[(b*e-2*c*d)/(e^2*(m+1)),Int[(d+e*x)^(m+1)*Cosh[a+b*x+c*x^2],x]] -
  Dist[2*c/(e^2*(m+1)),Int[(d+e*x)^(m+2)*Cosh[a+b*x+c*x^2],x]] /;
FreeQ[{a,b,c,d,e},x] && RationalQ[m] && m<-1 && NonzeroQ[b*e-2*c*d]


(* ::Code:: *)
Int[(d_.+e_.*x_)^m_*Cosh[a_.+b_.*x_+c_.*x_^2],x_Symbol] :=
  (d+e*x)^(m+1)*Cosh[a+b*x+c*x^2]/(e*(m+1)) - 
  Dist[(b*e-2*c*d)/(e^2*(m+1)),Int[(d+e*x)^(m+1)*Sinh[a+b*x+c*x^2],x]] -
  Dist[2*c/(e^2*(m+1)),Int[(d+e*x)^(m+2)*Sinh[a+b*x+c*x^2],x]] /;
FreeQ[{a,b,c,d,e},x] && RationalQ[m] && m<-1 && NonzeroQ[b*e-2*c*d]


(* ::Code:: *)
Int[Sinh[b_.*Log[c_.*x_^n_.]]^p_.,x_Symbol] :=
  Int[((c*x^n)^b/2 - 1/(2*(c*x^n)^b))^p,x] /;
FreeQ[c,x] && RationalQ[{b,n,p}]


(* ::Code:: *)
Int[Cosh[b_.*Log[c_.*x_^n_.]]^p_.,x_Symbol] :=
  Int[((c*x^n)^b/2 + 1/(2*(c*x^n)^b))^p,x] /;
FreeQ[c,x] && RationalQ[{b,n,p}]


(* ::Code:: *)
Int[Sinh[a_.+b_.*Log[c_.*x_^n_.]],x_Symbol] :=
  x*Sinh[a+b*Log[c*x^n]]/(1-b^2*n^2) -
  b*n*x*Cosh[a+b*Log[c*x^n]]/(1-b^2*n^2) /;
FreeQ[{a,b,c,n},x] && NonzeroQ[1-b^2*n^2]


(* ::Code:: *)
Int[Cosh[a_.+b_.*Log[c_.*x_^n_.]],x_Symbol] :=
  x*Cosh[a+b*Log[c*x^n]]/(1-b^2*n^2) -
  b*n*x*Sinh[a+b*Log[c*x^n]]/(1-b^2*n^2) /;
FreeQ[{a,b,c,n},x] && NonzeroQ[1-b^2*n^2]


(* ::Code:: *)
Int[Sqrt[Sinh[a_.+b_.*Log[c_.*x_^n_.]]],x_Symbol] :=
  x*Sqrt[Sinh[a+b*Log[c*x^n]]]/Sqrt[-1+E^(2*a)*(c*x^n)^(4/n)]*
    Int[Sqrt[-1+E^(2*a)*(c*x^n)^(4/n)]/x,x] /;
FreeQ[{a,b,c,n},x] && ZeroQ[b*n-2]


(* ::Code:: *)
Int[Sqrt[Cosh[a_.+b_.*Log[c_.*x_^n_.]]],x_Symbol] :=
  x*Sqrt[Cosh[a+b*Log[c*x^n]]]/Sqrt[1+E^(2*a)*(c*x^n)^(4/n)]*
    Int[Sqrt[1+E^(2*a)*(c*x^n)^(4/n)]/x,x] /;
FreeQ[{a,b,c,n},x] && ZeroQ[b*n-2]


(* ::Code:: *)
Int[Sinh[a_.+b_.*Log[c_.*x_^n_.]]^p_,x_Symbol] :=
  x*Sinh[a+b*Log[c*x^n]]^p/(1-b^2*n^2*p^2) -
  b*n*p*x*Cosh[a+b*Log[c*x^n]]*Sinh[a+b*Log[c*x^n]]^(p-1)/(1-b^2*n^2*p^2) +
  Dist[b^2*n^2*p*(p-1)/(1-b^2*n^2*p^2),Int[Sinh[a+b*Log[c*x^n]]^(p-2),x]] /;
FreeQ[{a,b,c,n},x] && RationalQ[p] && p>1 && NonzeroQ[1-b^2*n^2*p^2]


(* ::Code:: *)
Int[Cosh[a_.+b_.*Log[c_.*x_^n_.]]^p_,x_Symbol] :=
  x*Cosh[a+b*Log[c*x^n]]^p/(1-b^2*n^2*p^2) -
  b*n*p*x*Sinh[a+b*Log[c*x^n]]*Cosh[a+b*Log[c*x^n]]^(p-1)/(1-b^2*n^2*p^2) -
  Dist[b^2*n^2*p*(p-1)/(1-b^2*n^2*p^2),Int[Cosh[a+b*Log[c*x^n]]^(p-2),x]] /;
FreeQ[{a,b,c,n},x] && RationalQ[p] && p>1 && NonzeroQ[1-b^2*n^2*p^2]


(* ::Code:: *)
Int[Sinh[a_.+b_.*Log[c_.*x_^n_.]]^p_,x_Symbol] :=
  x*Coth[a+b*Log[c*x^n]]*Sinh[a+b*Log[c*x^n]]^(p+2)/(b*n*(p+1)) -
  x*Sinh[a+b*Log[c*x^n]]^(p+2)/(b^2*n^2*(p+1)*(p+2)) /;
FreeQ[{a,b,c,n,p},x] && NonzeroQ[p+1] && NonzeroQ[p+2] && ZeroQ[1-b^2*n^2*(p+2)^2]


(* ::Code:: *)
Int[Cosh[a_.+b_.*Log[c_.*x_^n_.]]^p_,x_Symbol] :=
  -x*Tanh[a+b*Log[c*x^n]]*Cosh[a+b*Log[c*x^n]]^(p+2)/(b*n*(p+1)) +
  x*Cosh[a+b*Log[c*x^n]]^(p+2)/(b^2*n^2*(p+1)*(p+2)) /;
FreeQ[{a,b,c,n,p},x] && NonzeroQ[p+1] && NonzeroQ[p+2] && ZeroQ[1-b^2*n^2*(p+2)^2]


(* ::Code:: *)
Int[Sinh[a_.+b_.*Log[c_.*x_^n_.]]^p_,x_Symbol] :=
  x*Coth[a+b*Log[c*x^n]]*Sinh[a+b*Log[c*x^n]]^(p+2)/(b*n*(p+1)) -
  x*Sinh[a+b*Log[c*x^n]]^(p+2)/(b^2*n^2*(p+1)*(p+2)) +
  Dist[(1-b^2*n^2*(p+2)^2)/(b^2*n^2*(p+1)*(p+2)),Int[Sinh[a+b*Log[c*x^n]]^(p+2),x]] /;
FreeQ[{a,b,c,n},x] && RationalQ[p] && p<-1 && p!=-2 && NonzeroQ[1-b^2*n^2*(p+2)^2]


(* ::Code:: *)
Int[Cosh[a_.+b_.*Log[c_.*x_^n_.]]^p_,x_Symbol] :=
  -x*Tanh[a+b*Log[c*x^n]]*Cosh[a+b*Log[c*x^n]]^(p+2)/(b*n*(p+1)) +
  x*Cosh[a+b*Log[c*x^n]]^(p+2)/(b^2*n^2*(p+1)*(p+2)) -
  Dist[(1-b^2*n^2*(p+2)^2)/(b^2*n^2*(p+1)*(p+2)),Int[Cosh[a+b*Log[c*x^n]]^(p+2),x]] /;
FreeQ[{a,b,c,n},x] && RationalQ[p] && p<-1 && p!=-2 && NonzeroQ[1-b^2*n^2*(p+2)^2]


(* ::Code:: *)
Int[x_^m_.*Sinh[a_.+b_.*Log[c_.*x_^n_.]],x_Symbol] :=
  (m+1)*x^(m+1)*Sinh[a+b*Log[c*x^n]]/((m+1)^2-b^2*n^2) -
  b*n*x^(m+1)*Cosh[a+b*Log[c*x^n]]/((m+1)^2-b^2*n^2) /;
FreeQ[{a,b,c,m,n},x] && NonzeroQ[(m+1)^2-b^2*n^2] && NonzeroQ[m+1]


(* ::Code:: *)
Int[x_^m_.*Cosh[a_.+b_.*Log[c_.*x_^n_.]],x_Symbol] :=
  (m+1)*x^(m+1)*Cosh[a+b*Log[c*x^n]]/((m+1)^2-b^2*n^2) -
  b*n*x^(m+1)*Sinh[a+b*Log[c*x^n]]/((m+1)^2-b^2*n^2) /;
FreeQ[{a,b,c,m,n},x] && NonzeroQ[(m+1)^2-b^2*n^2] && NonzeroQ[m+1]


(* ::Code:: *)
Int[x_^m_.*Sinh[a_.+b_.*Log[c_.*x_^n_.]]^p_,x_Symbol] :=
  (m+1)*x^(m+1)*Sinh[a+b*Log[c*x^n]]^p/((m+1)^2-b^2*n^2*p^2) -
  b*n*p*x^(m+1)*Cosh[a+b*Log[c*x^n]]*Sinh[a+b*Log[c*x^n]]^(p-1)/((m+1)^2-b^2*n^2*p^2) +
  Dist[b^2*n^2*p*(p-1)/((m+1)^2-b^2*n^2*p^2),Int[x^m*Sinh[a+b*Log[c*x^n]]^(p-2),x]] /;
FreeQ[{a,b,c,m,n},x] && NonzeroQ[(m+1)^2-b^2*n^2*p^2] && RationalQ[p] && p>1 && NonzeroQ[m+1]


(* ::Code:: *)
Int[x_^m_.*Cosh[a_.+b_.*Log[c_.*x_^n_.]]^p_,x_Symbol] :=
  (m+1)*x^(m+1)*Cosh[a+b*Log[c*x^n]]^p/((m+1)^2-b^2*n^2*p^2) -
  b*n*p*x^(m+1)*Cosh[a+b*Log[c*x^n]]^(p-1)*Sinh[a+b*Log[c*x^n]]/((m+1)^2-b^2*n^2*p^2) -
  Dist[b^2*n^2*p*(p-1)/((m+1)^2-b^2*n^2*p^2),Int[x^m*Cosh[a+b*Log[c*x^n]]^(p-2),x]] /;
FreeQ[{a,b,c,m,n},x] && NonzeroQ[(m+1)^2-b^2*n^2*p^2] && RationalQ[p] && p>1 && NonzeroQ[m+1]


(* ::Code:: *)
Int[x_^m_.*Sinh[a_.+b_.*Log[c_.*x_^n_.]]^p_,x_Symbol] :=
  x^(m+1)*Coth[a+b*Log[c*x^n]]*Sinh[a+b*Log[c*x^n]]^(p+2)/(b*n*(p+1)) -
  (m+1)*x^(m+1)*Sinh[a+b*Log[c*x^n]]^(p+2)/(b^2*n^2*(p+1)*(p+2)) /;
FreeQ[{a,b,c,m,n,p},x] && ZeroQ[(m+1)^2-b^2*n^2*(p+2)^2] && NonzeroQ[p+1] && NonzeroQ[p+2]


(* ::Code:: *)
Int[x_^m_.*Cosh[a_.+b_.*Log[c_.*x_^n_.]]^p_,x_Symbol] :=
  -x^(m+1)*Tanh[a+b*Log[c*x^n]]*Cosh[a+b*Log[c*x^n]]^(p+2)/(b*n*(p+1)) +
  (m+1)*x^(m+1)*Cosh[a+b*Log[c*x^n]]^(p+2)/(b^2*n^2*(p+1)*(p+2)) /;
FreeQ[{a,b,c,m,n,p},x] && ZeroQ[(m+1)^2-b^2*n^2*(p+2)^2] && NonzeroQ[p+1] && NonzeroQ[p+2]


(* ::Code:: *)
Int[x_^m_.*Sinh[a_.+b_.*Log[c_.*x_^n_.]]^p_,x_Symbol] :=
  x^(m+1)*Coth[a+b*Log[c*x^n]]*Sinh[a+b*Log[c*x^n]]^(p+2)/(b*n*(p+1)) -
  (m+1)*x^(m+1)*Sinh[a+b*Log[c*x^n]]^(p+2)/(b^2*n^2*(p+1)*(p+2)) +
  Dist[((m+1)^2-b^2*n^2*(p+2)^2)/(b^2*n^2*(p+1)*(p+2)),Int[x^m*Sinh[a+b*Log[c*x^n]]^(p+2),x]] /;
FreeQ[{a,b,c,m,n},x] && NonzeroQ[(m+1)^2-b^2*n^2*(p+2)^2] && RationalQ[p] && p<-1 && p!=-2 && NonzeroQ[m+1]


(* ::Code:: *)
Int[x_^m_.*Cosh[a_.+b_.*Log[c_.*x_^n_.]]^p_,x_Symbol] :=
  -x^(m+1)*Tanh[a+b*Log[c*x^n]]*Cosh[a+b*Log[c*x^n]]^(p+2)/(b*n*(p+1)) +
  (m+1)*x^(m+1)*Cosh[a+b*Log[c*x^n]]^(p+2)/(b^2*n^2*(p+1)*(p+2)) -
  Dist[((m+1)^2-b^2*n^2*(p+2)^2)/(b^2*n^2*(p+1)*(p+2)),Int[x^m*Cosh[a+b*Log[c*x^n]]^(p+2),x]] /;
FreeQ[{a,b,c,m,n},x] && NonzeroQ[(m+1)^2-b^2*n^2*(p+2)^2] && RationalQ[p] && p<-1 && p!=-2 && NonzeroQ[m+1]


(* ::Code:: *)
Int[Sinh[a_.*x_*Log[b_.*x_]^p_.]*Log[b_.*x_]^p_.,x_Symbol] :=
  Cosh[a*x*Log[b*x]^p]/a -
  Dist[p,Int[Sinh[a*x*Log[b*x]^p]*Log[b*x]^(p-1),x]] /;
FreeQ[{a,b},x] && RationalQ[p] && p>0


(* ::Code:: *)
Int[Cosh[a_.*x_*Log[b_.*x_]^p_.]*Log[b_.*x_]^p_.,x_Symbol] :=
  Sinh[a*x*Log[b*x]^p]/a -
  Dist[p,Int[Cosh[a*x*Log[b*x]^p]*Log[b*x]^(p-1),x]] /;
FreeQ[{a,b},x] && RationalQ[p] && p>0


(* ::Code:: *)
Int[Sinh[a_.*x_^n_*Log[b_.*x_]^p_.]*Log[b_.*x_]^p_.,x_Symbol] :=
  Cosh[a*x^n*Log[b*x]^p]/(a*n*x^(n-1)) -
  Dist[p/n,Int[Sinh[a*x^n*Log[b*x]^p]*Log[b*x]^(p-1),x]] +
  Dist[(n-1)/(a*n),Int[Cosh[a*x^n*Log[b*x]^p]/x^n,x]] /;
FreeQ[{a,b},x] && RationalQ[{n,p}] && p>0


(* ::Code:: *)
Int[Cosh[a_.*x_^n_*Log[b_.*x_]^p_.]*Log[b_.*x_]^p_.,x_Symbol] :=
  Sinh[a*x^n*Log[b*x]^p]/(a*n*x^(n-1)) -
  Dist[p/n,Int[Cosh[a*x^n*Log[b*x]^p]*Log[b*x]^(p-1),x]] +
  Dist[(n-1)/(a*n),Int[Sinh[a*x^n*Log[b*x]^p]/x^n,x]] /;
FreeQ[{a,b},x] && RationalQ[{n,p}] && p>0


(* ::Code:: *)
Int[x_^m_.*Sinh[a_.*x_^n_.*Log[b_.*x_]^p_.]*Log[b_.*x_]^p_.,x_Symbol] :=
  Cosh[a*x^n*Log[b*x]^p]/(a*n) -
  Dist[p/n,Int[x^m*Sinh[a*x^n*Log[b*x]^p]*Log[b*x]^(p-1),x]] /;
FreeQ[{a,b},x] && RationalQ[{m,n,p}] && p>0 && ZeroQ[m-n+1]


(* ::Code:: *)
Int[x_^m_.*Cosh[a_.*x_^n_.*Log[b_.*x_]^p_.]*Log[b_.*x_]^p_.,x_Symbol] :=
  Sinh[a*x^n*Log[b*x]^p]/(a*n) -
  Dist[p/n,Int[x^m*Cosh[a*x^n*Log[b*x]^p]*Log[b*x]^(p-1),x]] /;
FreeQ[{a,b},x] && RationalQ[{m,n,p}] && p>0 && ZeroQ[m-n+1]


(* ::Code:: *)
Int[x_^m_*Sinh[a_.*x_^n_.*Log[b_.*x_]^p_.]*Log[b_.*x_]^p_.,x_Symbol] :=
  x^(m-n+1)*Cosh[a*x^n*Log[b*x]^p]/(a*n) -
  Dist[p/n,Int[x^m*Sinh[a*x^n*Log[b*x]^p]*Log[b*x]^(p-1),x]] -
  Dist[(m-n+1)/(a*n),Int[x^(m-n)*Cosh[a*x^n*Log[b*x]^p],x]] /;
FreeQ[{a,b},x] && RationalQ[{m,n,p}] && p>0 && NonzeroQ[m-n+1]


(* ::Code:: *)
Int[x_^m_*Cosh[a_.*x_^n_.*Log[b_.*x_]^p_.]*Log[b_.*x_]^p_.,x_Symbol] :=
  x^(m-n+1)*Sinh[a*x^n*Log[b*x]^p]/(a*n) -
  Dist[p/n,Int[x^m*Cosh[a*x^n*Log[b*x]^p]*Log[b*x]^(p-1),x]] -
  Dist[(m-n+1)/(a*n),Int[x^(m-n)*Sinh[a*x^n*Log[b*x]^p],x]] /;
FreeQ[{a,b},x] && RationalQ[{m,n,p}] && p>0 && NonzeroQ[m-n+1]


(* ::Code:: *)
Int[Sinh[c_.+d_.*x_]^2*Sinh[a_.+b_.*x_]^n_.,x_Symbol] :=
  -Dist[1/2,Int[Sinh[a+b*x]^n,x]] + 
  Dist[1/2,Int[Cosh[a+b*x]*Sinh[a+b*x]^n,x]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[c-a/2] && ZeroQ[d-b/2] && Not[OddQ[n]]


(* ::Code:: *)
Int[Cosh[c_.+d_.*x_]^2*Sinh[a_.+b_.*x_]^n_.,x_Symbol] :=
  Dist[1/2,Int[Sinh[a+b*x]^n,x]] + 
  Dist[1/2,Int[Cosh[a+b*x]*Sinh[a+b*x]^n,x]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[c-a/2] && ZeroQ[d-b/2] && Not[OddQ[n]]


(* ::Code:: *)
Int[u_*Sinh[a_.+b_.*x_]^n_.,x_Symbol] :=
  Dist[2^n,Int[u*Cosh[a/2+b*x/2]^n*Sinh[a/2+b*x/2]^n,x]] /;
FreeQ[{a,b},x] && IntegerQ[n] && ZeroQ[a/2+b*x/2-FunctionOfHyperbolic[u,x]]


(* ::Code:: *)
Int[u_*Sinh[v_]^2,x_Symbol] :=
  Dist[-1/2,Int[u,x]] + 
  Dist[1/2,Int[u*Cosh[2*v],x]] /;
FunctionOfHyperbolicQ[u,2*v,x]


(* ::Code:: *)
Int[u_*Cosh[v_]^2,x_Symbol] :=
  Dist[1/2,Int[u,x]] + 
  Dist[1/2,Int[u*Cosh[2*v],x]] /;
FunctionOfHyperbolicQ[u,2*v,x]



(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Code:: *)
Int[Sinh[c_.+d_.*x_],x_Symbol] :=
  Cosh[c+d*x]/d /;
FreeQ[{c,d},x]


(* ::Code:: *)
Int[Cosh[a_.+b_.*x_],x_Symbol] :=
  Sinh[a+b*x]/b /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[Sinh[c_.+d_.*x_]^2,x_Symbol] :=
  -x/2 + Cosh[c+d*x]*Sinh[c+d*x]/(2*d) /;
FreeQ[{c,d},x]


(* ::Code:: *)
Int[Cosh[a_.+b_.*x_]^2,x_Symbol] :=
  x/2 + Cosh[a+b*x]*Sinh[a+b*x]/(2*b) /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[Sinh[c_.+d_.*x_]^n_,x_Symbol] :=
  Dist[1/d,Subst[Int[Expand[(-1+x^2)^((n-1)/2),x],x],x,Cosh[c+d*x]]] /;
FreeQ[{c,d},x] && OddQ[n] && n>1


(* ::Code:: *)
Int[Cosh[a_.+b_.*x_]^n_,x_Symbol] :=
  Dist[1/b,Subst[Int[Expand[(1+x^2)^((n-1)/2),x],x],x,Sinh[a+b*x]]] /;
FreeQ[{a,b},x] && OddQ[n] && n>1


(* ::Code:: *)
Int[Sinh[c_.+d_.*x_]^n_,x_Symbol] :=
  Cosh[c+d*x]*Sinh[c+d*x]^(n-1)/(d*n) -
  Dist[(n-1)/n,Int[Sinh[c+d*x]^(n-2),x]] /;
FreeQ[{c,d},x] && Not[OddQ[n]] && RationalQ[n] && n>1


(* ::Code:: *)
Int[Cosh[a_.+b_.*x_]^n_,x_Symbol] :=
  Sinh[a+b*x]*Cosh[a+b*x]^(n-1)/(b*n) + 
  Dist[(n-1)/n,Int[Cosh[a+b*x]^(n-2),x]] /;
FreeQ[{a,b},x] && EvenQ[n] && n>1


(* ::Code:: *)
(* Int[(Sinh[c_.+d_.*x_])^n_,x_Symbol] :=
  Cosh[c+d*x]*Sinh[c+d*x]^(n+1)/(d*(n+1)) - 
  Dist[(n+2)/(n+1),Int[Sinh[c+d*x]^(n+2),x]] /;
FreeQ[{c,d},x] && IntegerQ[n] && n<-1 *)


(* ::Code:: *)
(* Int[Cosh[a_.+b_.*x_]^n_,x_Symbol] :=
  -Sinh[a+b*x]*Cosh[a+b*x]^(n+1)/(b*(n+1)) + 
  Dist[(n+2)/((n+1)),Int[Cosh[a+b*x]^(n+2),x]] /;
FreeQ[{a,b},x] && IntegerQ[n] && n<-1 *)


(* ::Code:: *)
Int[1/(a_+b_.*Sinh[c_.+d_.*x_]),x_Symbol] :=
  -Cosh[c+d*x]/(d*(b-a*Sinh[c+d*x])) /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2+b^2]


(* ::Code:: *)
Int[1/(a_+b_.*Cosh[c_.+d_.*x_]),x_Symbol] :=
  Sinh[c+d*x]/(d*(b+a*Cosh[c+d*x])) /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2-b^2]


(* ::Code:: *)
Int[1/(a_+b_.*Sinh[c_.+d_.*x_]),x_Symbol] :=
  -2*ArcTanh[(b-a*Tanh[(c+d*x)/2])/Rt[a^2+b^2,2]]/(d*Rt[a^2+b^2,2]) /;
FreeQ[{a,b,c,d},x] && PosQ[a^2+b^2]


(* ::Code:: *)
Int[1/(a_+b_.*Cosh[c_.+d_.*x_]),x_Symbol] :=
  2*ArcTanh[((a-b)*Tanh[(c+d*x)/2])/Rt[a^2-b^2,2]]/(d*Rt[a^2-b^2,2]) /;
FreeQ[{a,b,c,d},x] && PosQ[a^2-b^2]


(* ::Code:: *)
Int[1/(a_+b_.*Sinh[c_.+d_.*x_]),x_Symbol] :=
  2*ArcTan[(b-a*Tanh[(c+d*x)/2])/Rt[-a^2-b^2,2]]/(d*Rt[-a^2-b^2,2]) /;
FreeQ[{a,b,c,d},x] && NegQ[a^2+b^2]


(* ::Code:: *)
Int[1/(a_+b_.*Cosh[c_.+d_.*x_]),x_Symbol] :=
  -2*ArcTan[((a-b)*Tanh[(c+d*x)/2])/Rt[b^2-a^2,2]]/(d*Rt[b^2-a^2,2]) /;
FreeQ[{a,b,c,d},x] && NegQ[a^2-b^2]


(* ::Code:: *)
Int[Sqrt[a_+b_.*Sinh[c_.+d_.*x_]],x_Symbol] :=
  2*b*Cosh[c+d*x]/(d*Sqrt[a+b*Sinh[c+d*x]]) /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2+b^2]


(* ::Code:: *)
Int[Sqrt[a_+b_.*Cosh[c_.+d_.*x_]],x_Symbol] :=
  2*b*Sinh[c+d*x]/(d*Sqrt[a+b*Cosh[c+d*x]]) /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2-b^2]


(* ::Code:: *)
Int[Sqrt[a_.+b_.*Sinh[c_.+d_.*x_]],x_Symbol] :=
  2*I*Sqrt[a-I*b]/d*EllipticE[Pi/4-I*(c+d*x)/2,Sim[2*b/(a*I+b)]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2+b^2] && PositiveQ[a-I*b]


(* ::Code:: *)
Int[Sqrt[a_.+b_.*Cosh[c_.+d_.*x_]],x_Symbol] :=
  -2*I*Sqrt[a+b]/d*EllipticE[I*(c+d*x)/2,Sim[2*b/(a+b)]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2-b^2] && PositiveQ[a+b]


(* ::Code:: *)
Int[Sqrt[a_.+b_.*Sinh[c_.+d_.*x_]],x_Symbol] :=
  Sqrt[a+b*Sinh[c+d*x]]/Sqrt[(a+b*Sinh[c+d*x])/(a-I*b)]*Int[Sqrt[a/(a-I*b)+b/(a-I*b)*Sinh[c+d*x]],x] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2+b^2] && Not[PositiveQ[a-I*b]]


(* ::Code:: *)
Int[Sqrt[a_.+b_.*Cosh[c_.+d_.*x_]],x_Symbol] :=
  Sqrt[a+b*Cosh[c+d*x]]/Sqrt[(a+b*Cosh[c+d*x])/(a+b)]*Int[Sqrt[a/(a+b)+b/(a+b)*Cosh[c+d*x]],x] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2-b^2] && Not[PositiveQ[a+b]]


(* ::Code:: *)
Int[1/Sqrt[a_+b_.*Sinh[c_.+d_.*x_]],x_Symbol] :=
  -2/(d*Sqrt[a+b*Sinh[c+d*x]])*Sinh[(c+d*x)/2+Pi*I/4]*ArcTanh[Cosh[(c+d*x)/2+Pi*I/4]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a-I*b]


(* ::Code:: *)
Int[1/Sqrt[a_+b_.*Cosh[c_.+d_.*x_]],x_Symbol] :=
  2/(d*Sqrt[a+b*Cosh[c+d*x]])*Cosh[(c+d*x)/2]*ArcTan[Sinh[(c+d*x)/2]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a-b]


(* ::Code:: *)
Int[1/Sqrt[a_+b_.*Sinh[c_.+d_.*x_]],x_Symbol] :=
  2/(d*Sqrt[a+b*Sinh[c+d*x]])*Cosh[(c+d*x)/2+Pi*I/4]*ArcTan[Sinh[(c+d*x)/2+Pi*I/4]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a+I*b]


(* ::Code:: *)
Int[1/Sqrt[a_+b_.*Cosh[c_.+d_.*x_]],x_Symbol] :=
  -2/(d*Sqrt[a+b*Cosh[c+d*x]])*Sinh[(c+d*x)/2]*ArcTanh[Cosh[(c+d*x)/2]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a+b]


(* ::Code:: *)
Int[1/Sqrt[a_.+b_.*Sinh[c_.+d_.*x_]],x_Symbol] :=
  2*I/(d*Sqrt[a-I*b])*EllipticF[Pi/4-I*(c+d*x)/2,Sim[2*b/(a*I+b)]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2+b^2] && PositiveQ[a-I*b]


(* ::Code:: *)
Int[1/Sqrt[a_.+b_.*Cosh[c_.+d_.*x_]],x_Symbol] :=
  -2*I/(d*Sqrt[a+b])*EllipticF[I*(c+d*x)/2,Sim[2*b/(a+b)]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2-b^2] && PositiveQ[a+b]


(* ::Code:: *)
Int[1/Sqrt[a_.+b_.*Sinh[c_.+d_.*x_]],x_Symbol] :=
  Sqrt[(a+b*Sinh[c+d*x])/(a-I*b)]/Sqrt[a+b*Sinh[c+d*x]]*Int[1/Sqrt[a/(a-I*b)+b/(a-I*b)*Sinh[c+d*x]],x] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2+b^2] && Not[PositiveQ[a-I*b]]


(* ::Code:: *)
Int[1/Sqrt[a_.+b_.*Cosh[c_.+d_.*x_]],x_Symbol] :=
  Sqrt[(a+b*Cosh[c+d*x])/(a+b)]/Sqrt[a+b*Cosh[c+d*x]]*Int[1/Sqrt[a/(a+b)+b/(a+b)*Cosh[c+d*x]],x] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2-b^2] && Not[PositiveQ[a+b]]


(* ::Code:: *)
Int[(a_+b_.*Sinh[c_.+d_.*x_])^n_,x_Symbol] :=
  b*Cosh[c+d*x]*(a+b*Sinh[c+d*x])^(n-1)/(d*n) +
  Dist[a*(2*n-1)/n,Int[(a+b*Sinh[c+d*x])^(n-1),x]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2+b^2] && FractionQ[n] && n>1


(* ::Code:: *)
Int[(a_+b_.*Cosh[c_.+d_.*x_])^n_,x_Symbol] :=
  b*Sinh[c+d*x]*(a+b*Cosh[c+d*x])^(n-1)/(d*n) +
  Dist[a*(2*n-1)/n,Int[(a+b*Cosh[c+d*x])^(n-1),x]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2-b^2] && FractionQ[n] && n>1


(* ::Code:: *)
Int[(b_.*Sinh[c_.+d_.*x_])^n_,x_Symbol] :=
  b*Cosh[c+d*x]*(b*Sinh[c+d*x])^(n-1)/(d*n) -
  Dist[(n-1)*b^2/n,Int[(b*Sinh[c+d*x])^(n-2),x]] /;
FreeQ[{b,c,d},x] && FractionQ[n] && n>1


(* ::Code:: *)
Int[(b_.*Cosh[c_.+d_.*x_])^n_,x_Symbol] :=
  b*Sinh[c+d*x]*(b*Cosh[c+d*x])^(n-1)/(d*n) +
  Dist[(n-1)*b^2/n,Int[(b*Cosh[c+d*x])^(n-2),x]] /;
FreeQ[{b,c,d},x] && FractionQ[n] && n>1


(* ::Code:: *)
Int[(a_+b_.*Sinh[c_.+d_.*x_])^n_,x_Symbol] :=
  b*Cosh[c+d*x]*(a+b*Sinh[c+d*x])^(n-1)/(d*n) -
  Dist[1/n,Int[((n-1)*(a^2+b^2)-a^2*(2*n-1)-a*b*(2*n-1)*Sinh[c+d*x])*(a+b*Sinh[c+d*x])^(n-2),x]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2+b^2] && FractionQ[n] && n>1


(* ::Code:: *)
Int[(a_+b_.*Cosh[c_.+d_.*x_])^n_,x_Symbol] :=
  b*Sinh[c+d*x]*(a+b*Cosh[c+d*x])^(n-1)/(d*n) -
  Dist[1/n,Int[((n-1)*(a^2-b^2)-a^2*(2*n-1)-a*b*(2*n-1)*Cosh[c+d*x])*(a+b*Cosh[c+d*x])^(n-2),x]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2-b^2] && FractionQ[n] && n>1


(* ::Code:: *)
Int[(a_+b_.*Sinh[c_.+d_.*x_])^n_,x_Symbol] :=
  -b*Cosh[c+d*x]*(a+b*Sinh[c+d*x])^n/(a*d*(2*n+1)) +
  Dist[(n+1)/(a*(2*n+1)),Int[(a+b*Sinh[c+d*x])^(n+1),x]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2+b^2] && RationalQ[n] && n<-1


(* ::Code:: *)
Int[(a_+b_.*Cosh[c_.+d_.*x_])^n_,x_Symbol] :=
  -b*Sinh[c+d*x]*(a+b*Cosh[c+d*x])^n/(a*d*(2*n+1)) +
  Dist[(n+1)/(a*(2*n+1)),Int[(a+b*Cosh[c+d*x])^(n+1),x]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2-b^2] && RationalQ[n] && n<-1


(* ::Code:: *)
Int[1/(a_+b_.*Sinh[c_.+d_.*x_])^2,x_Symbol] :=
  -b*Cosh[c+d*x]/(d*(a^2+b^2)*(a+b*Sinh[c+d*x])) + 
  Dist[a/(a^2+b^2),Int[1/(a+b*Sinh[c+d*x]),x]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2+b^2]


(* ::Code:: *)
Int[1/(a_+b_.*Cosh[c_.+d_.*x_])^2,x_Symbol] :=
  -b*Sinh[c+d*x]/(d*(a^2-b^2)*(a+b*Cosh[c+d*x])) + 
  Dist[a/(a^2-b^2),Int[1/(a+b*Cosh[c+d*x]),x]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2-b^2]


(* ::Code:: *)
Int[1/(a_+b_.*Sinh[c_.+d_.*x_])^(3/2),x_Symbol] :=
  -2*b*Cosh[c+d*x]/(d*(a^2+b^2)*Sqrt[a+b*Sinh[c+d*x]]) +
  Dist[1/(a^2+b^2),Int[Sqrt[a+b*Sinh[c+d*x]],x]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2+b^2]


(* ::Code:: *)
Int[1/(a_+b_.*Cosh[c_.+d_.*x_])^(3/2),x_Symbol] :=
  -2*b*Sinh[c+d*x]/(d*(a^2-b^2)*Sqrt[a+b*Cosh[c+d*x]]) +
  Dist[1/(a^2-b^2),Int[Sqrt[a+b*Cosh[c+d*x]],x]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2-b^2]


(* ::Code:: *)
Int[(b_.*Sinh[c_.+d_.*x_])^n_,x_Symbol] :=
  Cosh[c+d*x]*(b*Sinh[c+d*x])^(n+1)/(b*d*(n+1)) -
  Dist[(n+2)/((n+1)*b^2),Int[(b*Sinh[c+d*x])^(n+2),x]] /;
FreeQ[{b,c,d},x] && FractionQ[n] && n<-1


(* ::Code:: *)
Int[(b_.*Cosh[c_.+d_.*x_])^n_,x_Symbol] :=
  -Sinh[c+d*x]*(b*Cosh[c+d*x])^(n+1)/(b*d*(n+1)) +
  Dist[(n+2)/((n+1)*b^2),Int[(b*Cosh[c+d*x])^(n+2),x]] /;
FreeQ[{b,c,d},x] && FractionQ[n] && n<-1


(* ::Code:: *)
Int[(a_+b_.*Sinh[c_.+d_.*x_])^n_,x_Symbol] :=
  b*Cosh[c+d*x]*(a+b*Sinh[c+d*x])^(n+1)/(d*(n+1)*(a^2+b^2)) +
  Dist[1/((n+1)*(a^2+b^2)),Int[(a*(n+1)-b*(n+2)*Sinh[c+d*x])*(a+b*Sinh[c+d*x])^(n+1),x]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2+b^2] && RationalQ[n] && n<-1 && n!=-2 && n!=-3/2


(* ::Code:: *)
Int[(a_+b_.*Cosh[c_.+d_.*x_])^n_,x_Symbol] :=
  b*Sinh[c+d*x]*(a+b*Cosh[c+d*x])^(n+1)/(d*(n+1)*(a^2-b^2)) + 
  Dist[1/((n+1)*(a^2-b^2)),Int[(a*(n+1)-b*(n+2)*Cosh[c+d*x])*(a+b*Cosh[c+d*x])^(n+1),x]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2-b^2] && RationalQ[n] && n<-1 && n!=-2 && n!=-3/2


(* ::Code:: *)
Int[(A_.+B_.*Sinh[c_.+d_.*x_])/(a_.+b_.*Sinh[c_.+d_.*x_]),x_Symbol] :=
  B*x/b + Dist[(b*A-a*B)/b,Int[1/(a+b*Sinh[c+d*x]),x]] /;
FreeQ[{a,b,c,d,A,B},x] && NonzeroQ[b*A-a*B]


(* ::Code:: *)
Int[(A_.+B_.*Cosh[c_.+d_.*x_])/(a_.+b_.*Cosh[c_.+d_.*x_]),x_Symbol] :=
  B*x/b + Dist[(b*A-a*B)/b,Int[1/(a+b*Cosh[c+d*x]),x]] /;
FreeQ[{a,b,c,d,A,B},x] && NonzeroQ[b*A-a*B]


(* ::Code:: *)
Int[(A_+B_.*Sinh[c_.+d_.*x_])/(a_+b_.*Sinh[c_.+d_.*x_])^2,x_Symbol] :=
  B*Cosh[c+d*x]/(a*d*(a+b*Sinh[c+d*x])) /;
FreeQ[{a,b,c,d,A,B},x] && ZeroQ[a*A+b*B]


(* ::Code:: *)
Int[(A_+B_.*Cosh[c_.+d_.*x_])/(a_+b_.*Cosh[c_.+d_.*x_])^2,x_Symbol] :=
  B*Sinh[c+d*x]/(a*d*(a+b*Cosh[c+d*x])) /;
FreeQ[{a,b,c,d,A,B},x] && ZeroQ[a*A-b*B]


(* ::Code:: *)
Int[(A_.+B_.*Sinh[c_.+d_.*x_])/(a_.+b_.*Sinh[c_.+d_.*x_])^2,x_Symbol] :=
  -(b*A-a*B)*Cosh[c+d*x]/(d*(a^2+b^2)*(a+b*Sinh[c+d*x])) +
  Dist[(a*A+b*B)/(a^2+b^2),Int[1/(a+b*Sinh[c+d*x]),x]] /;
FreeQ[{a,b,c,d,A,B},x] && NonzeroQ[b*A-a*B] && NonzeroQ[a^2+b^2] && NonzeroQ[a*A+b*B]


(* ::Code:: *)
Int[(A_.+B_.*Cosh[c_.+d_.*x_])/(a_.+b_.*Cosh[c_.+d_.*x_])^2,x_Symbol] :=
  -(b*A-a*B)*Sinh[c+d*x]/(d*(a^2-b^2)*(a+b*Cosh[c+d*x])) +
  Dist[(a*A-b*B)/(a^2-b^2),Int[1/(a+b*Cosh[c+d*x]),x]] /;
FreeQ[{a,b,c,d,A,B},x] && NonzeroQ[b*A-a*B] && NonzeroQ[a^2-b^2] && NonzeroQ[a*A-b*B]


(* ::Code:: *)
Int[(A_.+B_.*Sinh[c_.+d_.*x_])/Sqrt[a_.+b_.*Sinh[c_.+d_.*x_]],x_Symbol] :=
  Dist[B/b,Int[Sqrt[a+b*Sinh[c+d*x]],x]] +
  Dist[(b*A-a*B)/b,Int[1/Sqrt[a+b*Sinh[c+d*x]],x]] /;
FreeQ[{a,b,c,d,A,B},x] && NonzeroQ[b*A-a*B] && NonzeroQ[a^2+b^2]


(* ::Code:: *)
Int[(A_.+B_.*Cosh[c_.+d_.*x_])/Sqrt[a_+b_.*Cosh[c_.+d_.*x_]],x_Symbol] :=
  Dist[B/b,Int[Sqrt[a+b*Cosh[c+d*x]],x]] +
  Dist[(b*A-a*B)/b,Int[1/Sqrt[a+b*Cosh[c+d*x]],x]] /;
FreeQ[{a,b,c,d,A,B},x] && NonzeroQ[b*A-a*B] && NonzeroQ[a^2-b^2]


(* ::Code:: *)
Int[(A_.+B_.*Sinh[c_.+d_.*x_])*(a_+b_.*Sinh[c_.+d_.*x_])^n_,x_Symbol] :=
  Dist[B/b,Int[(a+b*Sinh[c+d*x])^(n+1),x]] +
  Dist[(b*A-a*B)/b,Int[(a+b*Sinh[c+d*x])^n,x]] /;
FreeQ[{a,b,c,d,A,B},x] && NonzeroQ[b*A-a*B] && ZeroQ[a^2+b^2] && RationalQ[n]


(* ::Code:: *)
Int[(A_.+B_.*Cosh[c_.+d_.*x_])*(a_+b_.*Cosh[c_.+d_.*x_])^n_,x_Symbol] :=
  Dist[B/b,Int[(a+b*Cosh[c+d*x])^(n+1),x]] +
  Dist[(b*A-a*B)/b,Int[(a+b*Cosh[c+d*x])^n,x]] /;
FreeQ[{a,b,c,d,A,B},x] && NonzeroQ[b*A-a*B] && ZeroQ[a^2-b^2] && RationalQ[n]


(* ::Code:: *)
Int[(A_.+B_.*Sinh[c_.+d_.*x_])*(a_.+b_.*Sinh[c_.+d_.*x_])^n_,x_Symbol] :=
  (b*A-a*B)*Cosh[c+d*x]*(a+b*Sinh[c+d*x])^(n+1)/(d*(n+1)*(a^2+b^2)) +
  Dist[1/((n+1)*(a^2+b^2)),Int[((n+1)*(a*A+b*B)-(n+2)*(b*A-a*B)*Sinh[c+d*x])*(a+b*Sinh[c+d*x])^(n+1),x]] /;
FreeQ[{a,b,c,d,A,B},x] && NonzeroQ[b*A-a*B] && NonzeroQ[a^2+b^2] && RationalQ[n] && n<-1 && n!=-2


(* ::Code:: *)
Int[(A_.+B_.*Cosh[c_.+d_.*x_])*(a_.+b_.*Cosh[c_.+d_.*x_])^n_,x_Symbol] :=
  (b*A-a*B)*Sinh[c+d*x]*(a+b*Cosh[c+d*x])^(n+1)/(d*(n+1)*(a^2-b^2)) +
  Dist[1/((n+1)*(a^2-b^2)),Int[((n+1)*(a*A-b*B)-(n+2)*(b*A-a*B)*Cosh[c+d*x])*(a+b*Cosh[c+d*x])^(n+1),x]] /;
FreeQ[{a,b,c,d,A,B},x] && NonzeroQ[b*A-a*B] && NonzeroQ[a^2-b^2] && RationalQ[n] && n<-1 && n!=-2


(* ::Code:: *)
Int[(A_.+B_.*Sinh[c_.+d_.*x_])*(a_.+b_.*Sinh[c_.+d_.*x_])^n_,x_Symbol] :=
  B*Cosh[c+d*x]*(a+b*Sinh[c+d*x])^n/(d*(n+1)) + 
  Dist[1/(n+1),Int[(-b*B*n+a*A*(n+1) + (a*B*n+b*A*(n+1))*Sinh[c+d*x])*(a+b*Sinh[c+d*x])^(n-1),x]] /;
FreeQ[{a,b,c,d,A,B},x] && NonzeroQ[b*A-a*B] && NonzeroQ[a^2+b^2] && FractionQ[n] && n>0


(* ::Code:: *)
Int[(A_.+B_.*Cosh[c_.+d_.*x_])*(a_.+b_.*Cosh[c_.+d_.*x_])^n_,x_Symbol] :=
  B*Sinh[c+d*x]*(a+b*Cosh[c+d*x])^n/(d*(n+1)) + 
  Dist[1/(n+1),Int[(b*B*n+a*A*(n+1) + (a*B*n+b*A*(n+1))*Cosh[c+d*x])*(a+b*Cosh[c+d*x])^(n-1),x]] /;
FreeQ[{a,b,c,d,A,B},x] && NonzeroQ[b*A-a*B] && NonzeroQ[a^2-b^2] && FractionQ[n] && n>0
(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Code:: *)
Int[Tanh[a_.+b_.*x_],x_Symbol] :=
  Log[Cosh[a+b*x]]/b /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[Coth[a_.+b_.*x_],x_Symbol] :=
  Log[Sinh[a+b*x]]/b /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[Tanh[a_.+b_.*x_]^2,x_Symbol] :=
  x - Tanh[a+b*x]/b /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[Coth[a_.+b_.*x_]^2,x_Symbol] :=
  x - Coth[a+b*x]/b /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[(c_.*Tanh[a_.+b_.*x_])^n_,x_Symbol] :=
  -c*(c*Tanh[a+b*x])^(n-1)/(b*(n-1)) + 
  Dist[c^2,Int[(c*Tanh[a+b*x])^(n-2),x]] /;
FreeQ[{a,b,c},x] && RationalQ[n] && n>1


(* ::Code:: *)
Int[(c_.*Coth[a_.+b_.*x_])^n_,x_Symbol] :=
  -c*(c*Coth[a+b*x])^(n-1)/(b*(n-1)) + 
  Dist[c^2,Int[(c*Coth[a+b*x])^(n-2),x]] /;
FreeQ[{a,b,c},x] && RationalQ[n] && n>1


(* ::Code:: *)
Int[(c_.*Tanh[a_.+b_.*x_])^n_,x_Symbol] :=
  (c*Tanh[a+b*x])^(n+1)/(b*c*(n+1)) + 
  Dist[1/c^2,Int[(c*Tanh[a+b*x])^(n+2),x]] /;
FreeQ[{a,b,c},x] && RationalQ[n] && n<-1


(* ::Code:: *)
Int[(c_.*Coth[a_.+b_.*x_])^n_,x_Symbol] :=
  (c*Coth[a+b*x])^(n+1)/(b*c*(n+1)) + 
  Dist[1/c^2,Int[(c*Coth[a+b*x])^(n+2),x]] /;
FreeQ[{a,b,c},x] && RationalQ[n] && n<-1


(* ::Code:: *)
Int[1/(a_+b_.*Tanh[c_.+d_.*x_]),x_Symbol] :=
  x/(2*a) - a/(2*b*d*(a+b*Tanh[c+d*x])) /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2-b^2]


(* ::Code:: *)
Int[1/(a_+b_.*Coth[c_.+d_.*x_]),x_Symbol] :=
  x/(2*a) - a/(2*b*d*(a+b*Coth[c+d*x])) /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2-b^2]


(* ::Code:: *)
Int[Sqrt[a_+b_.*Tanh[c_.+d_.*x_]],x_Symbol] :=
  Sqrt[2]*b/(d*Rt[a,2])*ArcTanh[Sqrt[a+b*Tanh[c+d*x]]/(Sqrt[2]*Rt[a,2])] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2-b^2] && PosQ[a]


(* ::Code:: *)
Int[Sqrt[a_+b_.*Coth[c_.+d_.*x_]],x_Symbol] :=
  (Sqrt[2]*b/(d*Rt[a,2])*ArcCoth[Sqrt[a+b*Coth[c+d*x]]/(Sqrt[2]*Rt[a,2])]) /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2-b^2] && PosQ[a]


(* ::Code:: *)
Int[Sqrt[a_+b_.*Tanh[c_.+d_.*x_]],x_Symbol] :=
  -Sqrt[2]*b/(d*Rt[-a,2])*ArcTan[Sqrt[a+b*Tanh[c+d*x]]/(Sqrt[2]*Rt[-a,2])] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2-b^2] && NegQ[a]


(* ::Code:: *)
Int[Sqrt[a_+b_.*Coth[c_.+d_.*x_]],x_Symbol] :=
  Sqrt[2]*b/(d*Rt[-a,2])*ArcCot[Sqrt[a+b*Coth[c+d*x]]/(Sqrt[2]*Rt[-a,2])] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2-b^2] && NegQ[a]


(* ::Code:: *)
Int[(a_+b_.*Tanh[c_.+d_.*x_])^n_,x_Symbol] :=
  -a^2*(a+b*Tanh[c+d*x])^(n-1)/(b*d*(n-1)) + 
  Dist[2*a,Int[(a+b*Tanh[c+d*x])^(n-1),x]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2-b^2] && FractionQ[n] && n>1


(* ::Code:: *)
Int[(a_+b_.*Coth[c_.+d_.*x_])^n_,x_Symbol] :=
  -a^2*(a+b*Coth[c+d*x])^(n-1)/(b*d*(n-1)) + 
  Dist[2*a,Int[(a+b*Coth[c+d*x])^(n-1),x]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2-b^2] && FractionQ[n] && n>1


(* ::Code:: *)
Int[(a_+b_.*Tanh[c_.+d_.*x_])^n_,x_Symbol] :=
  a*(a+b*Tanh[c+d*x])^n/(2*b*d*n) + 
  Dist[1/(2*a),Int[(a+b*Tanh[c+d*x])^(n+1),x]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2-b^2] && RationalQ[n] && n<0


(* ::Code:: *)
Int[(a_+b_.*Coth[c_.+d_.*x_])^n_,x_Symbol] :=
  a*(a+b*Coth[c+d*x])^n/(2*b*d*n) + 
  Dist[1/(2*a),Int[(a+b*Coth[c+d*x])^(n+1),x]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2-b^2] && RationalQ[n] && n<0


(* ::Code:: *)
Int[1/(a_+b_.*Tanh[c_.+d_.*x_]),x_Symbol] :=
  a*x/(a^2-b^2) - b*Log[a*Cosh[c+d*x]+b*Sinh[c+d*x]]/(d*(a^2-b^2)) /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2-b^2]


(* ::Code:: *)
Int[1/(a_+b_.*Coth[c_.+d_.*x_]),x_Symbol] :=
  a*x/(a^2-b^2) - b*Log[b*Cosh[c+d*x]+a*Sinh[c+d*x]]/(d*(a^2-b^2)) /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2-b^2]


(* ::Code:: *)
Int[(A_.+B_.*Tanh[c_.+d_.*x_])/(a_.+b_.*Tanh[c_.+d_.*x_]),x_Symbol] :=
  B*x/b + Dist[(b*A-a*B)/b,Int[1/(a+b*Tanh[c+d*x]),x]] /;
FreeQ[{a,b,c,d,A,B},x] && NonzeroQ[b*A-a*B]


(* ::Code:: *)
Int[(A_.+B_.*Coth[c_.+d_.*x_])/(a_.+b_.*Coth[c_.+d_.*x_]),x_Symbol] :=
  B*x/b + Dist[(b*A-a*B)/b,Int[1/(a+b*Coth[c+d*x]),x]] /;
FreeQ[{a,b,c,d,A,B},x] && NonzeroQ[b*A-a*B]


(* ::Code:: *)
Int[(A_+B_.*Tanh[c_.+d_.*x_])/Sqrt[a_.+b_.*Tanh[c_.+d_.*x_]],x_Symbol] :=
  2*B/(d*Sqrt[(b*A+a*B)/B])*ArcTanh[Sqrt[a+b*Tanh[c+d*x]]/Sqrt[(b*A+a*B)/B]] /;
FreeQ[{a,b,c,d,A,B},x] && ZeroQ[A^2-B^2] && NonzeroQ[b*A+a*B]


(* ::Code:: *)
Int[(A_+B_.*Coth[c_.+d_.*x_])/Sqrt[a_.+b_.*Coth[c_.+d_.*x_]],x_Symbol] :=
  2*B/(d*Sqrt[(b*A+a*B)/B])*ArcTanh[Sqrt[a+b*Coth[c+d*x]]/Sqrt[(b*A+a*B)/B]] /;
FreeQ[{a,b,c,d,A,B},x] && ZeroQ[A^2-B^2] && NonzeroQ[b*A+a*B]


(* ::Code:: *)
Int[(A_.+B_.*Tanh[c_.+d_.*x_])/Sqrt[a_.+b_.*Tanh[c_.+d_.*x_]],x_Symbol] :=
  Dist[(A+B)/2,Int[(1+Tanh[c+d*x])/Sqrt[a+b*Tanh[c+d*x]],x]] +
  Dist[(A-B)/2,Int[(1-Tanh[c+d*x])/Sqrt[a+b*Tanh[c+d*x]],x]] /;
FreeQ[{a,b,c,d,A,B},x] && NonzeroQ[A^2-B^2] && NonzeroQ[a^2-b^2]


(* ::Code:: *)
Int[(A_.+B_.*Coth[c_.+d_.*x_])/Sqrt[a_.+b_.*Coth[c_.+d_.*x_]],x_Symbol] :=
  Dist[(A+B)/2,Int[(1+Coth[c+d*x])/Sqrt[a+b*Coth[c+d*x]],x]] +
  Dist[(A-B)/2,Int[(1-Coth[c+d*x])/Sqrt[a+b*Coth[c+d*x]],x]] /;
FreeQ[{a,b,c,d,A,B},x] && NonzeroQ[A^2-B^2] && NonzeroQ[a^2-b^2]


(* ::Code:: *)
Int[(A_.+B_.*Tanh[c_.+d_.*x_])*(a_+b_.*Tanh[c_.+d_.*x_])^n_.,x_Symbol] :=
  -B*(a+b*Tanh[c+d*x])^n/(d*n) + 
  Int[(a*A+b*B+(b*A+a*B)*Tanh[c+d*x])*(a+b*Tanh[c+d*x])^(n-1),x] /;
FreeQ[{a,b,c,d,A,B},x] && RationalQ[n] && n>0


(* ::Code:: *)
Int[(A_.+B_.*Coth[c_.+d_.*x_])*(a_+b_.*Coth[c_.+d_.*x_])^n_.,x_Symbol] :=
  -B*(a+b*Coth[c+d*x])^n/(d*n) + 
  Int[(a*A+b*B+(b*A+a*B)*Coth[c+d*x])*(a+b*Coth[c+d*x])^(n-1),x] /;
FreeQ[{a,b,c,d,A,B},x] && RationalQ[n] && n>0


(* ::Code:: *)
Int[(A_.+B_.*Tanh[c_.+d_.*x_])*(a_+b_.*Tanh[c_.+d_.*x_])^n_,x_Symbol] :=
  -(b*A-a*B)*(a+b*Tanh[c+d*x])^(n+1)/(d*(a^2-b^2)*(n+1)) + 
  Dist[1/(a^2-b^2),Int[(a*A-b*B-(b*A-a*B)*Tanh[c+d*x])*(a+b*Tanh[c+d*x])^(n+1),x]] /;
FreeQ[{a,b,c,d,A,B},x] && NonzeroQ[a^2-b^2] && RationalQ[n] && n<-1


(* ::Code:: *)
Int[(A_.+B_.*Coth[c_.+d_.*x_])*(a_+b_.*Coth[c_.+d_.*x_])^n_,x_Symbol] :=
  -(b*A-a*B)*(a+b*Coth[c+d*x])^(n+1)/(d*(a^2-b^2)*(n+1)) + 
  Dist[1/(a^2-b^2),Int[(a*A-b*B-(b*A-a*B)*Coth[c+d*x])*(a+b*Coth[c+d*x])^(n+1),x]] /;
FreeQ[{a,b,c,d,A,B},x] && NonzeroQ[a^2-b^2] && RationalQ[n] && n<-1


(* ::Code:: *)
Int[u_.*(a_+b_.*Tan[v_]^2)^m_,x_Symbol] :=
  Dist[b^m,Int[u*Sec[v]^(2*m),x]] /;
FreeQ[{a,b,m},x] && ZeroQ[a-b] && IntegerQ[m]


(* ::Code:: *)
Int[u_.*(a_+b_.*Tan[v_]^2)^m_,x_Symbol] :=
  Int[u*(b*Sec[v]^2)^m,x] /;
FreeQ[{a,b,m},x] && ZeroQ[a-b] && Not[IntegerQ[m]]


(* ::Code:: *)
Int[1/(a_+b_.*Tanh[c_.+d_.*x_]^2),x_Symbol] :=
  x/(a+b) + Sqrt[b]*ArcTan[Sqrt[b]*Tanh[c+d*x]/Sqrt[a]]/(Sqrt[a]*d*(a+b)) /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a+b]


(* ::Code:: *)
Int[1/(a_+b_.*Coth[c_.+d_.*x_]^2),x_Symbol] :=
  x/(a+b) + Sqrt[b]*ArcTan[Sqrt[b]*Coth[c+d*x]/Sqrt[a]]/(Sqrt[a]*d*(a+b)) /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a+b]


(* ::Code:: *)
Int[x_^m_.*Tanh[a_.+b_.*x_^n_.],x_Symbol] :=
  x^(m+1)/(m+1) - 
  Dist[2,Int[x^m/(1+E^(2*a+2*b*x^n)),x]] /;
FreeQ[{a,b,n},x] && IntegerQ[m] && m>0 && NonzeroQ[m-n+1]


(* ::Code:: *)
Int[x_^m_.*Coth[a_.+b_.*x_^n_.],x_Symbol] :=
  x^(m+1)/(m+1) - 
  Dist[2,Int[x^m/(1-E^(2*a+2*b*x^n)),x]] /;
FreeQ[{a,b,n},x] && IntegerQ[m] && m>0 && NonzeroQ[m-n+1]


(* ::Code:: *)
Int[x_^m_.*Tanh[a_.+b_.*x_^n_.]^p_,x_Symbol] :=
  -x^(m-n+1)*Tanh[a+b*x^n]^(p-1)/(b*n*(p-1)) + 
  Dist[(m-n+1)/(b*n*(p-1)),Int[x^(m-n)*Tanh[a+b*x^n]^(p-1),x]] + 
  Int[x^m*Tanh[a+b*x^n]^(p-2),x] /;
FreeQ[{a,b},x] && RationalQ[{m,n,p}] && p>1 && NonzeroQ[m-n+1] && 0<n<=m


(* ::Code:: *)
Int[x_^m_.*Coth[a_.+b_.*x_^n_.]^p_,x_Symbol] :=
  -x^(m-n+1)*Coth[a+b*x^n]^(p-1)/(b*n*(p-1)) + 
  Dist[(m-n+1)/(b*n*(p-1)),Int[x^(m-n)*Coth[a+b*x^n]^(p-1),x]] + 
  Int[x^m*Coth[a+b*x^n]^(p-2),x] /;
FreeQ[{a,b},x] && RationalQ[{m,n,p}] && p>1 && NonzeroQ[m-n+1] && 0<n<=m


(* ::Code:: *)
Int[x_*Tanh[a_.+b_.*x_+c_.*x_^2],x_Symbol] :=
  Log[Cosh[a+b*x+c*x^2]]/(2*c) -
  Dist[b/(2*c),Int[Tanh[a+b*x+c*x^2],x]] /;
FreeQ[{a,b,c},x]


(* ::Code:: *)
Int[x_*Coth[a_.+b_.*x_+c_.*x_^2],x_Symbol] :=
  Log[Sinh[a+b*x+c*x^2]]/(2*c) -
  Dist[b/(2*c),Int[Coth[a+b*x+c*x^2],x]] /;
FreeQ[{a,b,c},x]


(* ::Code:: *)
(* Int[x_^m_*Tanh[a_.+b_.*x_+c_.*x_^2],x_Symbol] :=
  x^(m-1)*Log[Cosh[a+b*x+c*x^2]]/(2*c) -
  Dist[b/(2*c),Int[x^(m-1)*Tanh[a+b*x+c*x^2],x]] -
  Dist[(m-1)/(2*c),Int[x^(m-2)*Log[Cosh[a+b*x+c*x^2]],x]] /;
FreeQ[{a,b,c},x] && RationalQ[m] && m>1 *)


(* ::Code:: *)
(* Int[x_^m_*Coth[a_.+b_.*x_+c_.*x_^2],x_Symbol] :=
  x^(m-1)*Log[Sinh[a+b*x+c*x^2]]/(2*c) -
  Dist[b/(2*c),Int[x^(m-1)*Coth[a+b*x+c*x^2],x]] -
  Dist[(m-1)/(2*c),Int[x^(m-2)*Log[Sinh[a+b*x+c*x^2]],x]] /;
FreeQ[{a,b,c},x] && RationalQ[m] && m>1 *)



(* ::Package:: *)

(* ::Title:: *)
(*Calculus Function Integration Rules*)


(* ::Subsection::Closed:: *)
(*Differentiation Function Integration Rules*)


(* ::Item::Closed:: *)
(*Reference: G&R 2.02.4*)


(* ::Item:: *)
(*Derivation: Primitive rule*)


Int[f_'[x_],x_Symbol] :=
  f[x] /;
FreeQ[f,x]


(* ::Item:: *)
(*Derivation: Primitive rule*)


Int[Derivative[n_][f_][x_],x_Symbol] :=
  Derivative[n-1][f][x] /;
FreeQ[{f,n},x]


(* ::Item::Closed:: *)
(*Reference: G&R 2.02.7*)


(* ::Item:: *)
(*Derivation: Integration by substitution*)


Int[u_*g_'[x_],x_Symbol] :=
  Subst[Int[Regularize[SubstFor[g[x],u,x],x],x],x,g[x]] /;
FreeQ[g,x] && FunctionOfQ[g[x],u,x]


(* ::Item:: *)
(*Derivation: Integration by substitution*)


Int[u_*Derivative[n_][g_][x_],x_Symbol] :=
  Subst[Int[Regularize[SubstFor[Derivative[n-1][g][x],u,x],x],x],x,Derivative[n-1][g][x]] /;
FreeQ[{g,n},x] && FunctionOfQ[Derivative[n-1][g][x],u,x]


(* ::Item::Closed:: *)
(*Reference: G&R 2.02.5*)


(* ::Item:: *)
(*Derivation: Inverse of derivative of a product rule*)


Int[f_'[x_]*g_[x_] + f_[x_]*g_'[x_],x_Symbol] :=
  f[x]*g[x] /;
FreeQ[{f,g},x]


(* ::Item::Closed:: *)
(*Reference: G&R 2.02.11*)


(* ::Item:: *)
(*Derivation: Inverse of derivative of a quotient rule*)


Int[(f_'[x_]*g_[x_] - f_[x_]*g_'[x_])/g_[x_]^2,x_Symbol] :=
  f[x]/g[x] /;
FreeQ[{f,g},x]


(* ::Item::Closed:: *)
(*Reference: G&R 2.02.12*)


(* ::Item:: *)
(*Derivation: Inverse of derivative of log of a quotient rule*)


Int[(f_'[x_]*g_[x_] - f_[x_]*g_'[x_])/(f_[x_]*g_[x_]),x_Symbol] :=
  Log[f[x]/g[x]] /;
FreeQ[{f,g},x]


(* ::Item::Closed:: *)
(*Reference: G&R 2.02.24*)


(* ::Item:: *)
(*Derivation: Inverse of derivative of arctangent of a quotient rule*)


Int[(f_'[x_]*g_[x_] - f_[x_]*g_'[x_])/(f_[x_]^2 + g_[x_]^2),x_Symbol] :=
  ArcTan[f[x]/g[x]] /;
FreeQ[{f,g},x]


(* ::Item::Closed:: *)
(*Reference: G&R 2.02.25*)


(* ::Item:: *)
(*Derivation: Inverse of derivative of log of a quotient rule*)


Int[(f_'[x_]*g_[x_] - f_[x_]*g_'[x_])/(f_[x_]^2 - g_[x_]^2),x_Symbol] :=
  Log[(f[x]-g[x])/(f[x]+g[x])]/2 /;
FreeQ[{f,g},x]
(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Code:: *)
Int[(f_^(a_.+b_.*x_))^p_.*Sin[c_.+d_.*x_],x_Symbol] :=
  b*p*Log[f]*(f^(a+b*x))^p*Sin[c+d*x]/(d^2+b^2*p^2*Log[f]^2) - 
  d*(f^(a+b*x))^p*Cos[c+d*x]/(d^2+b^2*p^2*Log[f]^2) /;
FreeQ[{a,b,c,d,f,p},x] && NonzeroQ[d^2+b^2*p^2*Log[f]^2]


(* ::Code:: *)
Int[(f_^(a_.+b_.*x_))^p_.*Cos[c_.+d_.*x_],x_Symbol] :=
  b*p*Log[f]*(f^(a+b*x))^p*Cos[c+d*x]/(d^2+b^2*p^2*Log[f]^2) + 
  d*(f^(a+b*x))^p*Sin[c+d*x]/(d^2+b^2*p^2*Log[f]^2) /;
FreeQ[{a,b,c,d,f,p},x] && NonzeroQ[d^2+b^2*p^2*Log[f]^2]


(* ::Code:: *)
Int[(f_^(a_.+b_.*x_))^p_.*Sin[c_.+d_.*x_]^n_,x_Symbol] :=
  b*p*Log[f]*(f^(a+b*x))^p*Sin[c+d*x]^n/(d^2*n^2+b^2*p^2*Log[f]^2) - 
  d*n*(f^(a+b*x))^p*Cos[c+d*x]*Sin[c+d*x]^(n-1)/(d^2*n^2+b^2*p^2*Log[f]^2) + 
  Dist[(n*(n-1)*d^2)/(d^2*n^2+b^2*p^2*Log[f]^2),Int[(f^(a+b*x))^p*Sin[c+d*x]^(n-2),x]] /;
FreeQ[{a,b,c,d,f,p},x] && NonzeroQ[d^2*n^2+b^2*p^2*Log[f]^2] && RationalQ[n] && n>1


(* ::Code:: *)
Int[(f_^(a_.+b_.*x_))^p_.*Cos[c_.+d_.*x_]^m_,x_Symbol] :=
  b*p*Log[f]*(f^(a+b*x))^p*Cos[c+d*x]^m/(d^2*m^2+b^2*p^2*Log[f]^2) + 
  d*m*(f^(a+b*x))^p*Sin[c+d*x]*Cos[c+d*x]^(m-1)/(d^2*m^2+b^2*p^2*Log[f]^2) + 
  Dist[(m*(m-1)*d^2)/(d^2*m^2+b^2*p^2*Log[f]^2),Int[(f^(a+b*x))^p*Cos[c+d*x]^(m-2),x]] /;
FreeQ[{a,b,c,d,f,p},x] && NonzeroQ[d^2*m^2+b^2*p^2*Log[f]^2] && RationalQ[m] && m>1


(* ::Code:: *)
Int[(f_^(a_.+b_.*x_))^p_.*Sin[c_.+d_.*x_]^n_,x_Symbol] :=
  -b*p*Log[f]*(f^(a+b*x))^p*Sin[c+d*x]^(n+2)/(d^2*(n+1)*(n+2)) + 
  (f^(a+b*x))^p*Cos[c+d*x]*Sin[c+d*x]^(n+1)/(d*(n+1)) /;
FreeQ[{a,b,c,d,f,n,p},x] && ZeroQ[d^2*(n+2)^2+b^2*p^2*Log[f]^2] && NonzeroQ[n+1] && NonzeroQ[n+2]


(* ::Code:: *)
Int[(f_^(a_.+b_.*x_))^p_.*Cos[c_.+d_.*x_]^n_,x_Symbol] :=
  -b*p*Log[f]*(f^(a+b*x))^p*Cos[c+d*x]^(n+2)/(d^2*(n+1)*(n+2)) - 
  (f^(a+b*x))^p*Sin[c+d*x]*Cos[c+d*x]^(n+1)/(d*(n+1)) /;
FreeQ[{a,b,c,d,f,n,p},x] && ZeroQ[d^2*(n+2)^2+b^2*p^2*Log[f]^2] && NonzeroQ[n+1] && NonzeroQ[n+2]


(* ::Code:: *)
Int[(f_^(a_.+b_.*x_))^p_.*Sin[c_.+d_.*x_]^n_,x_Symbol] :=
  -b*p*Log[f]*(f^(a+b*x))^p*Sin[c+d*x]^(n+2)/(d^2*(n+1)*(n+2)) + 
  (f^(a+b*x))^p*Cos[c+d*x]*Sin[c+d*x]^(n+1)/(d*(n+1)) + 
  Dist[(d^2*(n+2)^2+b^2*p^2*Log[f]^2)/(d^2*(n+1)*(n+2)),Int[(f^(a+b*x))^p*Sin[c+d*x]^(n+2),x]] /;
FreeQ[{a,b,c,d,f,p},x] && NonzeroQ[d^2*(n+2)^2+b^2*p^2*Log[f]^2] && RationalQ[n] && n<-1 && n!=-2


(* ::Code:: *)
Int[(f_^(a_.+b_.*x_))^p_.*Cos[c_.+d_.*x_]^n_,x_Symbol] :=
  -b*p*Log[f]*(f^(a+b*x))^p*Cos[c+d*x]^(n+2)/(d^2*(n+1)*(n+2)) - 
  (f^(a+b*x))^p*Sin[c+d*x]*Cos[c+d*x]^(n+1)/(d*(n+1)) + 
  Dist[(d^2*(n+2)^2+b^2*p^2*Log[f]^2)/(d^2*(n+1)*(n+2)),Int[(f^(a+b*x))^p*Cos[c+d*x]^(n+2),x]] /;
FreeQ[{a,b,c,d,f,p},x] && NonzeroQ[d^2*(n+2)^2+b^2*p^2*Log[f]^2] && RationalQ[n] && n<-1 && n!=-2


(* ::Code:: *)
Int[(f_^(a_.+b_.*x_))^p_.*Sec[c_.+d_.*x_]^n_,x_Symbol] :=
  -b*p*Log[f]*(f^(a+b*x))^p*Sec[c+d*x]^(n-2)/(d^2*(n-1)*(n-2)) + 
  (f^(a+b*x))^p*Sec[c+d*x]^(n-1)*Sin[c+d*x]/(d*(n-1)) /;
FreeQ[{a,b,c,d,f,p,n},x] && ZeroQ[b^2*p^2*Log[f]^2+d^2*(n-2)^2] && NonzeroQ[n-1] && NonzeroQ[n-2]


(* ::Code:: *)
Int[(f_^(a_.+b_.*x_))^p_.*Csc[c_.+d_.*x_]^n_,x_Symbol] :=
  -b*p*Log[f]*(f^(a+b*x))^p*Csc[c+d*x]^(n-2)/(d^2*(n-1)*(n-2)) + 
  (f^(a+b*x))^p*Csc[c+d*x]^(n-1)*Cos[c+d*x]/(d*(n-1)) /;
FreeQ[{a,b,c,d,f,p,n},x] && ZeroQ[b^2*p^2*Log[f]^2+d^2*(n-2)^2] && NonzeroQ[n-1] && NonzeroQ[n-2]


(* ::Code:: *)
Int[(f_^(a_.+b_.*x_))^p_.*Sec[c_.+d_.*x_]^n_,x_Symbol] :=
  -b*p*Log[f]*(f^(a+b*x))^p*Sec[c+d*x]^(n-2)/(d^2*(n-1)*(n-2)) + 
  (f^(a+b*x))^p*Sec[c+d*x]^(n-1)*Sin[c+d*x]/(d*(n-1)) + 
  Dist[(b^2*p^2*Log[f]^2+d^2*(n-2)^2)/(d^2*(n-1)*(n-2)),Int[(f^(a+b*x))^p*Sec[c+d*x]^(n-2),x]] /;
FreeQ[{a,b,c,d,f,p},x] && NonzeroQ[b^2*p^2*Log[f]^2+d^2*(n-2)^2] && RationalQ[n] && n>1 && n!=2


(* ::Code:: *)
Int[(f_^(a_.+b_.*x_))^p_.*Csc[c_.+d_.*x_]^n_,x_Symbol] :=
  -b*p*Log[f]*(f^(a+b*x))^p*Csc[c+d*x]^(n-2)/(d^2*(n-1)*(n-2)) - 
  (f^(a+b*x))^p*Csc[c+d*x]^(n-1)*Cos[c+d*x]/(d*(n-1)) + 
  Dist[(b^2*p^2*Log[f]^2+d^2*(n-2)^2)/(d^2*(n-1)*(n-2)),Int[(f^(a+b*x))^p*Csc[c+d*x]^(n-2),x]] /;
FreeQ[{a,b,c,d,f,p},x] && NonzeroQ[b^2*p^2*Log[f]^2+d^2*(n-2)^2] && RationalQ[n] && n>1 && n!=2


(* ::Code:: *)
Int[x_^m_.*(f_^(a_.+b_.*x_))^p_.*Sin[c_.+d_.*x_]^n_.,x_Symbol] :=
  Module[{u=Block[{ShowSteps=False,StepCounter=Null}, Int[(f^(a+b*x))^p*Sin[c+d*x]^n,x]]},
  x^m*u - Dist[m,Int[x^(m-1)*u,x]]] /;
FreeQ[{a,b,c,d,f,p},x] && RationalQ[m] && m>0 && IntegerQ[n] && n>0


(* ::Code:: *)
Int[x_^m_.*(f_^(a_.+b_.*x_))^p_.*Cos[c_.+d_.*x_]^n_.,x_Symbol] :=
  Module[{u=Block[{ShowSteps=False,StepCounter=Null}, Int[(f^(a+b*x))^p*Cos[c+d*x]^n,x]]},
  x^m*u - Dist[m,Int[x^(m-1)*u,x]]] /;
FreeQ[{a,b,c,d,f,p},x] && RationalQ[m] && m>0 && IntegerQ[n] && n>0


(* ::Code:: *)
Int[f_^v_*Sin[w_],x_Symbol] :=
  Dist[I/2,Int[f^v/E^(I*w),x]] - 
  Dist[I/2,Int[f^v*E^(I*w),x]] /;
FreeQ[f,x] && PolynomialQ[v,x] && Exponent[v,x]<=2 && PolynomialQ[w,x] && Exponent[w,x]<=2


(* ::Code:: *)
Int[f_^v_*Cos[w_],x_Symbol] :=
  Dist[1/2,Int[f^v*E^(I*w),x]] + 
  Dist[1/2,Int[f^v/E^(I*w),x]] /;
FreeQ[f,x] && PolynomialQ[v,x] && Exponent[v,x]<=2 && PolynomialQ[w,x] && Exponent[w,x]<=2


(* ::Code:: *)
Int[f_^v_*Sin[w_]^n_,x_Symbol] :=
  Dist[(I/2)^n,Int[f^v*(1/E^(I*w)-E^(I*w))^n,x]] /;
FreeQ[f,x] && IntegerQ[n] && n>0 && PolynomialQ[v,x] && Exponent[v,x]<=2 && 
  PolynomialQ[w,x] && Exponent[w,x]<=2


(* ::Code:: *)
Int[f_^v_*Cos[w_]^n_,x_Symbol] :=
  Dist[1/2^n,Int[f^v*(E^(I*w)+1/E^(I*w))^n,x]] /;
FreeQ[f,x] && IntegerQ[n] && n>0 && PolynomialQ[v,x] && Exponent[v,x]<=2 && 
  PolynomialQ[w,x] && Exponent[w,x]<=2



(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Code:: *)
Int[(f_^(a_.+b_.*x_))^p_.*Sinh[c_.+d_.*x_],x_Symbol] :=
  -b*p*Log[f]*(f^(a+b*x))^p*Sinh[c+d*x]/(d^2-b^2*p^2*Log[f]^2) + 
  d*(f^(a+b*x))^p*Cosh[c+d*x]/(d^2-b^2*p^2*Log[f]^2) /;
FreeQ[{a,b,c,d,f,p},x] && NonzeroQ[d^2-b^2*p^2*Log[f]^2]


(* ::Code:: *)
Int[(f_^(a_.+b_.*x_))^p_.*Cosh[c_.+d_.*x_],x_Symbol] :=
  -b*p*Log[f]*(f^(a+b*x))^p*Cosh[c+d*x]/(d^2-b^2*p^2*Log[f]^2) + 
  d*(f^(a+b*x))^p*Sinh[c+d*x]/(d^2-b^2*p^2*Log[f]^2) /;
FreeQ[{a,b,c,d,f,p},x] && NonzeroQ[d^2-b^2*p^2*Log[f]^2]


(* ::Code:: *)
Int[(f_^(a_.+b_.*x_))^p_.*Sinh[c_.+d_.*x_]^n_,x_Symbol] :=
  -b*p*Log[f]*(f^(a+b*x))^p*Sinh[c+d*x]^n/(d^2*n^2-b^2*p^2*Log[f]^2) + 
  d*n*(f^(a+b*x))^p*Cosh[c+d*x]*Sinh[c+d*x]^(n-1)/(d^2*n^2-b^2*p^2*Log[f]^2) - 
  Dist[n*(n-1)*d^2/(d^2*n^2-b^2*p^2*Log[f]^2),Int[(f^(a+b*x))^p*Sinh[c+d*x]^(n-2),x]] /;
FreeQ[{a,b,c,d,f,p},x] && NonzeroQ[d^2*n^2-b^2*p^2*Log[f]^2] && RationalQ[n] && n>1


(* ::Code:: *)
Int[(f_^(a_.+b_.*x_))^p_.*Cosh[c_.+d_.*x_]^n_,x_Symbol] :=
  -b*p*Log[f]*(f^(a+b*x))^p*Cosh[c+d*x]^n/(d^2*n^2-b^2*p^2*Log[f]^2) + 
  d*n*(f^(a+b*x))^p*Sinh[c+d*x]*Cosh[c+d*x]^(n-1)/(d^2*n^2-b^2*p^2*Log[f]^2) + 
  Dist[n*(n-1)*d^2/(d^2*n^2-b^2*p^2*Log[f]^2),Int[(f^(a+b*x))^p*Cosh[c+d*x]^(n-2),x]] /;
FreeQ[{a,b,c,d,f,p},x] && NonzeroQ[d^2*n^2-b^2*p^2*Log[f]^2] && RationalQ[n] && n>1


(* ::Code:: *)
Int[(f_^(a_.+b_.*x_))^p_.*Sinh[c_.+d_.*x_]^n_,x_Symbol] :=
  -b*p*Log[f]*(f^(a+b*x))^p*Sinh[c+d*x]^(n+2)/(d^2*(n+1)*(n+2)) + 
  (f^(a+b*x))^p*Cosh[c+d*x]*Sinh[c+d*x]^(n+1)/(d*(n+1)) /;
FreeQ[{a,b,c,d,f,n,p},x] && ZeroQ[d^2*(n+2)^2-b^2*p^2*Log[f]^2] && NonzeroQ[n+1] && NonzeroQ[n+2]


(* ::Code:: *)
Int[(f_^(a_.+b_.*x_))^p_.*Cosh[c_.+d_.*x_]^n_,x_Symbol] :=
  b*p*Log[f]*(f^(a+b*x))^p*Cosh[c+d*x]^(n+2)/(d^2*(n+1)*(n+2)) - 
  (f^(a+b*x))^p*Sinh[c+d*x]*Cosh[c+d*x]^(n+1)/(d*(n+1)) /;
FreeQ[{a,b,c,d,f,n,p},x] && ZeroQ[d^2*(n+2)^2-b^2*p^2*Log[f]^2] && NonzeroQ[n+1] && NonzeroQ[n+2]


(* ::Code:: *)
Int[(f_^(a_.+b_.*x_))^p_.*Sinh[c_.+d_.*x_]^n_,x_Symbol] :=
  -b*p*Log[f]*(f^(a+b*x))^p*Sinh[c+d*x]^(n+2)/(d^2*(n+1)*(n+2)) + 
  (f^(a+b*x))^p*Cosh[c+d*x]*Sinh[c+d*x]^(n+1)/(d*(n+1)) - 
  Dist[(d^2*(n+2)^2-b^2*p^2*Log[f]^2)/(d^2*(n+1)*(n+2)),Int[(f^(a+b*x))^p*Sinh[c+d*x]^(n+2),x]] /;
FreeQ[{a,b,c,d,f,p},x] && NonzeroQ[d^2*(n+2)^2-b^2*p^2*Log[f]^2] && RationalQ[n] && n<-1 && n!=-2


(* ::Code:: *)
Int[(f_^(a_.+b_.*x_))^p_.*Cosh[c_.+d_.*x_]^n_,x_Symbol] :=
  b*p*Log[f]*(f^(a+b*x))^p*Cosh[c+d*x]^(n+2)/(d^2*(n+1)*(n+2)) - 
  (f^(a+b*x))^p*Sinh[c+d*x]*Cosh[c+d*x]^(n+1)/(d*(n+1)) + 
  Dist[(d^2*(n+2)^2-b^2*p^2*Log[f]^2)/(d^2*(n+1)*(n+2)),Int[(f^(a+b*x))^p*Cosh[c+d*x]^(n+2),x]] /;
FreeQ[{a,b,c,d,f,p},x] && NonzeroQ[d^2*(n+2)^2-b^2*p^2*Log[f]^2] && RationalQ[n] && n<-1 && n!=-2


(* ::Code:: *)
Int[(f_^(a_.+b_.*x_))^p_.*Sech[c_.+d_.*x_]^n_,x_Symbol] :=
  b*p*Log[f]*(f^(a+b*x))^p*Sech[c+d*x]^(n-2)/(d^2*(n-1)*(n-2)) + 
  (f^(a+b*x))^p*Sech[c+d*x]^(n-1)*Sinh[c+d*x]/(d*(n-1)) /;
FreeQ[{a,b,c,d,f,p,n},x] && ZeroQ[b^2*p^2*Log[f]^2-d^2*(n-2)^2] && NonzeroQ[n-1] && NonzeroQ[n-2]


(* ::Code:: *)
Int[(f_^(a_.+b_.*x_))^p_.*Csch[c_.+d_.*x_]^n_,x_Symbol] :=
  -b*p*Log[f]*(f^(a+b*x))^p*Csch[c+d*x]^(n-2)/(d^2*(n-1)*(n-2)) - 
  (f^(a+b*x))^p*Csch[c+d*x]^(n-1)*Cosh[c+d*x]/(d*(n-1)) /;
FreeQ[{a,b,c,d,f,p,n},x] && ZeroQ[b^2*p^2*Log[f]^2-d^2*(n-2)^2] && NonzeroQ[n-1] && NonzeroQ[n-2]


(* ::Code:: *)
Int[(f_^(a_.+b_.*x_))^p_.*Sech[c_.+d_.*x_]^n_,x_Symbol] :=
  b*p*Log[f]*(f^(a+b*x))^p*Sech[c+d*x]^(n-2)/(d^2*(n-1)*(n-2)) + 
  (f^(a+b*x))^p*Sech[c+d*x]^(n-1)*Sinh[c+d*x]/(d*(n-1)) -
  Dist[(b^2*p^2*Log[f]^2-d^2*(n-2)^2)/(d^2*(n-1)*(n-2)),
    Int[(f^(a+b*x))^p*Sech[c+d*x]^(n-2),x]] /;
FreeQ[{a,b,c,d,f,p},x] && NonzeroQ[b^2*p^2*Log[f]^2-d^2*(n-2)^2] && 
  RationalQ[n] && n>1 && n!=2


(* ::Code:: *)
Int[(f_^(a_.+b_.*x_))^p_.*Csch[c_.+d_.*x_]^n_,x_Symbol] :=
  -b*p*Log[f]*(f^(a+b*x))^p*Csch[c+d*x]^(n-2)/(d^2*(n-1)*(n-2)) - 
  (f^(a+b*x))^p*Csch[c+d*x]^(n-1)*Cosh[c+d*x]/(d*(n-1)) +
  Dist[(b^2*p^2*Log[f]^2-d^2*(n-2)^2)/(d^2*(n-1)*(n-2)),
    Int[(f^(a+b*x))^p*Csch[c+d*x]^(n-2),x]] /;
FreeQ[{a,b,c,d,f,p},x] && NonzeroQ[b^2*p^2*Log[f]^2-d^2*(n-2)^2] && 
  RationalQ[n] && n>1 && n!=2


(* ::Code:: *)
Int[x_^m_.*(f_^(a_.+b_.*x_))^p_.*Sinh[c_.+d_.*x_]^n_.,x_Symbol] :=
  Module[{u=Block[{ShowSteps=False,StepCounter=Null}, Int[(f^(a+b*x))^p*Sinh[c+d*x]^n,x]]},
  x^m*u - Dist[m,Int[x^(m-1)*u,x]]] /;
FreeQ[{a,b,c,d,f,p},x] && RationalQ[m] && m>0 && IntegerQ[n] && n>0


(* ::Code:: *)
Int[x_^m_.*(f_^(a_.+b_.*x_))^p_.*Cosh[c_.+d_.*x_]^n_.,x_Symbol] :=
  Module[{u=Block[{ShowSteps=False,StepCounter=Null}, Int[(f^(a+b*x))^p*Cosh[c+d*x]^n,x]]},
  x^m*u - Dist[m,Int[x^(m-1)*u,x]]] /;
FreeQ[{a,b,c,d,f,p},x] && RationalQ[m] && m>0 && IntegerQ[n] && n>0


(* ::Code:: *)
Int[f_^v_*Sinh[w_],x_Symbol] :=
  Dist[1/2,Int[f^v*E^w,x]] - 
  Dist[1/2,Int[f^v/E^w,x]] /;
FreeQ[f,x] && PolynomialQ[v,x] && Exponent[v,x]<=2 && PolynomialQ[w,x] && Exponent[w,x]<=2


(* ::Code:: *)
Int[f_^v_*Cosh[w_],x_Symbol] :=
  Dist[1/2,Int[f^v*E^w,x]] + 
  Dist[1/2,Int[f^v/E^w,x]] /;
FreeQ[f,x] && PolynomialQ[v,x] && Exponent[v,x]<=2 && PolynomialQ[w,x] && Exponent[w,x]<=2


(* ::Code:: *)
Int[f_^v_*Sinh[w_]^n_,x_Symbol] :=
  Dist[1/2^n,Int[f^v*(E^w-1/E^w)^n,x]] /;
FreeQ[f,x] && IntegerQ[n] && n>0 && PolynomialQ[v,x] && Exponent[v,x]<=2 && 
  PolynomialQ[w,x] && Exponent[w,x]<=2


(* ::Code:: *)
Int[f_^v_*Cosh[w_]^n_,x_Symbol] :=
  Dist[1/2^n,Int[f^v*(E^w+1/E^w)^n,x]] /;
FreeQ[f,x] && IntegerQ[n] && n>0 && PolynomialQ[v,x] && Exponent[v,x]<=2 && 
  PolynomialQ[w,x] && Exponent[w,x]<=2



(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Code:: *)
Int[E^(a_.+b_.*x_),x_Symbol] :=
  E^(a+b*x)/b /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[f_^(a_.+b_.*x_),x_Symbol] :=
  f^(a+b*x)/(b*Log[f]) /;
FreeQ[{a,b,f},x]


(* ::Code:: *)
Int[E^(a_.+b_.*x_^2),x_Symbol] :=
  E^a*Sqrt[Pi]*Erfi[x*Rt[b,2]]/(2*Rt[b,2]) /;
FreeQ[{a,b},x] && PosQ[b]


(* ::Code:: *)
Int[f_^(a_.+b_.*x_^2),x_Symbol] :=
  f^a*Sqrt[Pi]*Erfi[x*Rt[b*Log[f],2]]/(2*Rt[b*Log[f],2]) /;
FreeQ[{a,b,f},x] && PosQ[b*Log[f]]


(* ::Code:: *)
Int[E^(a_.+b_.*x_^2),x_Symbol] :=
  E^a*Sqrt[Pi]*Erf[x*Rt[-b,2]]/(2*Rt[-b,2]) /;
FreeQ[{a,b},x] && NegQ[b]


(* ::Code:: *)
Int[f_^(a_.+b_.*x_^2),x_Symbol] :=
  f^a*Sqrt[Pi]*Erf[x*Rt[-b*Log[f],2]]/(2*Rt[-b*Log[f],2]) /;
FreeQ[{a,b,f},x] && NegQ[b*Log[f]]


(* ::Code:: *)
Int[E^(a_.+b_.*x_^n_),x_Symbol] :=
  -E^a*x*Gamma[1/n,-b*x^n]/(n*(-b*x^n)^(1/n)) /;
FreeQ[{a,b,n},x] && Not[FractionOrNegativeQ[n]]


(* ::Code:: *)
Int[f_^(a_.+b_.*x_^n_),x_Symbol] :=
  -f^a*x*Gamma[1/n,-b*x^n*Log[f]]/(n*(-b*x^n*Log[f])^(1/n)) /;
FreeQ[{a,b,f,n},x] && Not[FractionOrNegativeQ[n]]


(* ::Code:: *)
Int[E^(a_.+b_.*x_^n_.),x_Symbol] :=
  x*E^(a+b*x^n) - 
  Dist[b*n,Int[x^n*E^(a+b*x^n),x]] /;
FreeQ[{a,b},x] && IntegerQ[n] && n<0


(* ::Code:: *)
Int[f_^(a_.+b_.*x_^n_.),x_Symbol] :=
  x*f^(a+b*x^n) - 
  Dist[b*n*Log[f],Int[x^n*f^(a+b*x^n),x]] /;
FreeQ[{a,b,f},x] && IntegerQ[n] && n<0


(* ::Code:: *)
Int[f_^(a_.+b_.*x_^n_.)/x_,x_Symbol] :=
  f^a*ExpIntegralEi[b*x^n*Log[f]]/n /;
FreeQ[{a,b,f,n},x]


(* ::Code:: *)
Int[x_^m_.*f_^(a_.+b_.*x_^n_.),x_Symbol] :=
  x^(m-n+1)*f^(a+b*x^n)/(b*n*Log[f]) -
  Dist[(m-n+1)/(b*n*Log[f]),Int[x^(m-n)*f^(a+b*x^n),x]] /;
FreeQ[{a,b,f},x] && IntegerQ[n] && RationalQ[m] && 0<n<=m


(* ::Code:: *)
Int[x_^m_.*f_^(a_.+b_.*x_^n_.),x_Symbol] :=
  x^(m+1)*f^(a+b*x^n)/(m+1) -
  Dist[b*n*Log[f]/(m+1),Int[x^(m+n)*f^(a+b*x^n),x]] /;
FreeQ[{a,b,f},x] && IntegerQ[n] && RationalQ[m] && (n>0 && m<-1 || 0<-n<=m+1)


(* ::Code:: *)
Int[x_^m_.*f_^(a_.+b_.*x_^n_.),x_Symbol] :=
  -f^a*x^(m+1)*Gamma[(m+1)/n,-b*x^n*Log[f]]/(n*(-b*x^n*Log[f])^((m+1)/n)) /;
FreeQ[{a,b,f,m,n},x] &&
  NonzeroQ[m+1] &&
  NonzeroQ[m-n+1] &&
  Not[m===-1/2 && ZeroQ[n-1]] &&
  Not[IntegersQ[m,n] && n>0 && (m<-1 || m>=n)] &&
  Not[RationalQ[{m,n}] && (FractionQ[m] || FractionOrNegativeQ[n])]


(* ::Code:: *)
Int[f_^(a_.+b_.*x_+c_.*x_^2),x_Symbol] :=
  f^(a-b^2/(4*c))*Int[f^((b+2*c*x)^2/(4*c)),x] /;
FreeQ[{a,b,c,f},x]


(* ::Code:: *)
Int[(d_.+e_.*x_)*f_^(a_.+b_.*x_+c_.*x_^2),x_Symbol] :=
  e*f^(a+b*x+c*x^2)/(2*c*Log[f]) -
  Dist[(b*e-2*c*d)/(2*c),Int[f^(a+b*x+c*x^2),x]] /;
FreeQ[{a,b,c,d,e,f},x] && NonzeroQ[b*e-2*c*d]


(* ::Code:: *)
Int[(d_.+e_.*x_)^m_*f_^(a_.+b_.*x_+c_.*x_^2),x_Symbol] :=
  e*(d+e*x)^(m-1)*f^(a+b*x+c*x^2)/(2*c*Log[f]) -
  Dist[(m-1)*e^2/(2*c*Log[f]),Int[(d+e*x)^(m-2)*f^(a+b*x+c*x^2),x]] /;
FreeQ[{a,b,c,d,e,f},x] && RationalQ[m] && m>1 && ZeroQ[b*e-2*c*d]


(* ::Code:: *)
Int[(d_.+e_.*x_)^m_*f_^(a_.+b_.*x_+c_.*x_^2),x_Symbol] :=
  e*(d+e*x)^(m-1)*f^(a+b*x+c*x^2)/(2*c*Log[f]) -
  Dist[(b*e-2*c*d)/(2*c),Int[(d+e*x)^(m-1)*f^(a+b*x+c*x^2),x]] -
  Dist[(m-1)*e^2/(2*c*Log[f]),Int[(d+e*x)^(m-2)*f^(a+b*x+c*x^2),x]] /;
FreeQ[{a,b,c,d,e,f},x] && RationalQ[m] && m>1 && NonzeroQ[b*e-2*c*d]


(* ::Code:: *)
Int[(d_.+e_.*x_)^m_*f_^(a_.+b_.*x_+c_.*x_^2),x_Symbol] :=
  (d+e*x)^(m+1)*f^(a+b*x+c*x^2)/(e*(m+1)) -
  Dist[2*c*Log[f]/(e^2*(m+1)),Int[(d+e*x)^(m+2)*f^(a+b*x+c*x^2),x]] /;
FreeQ[{a,b,c,d,e,f},x] && RationalQ[m] && m<-1 && ZeroQ[b*e-2*c*d]


(* ::Code:: *)
Int[(d_.+e_.*x_)^m_*f_^(a_.+b_.*x_+c_.*x_^2),x_Symbol] :=
  (d+e*x)^(m+1)*f^(a+b*x+c*x^2)/(e*(m+1)) -
  Dist[(b*e-2*c*d)*Log[f]/(e^2*(m+1)),Int[(d+e*x)^(m+1)*f^(a+b*x+c*x^2),x]] -
  Dist[2*c*Log[f]/(e^2*(m+1)),Int[(d+e*x)^(m+2)*f^(a+b*x+c*x^2),x]] /;
FreeQ[{a,b,c,d,e,f},x] && RationalQ[m] && m<-1 && NonzeroQ[b*e-2*c*d]


(* ::Code:: *)
Int[(a_.+b_.*x_)^m_*f_^((c_.+d_.*x_)^n_.),x_Symbol] :=
  (a+b*x)^(m+1)*f^((c+d*x)^n)/(b*(m+1)) -
  Dist[d*n*Log[f]/(b*(m+1)),Int[(a+b*x)^(m+1)*f^((c+d*x)^n)*(c+d*x)^(n-1),x]] /;
FreeQ[{a,b,c,d},x] && RationalQ[m] && m<-1 && IntegerQ[n] && n>1


(* ::Code:: *)
Int[1/(a_+b_.*f_^(c_.+d_.*x_)),x_Symbol] :=
  -Log[b+a*f^(-c-d*x)]/(a*d*Log[f]) /;
FreeQ[{a,b,c,d,f},x] && NegativeCoefficientQ[d]


(* ::Code:: *)
Int[1/(a_+b_.*f_^(c_.+d_.*x_)),x_Symbol] :=
  x/a-Log[a+b*f^(c+d*x)]/(a*d*Log[f]) /;
FreeQ[{a,b,c,d,f},x]


(* ::Code:: *)
Int[1/Sqrt[a_+b_.*f_^(c_.+d_.*x_)],x_Symbol] :=
  -2*ArcTanh[Sqrt[a+b*f^(c+d*x)]/Sqrt[a]]/(Sqrt[a]*d*Log[f]) /;
FreeQ[{a,b,c,d,f},x] && PosQ[a]


(* ::Code:: *)
Int[1/Sqrt[a_+b_.*f_^(c_.+d_.*x_)],x_Symbol] :=
  2*ArcTan[Sqrt[a+b*f^(c+d*x)]/Sqrt[-a]]/(Sqrt[-a]*d*Log[f]) /;
FreeQ[{a,b,c,d,f},x] && NegQ[a]


(* ::Code:: *)
Int[(a_+b_.*f_^(c_.+d_.*x_))^n_,x_Symbol] :=
  (a+b*f^(c+d*x))^n/(n*d*Log[f]) + 
  Dist[a,Int[(a+b*f^(c+d*x))^(n-1),x]] /;
FreeQ[{a,b,c,d,f},x] && FractionQ[n] && n>0


(* ::Code:: *)
Int[(a_+b_.*f_^(c_.+d_.*x_))^n_,x_Symbol] :=
  -(a+b*f^(c+d*x))^(n+1)/((n+1)*a*d*Log[f]) + 
  Dist[1/a,Int[(a+b*f^(c+d*x))^(n+1),x]] /;
FreeQ[{a,b,c,d,f},x] && RationalQ[n] && n<-1


(* ::Code:: *)
Int[x_^m_./(a_+b_.*f_^(c_.+d_.*x_)), x_Symbol] :=
  x^(m+1)/(a*(m+1)) -
  Dist[b/a,Int[x^m*f^(c+d*x)/(a+b*f^(c+d*x)),x]] /;
FreeQ[{a,b,c,d,f},x] && RationalQ[m] && m>0


(* ::Code:: *)
Int[x_^m_.*(a_+b_.*f_^(c_.+d_.*x_))^n_, x_Symbol] :=
  Module[{u=Block[{ShowSteps=False,StepCounter=Null}, Int[(a+b*f^(c+d*x))^n,x]]},
  x^m*u - Dist[m,Int[x^(m-1)*u,x]]] /;
FreeQ[{a,b,c,d,f},x] && RationalQ[{m,n}] && m>0 && n<-1


(* ::Code:: *)
Int[x_^m_*f_^(c_.*(a_+b_.*x_)^2),x_Symbol] :=
  Int[x^m*f^(a^2*c+2*a*b*c*x+b^2*c*x^2),x] /;
FreeQ[{a,b,c,f},x] && FractionQ[m] && m>1


(* ::Code:: *)
Int[x_^m_.*f_^(c_.*(a_+b_.*x_)^n_),x_Symbol] :=
  Dist[1/b^m,Int[Expand[b^m*x^m-(a+b*x)^m,x]*f^(c*(a+b*x)^n),x]] +
  Dist[1/b^(m+1),Subst[Int[x^m*f^(c*x^n),x],x,a+b*x]] /;
FreeQ[{a,b,c,f,n},x] && IntegerQ[m] && m>0


(* ::Code:: *)
Int[x_^m_.*f_^(c_.+d_.*x_)/(a_+b_.*f_^(c_.+d_.*x_)), x_Symbol] :=
  x^m*Log[1+b*f^(c+d*x)/a]/(b*d*Log[f]) -
  Dist[m/(b*d*Log[f]),Int[x^(m-1)*Log[1+b/a*f^(c+d*x)],x]] /;
FreeQ[{a,b,c,d,f},x] && RationalQ[m] && m>=1


(* ::Code:: *)
Int[x_^m_.*f_^(c_.+d_.*x_)*(a_.+b_.*f_^v_)^n_,x_Symbol] :=
  Module[{u=Block[{ShowSteps=False,StepCounter=Null}, Int[f^(c+d*x)*(a+b*f^v)^n,x]]},
  x^m*u - Dist[m,Int[x^(m-1)*u,x]]] /;
FreeQ[{a,b,c,d,f},x] && ZeroQ[2*(c+d*x)-v] && RationalQ[m] && m>0 && IntegerQ[n] && n<0


(* ::Code:: *)
Int[x_^m_./(a_.*f_^(c_.+d_.*x_)+b_.*f_^v_),x_Symbol] :=
  Module[{u=Block[{ShowSteps=False,StepCounter=Null}, Int[1/(a*f^(c+d*x)+b*f^v),x]]},
  x^m*u - Dist[m,Int[x^(m-1)*u,x]]] /;
FreeQ[{a,b,c,d,f},x] && ZeroQ[(c+d*x)+v] && RationalQ[m] && m>0


(* ::Code:: *)
Int[(a_.+b_.*x_)^m_.*(f_^(e_.*(c_.+d_.*x_)^n_.))^p_.,x_Symbol] :=
  Dist[1/b,Subst[Int[x^m*(f^(e*(c-a*d/b+d*x/b)^n))^p,x],x,a+b*x]] /;
FreeQ[{a,b,c,d,e,f,m,n},x] && RationalQ[p] && Not[a===0 && b===1]


(* ::Code:: *)
Int[f_^((a_.+b_.*x_^4)/x_^2),x_Symbol] :=
  Sqrt[Pi]*Exp[2*Sqrt[-a*Log[f]]*Sqrt[-b*Log[f]]]*Erf[(Sqrt[-a*Log[f]]+Sqrt[-b*Log[f]]*x^2)/x]/
    (4*Sqrt[-b*Log[f]]) -
  Sqrt[Pi]*Exp[-2*Sqrt[-a*Log[f]]*Sqrt[-b*Log[f]]]*Erf[(Sqrt[-a*Log[f]]-Sqrt[-b*Log[f]]*x^2)/x]/
    (4*Sqrt[-b*Log[f]]) /;
FreeQ[{a,b,f},x]


(* ::Code:: *)
Int[1/(a_+b_.*f_^u_+c_.*f_^v_), x_Symbol] :=
  x/a -
  Dist[1/a,Int[f^u*(b+c*f^u)/(a+b*f^u+c*f^v),x]] /;
FreeQ[{a,b,c,f},x] && LinearQ[u,x] && LinearQ[v,x] && ZeroQ[2*u-v] &&
Not[RationalQ[Rt[b^2-4*a*c,2]]]


(* ::Code:: *)
Int[(d_+e_.*f_^u_)/(a_+b_.*f_^u_+c_.*f_^v_), x_Symbol] :=
  d*x/a -
  Dist[1/a,Int[f^u*(b*d-a*e+c*d*f^u)/(a+b*f^u+c*f^v),x]] /;
FreeQ[{a,b,c,d,e,f},x] && LinearQ[u,x] && LinearQ[v,x] && ZeroQ[2*u-v] &&
Not[RationalQ[Rt[b^2-4*a*c,2]]]


(* ::Code:: *)
Int[u_/(a_+b_.*f_^v_+c_.*f_^w_), x_Symbol] :=
  Int[u*f^v/(c+a*f^v+b*f^(2*v)),x] /;
FreeQ[{a,b,c,f},x] && LinearQ[v,x] && LinearQ[w,x] && ZeroQ[v+w] &&
If[RationalQ[Coefficient[v,x,1]], Coefficient[v,x,1]>0, LeafCount[v]<LeafCount[w]]


(* ::Code:: *)
Int[x_^m_.*(E^x_+x_^m_.)^n_,x_Symbol] :=
  -(E^x+x^m)^(n+1)/(n+1) +
  Int[(E^x+x^m)^(n+1),x] +
  Dist[m,Int[x^(m-1)*(E^x+x^m)^n,x]] /;
RationalQ[{m,n}] && m>0 && NonzeroQ[n+1]
(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Code:: *)
Int[Log[c_.*(b_.*(d_.+e_.*x_)^n_.)^p_.],x_Symbol] :=
  (d+e*x)*Log[c*(b*(d+e*x)^n)^p]/e - n*p*x /;
FreeQ[{b,c,d,e,n,p},x]


(* ::Code:: *)
Int[Log[c_.*(a_+b_.*(d_.+e_.*x_)^n_)^p_.],x_Symbol] :=
  (d+e*x)*Log[c*(a+b*(d+e*x)^n)^p]/e -
  Dist[b*n*p,Int[1/(b+a*(d+e*x)^(-n)),x]] /;
FreeQ[{a,b,c,d,e,p},x] && RationalQ[n] && n<0


(* ::Code:: *)
Int[Log[c_.*(a_+b_.*(d_.+e_.*x_)^n_.)^p_.],x_Symbol] :=
  (d+e*x)*Log[c*(a+b*(d+e*x)^n)^p]/e - n*p*x +
  Dist[a*n*p,Int[1/(a+b*(d+e*x)^n),x]] /;
FreeQ[{a,b,c,d,e,n,p},x] && Not[RationalQ[n] && n<0]


(* ::Code:: *)
Int[1/Log[c_.*(d_.+e_.*x_)],x_Symbol] :=
  LogIntegral[c*(d+e*x)]/(c*e) /;
FreeQ[{c,d,e},x]


(* ::Code:: *)
Int[1/(a_.+b_.*Log[c_.*(d_.+e_.*x_)^n_.]),x_Symbol] :=
  (d+e*x)*ExpIntegralEi[(a+b*Log[c*(d+e*x)^n])/(b*n)]/(b*e*n*E^(a/(b*n))*(c*(d+e*x)^n)^(1/n)) /;
FreeQ[{a,b,c,d,e,n},x]


(* ::Code:: *)
Int[1/Sqrt[a_.+b_.*Log[c_.*(d_.+e_.*x_)^n_.]],x_Symbol] :=
  Sqrt[Pi]*Rt[b*n,2]*(d+e*x)*Erfi[Sqrt[a+b*Log[c*(d+e*x)^n]]/Rt[b*n,2]]/
    (b*e*n*E^(a/(b*n))*(c*(d+e*x)^n)^(1/n)) /;
FreeQ[{a,b,c,d,e,n},x] && PosQ[b*n]


(* ::Code:: *)
Int[1/Sqrt[a_.+b_.*Log[c_.*(d_.+e_.*x_)^n_.]],x_Symbol] :=
  Sqrt[Pi]*Rt[-b*n,2]*(d+e*x)*Erf[Sqrt[a+b*Log[c*(d+e*x)^n]]/Rt[-b*n,2]]/
    (b*e*n*E^(a/(b*n))*(c*(d+e*x)^n)^(1/n)) /;
FreeQ[{a,b,c,d,e,n},x] && NegQ[b*n]


(* ::Code:: *)
Int[(a_.+b_.*Log[c_.*(d_.+e_.*x_)^n_.])^p_,x_Symbol] :=
  (d+e*x)*(a+b*Log[c*(d+e*x)^n])^p/e -
  Dist[b*n*p,Int[(a+b*Log[c*(d+e*x)^n])^(p-1),x]] /;
FreeQ[{a,b,c,d,e,n},x] && RationalQ[p] && p>0


(* ::Code:: *)
Int[(a_.+b_.*Log[c_.*(d_.+e_.*x_)^n_.])^p_,x_Symbol] :=
  (d+e*x)*(a+b*Log[c*(d+e*x)^n])^(p+1)/(b*e*n*(p+1)) -
  Dist[1/(b*n*(p+1)),Int[(a+b*Log[c*(d+e*x)^n])^(p+1),x]] /;
FreeQ[{a,b,c,d,e,n},x] && RationalQ[p] && p<-1


(* ::Code:: *)
Int[(a_.+b_.*Log[c_.*(d_.+e_.*x_)^n_.])^p_,x_Symbol] :=
  (d+e*x)*Gamma[p+1,-(a+b*Log[c*(d+e*x)^n])/(b*n)]*(a+b*Log[c*(d+e*x)^n])^p/
    (e*(-(a+b*Log[c*(d+e*x)^n])/(b*n))^p*E^(a/(b*n))*(c*(d+e*x)^n)^(1/n)) /;
FreeQ[{a,b,c,d,e,n,p},x] && Not[IntegerQ[2*p]]


(* ::Code:: *)
Int[Log[1+b_.*x_^n_.]/x_,x_Symbol] :=
  -PolyLog[2,-b*x^n]/n /;
FreeQ[{b,n},x]


(* ::Code:: *)
Int[Log[c_.*(a_+b_.*x_^n_.)]/x_,x_Symbol] :=
  Log[a*c]*Log[x] +
  Int[Log[1+b*x^n/a]/x,x] /;
FreeQ[{a,b,c,n},x] && PositiveQ[a*c]


(* ::Code:: *)
Int[Log[c_.*(a_+b_.*x_^n_.)^p_.]/x_,x_Symbol] :=
  Log[c*(a+b*x^n)^p]*Log[-b*x^n/a]/n -
  Dist[b*p,Int[x^(n-1)*Log[-b*x^n/a]/(a+b*x^n),x]] /;
FreeQ[{a,b,c,n,p},x]


(* ::Code:: *)
Int[x_^m_.*Log[c_.*(b_.*x_^n_.)^p_.],x_Symbol] :=
  x^(m+1)*Log[c*(b*x^n)^p]/(m+1) - n*p*x^(m+1)/(m+1)^2 /;
FreeQ[{b,c,m,n,p},x] && NonzeroQ[m+1]


(* ::Code:: *)
Int[x_^m_.*Log[c_.*(a_+b_.*x_^n_.)^p_.],x_Symbol] :=
  x^(m+1)*Log[c*(a+b*x^n)^p]/(m+1) -
  Dist[b*n*p/(m+1),Int[x^(m+n)/(a+b*x^n),x]] /;
FreeQ[{a,b,c,m,n,p},x] && NonzeroQ[m+1] && NonzeroQ[m-n+1]


(* ::Code:: *)
Int[x_^m_./(a_.+b_.*Log[c_.*x_^n_.]),x_Symbol] :=
  x^(m+1)*ExpIntegralEi[(m+1)*(a+b*Log[c*x^n])/(b*n)]/(b*n*E^(a*(m+1)/(b*n))*(c*x^n)^((m+1)/n)) /;
FreeQ[{a,b,c,m,n},x] && NonzeroQ[m+1]


(* ::Code:: *)
Int[x_^m_./Sqrt[a_.+b_.*Log[c_.*x_^n_.]],x_Symbol] :=
  Sqrt[Pi]*x^(m+1)*Erfi[Rt[(m+1)/(b*n),2]*Sqrt[a+b*Log[c*x^n]]]/
    (b*n*Rt[(m+1)/(b*n),2]*E^(a*(m+1)/(b*n))*(c*x^n)^((m+1)/n)) /;
FreeQ[{a,b,c,m,n},x] && NonzeroQ[m+1] && PosQ[(m+1)/(b*n)]


(* ::Code:: *)
Int[x_^m_./Sqrt[a_.+b_.*Log[c_.*x_^n_.]],x_Symbol] :=
  Sqrt[Pi]*x^(m+1)*Erf[Rt[-(m+1)/(b*n),2]*Sqrt[a+b*Log[c*x^n]]]/
    (b*n*Rt[-(m+1)/(b*n),2]*E^(a*(m+1)/(b*n))*(c*x^n)^((m+1)/n)) /;
FreeQ[{a,b,c,m,n},x] && NonzeroQ[m+1] && NegQ[(m+1)/(b*n)]


(* ::Code:: *)
Int[x_^m_.*(a_.+b_.*Log[c_.*x_^n_.])^p_,x_Symbol] :=
  x^(m+1)*(a+b*Log[c*x^n])^p/(m+1) -
  Dist[b*n*p/(m+1),Int[x^m*(a+b*Log[c*x^n])^(p-1),x]] /;
FreeQ[{a,b,c,m,n},x] && NonzeroQ[m+1] && RationalQ[p] && p>0


(* ::Code:: *)
Int[x_^m_.*(a_.+b_.*Log[c_.*x_^n_.])^p_,x_Symbol] :=
  x^(m+1)*(a+b*Log[c*x^n])^(p+1)/(b*n*(p+1)) -
  Dist[(m+1)/(b*n*(p+1)),Int[x^m*(a+b*Log[c*x^n])^(p+1),x]] /;
FreeQ[{a,b,c,m,n},x] && NonzeroQ[m+1] && RationalQ[p] && p<-1


(* ::Code:: *)
Int[x_^m_.*(a_.+b_.*Log[c_.*x_^n_.])^p_,x_Symbol] :=
  x^(m+1)*Gamma[p+1,-(m+1)*(a+b*Log[c*x^n])/(b*n)]*(a+b*Log[c*x^n])^p/
    ((m+1)*E^(a*(m+1)/(b*n))*(c*x^n)^((m+1)/n)*(-(m+1)*(a+b*Log[c*x^n])/(b*n))^p) /;
FreeQ[{a,b,c,m,n,p},x] && NonzeroQ[m+1]


(* ::Code:: *)
Int[Log[a_.*(b_.*x_^n_.)^p_]^q_.,x_Symbol] :=
  Subst[Int[Log[x^(n*p)]^q,x],x^(n*p),a*(b*x^n)^p] /;
FreeQ[{a,b,n,p,q},x]


(* ::Code:: *)
Int[Log[a_.*(b_.*(c_.*x_^n_.)^p_)^q_]^r_.,x_Symbol] :=
  Subst[Int[Log[x^(n*p*q)]^r,x],x^(n*p*q),a*(b*(c*x^n)^p)^q] /;
FreeQ[{a,b,c,n,p,q,r},x]


(* ::Code:: *)
Int[x_^m_.*Log[a_.*(b_.*x_^n_.)^p_]^q_.,x_Symbol] :=
  Subst[Int[x^m*Log[x^(n*p)]^q,x],x^(n*p),a*(b*x^n)^p] /;
FreeQ[{a,b,m,n,p,q},x] && NonzeroQ[m+1] && Not[x^(n*p)===a*(b*x^n)^p]


(* ::Code:: *)
Int[x_^m_.*Log[a_.*(b_.*(c_.*x_^n_.)^p_)^q_]^r_.,x_Symbol] :=
  Subst[Int[x^m*Log[x^(n*p*q)]^r,x],x^(n*p*q),a*(b*(c*x^n)^p)^q] /;
FreeQ[{a,b,c,m,n,p,q,r},x] && NonzeroQ[m+1] && Not[x^(n*p*q)===a*(b*(c*x^n)^p)^q]


(* ::Code:: *)
Int[x_^m_.*Log[c_.*(a_+b_.*x_)^n_.]^p_,x_Symbol] :=
  x^m*(a+b*x)*Log[c*(a+b*x)^n]^p/(b*(m+1)) -
  Dist[a*m/(b*(m+1)),Int[x^(m-1)*Log[c*(a+b*x)^n]^p,x]] -
  Dist[n*p/(m+1),Int[x^m*Log[c*(a+b*x)^n]^(p-1),x]] /;
FreeQ[{a,b,c,n},x] && RationalQ[{m,p}] && m>0 && p>0


(* ::Code:: *)
Int[Log[c_.*(a_+b_.*x_)^n_.]^p_/x_^2,x_Symbol] :=
  -(a+b*x)*Log[c*(a+b*x)^n]^p/(a*x) +
  Dist[b*n*p/a,Int[Log[c*(a+b*x)^n]^(p-1)/x,x]] /;
FreeQ[{a,b,c,n},x] && RationalQ[p] && p>0


(* ::Code:: *)
Int[x_^m_.*Log[c_.*(a_+b_.*x_)^n_.]^p_,x_Symbol] :=
  x^(m+1)*(a+b*x)*Log[c*(a+b*x)^n]^p/(a*(m+1)) -
  Dist[(b*(m+2))/(a*(m+1)),Int[x^(m+1)*Log[c*(a+b*x)^n]^p,x]] -
  Dist[b*n*p/(a*(m+1)),Int[x^(m+1)*Log[c*(a+b*x)^n]^(p-1),x]] /;
FreeQ[{a,b,c,n},x] && RationalQ[{m,p}] && m<-1 && m!=-2 && p>0


(* ::Code:: *)
Int[x_^m_.*Log[c_.*(a_+b_.*x_)^n_.]^p_,x_Symbol] :=
  Dist[1/b,Subst[Int[(-a/b+x/b)^m*Log[c*x^n]^p,x],x,a+b*x]] /;
FreeQ[{a,b,c,n,p},x] && IntegerQ[m] && m>0 && Not[RationalQ[p] && p>0]


(* ::Code:: *)
Int[Log[c_.*(a_.+b_.*x_)]/(d_+e_.*x_),x_Symbol] :=
  -PolyLog[2,1-a*c-b*c*x]/e /;
FreeQ[{a,b,c,d,e},x] && ZeroQ[a*c*e-b*c*d-e]


(* ::Code:: *)
Int[Log[c_.*(a_.+b_.*x_)^n_.]/(d_+e_.*x_),x_Symbol] :=
  Log[c*(a+b*x)^n]*Log[b*(d+e*x)/(b*d-a*e)]/e +
  n*PolyLog[2,-e*(a+b*x)/(b*d-a*e)]/e /;
FreeQ[{a,b,c,d,e,n},x] && NonzeroQ[b*d-a*e]


(* ::Code:: *)
Int[Log[c_.*(a_+b_.*x_)^n_.]^p_./(d_.+e_.*x_),x_Symbol] :=
  Log[c*(a+b*x)^n]^p*Log[b*(d+e*x)/(b*d-a*e)]/e -
  Dist[b*n*p/e,Int[Log[c*(a+b*x)^n]^(p-1)*Log[b*(d+e*x)/(b*d-a*e)]/(a+b*x),x]] /;
FreeQ[{a,b,c,d,e,n},x] && RationalQ[p] && p>0 && NonzeroQ[b*d-a*e]


(* ::Code:: *)
Int[Log[c_.*(a_+b_.*x_)^n_.]^p_.*Log[h_.*(f_.+g_.*x_)]/(d_+e_.*x_),x_Symbol] :=
  Module[{q=Simplify[1-h*(f+g*x)]},
  -Log[c*(a+b*x)^n]^p*PolyLog[2,q]/e +
  Dist[b*n*p/e,Int[Log[c*(a+b*x)^n]^(p-1)*PolyLog[2,q]/(a+b*x),x]]] /;
FreeQ[{a,b,c,d,e,f,g,h,n},x] && RationalQ[p] && p>0 && ZeroQ[b*d-a*e] && ZeroQ[a*g*h-b*(f*h-1)]


(* ::Code:: *)
Int[Log[c_.*(a_+b_.*x_)^n_.]^p_.*PolyLog[m_,h_.*(f_.+g_.*x_)]/(d_+e_.*x_),x_Symbol] :=
  Log[c*(a+b*x)^n]^p*PolyLog[m+1,h*(f+g*x)]/e -
  Dist[b*n*p/e,Int[Log[c*(a+b*x)^n]^(p-1)*PolyLog[m+1,h*(f+g*x)]/(a+b*x),x]] /;
FreeQ[{a,b,c,d,e,f,g,h,m,n},x] && RationalQ[p] && p>0 && ZeroQ[b*d-a*e] && ZeroQ[a*g-b*f]


(* ::Code:: *)
Int[(d_.+e_.*x_)^m_.*Log[c_.*(a_.+b_.*x_)^n_.]^p_,x_Symbol] :=
  (d+e*x)^(m+1)*Log[c*(a+b*x)^n]^p/(e*(m+1)) -
  Dist[b*n*p/(e*(m+1)),Int[Regularize[(d+e*x)^(m+1)*Log[c*(a+b*x)^n]^(p-1)/(a+b*x),x],x]] /;
FreeQ[{a,b,c,d,e,n},x] && IntegersQ[m,p] && m<-1 && p>0


(* ::Code:: *)
Int[Log[c_.*(a_+b_./x_)^n_.]^p_, x_Symbol] :=
  (b+a*x)*Log[c*(a+b/x)^n]^p/a + 
  Dist[b/a*n*p,Int[Log[c*(a+b/x)^n]^(p-1)/x,x]] /;
FreeQ[{a,b,c,n},x] && IntegerQ[p] && p>0


(* ::Code:: *)
Int[Log[c_.*(a_+b_.*x_^2)^n_.]^2, x_Symbol] :=
  x*Log[c*(a+b*x^2)^n]^2 + 
    8*n^2*x -
    4*n*x*Log[c*(a+b*x^2)^n] + 
    (n*Sqrt[a]/Sqrt[-b])*( 
      4*n*Log[(-Sqrt[a]+Sqrt[-b]*x)/(Sqrt[a]+Sqrt[-b]*x)] - 
      4*n*ArcTanh[Sqrt[-b]*x/Sqrt[a]]*(Log[-Sqrt[a]/Sqrt[-b]+x] + Log[Sqrt[a]/Sqrt[-b]+x]) -
      n*Log[-Sqrt[a]/Sqrt[-b]+x]^2 + 
      n*Log[Sqrt[a]/Sqrt[-b]+x]^2 - 
      2*n*Log[Sqrt[a]/Sqrt[-b]+x]*Log[1/2-Sqrt[-b]*x/(2*Sqrt[a])] + 
      2*n*Log[-Sqrt[a]/Sqrt[-b]+x]*Log[(1+Sqrt[-b]*x/Sqrt[a])/2] + 
      4*ArcTanh[Sqrt[-b]*x/Sqrt[a]]*Log[c*(a+b*x^2)^n] + 
      2*n*PolyLog[2,1/2-Sqrt[-b]*x/(2*Sqrt[a])] - 
      2*n*PolyLog[2,(1+Sqrt[-b]*x/Sqrt[a])/2]) /;
FreeQ[{a,b,c,n},x]


(* ::Code:: *)
Int[Log[d_.*(a_.+b_.*x_+c_.*x_^2)^n_.]^2,x_Symbol] :=
  x*Log[d*(a+b*x+c*x^2)^n]^2 -
  Dist[2*b*n,Int[x*Log[d*(a+b*x+c*x^2)^n]/(a+b*x+c*x^2),x]] - 
  Dist[4*c*n,Int[x^2*Log[d*(a+b*x+c*x^2)^n]/(a+b*x+c*x^2),x]] /;
FreeQ[{a,b,c,d,n},x]


(* ::Code:: *)
Int[Log[a_.*Log[b_.*x_^n_.]^p_.],x_Symbol] :=
  x*Log[a*Log[b*x^n]^p] - 
  Dist[n*p,Int[1/Log[b*x^n],x]] /;
FreeQ[{a,b,n,p},x]


(* ::Code:: *)
Int[Log[a_.*Log[b_.*x_^n_.]^p_.]/x_,x_Symbol] :=
  Log[b*x^n]*(-p+Log[a*Log[b*x^n]^p])/n /;
FreeQ[{a,b,n,p},x]


(* ::Code:: *)
Int[x_^m_.*Log[a_.*Log[b_.*x_^n_.]^p_.],x_Symbol] :=
  x^(m+1)*Log[a*Log[b*x^n]^p]/(m+1) - 
  Dist[n*p/(m+1),Int[x^m/Log[b*x^n],x]] /;
FreeQ[{a,b,m,n,p},x] && NonzeroQ[m+1]


(* ::Code:: *)
Int[Log[(a_.+b_.*x_)/(c_+d_.*x_)]^m_./x_,x_Symbol] :=
  Subst[Int[Log[a/c+x/c]^m/x,x],x,(b*c-a*d)*x/(c+d*x)] - 
  Subst[Int[Log[b/d-x/d]^m/x,x],x,(b*c-a*d)/(c+d*x)] /;
FreeQ[{a,b,c,d},x] && IntegerQ[m] && m>0 && NonzeroQ[b*c-a*d]


(* ::Code:: *)
Int[(A_.+B_.*Log[c_.+d_.*x_])/Sqrt[a_+b_.*Log[c_.+d_.*x_]],x_Symbol] :=
  Dist[(b*A-a*B)/b,Int[1/Sqrt[a+b*Log[c+d*x]],x]] +
  Dist[B/b,Int[Sqrt[a+b*Log[c+d*x]],x]] /;
FreeQ[{a,b,c,d,A,B},x] && NonzeroQ[b*A-a*B]


(* ::Code:: *)
Int[f_^(a_.*Log[u_]),x_Symbol] :=
  Int[u^(a*Log[f]),x] /;
FreeQ[{a,f},x]


(* ::Code:: *)
If[ShowSteps,

Int[u_/x_,x_Symbol] :=
  Module[{lst=FunctionOfLog[u,x]},
  ShowStep["","Int[f[Log[a*x^n]]/x,x]","Subst[Int[f[x],x],x,Log[a*x^n]]/n",Hold[
  Dist[1/lst[[3]],Subst[Int[lst[[1]],x],x,Log[lst[[2]]]]]]] /;
 Not[FalseQ[lst]]] /;
SimplifyFlag && NonsumQ[u],

Int[u_/x_,x_Symbol] :=
  Module[{lst=FunctionOfLog[u,x]},
  Dist[1/lst[[3]],Subst[Int[lst[[1]],x],x,Log[lst[[2]]]]] /;
 Not[FalseQ[lst]]] /;
NonsumQ[u]]


(* ::Code:: *)
Int[1/(a_.*x_+b_.*x_*Log[c_.*x_^n_.]^m_.),x_Symbol] :=
  Int[1/(x*(a+b*Log[c*x^n]^m)),x] /;
FreeQ[{a,b,c,m,n},x]


(* ::Code:: *)
Int[Log[1+c_.*f_^(a_.+b_.*x_)],x_Symbol] :=
  -PolyLog[2,-c*f^(a+b*x)]/(b*Log[f]) /;
FreeQ[{a,b,c,f},x]


(* ::Code:: *)
Int[Log[c_+d_.*f_^(a_.+b_.*x_)],x_Symbol] :=
  x*Log[c+d*f^(a+b*x)] - x*Log[1+d/c*f^(a+b*x)] +
  Int[Log[1+d/c*f^(a+b*x)],x] /;
FreeQ[{a,b,c,d,f},x] && NonzeroQ[c-1]


(* ::Code:: *)
Int[x_^m_.*Log[1+c_.*f_^(a_.+b_.*x_)],x_Symbol] :=
  -x^m*PolyLog[2,-c*f^(a+b*x)]/(b*Log[f]) +
  Dist[m/(b*Log[f]),Int[x^(m-1)*PolyLog[2,-c*f^(a+b*x)],x]] /;
FreeQ[{a,b,c,f},x] && RationalQ[m] && m>0


(* ::Code:: *)
Int[x_^m_.*Log[c_+d_.*f_^(a_.+b_.*x_)],x_Symbol] :=
  x^(m+1)*Log[c+d*f^(a+b*x)]/(m+1) - x^(m+1)*Log[1+d/c*f^(a+b*x)]/(m+1) +
  Int[x^m*Log[1+d/c*f^(a+b*x)],x] /;
FreeQ[{a,b,c,d,f},x] && NonzeroQ[c-1] && RationalQ[m] && m>0


(* ::Code:: *)
Int[Log[u_],x_Symbol] :=
  x*Log[u] -
  Int[Regularize[x*D[u,x]/u,x],x] /;
AlgebraicFunctionQ[u,x]



(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



Int[Sin[c_.+d_.*x_]^j_.*(A_+B_.*Sin[c_.+d_.*x_]^k_.),x_Symbol] :=
  B*x + Dist[A,Int[Sin[c+d*x]^j,x]] /;
FreeQ[{c,d,A,B},x] && OneQ[j^2] && ZeroQ[j+k]


Int[Sqrt[Sin[c_.+d_.*x_]]*(A_+B_.*Sin[c_.+d_.*x_]^(-1)),x_Symbol] :=
  Dist[A,Int[Sqrt[Sin[c+d*x]],x]] + 
  Dist[B,Int[1/Sqrt[Sin[c+d*x]],x]] /;
FreeQ[{c,d,A,B},x]


Int[(Sin[c_.+d_.*x_]^(-1))^m_*(A_.+B_.*Sin[c_.+d_.*x_]),x_Symbol] :=
  Dist[Sin[c+d*x]^m*Csc[c+d*x]^m,Int[(A+B*Sin[c+d*x])/Sin[c+d*x]^m,x]] /;
FreeQ[{c,d,A,B},x] && ZeroQ[m^2-1/4]


Int[(Sin[c_.+d_.*x_]^j_.)^m_*(A_+B_.*Sin[c_.+d_.*x_]^k_.),x_Symbol] :=
  A*Cos[c+d*x]*(Sin[c+d*x]^j)^(m+j*k)/(d*(j*k*m+(k+1)/2)) + 
  Dist[1/(j*k*m+(k+1)/2),
    Int[(Sin[c+d*x]^j)^(m+j*k)*Simplify[B*(j*k*m+(k+1)/2)+A*(j*k*m+(k+3)/2)*Sin[c+d*x]^k,x],x]] /;
FreeQ[{c,d,A,B},x] && OneQ[j^2,k^2] && RationalQ[m] && j*k*m<-1


Int[(Sin[c_.+d_.*x_]^j_.)^m_*(A_+B_.*Sin[c_.+d_.*x_]^k_.),x_Symbol] :=
  -B*Cos[c+d*x]*(Sin[c+d*x]^j)^m/(d*(j*k*m+(k+1)/2)) + 
  Dist[1/(j*k*m+(k+1)/2),
    Int[(Sin[c+d*x]^j)^(m-j*k)*(B*(j*k*m+(k-1)/2)+A*(j*k*m+(k+1)/2)*Sin[c+d*x]^k),x]] /;
FreeQ[{c,d,A,B},x] && OneQ[j^2,k^2] && RationalQ[m] && j*k*m>0 && m^2!=1


Int[(A_.+B_.*Sin[c_.+d_.*x_]^k_.)*(a_+b_.*Sin[c_.+d_.*x_]^k_.),x_Symbol] :=
  (4*a*A+b*B*(k+1))*x/4 - (2*b*B*Cos[c+d*x]*Sin[c+d*x]^k)/(d*(k+3)) + (b*A+a*B)*Int[Sin[c+d*x]^k,x] /;
FreeQ[{a,b,c,d,A,B},x] && OneQ[k^2]


Int[(A_+B_.*Sin[c_.+d_.*x_]^k_.)/(a_+b_.*Sin[c_.+d_.*x_]^k_.),x_Symbol] :=
  B*x/b /;
FreeQ[{a,b,c,d,A,B},x] && OneQ[k^2] && ZeroQ[b*A-a*B]


Int[(A_.+B_.*Sin[c_.+d_.*x_])/(a_+b_.*Sin[c_.+d_.*x_]),x_Symbol] :=
  B*x/b + Dist[(b*A-a*B)/b,Int[1/(a+b*Sin[c+d*x]),x]] /;
FreeQ[{a,b,c,d,A,B},x] && NonzeroQ[a^2-b^2] && NonzeroQ[b*A-a*B]


Int[(A_.+B_.*Sin[c_.+d_.*x_]^(-1))/(a_+b_.*Sin[c_.+d_.*x_]^(-1)),x_Symbol] :=
  A*x/a - Dist[(b*A-a*B)/a,Int[1/(b+a*Sin[c+d*x]),x]] /;
FreeQ[{a,b,c,d,A,B},x] && NonzeroQ[a^2-b^2] && NonzeroQ[b*A-a*B]


Int[(A_.+B_.*Sin[c_.+d_.*x_])/Sqrt[a_.+b_.*Sin[c_.+d_.*x_]],x_Symbol] :=
  Dist[B/b,Int[Sqrt[a+b*Sin[c+d*x]],x]] +
  Dist[(b*A-a*B)/b,Int[1/Sqrt[a+b*Sin[c+d*x]],x]] /;
FreeQ[{a,b,c,d,A,B},x] && NonzeroQ[a^2-b^2] && NonzeroQ[b*A-a*B]


Int[(A_+B_.*Sin[c_.+d_.*x_]^(-1))/Sqrt[b_.*Sin[c_.+d_.*x_]^(-1)],x_Symbol] :=
  Dist[1/(Sqrt[Sin[c+d*x]]*Sqrt[b*Csc[c+d*x]]),Int[(B+A*Sin[c+d*x])/Sqrt[Sin[c+d*x]],x]] /;
FreeQ[{b,c,d,A,B},x]


Int[(A_.+B_.*Sin[c_.+d_.*x_]^(-1))*(a_+b_.*Sin[c_.+d_.*x_]^(-1))^n_,x_Symbol] :=
  Dist[Sqrt[b+a*Sin[c+d*x]]/(Sqrt[Sin[c+d*x]]*Sqrt[a+b*Csc[c+d*x]]),
    Int[(B+A*Sin[c+d*x])*(b+a*Sin[c+d*x])^n/Sin[c+d*x]^(n+1),x]] /;
FreeQ[{a,b,c,d,A,B},x] && NonzeroQ[a^2-b^2] && NonzeroQ[b*A-a*B] && IntegerQ[n-1/2] && -2<n<1


Int[(A_.+B_.*Sin[c_.+d_.*x_]^k_.)*(a_.+b_.*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  Dist[B/b,Int[(a+b*Sin[c+d*x]^k)^(n+1),x]] /;
FreeQ[{a,b,c,d,A,B,n},x] && OneQ[k^2] && ZeroQ[b*A-a*B] && RationalQ[n] && n<0


Int[(A_+B_.*Sin[c_.+d_.*x_]^(-1))*(a_+b_.*Sin[c_.+d_.*x_]^(-1))^n_,x_Symbol] :=
  b*(b*A-a*B)*Cot[c+d*x]*(a+b*Csc[c+d*x])^(n+1)/(a*d*(n+1)*(a^2-b^2)) + 
  Dist[1/(a*(n+1)*(a^2-b^2)),
    Int[Simplify[A*(a^2-b^2)*(n+1)-(a*(b*A-a*B)*(n+1))*Sin[c+d*x]^(-1)+
        (b*(b*A-a*B)*(n+2))*Sin[c+d*x]^(-2),x]*
      (a+b*Sin[c+d*x]^(-1))^(n+1),x]] /;
FreeQ[{a,b,c,d,A,B},x] && NonzeroQ[a^2-b^2] && NonzeroQ[b*A-a*B] && RationalQ[n] && n<-1


Int[(A_+B_.*Sin[c_.+d_.*x_]^(-1))*(a_+b_.*Sin[c_.+d_.*x_]^(-1))^n_,x_Symbol] :=
  -b*B*Cot[c+d*x]*(a+b*Csc[c+d*x])^(n-1)/(d*n) + 
  Dist[1/n,
    Int[Simplify[a^2*A*n+(b^2*B*(n-1)+2*a*A*b*n+a^2*B*n)*Sin[c+d*x]^(-1)+
        (b*(b*A*n+a*B*(2*n-1)))*Sin[c+d*x]^(-2),x]*
      (a+b*Sin[c+d*x]^(-1))^(n-2),x]] /;
FreeQ[{a,b,c,d,A,B},x] && NonzeroQ[a^2-b^2] && RationalQ[n] && n>1


Int[(A_+B_.*Sin[c_.+d_.*x_]^k_.)*(b_.*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  2*A*Cos[c+d*x]*(b*Sin[c+d*x]^k)^(n+1)/(b*d*(2*n+k+1)) + 
  Dist[1/(b*(2*n+k+1)),
    Int[Simplify[B*(2*n+k+1)+A*(2*n+k+3)*Sin[c+d*x]^k,x]*(b*Sin[c+d*x]^k)^(n+1),x]] /;
FreeQ[{b,c,d,A,B},x] && OneQ[k^2] && RationalQ[n] && n<-1


Int[(A_+B_.*Sin[c_.+d_.*x_]^k_.)*(b_.*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  -2*B*Cos[c+d*x]*(b*Sin[c+d*x]^k)^n/(d*(2*n+k+1)) + 
  Dist[1/(2*n+k+1),
    Int[Simplify[b*B*(2*n+k-1)+b*A*(2*n+k+1)*Sin[c+d*x]^k,x]*(b*Sin[c+d*x]^k)^(n-1),x]] /;
FreeQ[{b,c,d,A,B},x] && OneQ[k^2] && RationalQ[n] && n>0


Int[(A_+B_.*Sin[c_.+d_.*x_])/(Sin[c_.+d_.*x_]*(a_+b_.*Sin[c_.+d_.*x_])),x_Symbol] :=
  Dist[A/a,Int[1/Sin[c+d*x],x]] - 
  Dist[(b*A-a*B)/a,Int[1/(a+b*Sin[c+d*x]),x]] /;
FreeQ[{a,b,c,d,A,B},x] && NonzeroQ[b*A-a*B]


Int[Sin[c_.+d_.*x_]^m_*(A_+B_.*Sin[c_.+d_.*x_])/(a_+b_.*Sin[c_.+d_.*x_]),x_Symbol] :=
  Dist[B/b,Int[Sin[c+d*x]^m,x]] + 
  Dist[(b*A-a*B)/b,Int[Sin[c+d*x]^m/(a+b*Sin[c+d*x]),x]] /;
FreeQ[{a,b,c,d,A,B},x] && NonzeroQ[a^2-b^2] && NonzeroQ[b*A-a*B] && ZeroQ[m^2-1/4]


Int[(A_+B_.*Sin[c_.+d_.*x_])*(a_+b_.*Sin[c_.+d_.*x_])^n_/Sin[c_.+d_.*x_],x_Symbol] :=
  Dist[B,Int[(a+b*Sin[c+d*x])^n,x]] + 
  Dist[A,Int[(a+b*Sin[c+d*x])^n/Sin[c+d*x],x]] /;
FreeQ[{a,b,c,d,A,B},x] && NonzeroQ[a^2-b^2] && ZeroQ[n^2-1/4]


Int[(A_+B_.*Sin[c_.+d_.*x_])/(Sqrt[Sin[c_.+d_.*x_]]*Sqrt[a_+b_.*Sin[c_.+d_.*x_]]),x_Symbol] :=
  B*Int[(1+Sin[c+d*x])/(Sqrt[Sin[c+d*x]]*Sqrt[a+b*Sin[c+d*x]]),x] + 
  (A-B)*Int[1/(Sqrt[Sin[c+d*x]]*Sqrt[a+b*Sin[c+d*x]]),x] /;
FreeQ[{a,b,c,d,A,B},x] && NonzeroQ[a^2-b^2] && NonzeroQ[A-B]


Int[(A_+B_.*Sin[c_.+d_.*x_])*Sqrt[a_.+b_.*Sin[c_.+d_.*x_]]/Sqrt[e_.+f_.*Sin[c_.+d_.*x_]],x_Symbol] :=
  Int[(a*A+(b*A+a*B)*Sin[c+d*x]+b*B*Sin[c+d*x]^2)/(Sqrt[a+b*Sin[c+d*x]]*Sqrt[e+f*Sin[c+d*x]]),x] /;
FreeQ[{a,b,c,d,e,f,A,B},x] && NonzeroQ[a^2-b^2] && NonzeroQ[e^2-f^2]


Int[(A_+B_.*Sin[c_.+d_.*x_])/(Sin[c_.+d_.*x_]^(3/2)*Sqrt[a_+b_.*Sin[c_.+d_.*x_]]),x_Symbol] :=
  2*A*Sqrt[a+b*Sin[c+d*x]]*Tan[(c-Pi/2+d*x)/2]/(a*d*Sqrt[Sin[c+d*x]]) - 
  2*A/a*Int[Sqrt[a+b*Sin[c+d*x]]/(Sqrt[Sin[c+d*x]]*(1+Sin[c+d*x])),x] /;
FreeQ[{a,b,c,d,A,B},x] && NonzeroQ[a^2-b^2] && ZeroQ[A+B]


Int[(A_+B_.*Sin[c_.+d_.*x_])/(Sin[c_.+d_.*x_]^(3/2)*Sqrt[a_+b_.*Sin[c_.+d_.*x_]]),x_Symbol] :=
  Dist[A+B,Int[1/(Sqrt[Sin[c+d*x]]*Sqrt[a+b*Sin[c+d*x]]),x]] + 
  Dist[A,Int[(1-Sin[c+d*x])/(Sin[c+d*x]^(3/2)*Sqrt[a+b*Sin[c+d*x]]),x]] /;
FreeQ[{a,b,c,d,A,B},x] && NonzeroQ[a^2-b^2] && NonzeroQ[A+B]


Int[(A_+B_.*Sin[c_.+d_.*x_])/(Sqrt[Sin[c_.+d_.*x_]]*(a_+b_.*Sin[c_.+d_.*x_])^(3/2)),x_Symbol] :=
  2*A*(a-b)*Sqrt[Sin[c+d*x]]*Tan[(c-Pi/2+d*x)/2]/(a*d*(a+b)*Sqrt[a+b*Sin[c+d*x]]) + 
  Dist[2*A/(a*(a+b)),Int[Sqrt[a+b*Sin[c+d*x]]/(Sqrt[Sin[c+d*x]]*(1+Sin[c+d*x])),x]] /;
FreeQ[{a,b,c,d,A,B},x] && NonzeroQ[a^2-b^2] && ZeroQ[A-B]


Int[(A_+B_.*Sin[c_.+d_.*x_])/(Sqrt[Sin[c_.+d_.*x_]]*(a_+b_.*Sin[c_.+d_.*x_])^(3/2)),x_Symbol] :=
  Dist[(A-B)/(a-b),Int[1/(Sqrt[Sin[c+d*x]]*Sqrt[a+b*Sin[c+d*x]]),x]] - 
  Dist[(b*A-a*B)/(a-b),Int[(1+Sin[c+d*x])/(Sqrt[Sin[c+d*x]]*(a+b*Sin[c+d*x])^(3/2)),x]] /;
FreeQ[{a,b,c,d,A,B},x] && NonzeroQ[a^2-b^2] && NonzeroQ[b*A-a*B] && NonzeroQ[A-B]


Int[(A_+B_.*Sin[c_.+d_.*x_])*Sqrt[a_+b_.*Sin[c_.+d_.*x_]]/Sin[c_.+d_.*x_]^(3/2),x_Symbol] :=
  (b*(A-B)+a*(A+B))*Int[1/(Sqrt[Sin[c+d*x]]*Sqrt[a+b*Sin[c+d*x]]),x] + 
  Int[Simplify[a*A-(a*A-b*B)*Sin[c+d*x]+b*B*Sin[c+d*x]^2,x]/(Sin[c+d*x]^(3/2)*Sqrt[a+b*Sin[c+d*x]]),x] /;
FreeQ[{a,b,c,d,A,B},x] && NonzeroQ[a^2-b^2]


Int[Sqrt[Sin[c_.+d_.*x_]]*(A_+B_.*Sin[c_.+d_.*x_])/(a_+b_.*Sin[c_.+d_.*x_])^(3/2),x_Symbol] :=
  B/b*Int[(1+Sin[c+d*x])/(Sqrt[Sin[c+d*x]]*Sqrt[a+b*Sin[c+d*x]]),x] + 
  Dist[1/b,Int[Simplify[-a*B+(A*b-(a+b)*B)*Sin[c+d*x],x]/(Sqrt[Sin[c+d*x]]*(a+b*Sin[c+d*x])^(3/2)),x]] /;
FreeQ[{a,b,c,d,A,B},x] && NonzeroQ[a^2-b^2] && NonzeroQ[b*A-a*B]


Int[Sin[c_.+d_.*x_]^m_.*(A_+B_.*Sin[c_.+d_.*x_]^k_.)*(b_.*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  Dist[1/b^(k*m),Int[(A+B*Sin[c+d*x]^k)*(b*Sin[c+d*x]^k)^(k*m+n),x]] /;
FreeQ[{b,c,d,A,B,n},x] && OneQ[k^2] && IntegerQ[m]


Int[(Sin[c_.+d_.*x_]^j_.)^m_*(A_+B_.*Sin[c_.+d_.*x_]^k_.)*(b_*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  Dist[b^(n-1/2)*Sqrt[b*Sin[c+d*x]^k]/(Sqrt[Sin[c+d*x]^j])^(j*k),
    Int[Sin[c+d*x]^(j*m+k*n)*(A+B*Sin[c+d*x]^k),x]] /;
FreeQ[{b,c,d,A,B},x] && OneQ[j^2,k^2] && IntegerQ[m-1/2] && IntegerQ[n-1/2] && n>0


Int[(Sin[c_.+d_.*x_]^j_.)^m_*(A_+B_.*Sin[c_.+d_.*x_]^k_.)*(b_*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  Dist[b^(n+1/2)*(Sqrt[Sin[c+d*x]^j])^(j*k)/Sqrt[b*Sin[c+d*x]^k],
    Int[Sin[c+d*x]^(j*m+k*n)*(A+B*Sin[c+d*x]^k),x]] /;
FreeQ[{b,c,d,A,B},x] && OneQ[j^2,k^2] && IntegerQ[m-1/2] && IntegerQ[n-1/2] && n<0


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.+B_.*Sin[c_.+d_.*x_]^(-1))/(a_+b_.*Sin[c_.+d_.*x_]^(-1)),x_Symbol] :=
  Int[(Sin[c+d*x]^j)^m*(B+A*Sin[c+d*x])/(b+a*Sin[c+d*x]),x] /;
FreeQ[{a,b,c,d,A,B},x] && OneQ[j^2] && NonzeroQ[a^2-b^2] && RationalQ[m] && -1<m<=1


Int[Sin[c_.+d_.*x_]^m_.*(A_.+B_.*Sin[c_.+d_.*x_]^(-1))*(a_.+b_.*Sin[c_.+d_.*x_]^(-1))^n_,x_Symbol] :=
  Dist[Sqrt[b+a*Sin[c+d*x]]/(Sqrt[Sin[c+d*x]]*Sqrt[a+b*Csc[c+d*x]]),
    Int[Sin[c+d*x]^(m-n-1)*(B+A*Sin[c+d*x])*(b+a*Sin[c+d*x])^n,x]] /;
FreeQ[{a,b,c,d,A,B},x] && NonzeroQ[a^2-b^2] && IntegerQ[m] && IntegerQ[n-1/2] &&
  (m==1 && -1<n<1 || m==-1 && -2<n<0)


Int[(Sin[c_.+d_.*x_]^j_.)^m_*(A_.+B_.*Sin[c_.+d_.*x_]^(-1))*(a_.+b_.*Sin[c_.+d_.*x_]^(-1))^n_,x_Symbol] :=
  Dist[Sqrt[b+a*Sin[c+d*x]]/((Sqrt[Sin[c+d*x]^j])^j*Sqrt[a+b*Csc[c+d*x]]),
    Int[Sin[c+d*x]^(j*m-n-1)*(B+A*Sin[c+d*x])*(b+a*Sin[c+d*x])^n,x]] /;
FreeQ[{a,b,c,d,A,B},x] && OneQ[j^2] && NonzeroQ[a^2-b^2] && 
  IntegerQ[m-1/2] && IntegerQ[n-1/2] && -1<n<1 && 0<=j*m-n<=1


Int[(Sin[c_.+d_.*x_]^(-1))^m_*(A_.+B_.*Sin[c_.+d_.*x_])*(a_+b_.*Sin[c_.+d_.*x_])^n_,x_Symbol] :=
  Dist[Sqrt[Csc[c+d*x]]*Sqrt[Sin[c+d*x]],
    Int[(A+B*Sin[c+d*x])*(a+b*Sin[c+d*x])^n/Sin[c+d*x]^m,x]] /;
FreeQ[{a,b,c,d,A,B},x] && IntegerQ[m-1/2] && RationalQ[n] && -1<m<2 && -2<n<1


Int[Sin[c_.+d_.*x_]*(A_+B_.*Sin[c_.+d_.*x_])*(a_+b_.*Sin[c_.+d_.*x_])^n_,x_Symbol] :=
  a*(b*A-a*B)*Cos[c+d*x]*(a+b*Sin[c+d*x])^(n+1)/(b*d*(n+1)*(a^2-b^2)) - 
  Dist[1/(b*(n+1)*(a^2-b^2)),
    Int[Simplify[b*(n+1)*(b*A-a*B)+(a^2*B-a*b*A*(n+2)+b^2*B*(n+1))*Sin[c+d*x],x]*
      (a+b*Sin[c+d*x])^(n+1),x]] /;
FreeQ[{a,b,c,d,A,B},x] && NonzeroQ[a^2-b^2] && NonzeroQ[b*A-a*B] && RationalQ[n] && n<-1


Int[Sin[c_.+d_.*x_]*(A_+B_.*Sin[c_.+d_.*x_])/(a_+b_.*Sin[c_.+d_.*x_]),x_Symbol] :=
  -B*Cos[c+d*x]/(b*d) + 
  Dist[(b*A-a*B)/b,Int[Sin[c+d*x]/(a+b*Sin[c+d*x]),x]] /;
FreeQ[{a,b,c,d,A,B},x] && NonzeroQ[b*A-a*B]


Int[Sin[c_.+d_.*x_]*(A_+B_.*Sin[c_.+d_.*x_])*(a_+b_.*Sin[c_.+d_.*x_])^n_,x_Symbol] :=
  -B*Cos[c+d*x]*(a+b*Sin[c+d*x])^(n+1)/(b*d*(n+2)) + 
  Dist[1/(b*(n+2)),Int[Simplify[b*B*(n+1)-(a*B-b*A*(n+2))*Sin[c+d*x],x]*(a+b*Sin[c+d*x])^n,x]] /;
FreeQ[{a,b,c,d,A,B},x] && RationalQ[n] && n>-1 && n!=1


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_+B_.*Sin[c_.+d_.*x_]^k_.)*(a_+b_.*Sin[c_.+d_.*x_]^k_.),x_Symbol] :=
  a*A*Cos[c+d*x]*(Sin[c+d*x]^j)^(m+j*k)/(d*(j*k*m+(k+1)/2)) + 
  Dist[1/(j*k*m+(k+1)/2),
    Int[(Sin[c+d*x]^j)^(m+j*k)*
      Simplify[(b*A+a*B)*(j*k*m+(k+1)/2)+(a*A*(j*k*m+(k+3)/2)+b*B*(j*k*m+(k+1)/2))*Sin[c+d*x]^k,x],x]] /;
FreeQ[{a,b,c,d,A,B},x] && OneQ[j^2,k^2] && NonzeroQ[a^2-b^2] && 
  RationalQ[m] && j*k*m+(k+1)/2!=0 && j*k*m<=-1


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_+B_.*Sin[c_.+d_.*x_]^k_.)*(a_+b_.*Sin[c_.+d_.*x_]^k_.),x_Symbol] :=
  -b*B*Cos[c+d*x]*(Sin[c+d*x]^j)^(m+j*k)/(d*(j*k*m+(k+3)/2)) + 
  Dist[1/(j*k*m+(k+3)/2),
    Int[(Sin[c+d*x]^j)^m*
      Simplify[a*A*(j*k*m+(k+3)/2)+b*B*(j*k*m+(k+1)/2)+(b*A+a*B)*(j*k*m+(k+3)/2)*Sin[c+d*x]^k,x],x]] /;
FreeQ[{a,b,c,d,A,B},x] && OneQ[j^2,k^2] && NonzeroQ[a^2-b^2] && 
  RationalQ[m] && j*k*m>=-1


Int[(A_.+B_.*Sin[c_.+d_.*x_])*(a_+b_.*Sin[c_.+d_.*x_])^n_,x_Symbol] :=
  -(b*A-a*B)*Cos[c+d*x]*(a+b*Sin[c+d*x])^(n+1)/(d*(n+1)*(a^2-b^2)) +
  Dist[1/((n+1)*(a^2-b^2)),
    Int[Simplify[(a*A-b*B)*(n+1)-(b*A-a*B)*(n+2)*Sin[c+d*x],x]*(a+b*Sin[c+d*x])^(n+1),x]] /;
FreeQ[{a,b,c,d,A,B},x] && NonzeroQ[a^2-b^2] && NonzeroQ[b*A-a*B] && RationalQ[n] && n<-1


Int[Sin[c_.+d_.*x_]^(-1)*(A_.+B_.*Sin[c_.+d_.*x_]^(-1))*(a_+b_.*Sin[c_.+d_.*x_]^(-1))^n_,x_Symbol] :=
  -(b*A-a*B)*Cot[c+d*x]*(a+b*Csc[c+d*x])^(n+1)/(d*(n+1)*(a^2-b^2)) + 
  Dist[1/((n+1)*(a^2-b^2)),
    Int[Sin[c+d*x]^(-1)*
      Simplify[(a*A-b*B)*(n+1)-(b*A-a*B)*(n+2)*Sin[c+d*x]^(-1),x]*(a+b*Sin[c+d*x]^(-1))^(n+1),x]] /;
FreeQ[{a,b,c,d,A,B},x] && NonzeroQ[a^2-b^2] && NonzeroQ[b*A-a*B] && RationalQ[n] && n<-1


Int[(A_.+B_.*Sin[c_.+d_.*x_])*(a_.+b_.*Sin[c_.+d_.*x_])^n_,x_Symbol] :=
  -B*Cos[c+d*x]*(a+b*Sin[c+d*x])^n/(d*(n+1)) + 
  Dist[1/(n+1),
    Int[Simplify[b*B*n+a*A*(n+1)+(a*B*n+b*A*(n+1))*Sin[c+d*x],x]*(a+b*Sin[c+d*x])^(n-1),x]] /;
FreeQ[{a,b,c,d,A,B},x] && RationalQ[n] && n>0 && n!=1


Int[Sin[c_.+d_.*x_]^(-1)*(A_.+B_.*Sin[c_.+d_.*x_]^(-1))*(a_+b_.*Sin[c_.+d_.*x_]^(-1))^n_,x_Symbol] :=
  -B*Cot[c+d*x]*(a+b*Csc[c+d*x])^n/(d*(n+1)) + 
  Dist[1/(n+1),
    Int[Sin[c+d*x]^(-1)*
      Simplify[b*B*n+a*A*(n+1)+(a*B*n+b*A*(n+1))*Sin[c+d*x]^(-1),x]*(a+b*Sin[c+d*x]^(-1))^(n-1),x]] /;
FreeQ[{a,b,c,d,A,B},x] && RationalQ[n] && n>0 && n!=1


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.+B_.*Sin[c_.+d_.*x_]^k_.)*(a_+b_.*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  Dist[B/b,Int[(Sin[c+d*x]^j)^m*(a+b*Sin[c+d*x]^k)^(n+1),x]] /;
FreeQ[{a,b,c,d,A,B,m},x] && OneQ[j^2,k^2] && ZeroQ[b*A-a*B] && RationalQ[n] && n<0


Int[(Sin[c_.+d_.*x_]^j_.)^m_*(A_.+B_.*Sin[c_.+d_.*x_]^k_.)*(a_+b_.*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  a*(b*A-a*B)*Cos[c+d*x]*(Sin[c+d*x]^j)^(m-j*k)*(a+b*Sin[c+d*x]^k)^(n+1)/(b*d*(n+1)*(a^2-b^2)) - 
  Dist[1/(b*(n+1)*(a^2-b^2)),
    Int[(Sin[c+d*x]^j)^(m-2*j*k)*
      Simplify[a*(b*A-a*B)*(j*k*m+(k-3)/2)+b*(b*A-a*B)*(n+1)*Sin[c+d*x]^k-
        (b*(a*A-b*B)*(n+1)+a*(b*A-a*B)*(j*k*m+(k-1)/2))*Sin[c+d*x]^(2*k),x]*
      (a+b*Sin[c+d*x]^k)^(n+1),x]] /;
FreeQ[{a,b,c,d,A,B},x] && OneQ[j^2,k^2] && NonzeroQ[a^2-b^2] && NonzeroQ[b*A-a*B] && 
  RationalQ[m,n] && j*k*m>1 && n<-1


Int[(Sin[c_.+d_.*x_]^j_.)^m_*(A_.+B_.*Sin[c_.+d_.*x_]^k_.)*(a_+b_.*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  -(b*A-a*B)*Cos[c+d*x]*(Sin[c+d*x]^j)^m*(a+b*Sin[c+d*x]^k)^(n+1)/(d*(n+1)*(a^2-b^2)) + 
  Dist[1/((n+1)*(a^2-b^2)),
    Int[(Sin[c+d*x]^j)^(m-j*k)*
      Simplify[(b*A-a*B)*(j*k*m+(k-1)/2)+(a*A-b*B)*(n+1)*Sin[c+d*x]^k-
        (b*A-a*B)*(j*k*m+n+(k+3)/2)*Sin[c+d*x]^(2*k),x]*
      (a+b*Sin[c+d*x]^k)^(n+1),x]] /;
FreeQ[{a,b,c,d,A,B},x] && OneQ[j^2,k^2] && NonzeroQ[a^2-b^2] && NonzeroQ[b*A-a*B] && 
  RationalQ[m,n] && 0<j*k*m<1 && n<-1


Int[(Sin[c_.+d_.*x_]^j_.)^m_*(A_.+B_.*Sin[c_.+d_.*x_]^k_.)*(a_+b_.*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  -B*Cos[c+d*x]*(Sin[c+d*x]^j)^(m-j*k)*(a+b*Sin[c+d*x]^k)^(n+1)/(b*d*(j*k*m+n+(k+1)/2)) + 
  Dist[1/(b*(j*k*m+n+(k+1)/2)),
    Int[(Sin[c+d*x]^j)^(m-2*j*k)*
      Simplify[a*B*(j*k*m+(k-3)/2)+b*B*(j*k*m+n+(k-1)/2)*Sin[c+d*x]^k+
        (b*A*(n+1)+(b*A-a*B)*(j*k*m+(k-1)/2))*Sin[c+d*x]^(2*k),x]*
      (a+b*Sin[c+d*x]^k)^n,x]] /;
FreeQ[{a,b,c,d,A,B},x] && OneQ[j^2,k^2] && NonzeroQ[a^2-b^2] && RationalQ[m,n] && 
  j*k*m>1 && -1<=n<0


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.+B_.*Sin[c_.+d_.*x_]^k_.)*(a_+b_.*Sin[c_.+d_.*x_]^k_.)^n_.,x_Symbol] :=
  -b*B*Cos[c+d*x]*(Sin[c+d*x]^j)^(m+j*k)*(a+b*Sin[c+d*x]^k)^(n-1)/(d*(j*k*m+n+(k+1)/2)) + 
  Dist[1/(j*k*m+n+(k+1)/2),
    Int[(Sin[c+d*x]^j)^m*
      Simplify[a*(a*A*n+(a*A+b*B)*(j*k*m+(k+1)/2))+
        (a*(2*b*A+a*B)+(a^2*B+2*a*b*A+b^2*B)*(j*k*m+n+(k-1)/2))*Sin[c+d*x]^k+
        b*(a*B*(n-1)+(b*A+a*B)*(j*k*m+n+(k+1)/2))*Sin[c+d*x]^(2*k),x]*
      (a+b*Sin[c+d*x]^k)^(n-2),x]] /;
FreeQ[{a,b,c,d,A,B},x] && OneQ[j^2,k^2] && NonzeroQ[a^2-b^2] && RationalQ[m,n] && 
  j*k*m>=-1 && j*k*m!=1 && n>1


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.+B_.*Sin[c_.+d_.*x_]^k_.)*(a_+b_.*Sin[c_.+d_.*x_]^k_.)^n_.,x_Symbol] :=
  -B*Cos[c+d*x]*(Sin[c+d*x]^j)^m*(a+b*Sin[c+d*x]^k)^n/(d*(j*k*m+n+(k+1)/2)) + 
  Dist[1/(j*k*m+n+(k+1)/2),
    Int[(Sin[c+d*x]^j)^(m-j*k)*
      Simplify[a*B*(j*k*m+(k-1)/2)+(a*A+(a*A+b*B)*(j*k*m+n+(k-1)/2))*Sin[c+d*x]^k+
        (n*(b*A+a*B)+b*A*(j*k*m+(k+1)/2))*Sin[c+d*x]^(2*k),x]*
      (a+b*Sin[c+d*x]^k)^(n-1),x]] /;
FreeQ[{a,b,c,d,A,B},x] && OneQ[j^2,k^2] && NonzeroQ[a^2-b^2] && RationalQ[m,n] && 
  j*k*m>0 && j*k*m!=1 && 0<n<1


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.+B_.*Sin[c_.+d_.*x_]^k_.)*(a_+b_.*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  a*A*Cos[c+d*x]*(Sin[c+d*x]^j)^(m+j*k)*(a+b*Sin[c+d*x]^k)^(n-1)/(d*(j*k*m+(k+1)/2)) + 
  Dist[1/(j*k*m+(k+1)/2),
    Int[(Sin[c+d*x]^j)^(m+j*k)*
      Simplify[a*((b*A+a*B)*(j*k*m+(k+1)/2)-b*A*(n-1))+
        (a^2*A+(a^2*A+2*a*b*B+b^2*A)*(j*k*m+(k+1)/2))*Sin[c+d*x]^k+
        b*(a*A*n+(a*A+b*B)*(j*k*m+(k+1)/2))*Sin[c+d*x]^(2*k),x]*
      (a+b*Sin[c+d*x]^k)^(n-2),x]] /;
FreeQ[{a,b,c,d,A,B},x] && OneQ[j^2,k^2] && NonzeroQ[a^2-b^2] && RationalQ[m,n] && 
  j*k*m<-1 && n>1


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.+B_.*Sin[c_.+d_.*x_]^k_.)*(a_+b_.*Sin[c_.+d_.*x_]^k_.)^n_.,x_Symbol] :=
  A*Cos[c+d*x]*(Sin[c+d*x]^j)^(m+j*k)*(a+b*Sin[c+d*x]^k)^n/(d*(j*k*m+(k+1)/2)) + 
  Dist[1/(j*k*m+(k+1)/2),
    Int[(Sin[c+d*x]^j)^(m+j*k)*
      Simplify[a*B*(j*k*m+(k+1)/2)-b*A*n+(a*A+(a*A+b*B)*(j*k*m+(k+1)/2))*Sin[c+d*x]^k+
        b*A*(j*k*m+n+(k+3)/2)*Sin[c+d*x]^(2*k),x]*
      (a+b*Sin[c+d*x]^k)^(n-1),x]] /;
FreeQ[{a,b,c,d,A,B},x] && OneQ[j^2,k^2] && NonzeroQ[a^2-b^2] && RationalQ[m,n] && 
  j*k*m<-1 && 0<n<=1


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.+B_.*Sin[c_.+d_.*x_]^k_.)*(a_+b_.*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  A*Cos[c+d*x]*(Sin[c+d*x]^j)^(m+j*k)*(a+b*Sin[c+d*x]^k)^(n+1)/(a*d*(j*k*m+(k+1)/2)) + 
  Dist[1/(a*(j*k*m+(k+1)/2)),
    Int[(Sin[c+d*x]^j)^(m+j*k)*
      Simplify[(a*B-b*A)*(j*k*m+(k+1)/2)-b*A*(n+1)+a*A*(j*k*m+(k+3)/2)*Sin[c+d*x]^k+
        b*A*(j*k*m+n+(k+1)/2+2)*Sin[c+d*x]^(2*k),x]*
      (a+b*Sin[c+d*x]^k)^n,x]] /;
FreeQ[{a,b,c,d,A,B},x] && OneQ[j^2,k^2] && NonzeroQ[a^2-b^2] && RationalQ[m,n] && 
  j*k*m+(k+1)/2!=0 && j*k*m<=-1 && -1<=n<0


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.+B_.*Sin[c_.+d_.*x_]^k_.)*(a_+b_.*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  b*(b*A-a*B)*Cos[c+d*x]*(Sin[c+d*x]^j)^(m+j*k)*(a+b*Sin[c+d*x]^k)^(n+1)/(a*d*(n+1)*(a^2-b^2)) + 
  Dist[1/(a*(n+1)*(a^2-b^2)),
    Int[(Sin[c+d*x]^j)^m*
      Simplify[A*(a^2-b^2)*(n+1)-b*(b*A-a*B)*(j*k*m+(k+1)/2)-a*(b*A-a*B)*(n+1)*Sin[c+d*x]^k+
        b*(b*A-a*B)*(j*k*m+n+(k+5)/2)*Sin[c+d*x]^(2*k),x]*
      (a+b*Sin[c+d*x]^k)^(n+1),x]] /;
FreeQ[{a,b,c,d,A,B},x] && OneQ[j^2,k^2] && NonzeroQ[a^2-b^2] && NonzeroQ[b*A-a*B] && 
  RationalQ[m,n] && j*k*m<0 && n<-1
(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



Int[1/(a_+b_.* Sin[c_.+d_.*x_]),x_Symbol] :=
  -Cos[c+d*x]/(d*(b+a*Sin[c+d*x])) /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2-b^2]


Int[1/(a_+b_.*Cos[c_.+d_.*x_]),x_Symbol] :=
  Sin[c+d*x]/(d*(b+a*Cos[c+d*x])) /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2-b^2]


Int[1/(a_+b_.* Sin[c_.+d_.*x_]^(-1)),x_Symbol] :=
  x/a - Dist[b/a,Int[1/( Sin[c+d*x]*(a+b/ Sin[c+d*x])),x]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2-b^2]


Int[Sqrt[a_+b_.* Sin[c_.+d_.*x_]],x_Symbol] :=
  -2*b*Cos[c+d*x]/(d*Sqrt[a+b*Sin[c+d*x]]) /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2-b^2]


Int[Sqrt[a_+b_.*Cos[c_.+d_.*x_]],x_Symbol] :=
  2*b*Sin[c+d*x]/(d*Sqrt[a+b*Cos[c+d*x]]) /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2-b^2]


Int[Sqrt[a_+b_.* Sin[c_.+d_.*x_]^(-1)],x_Symbol] :=
  -2*Sqrt[a]/d*ArcTan[(Sqrt[a]*Cot[c+d*x])/Sqrt[a+b*Csc[c+d*x]]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2-b^2]


Int[1/Sqrt[a_+b_.* Sin[c_.+Pi/2+d_.*x_]],x_Symbol] :=
  2/(d*Sqrt[a+b*Cos[c+d*x]])*Cos[(c+d*x)/2]*ArcTanh[Sin[(c+d*x)/2]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a-b]


Int[1/Sqrt[a_+b_.* Sin[c_.+Pi/2+d_.*x_]],x_Symbol] :=
  -2/(d*Sqrt[a+b*Cos[c+d*x]])*Sin[(c+d*x)/2]*ArcTanh[Cos[(c+d*x)/2]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a+b]


Int[1/Sqrt[a_+b_.* Sin[c_.+d_.*x_]],x_Symbol] :=
  2/(d*Sqrt[a+b*Sin[c+d*x]])*Cos[(c+d*x)/2-Pi*b/(4*a)]*ArcTanh[Sin[(c+d*x)/2-Pi*b/(4*a)]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2-b^2]


Int[(a_+b_.* Sin[c_.+d_.*x_]^(-1))^n_,x_Symbol] :=
  -Cot[c+d*x]*(a+b*Csc[c+d*x])^n/(d*(2*n+1)) + 
  Dist[1/(a^2*(2*n+1)),Int[(a*(2*n+1)-(b*(n+1))* Sin[c+d*x]^(-1))*(a+b* Sin[c+d*x]^(-1))^(n+1),x]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2-b^2] && RationalQ[n] && n<-1


Int[(a_+b_.* Sin[c_.+d_.*x_]^(-1))^n_,x_Symbol] :=
  -b^2*Cot[c+d*x]*(a+b*Csc[c+d*x])^(n-2)/(d*(n-1)) + 
  Dist[a/(n-1),Int[(a*(n-1)+(b*(3*n-4))* Sin[c+d*x]^(-1))*(a+b* Sin[c+d*x]^(-1))^(n-2),x]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2-b^2] && RationalQ[n] && n>1 && n!=2


Int[Sqrt[a_+b_.* Sin[c_.+Pi/2+d_.*x_]]/ Sin[c_.+Pi/2+d_.*x_],x_Symbol] :=
  2*Sqrt[2]*b*Cos[(c+d*x)/2]/(d*Sqrt[a+b*Cos[c+d*x]])*ArcTanh[Sqrt[2]*Sin[(c+d*x)/2]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a-b]


Int[Sqrt[a_+b_.* Sin[c_.+Pi/2+d_.*x_]]/ Sin[c_.+Pi/2+d_.*x_],x_Symbol] :=
  2*Sqrt[2]*a*Sin[(c+d*x)/2]/(d*Sqrt[a+b*Cos[c+d*x]])*ArcTanh[Sqrt[2]*Cos[(c+d*x)/2]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a+b]


Int[Sqrt[a_+b_.* Sin[c_.+d_.*x_]]/ Sin[c_.+d_.*x_],x_Symbol] :=
  2*Sqrt[2]*b*Cos[(c+d*x)/2-Pi*b/(4*a)]/(d*Sqrt[a+b*Sin[c+d*x]])*
    ArcTanh[Sqrt[2]*Sin[(c+d*x)/2-Pi*b/(4*a)]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2-b^2]


Int[1/( Sin[c_.+d_.*x_]*Sqrt[a_+b_.* Sin[c_.+d_.*x_]]),x_Symbol] :=
  Dist[1/a,Int[Sqrt[a+b* Sin[c+d*x]]/ Sin[c+d*x],x]] - 
  Dist[b/a,Int[1/Sqrt[a+b* Sin[c+d*x]],x]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2-b^2]


Int[1/Sqrt[a_+b_.* Sin[c_.+d_.*x_]^(-1)],x_Symbol] :=
  1/a*Int[Sqrt[a+b* Sin[c+d*x]^(-1)],x] - 
  b/a*Int[ Sin[c+d*x]^(-1)/Sqrt[a+b* Sin[c+d*x]^(-1)],x] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2-b^2]


Int[1/(Sqrt[ Sin[c_.+Pi/2+d_.*x_]]*Sqrt[a_+b_.* Sin[c_.+Pi/2+d_.*x_]]),x_Symbol] :=
  Sqrt[2]/(d*Sqrt[a])*ArcSin[Tan[(c+d*x)/2]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a-b] && PositiveQ[a]


Int[1/(Sqrt[ Sin[c_.+d_.*x_]]*Sqrt[a_+b_.* Sin[c_.+d_.*x_]]),x_Symbol] :=
  Sqrt[2]/(d*Sqrt[a])*ArcSin[Tan[(c+d*x)/2-Pi/4]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a-b] && PositiveQ[a]


Int[1/(Sqrt[ Sin[c_.+d_.*x_]]*Sqrt[a_+b_.* Sin[c_.+d_.*x_]]),x_Symbol] :=
  -Sqrt[2]*Sqrt[b]/(a*d)*ArcTan[Sqrt[b]*Cos[c+d*x]/(Sqrt[2]*Sqrt[Sin[c+d*x]]*Sqrt[a+b*Sin[c+d*x]])] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2-b^2] && Not[ZeroQ[a-b] && PositiveQ[a]]


Int[Sqrt[a_+b_.* Sin[c_.+d_.*x_]]/Sqrt[ Sin[c_.+d_.*x_]],x_Symbol] :=
  -2*Sqrt[b]/d*ArcTan[Sqrt[b]*Cos[c+d*x]/(Sqrt[Sin[c+d*x]]*Sqrt[a+b*Sin[c+d*x]])] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2-b^2]


Int[Sqrt[ Sin[c_.+d_.*x_]]/Sqrt[a_+b_.* Sin[c_.+d_.*x_]],x_Symbol] :=
  Dist[1/b,Int[Sqrt[a+b* Sin[c+d*x]]/Sqrt[ Sin[c+d*x]],x]] - 
  Dist[a/b,Int[1/(Sqrt[ Sin[c+d*x]]*Sqrt[a+b* Sin[c+d*x]]),x]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2-b^2]


Int[( Sin[c_.+d_.*x_]^j_.)^m_./(a_+b_.* Sin[c_.+d_.*x_]^k_.)^2,x_Symbol] :=
  -a*Cos[c+d*x]*(Sin[c+d*x]^j)^m/(3*b*d*(a+b*Sin[c+d*x]^k)^2) + 
  1/(6*a*b)*Int[( Sin[c+d*x]^j)^(m-j*k),x] /;
FreeQ[{a,b,c,d},x] && OneQ[j^2,k^2] && ZeroQ[a^2-b^2] && RationalQ[m] && 
  ZeroQ[2*j*k*m+k-2]


(* Int[( Sin[c_.+d_.*x_]^j_.)^m_.*(a_+b_.* Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  a*Cos[c+d*x]*(Sin[c+d*x]^j)^m*(a+b*Sin[c+d*x]^k)^n/(b*d*(2*n+1)) + 
  Dist[(n+1)/(2*a*b*(2*n+1)),Int[( Sin[c+d*x]^j)^(m-j*k)*(a+b* Sin[c+d*x]^k)^(n+2),x]] /;
FreeQ[{a,b,c,d},x] && OneQ[j^2,k^2] && ZeroQ[a^2-b^2] && RationalQ[m,n] && 
  ZeroQ[2*j*k*m+n+k] && j*k*m>0 && n<-1 *)


Int[ Sin[c_.+d_.*x_]^(-1)/(a_+b_.* Sin[c_.+d_.*x_]^(-1)),x_Symbol] :=
  -Cot[c+d*x]/(d*(b+a*Csc[c+d*x])) /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2-b^2]


Int[ Sin[c_.+d_.*x_]^(-1)*Sqrt[a_+b_.* Sin[c_.+d_.*x_]^(-1)],x_Symbol] :=
  -2*b*Cot[c+d*x]/(d*Sqrt[a+b*Csc[c+d*x]]) /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2-b^2]


Int[1/( Sin[c_.+d_.*x_]*Sqrt[a_+b_.* Sin[c_.+d_.*x_]^(-1)]),x_Symbol] :=
  -Sqrt[2*a]/(b*d)*ArcTan[Sqrt[a]*Cot[c + d*x]/(Sqrt[2]*Sqrt[a + b*Csc[c + d*x]])] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2-b^2]


Int[ Sin[c_.+d_.*x_]^(-2)*(a_+b_.* Sin[c_.+d_.*x_]^(-1))^n_.,x_Symbol] :=
  -Cot[c+d*x]*(a+b*Csc[c+d*x])^n/(d*(2*n+1)) + 
  Dist[n/(b*(2*n+1)),Int[ Sin[c+d*x]^(-1)*(a+b* Sin[c+d*x]^(-1))^(n+1),x]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2-b^2] && RationalQ[n] && n<-1


Int[ Sin[c_.+d_.*x_]^(-2)*(a_+b_.* Sin[c_.+d_.*x_]^(-1))^n_.,x_Symbol] :=
  -Cot[c+d*x]*(a+b*Csc[c+d*x])^n/(d*(n+1)) + 
  Dist[b*n/(a*(n+1)),Int[ Sin[c+d*x]^(-1)*(a+b* Sin[c+d*x]^(-1))^n,x]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2-b^2] && RationalQ[n] && n>-1 && n!=1 && n!=2


Int[( Sin[c_.+d_.*x_]^j_.)^m_/Sqrt[a_+b_.* Sin[c_.+d_.*x_]^(-1)],x_Symbol] :=
  Dist[1/b,Int[( Sin[c+d*x]^j)^(m+j)*Sqrt[a+b* Sin[c+d*x]^(-1)],x]] - 
  Dist[a/b,Int[( Sin[c+d*x]^j)^(m+j)/Sqrt[a+b* Sin[c+d*x]^(-1)],x]] /;
FreeQ[{a,b,c,d},x] && OneQ[j^2] && ZeroQ[a^2-b^2] && RationalQ[m] && j*m==-3/2


Int[( Sin[c_.+d_.*x_]^j_.)^m_/Sqrt[a_+b_.* Sin[c_.+d_.*x_]^(-1)],x_Symbol] :=
  -2*Cos[c+d*x]/(d*(Sin[c+d*x]^j)^m*Sqrt[a+b*Csc[c+d*x]]) - 
  Dist[a/b,Int[1/(( Sin[c+d*x]^j)^m*Sqrt[a+b* Sin[c+d*x]^(-1)]),x]] /;
FreeQ[{a,b,c,d},x] && OneQ[j^2] && ZeroQ[a^2-b^2] && RationalQ[m] && j*m==1/2


Int[( Sin[c_.+d_.*x_]^j_.)^m_*(a_+b_.* Sin[c_.+d_.*x_]^(-1))^(3/2),x_Symbol] :=
  -2*a^2*Cos[c+d*x]/(d*(Sin[c+d*x]^j)^m*Sqrt[a+b*Csc[c+d*x]]) + 
  Dist[b,Int[Sqrt[a+b* Sin[c+d*x]^(-1)]/( Sin[c+d*x]^j)^m,x]] /;
FreeQ[{a,b,c,d},x] && OneQ[j^2] && ZeroQ[a^2-b^2] && RationalQ[m] && j*m==1/2


Int[( Sin[c_.+d_.*x_]^j_.)^m_*(a_+b_.* Sin[c_.+d_.*x_]^(-1))^n_,x_Symbol] :=
  Dist[(Sin[c+d*x]^j)^m*Sqrt[b+a*Sin[c+d*x]]/Sqrt[a+b*Csc[c+d*x]],
    Int[(b+a* Sin[c+d*x])^n/ Sin[c+d*x]^(n+1/2),x]] /;
FreeQ[{a,b,c,d},x] && OneQ[j^2] && ZeroQ[a^2-b^2] && RationalQ[m,n] && j*m==-1/2 && n^2==1/4


Int[1/(Sqrt[ Sin[c_.+d_.*x_]^(-1)]*Sqrt[a_+b_.* Sin[c_.+d_.*x_]]),x_Symbol] :=
  Dist[1/b,Int[Sqrt[ Sin[c+d*x]^(-1)]*Sqrt[a+b* Sin[c+d*x]],x]] - 
  Dist[a/b,Int[Sqrt[ Sin[c+d*x]^(-1)]/Sqrt[a+b* Sin[c+d*x]],x]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2-b^2]


Int[Sqrt[ Sin[c_.+d_.*x_]^(-1)]*(a_+b_.* Sin[c_.+d_.*x_])^n_,x_Symbol] :=
  Dist[Sqrt[Csc[c+d*x]]*Sqrt[Sin[c+d*x]],Int[(a+b* Sin[c+d*x])^n/Sqrt[ Sin[c+d*x]],x]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2-b^2] && RationalQ[n] && n^2==1/4


Int[( Sin[c_.+d_.*x_]^j_.)^m_*Sqrt[a_+b_.* Sin[c_.+d_.*x_]^k_.],x_Symbol] :=
  -2*a*Cos[c+d*x]*(Sin[c+d*x]^j)^(m+j*k)/(d*Sqrt[a+b*Sin[c+d*x]^k]) /;
FreeQ[{a,b,c,d,m},x] && OneQ[j^2,k^2] && ZeroQ[a^2-b^2] && ZeroQ[2*j*k*m+k+2]


Int[( Sin[c_.+d_.*x_]^j_.)^m_.*Sqrt[a_+b_.* Sin[c_.+d_.*x_]^k_.],x_Symbol] :=
  2*a*Cos[c+d*x]*(Sin[c+d*x]^j)^(m+j*k)/(d*(2*j*k*m+k+1)*Sqrt[a+b*Sin[c+d*x]^k]) + 
  Dist[b*(2*j*k*m+k+2)/(a*(2*j*k*m+k+1)),Int[( Sin[c+d*x]^j)^(m+j*k)*Sqrt[a+b* Sin[c+d*x]^k],x]] /;
FreeQ[{a,b,c,d},x] && OneQ[j^2,k^2] && ZeroQ[a^2-b^2] && RationalQ[m] && 
  j*k*m<=-1 && NonzeroQ[2*j*k*m+k+2]


Int[( Sin[c_.+d_.*x_]^j_.)^m_.*Sqrt[a_+b_.* Sin[c_.+d_.*x_]^k_.],x_Symbol] :=
  -2*b*Cos[c+d*x]*(Sin[c+d*x]^j)^m/(d*k*(2*j*m+1)*Sqrt[a+b*Sin[c+d*x]^k]) + 
  Dist[a*(2*j*k*m+k-1)/(b*k*(2*j*m+1)),Int[( Sin[c+d*x]^j)^(m-j*k)*Sqrt[a+b* Sin[c+d*x]^k],x]] /;
FreeQ[{a,b,c,d},x] && OneQ[j^2,k^2] && ZeroQ[a^2-b^2] && RationalQ[m] && 
  NonzeroQ[2*j*m+1] && j*k*m>0 && j*k*m!=1 && j*k*m!=2


Int[( Sin[c_.+d_.*x_]^j_.)^m_.*(a_+b_.* Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  -Cos[c+d*x]*(Sin[c+d*x]^j)^(m+j*k)*(a+b*Sin[c+d*x]^k)^n/(d*(n+1)) + 
  Dist[a*n/(b*(n+1)),Int[( Sin[c+d*x]^j)^(m+j*k)*(a+b* Sin[c+d*x]^k)^n,x]] /;
FreeQ[{a,b,c,d},x] && OneQ[j^2,k^2] && ZeroQ[a^2-b^2] && RationalQ[m,n] && 
  ZeroQ[j*k*m+n+(k+3)/2] && n>-1 && n!=1 && n!=2


Int[( Sin[c_.+d_.*x_]^j_.)^m_.*(a_+b_.* Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  -Cos[c+d*x]*(Sin[c+d*x]^j)^(m+j*k)*(a+b*Sin[c+d*x]^k)^n/(d*(2*n+1)) + 
  Dist[n/(a*(2*n+1)),Int[( Sin[c+d*x]^j)^m*(a+b* Sin[c+d*x]^k)^(n+1),x]] /;
FreeQ[{a,b,c,d},x] && OneQ[j^2,k^2] && ZeroQ[a^2-b^2] && RationalQ[m,n] && 
  ZeroQ[j*k*m+n+(k+3)/2] && j*k*m!=1 && j*k*m!=2 && n<-1


Int[( Sin[c_.+d_.*x_]^j_.)^m_.*(a_+b_.* Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  -a*Cos[c+d*x]*(Sin[c+d*x]^j)^(m+j*k)*(a+b*Sin[c+d*x]^k)^(n-1)/(d*n) + 
  Dist[b*(2*n-1)/n,Int[( Sin[c+d*x]^j)^(m+j*k)*(a+b* Sin[c+d*x]^k)^(n-1),x]] /;
FreeQ[{a,b,c,d},x] && OneQ[j^2,k^2] && ZeroQ[a^2-b^2] && RationalQ[m,n] && 
  ZeroQ[j*k*m+n+(k+1)/2] && n>0 && n!=1/2 && n!=1 && n!=2


Int[( Sin[c_.+d_.*x_]^j_.)^m_.*(a_+b_.* Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  a*Cos[c+d*x]*(Sin[c+d*x]^j)^m*(a+b*Sin[c+d*x]^k)^n/(b*d*(2*n+1)) + 
  Dist[(n+1)/(b*(2*n+1)),Int[( Sin[c+d*x]^j)^(m-j*k)*(a+b* Sin[c+d*x]^k)^(n+1),x]] /;
FreeQ[{a,b,c,d},x] && OneQ[j^2,k^2] && ZeroQ[a^2-b^2] && RationalQ[m,n] && 
  ZeroQ[j*k*m+n+(k+1)/2] && j*k*m!=1 && j*k*m!=2 && n<-1


Int[(a_+b_.* Sin[c_.+d_.*x_])^n_,x_Symbol] :=
  b*Cos[c+d*x]*(a+b*Sin[c+d*x])^n/(a*d*(2*n+1)) +
  Dist[(n+1)/(a*(2*n+1)),Int[(a+b* Sin[c+d*x])^(n+1),x]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2-b^2] && RationalQ[n] && n<-1


Int[ Sin[c_.+d_.*x_]^(-1)*(a_+b_.* Sin[c_.+d_.*x_]^(-1))^n_,x_Symbol] :=
  b*Cot[c+d*x]*(a+b*Csc[c+d*x])^n/(a*d*(2*n+1)) + 
  Dist[(n+1)/(a*(2*n+1)),Int[ Sin[c+d*x]^(-1)*(a+b/ Sin[c+d*x])^(n+1),x]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2-b^2] && RationalQ[n] && n<-1


Int[(a_+b_.* Sin[c_.+d_.*x_])^n_,x_Symbol] :=
  -b*Cos[c+d*x]*(a+b*Sin[c+d*x])^(n-1)/(d*n) +
  Dist[a*(2*n-1)/n,Int[(a+b* Sin[c+d*x])^(n-1),x]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2-b^2] && RationalQ[n] && n>0 && n!=1 && n!=2


Int[ Sin[c_.+d_.*x_]^(-1)*(a_+b_.* Sin[c_.+d_.*x_]^(-1))^n_.,x_Symbol] :=
  -b*Cot[c+d*x]*(a+b*Csc[c+d*x])^(n-1)/(d*n) + 
  Dist[a*(2*n-1)/n,Int[ Sin[c+d*x]^(-1)*(a+b* Sin[c+d*x]^(-1))^(n-1),x]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2-b^2] && RationalQ[n] && n>0 && n!=1/2 && n!=1 && n!=2


Int[( Sin[c_.+d_.*x_]^j_.)^m_.*(a_+b_.* Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  -Cos[c+d*x]*(Sin[c+d*x]^j)^(m-j*k)*(a+b*Sin[c+d*x]^k)^n/(d*(2*n+1)) + 
  Dist[1/(a^2*(2*n+1)),
    Int[( Sin[c+d*x]^j)^(m-2*j*k)*
      (a*(j*k*m+(k-3)/2)-b*(j*k*m-n+(k-3)/2)* Sin[c+d*x]^k)*(a+b* Sin[c+d*x]^k)^(n+1),x]] /;
FreeQ[{a,b,c,d},x] && OneQ[j^2,k^2] && ZeroQ[a^2-b^2] && RationalQ[m,n] && 
  j*k*m>1 && j*k*m!=2 && n<=-1


Int[( Sin[c_.+d_.*x_]^j_.)^m_.*(a_+b_.* Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  a*Cos[c+d*x]*(Sin[c+d*x]^j)^m*(a+b*Sin[c+d*x]^k)^n/(b*d*(2*n+1)) + 
  Dist[1/(b^2*(2*n+1)),
    Int[( Sin[c+d*x]^j)^(m-j*k)*
      (-b*(j*k*m+(k-1)/2)+a*(j*k*m+n+(k+1)/2)* Sin[c+d*x]^k)*(a+b* Sin[c+d*x]^k)^(n+1),x]] /;
FreeQ[{a,b,c,d},x] && OneQ[j^2,k^2] && ZeroQ[a^2-b^2] && RationalQ[m,n] && 
  0<j*k*m<1 && n<=-1


Int[( Sin[c_.+d_.*x_]^j_.)^m_.*(a_+b_.* Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  -Cos[c+d*x]*(Sin[c+d*x]^j)^(m-j*k)*(a+b*Sin[c+d*x]^k)^n/(d*(j*k*m+n+(k-1)/2)) + 
  Dist[1/(b*(j*k*m+n+(k-1)/2)),
    Int[( Sin[c+d*x]^j)^(m-2*j*k)*(b*(j*k*m+(k-3)/2)+a*n* Sin[c+d*x]^k)*(a+b* Sin[c+d*x]^k)^n,x]] /;
FreeQ[{a,b,c,d},x] && OneQ[j^2,k^2] && ZeroQ[a^2-b^2] && RationalQ[m,n] && 
  NonzeroQ[j*k*m+n+(k-1)/2] && j*k*m>1 && j*k*m!=2 && -1<n<0 && j*k*m-1!=n


Int[( Sin[c_.+d_.*x_]^j_.)^m_.*(a_+b_.* Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  -b^2*Cos[c+d*x]*(Sin[c+d*x]^j)^(m+j*k)*(a+b*Sin[c+d*x]^k)^(n-2)/(d*(j*k*m+n+(k-1)/2)) + 
  Dist[a/(j*k*m+n+(k-1)/2),
    Int[( Sin[c+d*x]^j)^m*
      (a*(2*j*k*m+n+k)+b*(2*j*k*m+3*n+k-3)* Sin[c+d*x]^k)*(a+b* Sin[c+d*x]^k)^(n-2),x]] /;
FreeQ[{a,b,c,d},x] && OneQ[j^2,k^2] && ZeroQ[a^2-b^2] && RationalQ[m,n] && 
  NonzeroQ[j*k*m+n+(k-1)/2] && j*k*m>=-1 && j*k*m!=1 && j*k*m!=2 && n>1 && n!=2


Int[( Sin[c_.+d_.*x_]^j_.)^m_.*(a_+b_.* Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  -b*Cos[c+d*x]*(Sin[c+d*x]^j)^m*(a+b*Sin[c+d*x]^k)^(n-1)/(d*(j*k*m+n+(k-1)/2)) + 
  Dist[1/(j*k*m+n+(k-1)/2),
    Int[( Sin[c+d*x]^j)^(m-j*k)*
      (b*(j*k*m+(k-1)/2)+a*(j*k*m+2*n+(k-3)/2)* Sin[c+d*x]^k)*(a+b* Sin[c+d*x]^k)^(n-1),x]] /;
FreeQ[{a,b,c,d},x] && OneQ[j^2,k^2] && ZeroQ[a^2-b^2] && RationalQ[m,n] && 
  j*k*m>0 && j*k*m!=1 && j*k*m!=2 && 0<n<1 && n!=1/2


Int[( Sin[c_.+d_.*x_]^j_.)^m_.*(a_+b_.* Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  a^2*Cos[c+d*x]*(Sin[c+d*x]^j)^(m+j*k)*(a+b*Sin[c+d*x]^k)^(n-2)/(d*(j*k*m+(k+1)/2)) + 
  Dist[a/(j*k*m+(k+1)/2),
    Int[( Sin[c+d*x]^j)^(m+j*k)*
      (b*(2*j*k*m-n+k+3)+a*(2*j*k*m+n+k)* Sin[c+d*x]^k)*(a+b* Sin[c+d*x]^k)^(n-2),x]] /;
FreeQ[{a,b,c,d},x] && OneQ[j^2,k^2] && ZeroQ[a^2-b^2] && RationalQ[m,n] && 
  j*k*m<-1 && n>1 && n!=2


Int[( Sin[c_.+d_.*x_]^j_.)^m_.*(a_+b_.* Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  a*Cos[c+d*x]*(Sin[c+d*x]^j)^(m+j*k)*(a+b*Sin[c+d*x]^k)^(n-1)/(d*(j*k*m+(k+1)/2)) + 
  Dist[1/(j*k*m+(k+1)/2),
    Int[( Sin[c+d*x]^j)^(m+j*k)*
      (b*(j*k*m-n+(k+3)/2)+a*(j*k*m+n+(k+1)/2)* Sin[c+d*x]^k)*(a+b* Sin[c+d*x]^k)^(n-1),x]] /;
FreeQ[{a,b,c,d},x] && OneQ[j^2,k^2] && ZeroQ[a^2-b^2] && RationalQ[m,n] && 
  j*k*m<-1 && 0<n<1 && n!=1/2


Int[( Sin[c_.+d_.*x_]^j_.)^m_.*(a_+b_.* Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  Cos[c+d*x]*(Sin[c+d*x]^j)^(m+j*k)*(a+b*Sin[c+d*x]^k)^n/(d*(j*k*m+(k+1)/2)) + 
  Dist[1/(b*(j*k*m+(k+1)/2)),
    Int[( Sin[c+d*x]^j)^(m+j*k)*(-a*n+b*(j*k*m+n+(k+3)/2)* Sin[c+d*x]^k)*(a+b* Sin[c+d*x]^k)^n,x]] /;
FreeQ[{a,b,c,d},x] && OneQ[j^2,k^2] && ZeroQ[a^2-b^2] && RationalQ[m,n] && 
  NonzeroQ[j*k*m+(k+1)/2] && j*k*m<=-1 && -1<n<0


Int[( Sin[c_.+d_.*x_]^j_.)^m_.*(a_+b_.* Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  -Cos[c+d*x]*(Sin[c+d*x]^j)^(m+j*k)*(a+b*Sin[c+d*x]^k)^n/(d*(2*n+1)) + 
  Dist[1/(a^2*(2*n+1)),
    Int[( Sin[c+d*x]^j)^m*
      (a*(j*k*m+2*n+(k+3)/2)-b*(j*k*m+n+(k+3)/2)* Sin[c+d*x]^k)*(a+b* Sin[c+d*x]^k)^(n+1),x]] /;
FreeQ[{a,b,c,d},x] && OneQ[j^2,k^2] && ZeroQ[a^2-b^2] && RationalQ[m,n] && 
  j*k*m<0 && n<=-1
(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



Int[(A_.+B_.*Sin[c_.+d_.*x_]^(-1))/(a_+b_.*Sin[c_.+d_.*x_]^(-1)),x_Symbol] :=
  A*x/a - Dist[(b*A-a*B)/a,Int[Sin[c+d*x]^(-1)/(a+b*Sin[c+d*x]^(-1)),x]] /;
FreeQ[{a,b,c,d,A,B},x] && ZeroQ[a^2-b^2] && NonzeroQ[b*A-a*B]


Int[(A_.+B_.*Sin[c_.+d_.*x_]^(-1))*(a_+b_.*Sin[c_.+d_.*x_]^(-1))^n_,x_Symbol] :=
  -(b*A-a*B)*Cot[c+d*x]*(a+b*Csc[c+d*x])^n/(b*d*(2*n+1)) + 
  Dist[1/(b^2*(2*n+1)),
    Int[Simplify[a*A*(2*n+1)-((b*A-a*B)*(n+1))*Sin[c+d*x]^(-1),x]*(a+b*Sin[c+d*x]^(-1))^(n+1),x]] /;
FreeQ[{a,b,c,d,A,B},x] && ZeroQ[a^2-b^2] && NonzeroQ[b*A-a*B] && RationalQ[n] && n<-1


Int[(A_+B_.*Sin[c_.+d_.*x_]^(-1))*(a_+b_.*Sin[c_.+d_.*x_]^(-1))^n_,x_Symbol] :=
  -b*B*Cot[c+d*x]*(a+b*Csc[c+d*x])^(n-1)/(d*n) + 
  Dist[1/n,
    Int[Simplify[a*A*n+(a*B*(2*n-1)+b*A*n)*Sin[c+d*x]^(-1),x]*(a+b*Sin[c+d*x]^(-1))^(n-1),x]] /;
FreeQ[{a,b,c,d,A,B},x] && ZeroQ[a^2-b^2] && NonzeroQ[b*A-a*B] && RationalQ[n] && n>0


Int[(A_+B_.*Sin[c_.+d_.*x_])/(Sin[c_.+d_.*x_]*Sqrt[a_+b_.*Sin[c_.+d_.*x_]]),x_Symbol] :=
  Dist[A/a,Int[Sqrt[a+b*Sin[c+d*x]]/Sin[c+d*x],x]] - 
  Dist[(a*A-b*B)/b,Int[1/Sqrt[a+b*Sin[c+d*x]],x]] /;
FreeQ[{a,b,c,d,A,B},x] && ZeroQ[a^2-b^2] && NonzeroQ[b*A-a*B]


Int[(A_+B_.*Sin[c_.+d_.*x_]^(-1))/Sqrt[a_+b_.*Sin[c_.+d_.*x_]^(-1)],x_Symbol] :=
  A/a*Int[Sqrt[a+b*Sin[c+d*x]^(-1)],x] - 
  (b*A-a*B)/a*Int[Sin[c+d*x]^(-1)/Sqrt[a+b*Sin[c+d*x]^(-1)],x] /;
FreeQ[{a,b,c,d,A,B},x] && ZeroQ[a^2-b^2] && NonzeroQ[b*A-a*B]


Int[(A_+B_.*Sin[c_.+d_.*x_])/(Sqrt[Sin[c_.+d_.*x_]]*Sqrt[a_+b_.*Sin[c_.+d_.*x_]]),x_Symbol] :=
  Dist[B/b,Int[Sqrt[a+b*Sin[c+d*x]]/Sqrt[Sin[c+d*x]],x]] + 
  Dist[(b*A-a*B)/b,Int[1/(Sqrt[Sin[c+d*x]]*Sqrt[a+b*Sin[c+d*x]]),x]] /;
FreeQ[{a,b,c,d,A,B},x] && ZeroQ[a^2-b^2] && NonzeroQ[b*A-a*B]


Int[(Sin[c_.+d_.*x_]^j_.)^m_*(A_+B_.*Sin[c_.+d_.*x_]^(-1))*Sqrt[a_+b_.*Sin[c_.+d_.*x_]^(-1)],x_Symbol] :=
  -2*a*A*Cos[c+d*x]/(d*(Sin[c+d*x]^j)^m*Sqrt[a+b*Csc[c+d*x]]) + 
  Dist[B,Int[Sqrt[a+b*Sin[c+d*x]^(-1)]/(Sin[c+d*x]^j)^m,x]] /;
FreeQ[{a,b,c,d,A,B},x] && OneQ[j^2] && ZeroQ[a^2-b^2] && RationalQ[m] && j*m==1/2


Int[(Sin[c_.+d_.*x_]^j_.)^m_*(A_.+B_.*Sin[c_.+d_.*x_]^(-1))/Sqrt[a_+b_.*Sin[c_.+d_.*x_]^(-1)],x_Symbol] :=
  Dist[B/b,Int[(Sin[c+d*x]^j)^m*Sqrt[a+b*Sin[c+d*x]^(-1)],x]] + 
  Dist[(b*A-a*B)/b,Int[(Sin[c+d*x]^j)^m/Sqrt[a+b*Sin[c+d*x]^(-1)],x]] /;
FreeQ[{a,b,c,d,A,B},x] && OneQ[j^2] && ZeroQ[a^2-b^2] && RationalQ[m] && j*m==-1/2 && 
  NonzeroQ[b*A-a*B]


Int[(Sin[c_.+d_.*x_]^j_.)^m_*(A_+B_.*Sin[c_.+d_.*x_]^(-1))/Sqrt[a_+b_.*Sin[c_.+d_.*x_]^(-1)],x_Symbol] :=
  -2*A*Cos[c+d*x]/(d*(Sin[c+d*x]^j)^m*Sqrt[a+b*Csc[c+d*x]]) - 
  Dist[(b*A-a*B)/a,Int[1/((Sin[c+d*x]^j)^m*Sqrt[a+b*Sin[c+d*x]^(-1)]),x]] /;
FreeQ[{a,b,c,d,A,B},x] && OneQ[j^2] && ZeroQ[a^2-b^2] && RationalQ[m] && j*m==1/2 && 
  NonzeroQ[b*A-a*B]


Int[(Sin[c_.+d_.*x_]^j_.)^m_*(A_.+B_.*Sin[c_.+d_.*x_]^k_.)*Sqrt[a_+b_.*Sin[c_.+d_.*x_]^k_.],x_Symbol] :=
  a*A*Cos[c+d*x]*(Sin[c+d*x]^j)^(m+j*k)/(d*(j*k*m+(k+1)/2)*Sqrt[a+b*Sin[c+d*x]^k]) /;
FreeQ[{a,b,c,d,A,B,m},x] && OneQ[j^2,k^2] && ZeroQ[a^2-b^2] && NonzeroQ[b*A-a*B] && 
  NonzeroQ[j*k*m+(k+1)/2] && ZeroQ[a*B*(j*k*m+(k+1)/2)+b*A*(j*k*m+(k+2)/2)]


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.+B_.*Sin[c_.+d_.*x_]^k_.)*Sqrt[a_+b_.*Sin[c_.+d_.*x_]^k_.],x_Symbol] :=
  a*A*Cos[c+d*x]*(Sin[c+d*x]^j)^(m+j*k)/(d*(j*k*m+(k+1)/2)*Sqrt[a+b*Sin[c+d*x]^k]) + 
  Dist[(a*B*(j*k*m+(k+1)/2)+b*A*(j*k*m+(k+2)/2))/(a*(j*k*m+(k+1)/2)),
    Int[(Sin[c+d*x]^j)^(m+j*k)*Sqrt[a+b*Sin[c+d*x]^k],x]] /;
FreeQ[{a,b,c,d,A,B},x] && OneQ[j^2,k^2] && ZeroQ[a^2-b^2] && NonzeroQ[b*A-a*B] && 
  RationalQ[m] && NonzeroQ[j*k*m+(k+1)/2] && j*k*m<=-1 && 
  NonzeroQ[a*B*(j*k*m+(k+1)/2)+b*A*(j*k*m+(k+2)/2)]


Int[(Sin[c_.+d_.*x_]^j_.)^m_*(A_.+B_.*Sin[c_.+d_.*x_]^k_.)*Sqrt[a_+b_.*Sin[c_.+d_.*x_]^k_.],x_Symbol] :=
  -b*B*Cos[c+d*x]*(Sin[c+d*x]^j)^(m+j*k)/(d*(j*k*m+(k+2)/2)*Sqrt[a+b*Sin[c+d*x]^k]) + 
  Dist[(a*B*(j*k*m+(k+1)/2)+b*A*(j*k*m+(k+2)/2))/(b*(j*k*m+(k+2)/2)),
    Int[(Sin[c+d*x]^j)^m*Sqrt[a+b*Sin[c+d*x]^k],x]] /;
FreeQ[{a,b,c,d,A,B},x] && OneQ[j^2,k^2] && ZeroQ[a^2-b^2] && NonzeroQ[b*A-a*B] && 
  RationalQ[m] && NonzeroQ[j*k*m+(k+2)/2] && j*k*m>=-1 && 
  NonzeroQ[a*B*(j*k*m+(k+1)/2)+b*A*(j*k*m+(k+2)/2)]


Int[(Sin[c_.+d_.*x_]^j_.)^m_*(A_.+B_.*Sin[c_.+d_.*x_]^k_.)*(a_+b_.*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  -A*Cos[c+d*x]*(Sin[c+d*x]^j)^(m+j*k)*(a+b*Sin[c+d*x]^k)^n/(d*(n+1)) /;
FreeQ[{a,b,c,d,A,B,m,n},x] && OneQ[j^2,k^2] && ZeroQ[a^2-b^2] && NonzeroQ[b*A-a*B] && 
  ZeroQ[j*k*m+n+(k+3)/2] && NonzeroQ[n+1] && ZeroQ[a*B*(n+1)+b*A*n]


Int[(Sin[c_.+d_.*x_]^j_.)^m_*(A_.+B_.*Sin[c_.+d_.*x_]^k_.)*(a_+b_.*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  -A*Cos[c+d*x]*(Sin[c+d*x]^j)^(m+j*k)*(a+b*Sin[c+d*x]^k)^n/(d*(n+1)) + 
  Dist[(a*B*(n+1)+b*A*n)/(a*(n+1)),Int[(Sin[c+d*x]^j)^(m+j*k)*(a+b*Sin[c+d*x]^k)^n,x]] /;
FreeQ[{a,b,c,d,A,B},x] && OneQ[j^2,k^2] && ZeroQ[a^2-b^2] && NonzeroQ[b*A-a*B] && 
  RationalQ[m,n] && ZeroQ[j*k*m+n+(k+3)/2] && n>-1 && NonzeroQ[a*B*(n+1)+b*A*n]


Int[(Sin[c_.+d_.*x_]^j_.)^m_*(A_.+B_.*Sin[c_.+d_.*x_]^k_.)*(a_+b_.*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  -(b*A-a*B)*Cos[c+d*x]*(Sin[c+d*x]^j)^(m+j*k)*(a+b*Sin[c+d*x]^k)^n/(b*d*(2*n+1)) /;
FreeQ[{a,b,c,d,A,B,m,n},x] && OneQ[j^2,k^2] && ZeroQ[a^2-b^2] && NonzeroQ[b*A-a*B] && 
  ZeroQ[j*k*m+n+(k+3)/2] && NonzeroQ[2*n+1] && ZeroQ[b*B*(n+1)+a*A*n]


Int[(Sin[c_.+d_.*x_]^j_.)^m_*(A_.+B_.*Sin[c_.+d_.*x_]^k_.)*(a_+b_.*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  -(b*A-a*B)*Cos[c+d*x]*(Sin[c+d*x]^j)^(m+j*k)*(a+b*Sin[c+d*x]^k)^n/(b*d*(2*n+1)) + 
  Dist[(b*B*(n+1)+a*A*n)/(a^2*(2*n+1)),Int[(Sin[c+d*x]^j)^m*(a+b*Sin[c+d*x]^k)^(n+1),x]] /;
FreeQ[{a,b,c,d,A,B},x] && OneQ[j^2,k^2] && ZeroQ[a^2-b^2] && NonzeroQ[b*A-a*B] && 
  RationalQ[m,n] && ZeroQ[j*k*m+n+(k+3)/2] && n<=-1 && NonzeroQ[b*B*(n+1)+a*A*n]


Int[(A_.+B_.*Sin[c_.+d_.*x_])*(a_+b_.*Sin[c_.+d_.*x_])^n_.,x_Symbol] :=
  -B*Cos[c+d*x]*(a+b*Sin[c+d*x])^n/(d*(n+1)) /;
FreeQ[{a,b,c,d,A,B,n},x] && ZeroQ[a^2-b^2] && ZeroQ[a*B*n+b*A*(n+1)]


Int[Sin[c_.+d_.*x_]^(-1)*(A_+B_.*Sin[c_.+d_.*x_]^(-1))*(a_+b_.*Sin[c_.+d_.*x_]^(-1))^n_.,x_Symbol] :=
  -B*Cot[c+d*x]*(a+b*Csc[c+d*x])^n/(d*(n+1)) /;
FreeQ[{a,b,c,d,A,B,n},x] && ZeroQ[a^2-b^2] && ZeroQ[a*B*n+b*A*(n+1)]


Int[(A_.+B_.*Sin[c_.+d_.*x_])*(a_+b_.*Sin[c_.+d_.*x_])^n_,x_Symbol] :=
  (b*A-a*B)*Cos[c+d*x]*(a+b*Sin[c+d*x])^n/(a*d*(2*n+1)) + 
  Dist[(a*B*n+b*A*(n+1))/(a*b*(2*n+1)),Int[(a+b*Sin[c+d*x])^(n+1),x]] /;
FreeQ[{a,b,c,d,A,B},x] && ZeroQ[a^2-b^2] && NonzeroQ[b*A-a*B] && RationalQ[n] && n<=-1 && 
  NonzeroQ[a*B*n+b*A*(n+1)]


Int[Sin[c_.+d_.*x_]^(-1)*(A_+B_.*Sin[c_.+d_.*x_]^(-1))*(a_+b_.*Sin[c_.+d_.*x_]^(-1))^n_,x_Symbol] :=
  (b*A-a*B)*Cot[c+d*x]*(a+b*Csc[c+d*x])^n/(a*d*(2*n+1)) + 
  Dist[(a*B*n+b*A*(n+1))/(a*b*(2*n+1)),Int[Sin[c+d*x]^(-1)*(a+b*Sin[c+d*x]^(-1))^(n+1),x]] /;
FreeQ[{a,b,c,d,A,B},x] && ZeroQ[a^2-b^2] && NonzeroQ[b*A-a*B] && RationalQ[n] && n<=-1 && 
  NonzeroQ[a*B*n+b*A*(n+1)]


Int[(A_.+B_.*Sin[c_.+d_.*x_])*(a_+b_.*Sin[c_.+d_.*x_])^n_,x_Symbol] :=
  -B*Cos[c+d*x]*(a+b*Sin[c+d*x])^n/(d*(n+1)) + 
  Dist[(a*B*n+b*A*(n+1))/(b*(n+1)),Int[(a+b*Sin[c+d*x])^n,x]] /;
FreeQ[{a,b,c,d,A,B},x] && ZeroQ[a^2-b^2] && NonzeroQ[b*A-a*B] && RationalQ[n] && 
  n>-1 && n!=1 && NonzeroQ[a*B*n+b*A*(n+1)]


Int[Sin[c_.+d_.*x_]^(-1)*(A_+B_.*Sin[c_.+d_.*x_]^(-1))*(a_+b_.*Sin[c_.+d_.*x_]^(-1))^n_,x_Symbol] :=
  -B*Cot[c+d*x]*(a+b*Csc[c+d*x])^n/(d*(n+1)) + 
  Dist[(a*B*n+b*A*(n+1))/(b*(n+1)),Int[Sin[c+d*x]^(-1)*(a+b*Sin[c+d*x]^(-1))^n,x]] /;
FreeQ[{a,b,c,d,A,B},x] && ZeroQ[a^2-b^2] && NonzeroQ[b*A-a*B] && RationalQ[n] && 
  n>-1 && n!=1 && NonzeroQ[a*B*n+b*A*(n+1)]


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.+B_.*Sin[c_.+d_.*x_]^k_.)*(a_+b_.*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  (b*A-a*B)*Cos[c+d*x]*(Sin[c+d*x]^j)^m*(a+b*Sin[c+d*x]^k)^n/(a*d*(2*n+1)) + 
  Dist[1/(a^2*(2*n+1)),
    Int[(Sin[c+d*x]^j)^(m-j*k)*
      Simplify[-(b*A-a*B)*(j*k*m+(k-1)/2)+(b*B*n+a*A*(n+1)+(a*A-b*B)*(j*k*m+(k-1)/2))*Sin[c+d*x]^k,x]*
      (a+b*Sin[c+d*x]^k)^(n+1),x]] /;
FreeQ[{a,b,c,d,A,B},x] && OneQ[j^2,k^2] && ZeroQ[a^2-b^2] && NonzeroQ[b*A-a*B] && 
  RationalQ[m,n] && j*k*m>0 && n<=-1 && Not[j*k*m==1 && n==-1]


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.+B_.*Sin[c_.+d_.*x_]^k_.)*(a_+b_.*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  -B*Cos[c+d*x]*(Sin[c+d*x]^j)^m*(a+b*Sin[c+d*x]^k)^n/(d*(j*k*m+n+(k+1)/2)) + 
  Dist[1/(a*(j*k*m+n+(k+1)/2)),
    Int[(Sin[c+d*x]^j)^(m-j*k)*
      Simplify[a*B*(j*k*m+(k-1)/2)+(b*B*n+a*A*(j*k*m+n+(k+1)/2))*Sin[c+d*x]^k,x]*
      (a+b*Sin[c+d*x]^k)^n,x]] /;
FreeQ[{a,b,c,d,A,B},x] && OneQ[j^2,k^2] && ZeroQ[a^2-b^2] && NonzeroQ[b*A-a*B] && 
  RationalQ[m,n] && NonzeroQ[j*k*m+n+(k+1)/2] && j*k*m>0 && -1<n<0 && Not[j*m==1 && k==1]


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.+B_.*Sin[c_.+d_.*x_]^k_.)*(a_+b_.*Sin[c_.+d_.*x_]^k_.)^n_.,x_Symbol] :=
  -b*B*Cos[c+d*x]*(Sin[c+d*x]^j)^(m+j*k)*(a+b*Sin[c+d*x]^k)^(n-1)/(d*(j*k*m+n+(k+1)/2)) + 
  Dist[1/(j*k*m+n+(k+1)/2),
    Int[(Sin[c+d*x]^j)^m*
      Simplify[a*A*n+(a*A+b*B)*(j*k*m+(k+1)/2)+(b*A+a*B*n+(b*A+a*B)*(j*k*m+n+(k-1)/2))*Sin[c+d*x]^k,x]*
      (a+b*Sin[c+d*x]^k)^(n-1),x]] /;
FreeQ[{a,b,c,d,A,B},x] && OneQ[j^2,k^2] && ZeroQ[a^2-b^2] && NonzeroQ[b*A-a*B] && 
  RationalQ[m,n] && NonzeroQ[j*k*m+n+(k+1)/2] && j*k*m>=-1 && n>0 && n!=1/2 && Not[j*m==1 && k==1]


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.+B_.*Sin[c_.+d_.*x_]^k_.)*(a_+b_.*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  a*A*Cos[c+d*x]*(Sin[c+d*x]^j)^(m+j*k)*(a+b*Sin[c+d*x]^k)^(n-1)/(d*(j*k*m+(k+1)/2)) + 
  Dist[1/(j*k*m+(k+1)/2),
    Int[(Sin[c+d*x]^j)^(m+j*k)*
      Simplify[(b*A+a*B)*(j*k*m+(k+1)/2)-b*A*(n-1)+(a*A*n+(a*A+b*B)*(j*k*m+(k+1)/2))*Sin[c+d*x]^k,x]*
      (a+b*Sin[c+d*x]^k)^(n-1),x]] /;
FreeQ[{a,b,c,d,A,B},x] && OneQ[j^2,k^2] && ZeroQ[a^2-b^2] && NonzeroQ[b*A-a*B] && 
  RationalQ[m,n] && j*k*m<-1 && n>0 && n!=1/2


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.+B_.*Sin[c_.+d_.*x_]^k_.)*(a_+b_.*Sin[c_.+d_.*x_]^k_.)^n_.,x_Symbol] :=
  A*Cos[c+d*x]*(Sin[c+d*x]^j)^(m+j*k)*(a+b*Sin[c+d*x]^k)^n/(d*(j*k*m+(k+1)/2)) + 
  Dist[1/(a*(j*k*m+(k+1)/2)),
    Int[(Sin[c+d*x]^j)^(m+j*k)*
      Simplify[a*B*(j*k*m+(k+1)/2)-b*A*n+a*A*(j*k*m+n+(k+3)/2)*Sin[c+d*x]^k,x]*
      (a+b*Sin[c+d*x]^k)^n,x]] /;
FreeQ[{a,b,c,d,A,B},x] && OneQ[j^2,k^2] && ZeroQ[a^2-b^2] && NonzeroQ[b*A-a*B] && 
  RationalQ[m,n] && NonzeroQ[j*k*m+(k+1)/2] && j*k*m<=-1 && -1<n<0


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.+B_.*Sin[c_.+d_.*x_]^k_.)*(a_+b_.*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  -(b*A-a*B)*Cos[c+d*x]*(Sin[c+d*x]^j)^(m+j*k)*(a+b*Sin[c+d*x]^k)^n/(b*d*(2*n+1)) + 
  Dist[1/(b^2*(2*n+1)),
    Int[(Sin[c+d*x]^j)^m*
      Simplify[a*A*(2*n+1)+(a*A-b*B)*(j*k*m+(k+1)/2)-(b*A-a*B)*(j*k*m+n+(k+3)/2)*Sin[c+d*x]^k,x]*
      (a+b*Sin[c+d*x]^k)^(n+1),x]] /;
FreeQ[{a,b,c,d,A,B},x] && OneQ[j^2,k^2] && ZeroQ[a^2-b^2] && NonzeroQ[b*A-a*B] && 
  RationalQ[m,n] && j*k*m<0 && n<=-1
(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



Int[Sin[c_.+d_.*x_],x_Symbol] :=
  -Cos[c+d*x]/d /;
FreeQ[{c,d},x]


Int[Cos[a_.+b_.*x_],x_Symbol] :=
  Sin[a+b*x]/b /;
FreeQ[{a,b},x]


Int[1/Sin[c_.+d_.*x_],x_Symbol] :=
  -ArcTanh[Cos[c+d*x]]/d /;
FreeQ[{c,d},x]


Int[Sec[a_.+b_.*x_],x_Symbol] :=
  ArcTanh[Sin[a+b*x]]/b /;
FreeQ[{a,b},x]


Int[Sin[c_.+d_.*x_]^2,x_Symbol] :=
  x/2 - Cos[c+d*x]*Sin[c+d*x]/(2*d) /;
FreeQ[{c,d},x]


Int[Cos[a_.+b_.*x_]^2,x_Symbol] :=
  x/2 + Cos[a+b*x]*Sin[a+b*x]/(2*b) /;
FreeQ[{a,b},x]


Int[1/Sin[c_.+d_.*x_]^2,x_Symbol] :=
  -Cot[c+d*x]/d /;
FreeQ[{c,d},x]


Int[Sec[a_.+b_.*x_]^2,x_Symbol] :=
  Tan[a+b*x]/b /;
FreeQ[{a,b},x]


Int[Sin[c_.+d_.*x_]^m_,x_Symbol] :=
  Dist[-1/d,Subst[Int[Expand[(1+x^2)^((-m-2)/2),x],x],x,Cot[c+d*x]]] /;
FreeQ[{c,d},x] && EvenQ[m] && m<-2


Int[Sec[a_.+b_.*x_]^n_,x_Symbol] :=
  Dist[1/b,Subst[Int[Regularize[(1+x^2)^((n-2)/2),x],x],x,Tan[a+b*x]]] /;
FreeQ[{a,b},x] && EvenQ[n] && n>2


Int[(Sin[c_.+d_.*x_]^j_.)^m_,x_Symbol] :=
  2*Cos[c+d*x]*(Sin[c+d*x]^j)^(m+1)/(d*(2*m+j+1)) + 
  Dist[(2*m+j+3)/(2*m+j+1),Int[(Sin[c+d*x]^j)^(m+2),x]] /;
FreeQ[{c,d},x] && OneQ[j^2] && Not[EvenQ[m]] && RationalQ[m] && m<-1


Int[Cos[a_.+b_.*x_]^n_,x_Symbol] :=
  -Sin[a+b*x]*Cos[a+b*x]^(n+1)/(b*(n+1)) +
  Dist[(n+2)/(n+1),Int[Cos[a+b*x]^(n+2),x]] /;
FreeQ[{a,b},x] && RationalQ[n] && n<-1


Int[Sec[a_.+b_.*x_]^n_,x_Symbol] :=
  Sin[a+b*x]*Sec[a+b*x]^(n-1)/(b*(n-1)) + 
  Dist[(n-2)/(n-1),Int[Sec[a+b*x]^(n-2),x]] /;
FreeQ[{a,b},x] && RationalQ[n] && n>1


Int[Sin[c_.+d_.*x_]^m_,x_Symbol] :=
  Dist[-1/d,Subst[Int[Expand[(1-x^2)^((m-1)/2),x],x],x,Cos[c+d*x]]] /;
FreeQ[{c,d},x] && OddQ[m] && m>1


Int[Cos[a_.+b_.*x_]^n_,x_Symbol] :=
  Dist[1/b,Subst[Int[Expand[(1-x^2)^((n-1)/2),x],x],x,Sin[a+b*x]]] /;
FreeQ[{a,b},x] && OddQ[n] && n>1


Int[(Sin[c_.+d_.*x_]^j_.)^m_,x_Symbol] :=
  -2*Cos[c+d*x]*(Sin[c+d*x]^j)^(m-1)/(d*(2*m+j-1)) + 
  Dist[(2*m+j-3)/(2*m+j-1),Int[(Sin[c+d*x]^j)^(m-2),x]] /;
FreeQ[{c,d},x] && OneQ[j^2] && Not[OddQ[m]] && RationalQ[m] && m>1


Int[Cos[a_.+b_.*x_]^n_,x_Symbol] :=
  Sin[a+b*x]*Cos[a+b*x]^(n-1)/(b*n) +
  Dist[(n-1)/n,Int[Cos[a+b*x]^(n-2),x]] /;
FreeQ[{a,b},x] && RationalQ[n] && n>1


Int[Sec[a_.+b_.*x_]^n_,x_Symbol] :=
  -Sin[a+b*x]*Sec[a+b*x]^(n+1)/(b*n) + 
  Dist[(n+1)/n,Int[Sec[a+b*x]^(n+2),x]] /;
FreeQ[{a,b},x] && RationalQ[n] && n<-1


Int[1/(a_+b_.*Sin[c_.+d_.*x_]),x_Symbol] :=
  x/Rt[a^2-b^2,2] + 
  2/(d*Rt[a^2-b^2,2])*ArcTan[Simplify[b*Cos[c+d*x]/(a+Rt[a^2-b^2,2]+b*Sin[c + d*x])]] /;
FreeQ[{a,b,c,d},x] && PositiveQ[a^2-b^2]


Int[1/(a_+b_.*Cos[c_.+d_.*x_]),x_Symbol] :=
  x/Rt[a^2-b^2,2] - 2/(d*Rt[a^2-b^2,2])*ArcTan[Simplify[b*Sin[c+d*x]/(a+Rt[a^2-b^2,2]+b*Cos[c + d*x])]] /;
FreeQ[{a,b,c,d},x] && PositiveQ[a^2-b^2]


Int[1/(a_+b_.*Sin[c_.+Pi/2+d_.*x_]),x_Symbol] :=
  2*ArcTan[(a-b)*Tan[(c+d*x)/2]/Rt[a^2-b^2,2]]/(d*Rt[a^2-b^2,2]) /;
FreeQ[{a,b,c,d},x] && PosQ[a^2-b^2]


Int[1/(a_+b_.*Sin[c_.+d_.*x_]),x_Symbol] :=
  2*ArcTan[(b+a*Tan[(c+d*x)/2])/Rt[a^2-b^2,2]]/(d*Rt[a^2-b^2,2]) /;
FreeQ[{a,b,c,d},x] && PosQ[a^2-b^2]


Int[1/(a_+b_.*Sin[c_.+Pi/2+d_.*x_]),x_Symbol] :=
  -2*ArcTanh[(a-b)*Tan[(c+d*x)/2]/Rt[b^2-a^2,2]]/(d*Rt[b^2-a^2,2]) /;
FreeQ[{a,b,c,d},x] && NegQ[a^2-b^2]


Int[1/(a_+b_.*Sin[c_.+d_.*x_]),x_Symbol] :=
  -2*ArcTanh[(b+a*Tan[(c+d*x)/2])/Rt[b^2-a^2,2]]/(d*Rt[b^2-a^2,2]) /;
FreeQ[{a,b,c,d},x] && NegQ[a^2-b^2]


Int[1/(a_+b_.*Sin[c_.+d_.*x_]^(-1)),x_Symbol] :=
  x/a - Dist[b/a,Int[1/(b+a*Sin[c+d*x]),x]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2-b^2]


Int[(a_+b_.*Sin[c_.+d_.*x_]^k_.)^2,x_Symbol] :=
  (a^2+(k+1)/(k+3)*b^2)*x - 2*b^2*Cos[c+d*x]*Sin[c+d*x]^k/(d*(k+3)) + 2*a*b*Int[Sin[c+d*x]^k,x] /;
FreeQ[{a,b,c,d},x] && OneQ[k^2]


Int[Sqrt[a_.+b_.*Sin[c_.+Pi/2+d_.*x_]],x_Symbol] :=
  2*Sqrt[Simplify[a+b]]/d*EllipticE[(c+d*x)/2,Simplify[2*b/(a+b)]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2-b^2] && PositiveQ[a+b]


Int[Sqrt[a_.+b_.*Sin[c_.+d_.*x_]],x_Symbol] :=
  -2*Sqrt[Simplify[a+b]]/d*EllipticE[Pi/4-(c+d*x)/2,Simplify[2*b/(a+b)]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2-b^2] && PositiveQ[a+b]


Int[Sqrt[a_.+b_.*Sin[c_.+d_.*x_]],x_Symbol] :=
  (a+b)*Sqrt[(a+b*Sin[c+d*x])/(a+b)]/Sqrt[a+b*Sin[c+d*x]]*Int[Sqrt[a/(a+b)+b/(a+b)*Sin[c+d*x]],x] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2-b^2] && Not[PositiveQ[a+b]]


Int[1/Sqrt[a_.+b_.*Sin[c_.+Pi/2+d_.*x_]],x_Symbol] :=
  2/(d*Sqrt[Simplify[a+b]])*EllipticF[(c+d*x)/2,Simplify[2*b/(a+b)]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2-b^2] && PositiveQ[a+b]


Int[1/Sqrt[a_.+b_.*Sin[c_.+d_.*x_]],x_Symbol] :=
  -2/(d*Sqrt[Simplify[a+b]])*EllipticF[Pi/4-(c+d*x)/2,Simplify[2*b/(a+b)]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2-b^2] && PositiveQ[a+b]


Int[1/Sqrt[a_.+b_.*Sin[c_.+d_.*x_]],x_Symbol] :=
  Sqrt[(a+b*Sin[c+d*x])/(a+b)]/Sqrt[a+b*Sin[c+d*x]]*Int[1/Sqrt[a/(a+b)+b/(a+b)*Sin[c+d*x]],x] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2-b^2] && Not[PositiveQ[a+b]]


Int[(b_.*Sin[c_.+d_.*x_]^(-1))^n_,x_Symbol] :=
  Dist[Sin[c+d*x]^n*(b*Csc[c+d*x])^n,Int[1/Sin[c+d*x]^n,x]] /;
FreeQ[{b,c,d},x] && ZeroQ[n^2-1/4]


Int[(a_+b_.*Sin[c_.+d_.*x_]^(-1))^n_,x_Symbol] :=
  Dist[Sqrt[b+a*Sin[c+d*x]]/(Sqrt[Sin[c+d*x]]*Sqrt[a+b*Csc[c+d*x]]),
    Int[(b+a*Sin[c+d*x])^n/Sin[c+d*x]^n,x]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2-b^2] && IntegerQ[n-1/2] && -2<n<2


Int[(a_+b_.*Sin[c_.+d_.*x_]^(-1))^n_,x_Symbol] :=
  b^2*Cot[c+d*x]*(a+b*Csc[c+d*x])^(n+1)/(a*d*(n+1)*(a^2-b^2)) + 
  Dist[1/(a*(n+1)*(a^2-b^2)),
    Int[((a^2-b^2)*(n+1)-(a*b*(n+1))*Sin[c+d*x]^(-1)+(b^2*(n+2))*Sin[c+d*x]^(-2))*
      (a+b*Sin[c+d*x]^(-1))^(n+1),x]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2-b^2] && RationalQ[n] && n<-1


Int[(a_+b_.*Sin[c_.+d_.*x_]^(-1))^n_,x_Symbol] :=
  -b^2*Cot[c+d*x]*(a+b*Csc[c+d*x])^(n-2)/(d*(n-1)) + 
  Dist[1/(n-1),
    Int[(a^3*(n-1)+(b*(b^2*(n-2)+3*a^2*(n-1)))*Sin[c+d*x]^(-1)+(a*b^2*(3*n-4))*Sin[c+d*x]^(-2))*
      (a+b*Sin[c+d*x]^(-1))^(n-3),x]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2-b^2] && RationalQ[n] && n>2


Int[(b_.*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  2*Cos[c+d*x]*(b*Sin[c+d*x]^k)^(n+1)/(b*d*(2*n+k+1)) + 
  Dist[(2*n+k+3)/(b^2*(2*n+k+1)),Int[(b*Sin[c+d*x]^k)^(n+2),x]] /;
FreeQ[{b,c,d},x] && OneQ[k^2] && RationalQ[n] && n<-1


Int[(b_.*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  -2*b*Cos[c+d*x]*(b*Sin[c+d*x]^k)^(n-1)/(d*(2*n+k-1)) + 
  Dist[b^2*(2*n+k-3)/(2*n+k-1),Int[(b*Sin[c+d*x]^k)^(n-2),x]] /;
FreeQ[{b,c,d},x] && OneQ[k^2] && RationalQ[n] && n>1


Int[1/(Sin[c_.+d_.*x_]*(a_.+b_.*Sin[c_.+d_.*x_])),x_Symbol] :=
  1/a*Int[1/Sin[c+d*x],x] - b/a*Int[1/(a+b*Sin[c+d*x]),x] /;
FreeQ[{a,b,c,d},x]


Int[1/((a_.+b_.*Sin[c_.+d_.*x_])*(e_+f_.*Sin[c_.+d_.*x_])),x_Symbol] :=
  b/(b*e-a*f)*Int[1/(a+b*Sin[c+d*x]),x] - 
  f/(b*e-a*f)*Int[1/(e+f*Sin[c+d*x]),x] /;
FreeQ[{a,b,c,d,e,f},x] && NonzeroQ[b*e-a*f]


Int[1/((a_.+b_.*Sin[c_.+Pi/2+d_.*x_])*Sqrt[e_.+f_.*Sin[c_.+Pi/2+d_.*x_]]),x_Symbol] :=
  2/(d*(a+b)*Rt[e+f,2])*EllipticPi[Simplify[2*b/(a+b)],(c+d*x)/2,Simplify[2*f/(e+f)]] /;
FreeQ[{a,b,c,d,e,f},x] && NonzeroQ[a^2-b^2] && NonzeroQ[e^2-f^2] && PositiveQ[e+f]


Int[1/((a_.+b_.*Sin[c_.+d_.*x_])*Sqrt[e_.+f_.*Sin[c_.+d_.*x_]]),x_Symbol] :=
  2/(d*(a+b)*Rt[e+f,2])*EllipticPi[Simplify[2*b/(a+b)],(c+d*x)/2-Pi/4,Simplify[2*f/(e+f)]] /;
FreeQ[{a,b,c,d,e,f},x] && NonzeroQ[a^2-b^2] && NonzeroQ[e^2-f^2] && PositiveQ[e+f]


Int[1/((a_.+b_.*Sin[c_.+d_.*x_])*Sqrt[e_.+f_.*Sin[c_.+d_.*x_]]),x_Symbol] :=
  Sqrt[(e+f*Sin[c+d*x])/(e+f)]/Sqrt[e+f*Sin[c+d*x]]*
    Int[1/((a+b*Sin[c+d*x])*Sqrt[e/(e+f)+f/(e+f)*Sin[c+d*x]]),x] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2-b^2] && NonzeroQ[e^2-f^2] && Not[PositiveQ[e+f]]


Int[Sqrt[a_.+b_.*Sin[c_.+d_.*x_]]/(e_.+f_.*Sin[c_.+d_.*x_]),x_Symbol] :=
  b/f*Int[1/Sqrt[a+b*Sin[c+d*x]],x] + 
  (a*f-b*e)/f*Int[1/((e+f*Sin[c+d*x])*Sqrt[a+b*Sin[c+d*x]]),x] /;
FreeQ[{a,b,c,d,e,f},x] && NonzeroQ[a^2-b^2] && NonzeroQ[e^2-f^2] && NonzeroQ[a*f-b*e]


Int[(a_.+b_.*Sin[c_.+d_.*x_])^(3/2)/(e_.+f_.*Sin[c_.+d_.*x_]),x_Symbol] :=
  b/f*Int[Sqrt[a+b*Sin[c+d*x]],x] + 
  Dist[(a*f-b*e)/f,Int[Sqrt[a+b*Sin[c+d*x]]/(e+f*Sin[c+d*x]),x]] /;
FreeQ[{a,b,c,d,e,f},x] && NonzeroQ[a^2-b^2] && NonzeroQ[e^2-f^2] && NonzeroQ[a*f-b*e]


Int[1/(Sqrt[Sin[c_.+d_.*x_]]*Sqrt[a_+b_.*Sin[c_.+d_.*x_]]),x_Symbol] :=
  2/(d*Sqrt[a+b])*EllipticF[ArcSin[Tan[(c-Pi/2+d*x)/2]],-Simplify[(a-b)/(a+b)]] /;
FreeQ[{a,b,c,d},x] && PositiveQ[b] && PositiveQ[b^2-a^2]


Int[1/(Sqrt[Sin[c_.+d_.*x_]]*Sqrt[a_+b_.*Sin[c_.+d_.*x_]]),x_Symbol] :=
  2*Sqrt[1+Sin[c+d*x]]/(d*Sqrt[a+b*Sin[c+d*x]])*
  Sqrt[(a+b*Sin[c+d*x])/((a+b)*(1+Sin[c+d*x]))]*
  EllipticF[ArcSin[Tan[(c-Pi/2+d*x)/2]],-Simplify[(a-b)/(a+b)]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2-b^2]


Int[Sqrt[Sin[c_.+d_.*x_]]*Sqrt[a_+b_.*Sin[c_.+d_.*x_]],x_Symbol] :=
  -a*Int[1/(Sqrt[Sin[c+d*x]]*Sqrt[a+b*Sin[c+d*x]]),x] + 
  Int[(a+a*Sin[c+d*x]+b*Sin[c+d*x]^2)/(Sqrt[Sin[c+d*x]]*Sqrt[a+b*Sin[c+d*x]]),x] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2-b^2]


Int[Sqrt[Sin[c_.+d_.*x_]]/Sqrt[a_+b_.*Sin[c_.+d_.*x_]],x_Symbol] :=
  -Int[1/(Sqrt[Sin[c+d*x]]*Sqrt[a+b*Sin[c+d*x]]),x] +
  Int[(1+Sin[c+d*x])/(Sqrt[Sin[c+d*x]]*Sqrt[a+b*Sin[c+d*x]]),x] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2-b^2]


Int[Sqrt[a_+b_.*Sin[c_.+d_.*x_]]/Sqrt[Sin[c_.+d_.*x_]],x_Symbol] :=
  (a-b)*Int[1/(Sqrt[Sin[c+d*x]]*Sqrt[a+b*Sin[c+d*x]]),x] +
  Dist[b,Int[(1+Sin[c+d*x])/(Sqrt[Sin[c+d*x]]*Sqrt[a+b*Sin[c+d*x]]),x]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2-b^2]


(* Int[Sqrt[a_.+b_.*Sin[c_.+d_.*x_]]/Sqrt[e_.+f_.*Sin[c_.+d_.*x_]],x_Symbol] :=
  (a-b)*Int[1/(Sqrt[a+b*Sin[c+d*x]]*Sqrt[e+f*Sin[c+d*x]]),x] +
  Dist[b,Int[(1+Sin[c+d*x])/(Sqrt[a+b*Sin[c+d*x]]*Sqrt[e+f*Sin[c+d*x]]),x]] /;
FreeQ[{a,b,c,d,e,f},x] && NonzeroQ[a^2-b^2] && NonzeroQ[e^2-f^2] && NonzeroQ[b*e-a*f] *)


Int[Sqrt[Sin[c_.+d_.*x_]]/(a_+b_.*Sin[c_.+d_.*x_])^(3/2),x_Symbol] :=
  -1/(a-b)*Int[1/(Sqrt[Sin[c+d*x]]*Sqrt[a+b*Sin[c+d*x]]),x] + 
  Dist[a/(a-b),Int[(1+Sin[c+d*x])/(Sqrt[Sin[c+d*x]]*(a+b*Sin[c+d*x])^(3/2)),x]] /; 
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2-b^2]


Int[Sqrt[a_+b_.*Sin[c_.+d_.*x_]]/Sin[c_.+d_.*x_]^(3/2),x_Symbol] :=
  Dist[a+b,Int[1/(Sqrt[Sin[c+d*x]]*Sqrt[a+b*Sin[c+d*x]]),x]] + 
  Dist[a,Int[(1-Sin[c+d*x])/(Sin[c+d*x]^(3/2)*Sqrt[a+b*Sin[c+d*x]]),x]] /; 
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2-b^2]


(* Int[Sqrt[a_.+b_.*Sin[c_.+d_.*x_]]/(e_.+f_.*Sin[c_.+d_.*x_])^(3/2),x_Symbol] :=
  Dist[(a-b)/(e-f),Int[1/(Sqrt[a+b*Sin[c+d*x]]*Sqrt[e+f*Sin[c+d*x]]),x]] + 
  Dist[(b*e-a*f)/(e-f),Int[(1+Sin[c+d*x])/(Sqrt[a+b*Sin[c+d*x]]*(e+f*Sin[c+d*x])^(3/2)),x]] /; 
FreeQ[{a,b,c,d,e,f},x] && NonzeroQ[a^2-b^2] && NonzeroQ[e^2-f^2] && NonzeroQ[b*e-a*f] *)


Int[Sin[c_.+d_.*x_]^(3/2)/Sqrt[a_+b_.*Sin[c_.+d_.*x_]],x_Symbol] :=
  -a/(2*b)*Int[(1+Sin[c+d*x])/(Sqrt[Sin[c+d*x]]*Sqrt[a+b*Sin[c+d*x]]),x] + 
  Dist[1/(2*b),
    Int[(a+a*Sin[c+d*x]+2*b*Sin[c+d*x]^2)/(Sqrt[Sin[c+d*x]]*Sqrt[a+b*Sin[c+d*x]]),x]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2-b^2]


Int[(a_+b_.*Sin[c_.+d_.*x_])^(3/2)/Sqrt[Sin[c_.+d_.*x_]],x_Symbol] :=
  3*a*b/2*Int[(1+Sin[c+d*x])/(Sqrt[Sin[c+d*x]]*Sqrt[a+b*Sin[c+d*x]]),x] + 
  Dist[1/2,
    Int[(a*(2*a-3*b)+a*b*Sin[c+d*x]+2*b^2*Sin[c+d*x]^2)/(Sqrt[Sin[c+d*x]]*Sqrt[a+b*Sin[c+d*x]]),x]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2-b^2]


Int[Sin[c_.+d_.*x_]^(3/2)/(a_+b_.*Sin[c_.+d_.*x_])^(3/2),x_Symbol] :=
  1/b*Int[(1+Sin[c+d*x])/(Sqrt[Sin[c+d*x]]*Sqrt[a+b*Sin[c+d*x]]),x] + 
  Dist[1/b,Int[(-a-(a+b)*Sin[c+d*x])/(Sqrt[Sin[c+d*x]]*(a+b*Sin[c+d*x])^(3/2)),x]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2-b^2]


Int[(a_+b_.*Sin[c_.+d_.*x_])^(3/2)/Sin[c_.+d_.*x_]^(3/2),x_Symbol] :=
  b^2*Int[(1+Sin[c+d*x])/(Sqrt[Sin[c+d*x]]*Sqrt[a+b*Sin[c+d*x]]),x] + 
  Int[(a^2+b*(2*a-b)*Sin[c+d*x])/(Sin[c+d*x]^(3/2)*Sqrt[a+b*Sin[c+d*x]]),x] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2-b^2]


(* Int[(a_.+b_.*Sin[c_.+d_.*x_])^(3/2)/(e_.+f_.*Sin[c_.+d_.*x_])^(3/2),x_Symbol] :=
  b^2/f*Int[(1+Sin[c+d*x])/(Sqrt[a+b*Sin[c+d*x]]*Sqrt[e+f*Sin[c+d*x]]),x] + 
  Dist[1/f,
    Int[(a^2*f-b^2*e+b*(2*a*f-b*(e+f))*Sin[c+d*x])/(Sqrt[a+b*Sin[c+d*x]]*(e+f*Sin[c+d*x])^(3/2)),x]] /;
FreeQ[{a,b,c,d,e,f},x] && NonzeroQ[a^2-b^2] && NonzeroQ[e^2-f^2] && NonzeroQ[b*e-a*f] *)


Int[1/(Sqrt[Sin[c_.+d_.*x_]]*(a_+b_.*Sin[c_.+d_.*x_])^(3/2)),x_Symbol] :=
  1/(a-b)*Int[1/(Sqrt[Sin[c+d*x]]*Sqrt[a+b*Sin[c+d*x]]),x] - 
  Dist[b/(a-b),Int[(1+Sin[c+d*x])/(Sqrt[Sin[c+d*x]]*(a+b*Sin[c+d*x])^(3/2)),x]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2-b^2]


Int[1/(Sin[c_.+d_.*x_]^(3/2)*Sqrt[a_+b_.*Sin[c_.+d_.*x_]]),x_Symbol] :=
  Int[1/(Sqrt[Sin[c+d*x]]*Sqrt[a+b*Sin[c+d*x]]),x] + 
  Int[(1-Sin[c+d*x])/(Sin[c+d*x]^(3/2)*Sqrt[a+b*Sin[c+d*x]]),x] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2-b^2]


Int[Sqrt[a_+b_.*Sin[c_.+d_.*x_]]/(Sqrt[Sin[c_.+d_.*x_]]*(A_+B_.*Sin[c_.+d_.*x_])),x_Symbol] :=
  Sqrt[a+b]/(d*A)*EllipticE[ArcSin[Tan[(c-Pi/2+d*x)/2]],-Simplify[(a-b)/(a+b)]] /;
FreeQ[{a,b,c,d,A,B},x] && ZeroQ[A-B] && PositiveQ[b] && PositiveQ[b^2-a^2]


Int[Sqrt[a_+b_.*Sin[c_.+d_.*x_]]/(Sqrt[Sin[c_.+d_.*x_]]*(A_+B_.*Sin[c_.+d_.*x_])),x_Symbol] :=
  (a+b)*Sqrt[1+Sin[c+d*x]]/(d*A*Sqrt[a+b*Sin[c+d*x]])*Sqrt[(a+b*Sin[c+d*x])/((a+b)*(1+Sin[c+d*x]))]*
  EllipticE[ArcSin[Tan[(c-Pi/2+d*x)/2]],-Simplify[(a-b)/(a+b)]] /;
FreeQ[{a,b,c,d,A,B},x] && ZeroQ[A-B] && NonzeroQ[a^2-b^2]


Int[Sqrt[Sin[c_.+d_.*x_]]/(Sqrt[a_.+b_.*Sin[c_.+d_.*x_]]*(A_+B_.*Sin[c_.+d_.*x_])),x_Symbol] :=
  a/(A*(a-b))*Int[1/(Sqrt[Sin[c+d*x]]*Sqrt[a+b*Sin[c+d*x]]),x] - 
  1/(a-b)*Int[Sqrt[a+b*Sin[c+d*x]]/(Sqrt[Sin[c+d*x]]*(A+B*Sin[c+d*x])),x] /;
FreeQ[{a,b,c,d,A,B},x] && ZeroQ[A-B] && NonzeroQ[a^2-b^2]


Int[(A_+B_.*Sin[c_.+d_.*x_])/(Sqrt[Sin[c_.+d_.*x_]]*Sqrt[a_+b_.*Sin[c_.+d_.*x_]]),x_Symbol] :=
  4*A/(d*Sqrt[a+b])*EllipticPi[-1,ArcSin[Tan[(c-Pi/2+d*x)/2]],-Simplify[(a-b)/(a+b)]] /;
FreeQ[{a,b,c,d,A,B},x] && ZeroQ[A-B] && PositiveQ[b] && PositiveQ[b^2-a^2]


Int[(A_+B_.*Sin[c_.+d_.*x_])/(Sqrt[Sin[c_.+d_.*x_]]*Sqrt[a_+b_.*Sin[c_.+d_.*x_]]),x_Symbol] :=
  4*A*Sqrt[1+Sin[c+d*x]]/(d*Sqrt[a+b*Sin[c+d*x]])*
  Sqrt[(a+b*Sin[c+d*x])/((a+b)*(1+Sin[c+d*x]))]*
  EllipticPi[-1,ArcSin[Tan[(c-Pi/2+d*x)/2]],-Simplify[(a-b)/(a+b)]] /;
FreeQ[{a,b,c,d,A,B},x] && ZeroQ[A-B] && NonzeroQ[a^2-b^2]


Int[Sin[c_.+d_.*x_]^m_.*(b_.*Sin[c_.+d_.*x_]^k_.)^n_.,x_Symbol] :=
  Dist[1/b^(k*m),Int[(b*Sin[c+d*x]^k)^(k*m+n),x]] /;
FreeQ[{b,c,d,n},x] && OneQ[k^2] && IntegerQ[m]


Int[(Sin[c_.+d_.*x_]^j_.)^m_*(b_*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  Dist[b^(n-1/2)*Sqrt[b*Sin[c+d*x]^k]/(Sqrt[Sin[c+d*x]^j])^(j*k),Int[Sin[c+d*x]^(j*m+k*n),x]] /;
FreeQ[{b,c,d},x] && OneQ[j^2,k^2] && IntegerQ[m-1/2] && IntegerQ[n-1/2] && n>0


Int[(Sin[c_.+d_.*x_]^j_.)^m_*(b_*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  Dist[b^(n+1/2)*(Sqrt[Sin[c+d*x]^j])^(j*k)/Sqrt[b*Sin[c+d*x]^k],Int[Sin[c+d*x]^(j*m+k*n),x]] /;
FreeQ[{b,c,d},x] && OneQ[j^2,k^2] && IntegerQ[m-1/2] && IntegerQ[n-1/2] && n<0


Int[(Sin[c_.+d_.*x_]^j_.)^m_./(a_+b_.*Sin[c_.+d_.*x_]^(-1)),x_Symbol] :=
  Int[(Sin[c+d*x]^j)^(m+j)/(b+a*Sin[c+d*x]),x] /;
FreeQ[{a,b,c,d},x] && OneQ[j^2] && NonzeroQ[a^2-b^2] && RationalQ[m] && -1/2<=m+j<=3/2


Int[Sin[c_.+d_.*x_]^m_.*(a_+b_.*Sin[c_.+d_.*x_]^(-1))^n_,x_Symbol] :=
  Dist[Sqrt[b+a*Sin[c+d*x]]/(Sqrt[Sin[c+d*x]]*Sqrt[a+b*Csc[c+d*x]]),
    Int[Sin[c+d*x]^(m-n)*(b+a*Sin[c+d*x])^n,x]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2-b^2] && IntegerQ[m] && IntegerQ[n-1/2] && 
  (m==1 && -1<n<2 || m==-1 && -2<n<1  || m==-2 && -2<n<0)


Int[(Sin[c_.+d_.*x_]^j_.)^m_*(a_+b_.*Sin[c_.+d_.*x_]^(-1))^n_,x_Symbol] :=
  Dist[Sqrt[b+a*Sin[c+d*x]]/((Sqrt[Sin[c+d*x]^j])^j*Sqrt[a+b*Csc[c+d*x]]),
    Int[Sin[c+d*x]^(j*m-n)*(b+a*Sin[c+d*x])^n,x]] /;
FreeQ[{a,b,c,d},x] && OneQ[j^2] && NonzeroQ[a^2-b^2] && IntegerQ[m-1/2] && IntegerQ[n-1/2] && 
  -1<n<2 && -1<=j*m-n<=1


Int[(Sin[c_.+d_.*x_]^(-1))^m_*(a_+b_.*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  Dist[Sqrt[Csc[c+d*x]]*Sqrt[Sin[c+d*x]],
    Int[(a+b*Sin[c+d*x]^k)^n/Sin[c+d*x]^m,x]] /;
FreeQ[{a,b,c,d},x] && OneQ[k^2] && NonzeroQ[a^2-b^2] && IntegerQ[m-1/2] && RationalQ[n] && 
  (k===1 || -1<m<1 && -1<=n<1)


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(a_+b_.*Sin[c_.+d_.*x_]^k_.)^2,x_Symbol] :=
  a^2*Cos[c+d*x]*(Sin[c+d*x]^j)^(m+j*k)/(d*(j*k*m+(k+1)/2)) + 
  Dist[1/(j*k*m+(k+1)/2),
    Int[(Sin[c+d*x]^j)^(m+j*k)*
      Simplify[2*a*b*(j*k*m+(k+1)/2)+(a^2+(a^2+b^2)*(j*k*m+(k+1)/2))*Sin[c+d*x]^k,x],x]] /;
FreeQ[{a,b,c,d},x] && OneQ[j^2,k^2] && RationalQ[m] && j*k*m+(k+1)/2!=0 && j*k*m<=-1


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(a_+b_.*Sin[c_.+d_.*x_]^k_.)^2,x_Symbol] :=
  -b^2*Cos[c+d*x]*(Sin[c+d*x]^j)^(m+j*k)/(d*(j*k*m+(k+3)/2)) + 
  Dist[1/(j*k*m+(k+3)/2),
    Int[(Sin[c+d*x]^j)^m*
      Simplify[a^2+(a^2+b^2)*(j*k*m+(k+1)/2)+2*a*b*(j*k*m+(k+3)/2)*Sin[c+d*x]^k,x],x]] /;
FreeQ[{a,b,c,d},x] && OneQ[j^2,k^2] && RationalQ[m] && j*k*m+(k+3)/2!=0 && j*k*m>=-1


Int[(a_+b_.*Sin[c_.+d_.*x_])^n_,x_Symbol] :=
  -b*Cos[c+d*x]*(a+b*Sin[c+d*x])^(n+1)/(d*(n+1)*(a^2-b^2)) + 
  Dist[1/((n+1)*(a^2-b^2)),Int[(a*(n+1)-b*(n+2)*Sin[c+d*x])*(a+b*Sin[c+d*x])^(n+1),x]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2-b^2] && RationalQ[n] && n<-1


Int[Sin[c_.+d_.*x_]^(-1)*(a_+b_.*Sin[c_.+d_.*x_]^(-1))^n_,x_Symbol] :=
  -b*Cot[c+d*x]*(a+b*Csc[c+d*x])^(n+1)/(d*(n+1)*(a^2-b^2)) + 
  Dist[1/((n+1)*(a^2-b^2)),Int[Sin[c+d*x]^(-1)*(a*(n+1)-b*(n+2)*Sin[c+d*x]^(-1))*(a+b*Sin[c+d*x]^(-1))^(n+1),x]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2-b^2] && RationalQ[n] && n<-1


Int[(a_.+b_.*Sin[c_.+d_.*x_])^n_,x_Symbol] :=
  -b*Cos[c+d*x]*(a+b*Sin[c+d*x])^(n-1)/(d*n) + 
  Dist[1/n,Int[Simplify[a^2*n+b^2*(n-1)+a*b*(2*n-1)*Sin[c+d*x],x]*(a+b*Sin[c+d*x])^(n-2),x]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2-b^2] && RationalQ[n] && n>1


Int[Sin[c_.+d_.*x_]^(-1)*(a_+b_.*Sin[c_.+d_.*x_]^(-1))^n_,x_Symbol] :=
  -b*Cot[c+d*x]*(a+b*Csc[c+d*x])^(n-1)/(d*n) + 
  Dist[1/n,Int[Sin[c+d*x]^(-1)*(a^2*n+b^2*(n-1)+a*b*(2*n-1)*Sin[c+d*x]^(-1))*(a+b*Sin[c+d*x]^(-1))^(n-2),x]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2-b^2] && RationalQ[n] && n>1


Int[Sin[c_.+d_.*x_]^m_*(a_+b_.*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  a*Cos[c+d*x]*Sin[c+d*x]^((k-1)/2)*(a+b*Sin[c+d*x]^k)^(n+1)/(d*(n+1)*(a^2-b^2)) - 
  Dist[1/((n+1)*(a^2-b^2)),
    Int[Sin[c+d*x]^((k-1)/2)*(b*(n+1)-a*(n+2)*Sin[c+d*x]^k)*(a+b*Sin[c+d*x]^k)^(n+1),x]] /;
FreeQ[{a,b,c,d},x] && OneQ[k^2] && ZeroQ[m-(3*k-1)/2] && NonzeroQ[a^2-b^2] && RationalQ[n] && n<-1


Int[Sin[c_.+d_.*x_]^m_/(a_+b_.*Sin[c_.+d_.*x_]^k_.),x_Symbol] :=
  1/b*Int[Sin[c+d*x]^((k-1)/2),x] - 
  a/b*Int[Sin[c+d*x]^((k-1)/2)/(a+b*Sin[c+d*x]^k),x] /;
FreeQ[{a,b,c,d},x] && OneQ[k^2] && ZeroQ[m-(3*k-1)/2] && NonzeroQ[a^2-b^2]


Int[Sin[c_.+d_.*x_]^m_*(a_+b_.*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  -Cos[c+d*x]*Sin[c+d*x]^((k-1)/2)*(a+b*Sin[c+d*x]^k)^n/(d*(n+1)) + 
  Dist[n/(n+1),
    Int[Sin[c+d*x]^((k-1)/2)*(b+a*Sin[c+d*x]^k)*(a+b*Sin[c+d*x]^k)^(n-1),x]] /;
FreeQ[{a,b,c,d},x] && OneQ[k^2] && ZeroQ[m-(3*k-1)/2] && RationalQ[n] && n>-1


Int[Sin[c_.+d_.*x_]^m_*(a_+b_.*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  -a^2*Cos[c+d*x]*Sin[c+d*x]^((k-1)/2)*(a+b*Sin[c+d*x]^k)^(n+1)/(b*d*(n+1)*(a^2-b^2)) + 
  Dist[1/(b*(n+1)*(a^2-b^2)),
    Int[Sin[c+d*x]^((k-1)/2)*(a*b*(n+1)-(a^2+b^2*(n+1))*Sin[c+d*x]^k)*(a+b*Sin[c+d*x]^k)^(n+1),x]] /;
FreeQ[{a,b,c,d},x] && OneQ[k^2] && ZeroQ[m-(5*k-1)/2] && NonzeroQ[a^2-b^2] && RationalQ[n] && n<-1


Int[Sin[c_.+d_.*x_]^m_/(a_+b_.*Sin[c_.+d_.*x_]^k_.),x_Symbol] :=
  -Cos[c+d*x]*Sin[c+d*x]^((k-1)/2)/(b*d) - 
  Dist[a/b,Int[Sin[c+d*x]^((3*k-1)/2)/(a+b*Sin[c+d*x]^k),x]] /;
FreeQ[{a,b,c,d},x] && OneQ[k^2] && ZeroQ[m-(5*k-1)/2]


Int[Sin[c_.+d_.*x_]^m_*(a_+b_.*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  -Cos[c+d*x]*Sin[c+d*x]^((k-1)/2)*(a+b*Sin[c+d*x]^k)^(n+1)/(b*d*(n+2)) + 
  Dist[1/(b*(n+2)),
    Int[Sin[c+d*x]^((k-1)/2)*(b*(n+1)-a*Sin[c+d*x]^k)*(a+b*Sin[c+d*x]^k)^n,x]] /;
FreeQ[{a,b,c,d},x] && OneQ[k^2] && ZeroQ[m-(5*k-1)/2] && RationalQ[n] && n>-1


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(a_+b_.*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  -a^2*Cos[c+d*x]*(Sin[c+d*x]^j)^(m-2*j*k)*(a+b*Sin[c+d*x]^k)^(n+1)/(b*d*(n+1)*(a^2-b^2)) + 
  Dist[1/(b*(n+1)*(a^2-b^2)),
    Int[(Sin[c+d*x]^j)^(m-3*j*k)*
      Simplify[a^2*(j*k*m+(k-1)/2-2)+a*b*(n+1)*Sin[c+d*x]^k-
        (b^2*(n+1)+a^2*(j*k*m+(k-1)/2-1))*Sin[c+d*x]^(2*k),x]*
      (a+b*Sin[c+d*x]^k)^(n+1),x]] /;
FreeQ[{a,b,c,d},x] && OneQ[j^2,k^2] && NonzeroQ[a^2-b^2] && RationalQ[m,n] && j*k*m>2 && n<-1


Int[(Sin[c_.+d_.*x_]^j_.)^m_*(a_+b_.*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  a*Cos[c+d*x]*(Sin[c+d*x]^j)^(m-j*k)*(a+b*Sin[c+d*x]^k)^(n+1)/(d*(n+1)*(a^2-b^2)) - 
  Dist[1/((n+1)*(a^2-b^2)),
    Int[(Sin[c+d*x]^j)^(m-2*j*k)*
      Simplify[a*(j*k*m+(k-1)/2-1)+b*(n+1)*Sin[c+d*x]^k-a*(j*k*m+n+(k+1)/2)*Sin[c+d*x]^(2*k),x]*
      (a+b*Sin[c+d*x]^k)^(n+1),x]] /;
FreeQ[{a,b,c,d},x] && OneQ[j^2,k^2] && NonzeroQ[a^2-b^2] && RationalQ[m,n] && 
  1<j*k*m<2 && n<-1


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(a_+b_.*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  -b*Cos[c+d*x]*(Sin[c+d*x]^j)^m*(a+b*Sin[c+d*x]^k)^(n+1)/(d*(n+1)*(a^2-b^2)) + 
  Dist[1/((n+1)*(a^2-b^2)),
    Int[(Sin[c+d*x]^j)^(m-j*k)*
      Simplify[b*(j*k*m+(k-1)/2)+a*(n+1)*Sin[c+d*x]^k-b*(j*k*m+n+(k+1)/2+1)*Sin[c+d*x]^(2*k),x]*
      (a+b*Sin[c+d*x]^k)^(n+1),x]] /;
FreeQ[{a,b,c,d},x] && OneQ[j^2,k^2] && NonzeroQ[a^2-b^2] && RationalQ[m,n] && 
  0<j*k*m<1 && n<-1


Int[(Sin[c_.+d_.*x_]^j_.)^m_*(a_.+b_.*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  -Cos[c+d*x]*(Sin[c+d*x]^j)^(m-2*j*k)*(a+b*Sin[c+d*x]^k)^(n+1)/(b*d*(j*k*m+n+(k-1)/2)) + 
  Dist[1/(b*(j*k*m+n+(k-1)/2)),
    Int[(Sin[c+d*x]^j)^(m-3*j*k)*
      Simplify[a*(j*k*m+(k-1)/2-2)+b*(j*k*m+n+(k-1)/2-1)*Sin[c+d*x]^k-
        a*(j*k*m+(k-1)/2-1)*Sin[c+d*x]^(2*k),x]*
      (a+b*Sin[c+d*x]^k)^n,x]] /;
FreeQ[{a,b,c,d},x] && OneQ[j^2,k^2] && NonzeroQ[a^2-b^2] && RationalQ[m,n] && j*k*m>2 && -1<=n<0


Int[(Sin[c_.+d_.*x_]^j_.)^m_*(a_.+b_.*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  -Cos[c+d*x]*(Sin[c+d*x]^j)^(m-j*k)*(a+b*Sin[c+d*x]^k)^n/(d*(j*k*m+n+(k-1)/2)) + 
  Dist[1/(j*k*m+n+(k-1)/2),
    Int[(Sin[c+d*x]^j)^(m-2*j*k)*
      Simplify[a*(j*k*m+(k-1)/2-1)+b*(j*k*m+n+(k-1)/2-1)*Sin[c+d*x]^k+a*n*Sin[c+d*x]^(2*k),x]*
      (a+b*Sin[c+d*x]^k)^(n-1),x]] /;
FreeQ[{a,b,c,d},x] && OneQ[j^2,k^2] && NonzeroQ[a^2-b^2] && RationalQ[m,n] && 
  j*k*m>1 && j*k*m!=2 && 0<n<1


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(a_.+b_.*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  -b^2*Cos[c+d*x]*(Sin[c+d*x]^j)^(m+j*k)*(a+b*Sin[c+d*x]^k)^(n-2)/(d*(j*k*m+n+(k-1)/2)) + 
  Dist[1/(j*k*m+n+(k-1)/2),
   Int[(Sin[c+d*x]^j)^m*
    Simplify[a*(a^2*(n-1)+(a^2+b^2)*(j*k*m+(k+1)/2))+b*(-b^2+(3*a^2+b^2)*(j*k*m+n+(k-1)/2))*Sin[c+d*x]^k+
      a*b^2*(2*j*k*m+3*n+k-3)*Sin[c+d*x]^(2*k),x]*
    (a+b*Sin[c+d*x]^k)^(n-3),x]] /;
FreeQ[{a,b,c,d},x] && OneQ[j^2,k^2] && NonzeroQ[a^2-b^2] && RationalQ[m,n] && 
  j*k*m>=-1 && j*k*m!=1 && j*k*m!=2 && n>2


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(a_.+b_.*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  -b*Cos[c+d*x]*(Sin[c+d*x]^j)^m*(a+b*Sin[c+d*x]^k)^(n-1)/(d*(j*k*m+n+(k-1)/2)) + 
  Dist[1/(j*k*m+n+(k-1)/2),
    Int[(Sin[c+d*x]^j)^(m-j*k)*
      Simplify[a*b*(j*k*m+(k-1)/2)+((a^2+b^2)*(j*k*m+n+(k-1)/2)-b^2)*Sin[c+d*x]^k+
        a*b*(j*k*m+2*n+(k-1)/2-1)*Sin[c+d*x]^(2*k),x]*
      (a+b*Sin[c+d*x]^k)^(n-2),x]] /;
FreeQ[{a,b,c,d},x] && OneQ[j^2,k^2] && NonzeroQ[a^2-b^2] && RationalQ[m,n] && 
  j*k*m>0 && j*k*m!=1 && j*k*m!=2 && 1<n<2


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(a_+b_.*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  a^2*Cos[c+d*x]*(Sin[c+d*x]^j)^(m+j*k)*(a+b*Sin[c+d*x]^k)^(n-2)/(d*(j*k*m+(k+1)/2)) + 
  Dist[1/(j*k*m+(k+1)/2),
    Int[(Sin[c+d*x]^j)^(m+j*k)*
      Simplify[a^2*b*(2*j*k*m-n+k+3)+a*(a^2+(a^2+3*b^2)*(j*k*m+(k+1)/2))*Sin[c+d*x]^k+
        b*(a^2*(n-1)+(a^2+b^2)*(j*k*m+(k+1)/2))*Sin[c+d*x]^(2*k),x]*
      (a+b*Sin[c+d*x]^k)^(n-3),x]] /;
FreeQ[{a,b,c,d},x] && OneQ[j^2,k^2] && NonzeroQ[a^2-b^2] && RationalQ[m,n] && 
  j*k*m<-1 && n>2


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(a_+b_.*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  a*Cos[c+d*x]*(Sin[c+d*x]^j)^(m+j*k)*(a+b*Sin[c+d*x]^k)^(n-1)/(d*(j*k*m+(k+1)/2)) + 
  Dist[1/(j*k*m+(k+1)/2),
    Int[(Sin[c+d*x]^j)^(m+j*k)*
      Simplify[a*b*(j*k*m-n+(k+1)/2+1)+(a^2+(a^2+b^2)*(j*k*m+(k+1)/2))*Sin[c+d*x]^k+
        a*b*(j*k*m+n+(k+1)/2)*Sin[c+d*x]^(2*k),x]*
      (a+b*Sin[c+d*x]^k)^(n-2),x]] /;
FreeQ[{a,b,c,d},x] && OneQ[j^2,k^2] && NonzeroQ[a^2-b^2] && RationalQ[m,n] && 
  j*k*m<-1 && 1<n<2


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(a_.+b_.*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  Cos[c+d*x]*(Sin[c+d*x]^j)^(m+j*k)*(a+b*Sin[c+d*x]^k)^n/(d*(j*k*m+(k+1)/2)) + 
  Dist[1/(j*k*m+(k+1)/2),
    Int[(Sin[c+d*x]^j)^(m+j*k)*
      Simplify[-b*n+a*(j*k*m+(k+1)/2+1)*Sin[c+d*x]^k+b*(j*k*m+n+(k+1)/2+1)*Sin[c+d*x]^(2*k),x]*
      (a+b*Sin[c+d*x]^k)^(n-1),x]] /;
FreeQ[{a,b,c,d},x] && OneQ[j^2,k^2] && NonzeroQ[a^2-b^2] && RationalQ[m,n] && 
  j*k*m+(k+1)/2!=0 && j*k*m<=-1 && 0<n<1


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(a_+b_.*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  Cos[c+d*x]*(Sin[c+d*x]^j)^(m+j*k)*(a+b*Sin[c+d*x]^k)^(n+1)/(a*d*(j*k*m+(k+1)/2)) + 
  Dist[1/(a*(j*k*m+(k+1)/2)),
    Int[(Sin[c+d*x]^j)^(m+j*k)*
      Simplify[-b*(j*k*m+n+(k+1)/2+1)+a*(j*k*m+(k+1)/2+1)*Sin[c+d*x]^k+
        b*(j*k*m+n+(k+1)/2+2)*Sin[c+d*x]^(2*k),x]*
      (a+b*Sin[c+d*x]^k)^n,x]] /;
FreeQ[{a,b,c,d},x] && OneQ[j^2,k^2] && NonzeroQ[a^2-b^2] && RationalQ[m,n] && 
  j*k*m+(k+1)/2!=0 && j*k*m<=-1 && -1<=n<0


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(a_+b_.*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  b^2*Cos[c+d*x]*(Sin[c+d*x]^j)^(m+j*k)*(a+b*Sin[c+d*x]^k)^(n+1)/(a*d*(n+1)*(a^2-b^2)) + 
  Dist[1/(a*(n+1)*(a^2-b^2)),
    Int[(Sin[c+d*x]^j)^m*
      Simplify[(a^2-b^2)*(n+1)-b^2*(j*k*m+(k+1)/2)-a*b*(n+1)*Sin[c+d*x]^k+
        b^2*(j*k*m+n+(k+1)/2+2)*Sin[c+d*x]^(2*k),x]*
      (a+b*Sin[c+d*x]^k)^(n+1),x]] /;
FreeQ[{a,b,c,d},x] && OneQ[j^2,k^2] && NonzeroQ[a^2-b^2] && RationalQ[m,n] && 
  j*k*m<0 && n<-1
(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Code:: *)
Int[u_.*(c_.*F_[a_.+b_.*x_]^n_)^m_,x_Symbol] :=
  Dist[c^(m-1/2)*Sqrt[c*F[a+b*x]^n]/F[a+b*x]^(n/2),Int[u*F[a+b*x]^(m*n),x]] /;
FreeQ[{a,b,c},x] && IntegerQ[n/2] && IntegerQ[m-1/2] && m>0 && 
  MemberQ[{Sin,Cos,Tan,Cot,Sinh,Cosh,Tanh,Coth},F]


(* ::Code:: *)
Int[u_.*(c_.*F_[a_.+b_.*x_]^n_)^m_,x_Symbol] :=
  Dist[c^(m+1/2)*F[a+b*x]^(n/2)/Sqrt[c*F[a+b*x]^n],Int[u*F[a+b*x]^(m*n),x]] /;
FreeQ[{a,b,c},x] && IntegerQ[n/2] && IntegerQ[m-1/2] && m<0 && 
  MemberQ[{Sin,Cos,Tan,Cot,Sinh,Cosh,Tanh,Coth},F]


(* ::Code:: *)
Int[u_*Cos[c_.*(a_.+b_.*x_)],x_Symbol] :=
  Dist[1/(b*c),Subst[Int[Regularize[SubstFor[Sin[c*(a+b*x)],u,x],x],x],x,Sin[c*(a+b*x)]]] /;
FreeQ[{a,b,c},x] && FunctionOfQ[Sin[c*(a+b*x)],u,x,True]


(* ::Code:: *)
Int[u_*Cot[c_.*(a_.+b_.*x_)],x_Symbol] :=
  Dist[1/(b*c),Subst[Int[Regularize[SubstFor[Sin[c*(a+b*x)],u,x]/x,x],x],x,Sin[c*(a+b*x)]]] /;
FreeQ[{a,b,c},x] && FunctionOfQ[Sin[c*(a+b*x)],u,x,True]


(* ::Code:: *)
Int[u_*Sin[c_.*(a_.+b_.*x_)],x_Symbol] :=
  -Dist[1/(b*c),Subst[Int[Regularize[SubstFor[Cos[c*(a+b*x)],u,x],x],x],x,Cos[c*(a+b*x)]]] /;
FreeQ[{a,b,c},x] && FunctionOfQ[Cos[c*(a+b*x)],u,x,True]


(* ::Code:: *)
Int[u_*Tan[c_.*(a_.+b_.*x_)],x_Symbol] :=
  -Dist[1/(b*c),Subst[Int[Regularize[SubstFor[Cos[c*(a+b*x)],u,x]/x,x],x],x,Cos[c*(a+b*x)]]] /;
FreeQ[{a,b,c},x] && FunctionOfQ[Cos[c*(a+b*x)],u,x,True]


(* ::Code:: *)
Int[u_*Csc[c_.*(a_.+b_.*x_)]^2,x_Symbol] :=
  -Dist[1/(b*c),Subst[Int[Regularize[SubstFor[Cot[c*(a+b*x)],u,x],x],x],x,Cot[c*(a+b*x)]]] /;
FreeQ[{a,b,c},x] && FunctionOfQ[Cot[c*(a+b*x)],u,x,True] && NonsumQ[u]


(* ::Code:: *)
Int[u_*Tan[c_.*(a_.+b_.*x_)]^n_.,x_Symbol] :=
  -Dist[1/(b*c),Subst[Int[Regularize[SubstFor[Cot[c*(a+b*x)],u,x]/(x^n*(1+x^2)),x],x],x,Cot[c*(a+b*x)]]] /;
FreeQ[{a,b,c},x] && IntegerQ[n] && FunctionOfQ[Cot[c*(a+b*x)],u,x,True] && TryPureTanSubst[u*Tan[c*(a+b*x)]^n,x]


(* ::Code:: *)
If[ShowSteps,

Int[u_,x_Symbol] :=
  Module[{v=FunctionOfTrig[u,x]},
  ShowStep["","Int[f[Cot[a+b*x]],x]","Subst[Int[f[x]/(1+x^2),x],x,Cot[a+b*x]]/b",Hold[
  Dist[-1/Coefficient[v,x,1],Subst[Int[Regularize[SubstFor[Cot[v],u,x]/(1+x^2),x],x],x,Cot[v]]]]] /;
 NotFalseQ[v] && FunctionOfQ[Cot[v],u,x,True] && TryPureTanSubst[u,x]] /;
SimplifyFlag,

Int[u_,x_Symbol] :=
  Module[{v=FunctionOfTrig[u,x]},
  Dist[-1/Coefficient[v,x,1],Subst[Int[Regularize[SubstFor[Cot[v],u,x]/(1+x^2),x],x],x,Cot[v]]] /;
 NotFalseQ[v] && FunctionOfQ[Cot[v],u,x,True] && TryPureTanSubst[u,x]]]


(* ::Code:: *)
Int[u_*Sec[c_.*(a_.+b_.*x_)]^2,x_Symbol] :=
  Dist[1/(b*c),Subst[Int[Regularize[SubstFor[Tan[c*(a+b*x)],u,x],x],x],x,Tan[c*(a+b*x)]]] /;
FreeQ[{a,b,c},x] && FunctionOfQ[Tan[c*(a+b*x)],u,x,True] && NonsumQ[u]


(* ::Code:: *)
Int[u_*Cot[c_.*(a_.+b_.*x_)]^n_.,x_Symbol] :=
  Dist[1/(b*c),Subst[Int[Regularize[SubstFor[Tan[c*(a+b*x)],u,x]/(x^n*(1+x^2)),x],x],x,Tan[c*(a+b*x)]]] /;
FreeQ[{a,b,c},x] && IntegerQ[n] && FunctionOfQ[Tan[c*(a+b*x)],u,x,True] && TryPureTanSubst[u*Cot[c*(a+b*x)]^n,x]


(* ::Code:: *)
If[ShowSteps,

Int[u_,x_Symbol] :=
  Module[{v=FunctionOfTrig[u,x]},
  ShowStep["","Int[f[Tan[a+b*x]],x]","Subst[Int[f[x]/(1+x^2),x],x,Tan[a+b*x]]/b",Hold[
  Dist[1/Coefficient[v,x,1],Subst[Int[Regularize[SubstFor[Tan[v],u,x]/(1+x^2),x],x],x,Tan[v]]]]] /;
 NotFalseQ[v] && FunctionOfQ[Tan[v],u,x,True] && TryPureTanSubst[u,x]] /;
SimplifyFlag,

Int[u_,x_Symbol] :=
  Module[{v=FunctionOfTrig[u,x]},
  Dist[1/Coefficient[v,x,1],Subst[Int[Regularize[SubstFor[Tan[v],u,x]/(1+x^2),x],x],x,Tan[v]]] /;
 NotFalseQ[v] && FunctionOfQ[Tan[v],u,x,True] && TryPureTanSubst[u,x]]]


(* ::Code:: *)
(* Int[u_*(a_+b_.*Sin[c_.+d_.*x_])^n_,x_Symbol] :=
  Sqrt[a+b*Sin[c+d*x]]/(Cos[c/2+d*x/2]+a/b*Sin[c/2+d*x/2])*
    (Int[u*Cos[c/2+d*x/2]*(a+b*Sin[c+d*x])^(n-1/2),x] +
     a/b*Int[u*Sin[c/2+d*x/2]*(a+b*Sin[c+d*x])^(n-1/2),x]) /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2-b^2] && IntegerQ[n-1/2] *)


(* ::Code:: *)
(* Int[u_*(a_+b_.*Cos[c_.+d_.*x_])^n_,x_Symbol] :=
  Sqrt[a+b*Cos[c+d*x]]/Cos[c/2+d*x/2]*Int[u*Cos[c/2+d*x/2]*(a+b*Cos[c+d*x])^(n-1/2),x] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a-b] && IntegerQ[n-1/2] *)


(* ::Code:: *)
(* Int[u_*(a_+b_.*Cos[c_.+d_.*x_])^n_,x_Symbol] :=
  Sqrt[a+b*Cos[c+d*x]]/Sin[c/2+d*x/2]*Int[u*Sin[c/2+d*x/2]*(a+b*Cos[c+d*x])^(n-1/2),x] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a+b] && IntegerQ[n-1/2] *)


(* ::Code:: *)
(* Int[u_*(a_+b_.*Cos[d_.+e_.*x_]+c_.*Sin[d_.+e_.*x_])^n_,x_Symbol] :=
  Sqrt[a+b*Cos[d+e*x]+c*Sin[d+e*x]]/(c*Cos[(d+e*x)/2]+(a-b)*Sin[(d+e*x)/2])*
    Dist[c,Int[u*Cos[(d+e*x)/2]*(a+b*Cos[d+e*x]+c*Sin[d+e*x])^(n-1/2),x]] + 
  Sqrt[a+b*Cos[d+e*x]+c*Sin[d+e*x]]/(c*Cos[(d+e*x)/2]+(a-b)*Sin[(d+e*x)/2])*
    Dist[a-b,Int[u*Sin[(d+e*x)/2]*(a+b*Cos[d+e*x]+c*Sin[d+e*x])^(n-1/2),x]] /;
FreeQ[{a,b,c,d,e},x] && ZeroQ[a^2-b^2-c^2] && IntegerQ[n-1/2] *)



(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Code:: *)
Int[Sqrt[a_.*Cos[c_.+d_.*x_]+b_.*Sin[c_.+d_.*x_]],x_Symbol] :=
  Dist[(a^2+b^2)^(1/4),Int[Sqrt[Cos[c+d*x-ArcTan[a,b]]],x]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2+b^2] && PositiveQ[Sqrt[a^2+b^2]]


(* ::Code:: *)
(* Int[Sqrt[a_.*Cos[c_.+d_.*x_]+b_.*Sin[c_.+d_.*x_]],x_Symbol] :=
  Sqrt[a*Cos[c+d*x]+b*Sin[c+d*x]]/Sqrt[(a*Cos[c+d*x]+b*Sin[c+d*x])/Sqrt[a^2+b^2]]*
    Int[Sqrt[Cos[c+d*x-ArcTan[a,b]]],x] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2+b^2] && Not[PositiveQ[Sqrt[a^2+b^2]]] *)


(* ::Code:: *)
Int[1/Sqrt[a_.*Cos[c_.+d_.*x_]+b_.*Sin[c_.+d_.*x_]],x_Symbol] :=
  Dist[1/(a^2+b^2)^(1/4),Int[1/Sqrt[Cos[c+d*x-ArcTan[a,b]]],x]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2+b^2] && PositiveQ[Sqrt[a^2+b^2]]


(* ::Code:: *)
(* Int[1/Sqrt[a_.*Cos[c_.+d_.*x_]+b_.*Sin[c_.+d_.*x_]],x_Symbol] :=
  Sqrt[(a*Cos[c+d*x]+b*Sin[c+d*x])/Sqrt[a^2+b^2]]/Sqrt[a*Cos[c+d*x]+b*Sin[c+d*x]]*
    Int[1/Sqrt[Cos[c+d*x-ArcTan[a,b]]],x] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2+b^2] && Not[PositiveQ[Sqrt[a^2+b^2]]] *)


(* ::Code:: *)
Int[(a_.*Cos[c_.+d_.*x_]+b_.*Sin[c_.+d_.*x_])^n_,x_Symbol] :=
  a*(a*Cos[c+d*x]+b*Sin[c+d*x])^n/(b*d*n) /;
FreeQ[{a,b,c,d,n},x] && ZeroQ[a^2+b^2]


(* ::Code:: *)
Int[1/(a_.*Cos[c_.+d_.*x_]+b_.*Sin[c_.+d_.*x_])^2,x_Symbol] :=
  Sin[c+d*x]/(a*d*(a*Cos[c+d*x]+b*Sin[c+d*x])) /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2+b^2]


(* ::Code:: *)
Int[(a_.*Cos[c_.+d_.*x_]+b_.*Sin[c_.+d_.*x_])^n_,x_Symbol] :=
  Dist[1/d,Subst[Int[Regularize[(a^2+b^2-x^2)^((n-1)/2),x],x],x,-b*Cos[c+d*x]+a*Sin[c+d*x]]] /;
FreeQ[{a,b},x] && NonzeroQ[a^2+b^2] && OddQ[n] && n>0


(* ::Code:: *)
Int[(a_.*Cos[c_.+d_.*x_]+b_.*Sin[c_.+d_.*x_])^n_,x_Symbol] :=
  -(b*Cos[c+d*x]-a*Sin[c+d*x])*(a*Cos[c+d*x]+b*Sin[c+d*x])^(n-1)/(d*n) +
  Dist[(n-1)*(a^2+b^2)/n,Int[(a*Cos[c+d*x]+b*Sin[c+d*x])^(n-2),x]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2+b^2] && RationalQ[n] && n>1 && Not[OddQ[n]]


(* ::Code:: *)
Int[(a_.*Cos[c_.+d_.*x_]+b_.*Sin[c_.+d_.*x_])^n_,x_Symbol] :=
  (b*Cos[c+d*x]-a*Sin[c+d*x])*(a*Cos[c+d*x]+b*Sin[c+d*x])^(n+1)/(d*(n+1)*(a^2+b^2)) +
  Dist[(n+2)/((n+1)*(a^2+b^2)),Int[(a*Cos[c+d*x]+b*Sin[c+d*x])^(n+2),x]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2+b^2] && RationalQ[n] && n<-1 && n!=-2


(* ::Code:: *)
(* Int[Cos[c_.+d_.*x_]^m_.*Sin[c_.+d_.*x_]^n_./(a_.*Cos[c_.+d_.*x_]+b_.*Sin[c_.+d_.*x_]),x_Symbol] :=
  Dist[b/(a^2+b^2),Int[Cos[c+d*x]^m*Sin[c+d*x]^(n-1),x]] +
  Dist[a/(a^2+b^2),Int[Cos[c+d*x]^(m-1)*Sin[c+d*x]^n,x]] -
  Dist[a*b/(a^2+b^2),Int[Cos[c+d*x]^(m-1)*Sin[c+d*x]^(n-1)/(a*Cos[c+d*x]+b*Sin[c+d*x]),x]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2+b^2] && IntegersQ[m,n] && m>0 && n>0 *)


(* ::Code:: *)
Int[Cos[c_.+d_.*x_]^m_.*Sin[c_.+d_.*x_]^n_.*(a_.*Cos[c_.+d_.*x_]+b_.*Sin[c_.+d_.*x_])^p_,x_Symbol] :=
  Dist[b/(a^2+b^2),Int[Cos[c+d*x]^m*Sin[c+d*x]^(n-1)*(a*Cos[c+d*x]+b*Sin[c+d*x])^(p+1),x]] +
  Dist[a/(a^2+b^2),Int[Cos[c+d*x]^(m-1)*Sin[c+d*x]^n*(a*Cos[c+d*x]+b*Sin[c+d*x])^(p+1),x]] -
  Dist[a*b/(a^2+b^2),Int[Cos[c+d*x]^(m-1)*Sin[c+d*x]^(n-1)*(a*Cos[c+d*x]+b*Sin[c+d*x])^p,x]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2+b^2] && IntegersQ[m,n,p] && m>0 && n>0 && p<0


(* ::Code:: *)
Int[u_.*Sin[c_.+d_.*x_]^n_./(a_.*Cos[c_.+d_.*x_]+b_.*Sin[c_.+d_.*x_]),x_Symbol] :=
  Dist[b/(a^2+b^2),Int[u*Sin[c+d*x]^(n-1),x]] -
  Dist[a/(a^2+b^2),Int[u*Sin[c+d*x]^(n-2)*Cos[c+d*x],x]] +
  Dist[a^2/(a^2+b^2),Int[u*Sin[c+d*x]^(n-2)/(a*Cos[c+d*x]+b*Sin[c+d*x]),x]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2+b^2] && IntegerQ[n] && n>0 &&
(n>1 || MatchQ[u,v_.*Tan[c+d*x]^m_. /; IntegerQ[m] && m>0])


(* ::Code:: *)
Int[u_.*Cos[c_.+d_.*x_]^n_./(a_.*Cos[c_.+d_.*x_]+b_.*Sin[c_.+d_.*x_]),x_Symbol] :=
  Dist[a/(a^2+b^2),Int[u*Cos[c+d*x]^(n-1),x]] -
  Dist[b/(a^2+b^2),Int[u*Cos[c+d*x]^(n-2)*Sin[c+d*x],x]] +
  Dist[b^2/(a^2+b^2),Int[u*Cos[c+d*x]^(n-2)/(a*Cos[c+d*x]+b*Sin[c+d*x]),x]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2+b^2] && IntegerQ[n] && n>0 &&
(n>1 || MatchQ[u,v_.*Cot[c+d*x]^m_. /; IntegerQ[m] && m>0])


(* ::Code:: *)
(* Int[u_.*Sec[c_.+d_.*x_]/(a_.*Cos[c_.+d_.*x_]+b_.*Sin[c_.+d_.*x_]),x_Symbol] :=
  Dist[1/b,Int[u*Tan[c+d*x],x]] + 
  Dist[1/b,Int[u*(b*Cos[c+d*x]-a*Sin[c+d*x])/(a*Cos[c+d*x]+b*Sin[c+d*x]),x]] /;
FreeQ[{a,b,c,d},x] *)


(* ::Code:: *)
(* Int[u_.*Csc[c_.+d_.*x_]/(a_.*Cos[c_.+d_.*x_]+b_.*Sin[c_.+d_.*x_]),x_Symbol] :=
  Dist[1/a,Int[u*Cot[c+d*x],x]] - 
  Dist[1/a,Int[u*(b*Cos[c+d*x]-a*Sin[c+d*x])/(a*Cos[c+d*x]+b*Sin[c+d*x]),x]] /;
FreeQ[{a,b,c,d},x] *)


(* ::Code:: *)
Int[1/(a_+b_.*Cos[d_.+e_.*x_]+c_.*Sin[d_.+e_.*x_]),x_Symbol] :=
  Log[a+c*Tan[(d+e*x)/2]]/(c*e) /;
FreeQ[{a,b,c,d,e},x] && ZeroQ[a-b]


(* ::Code:: *)
Int[1/(a_+b_.*Cos[d_.+e_.*x_]+c_.*Sin[d_.+e_.*x_]),x_Symbol] :=
  -Log[a+c*Cot[(d+e*x)/2]]/(c*e) /;
FreeQ[{a,b,c,d,e},x] && ZeroQ[a+b]


(* ::Code:: *)
Int[1/(a_+b_.*Cos[d_.+e_.*x_]+c_.*Sin[d_.+e_.*x_]),x_Symbol] :=
  (-c+a*Sin[d+e*x])/(c*e*(c*Cos[d+e*x]-b*Sin[d+e*x])) /;
FreeQ[{a,b,c,d,e},x] && ZeroQ[a^2-b^2-c^2]


(* ::Code:: *)
Int[1/(a_.+b_.*Cos[d_.+e_.*x_]+c_.*Sin[d_.+e_.*x_]),x_Symbol] :=
  2*ArcTan[(c+(a-b)*Tan[(d+e*x)/2])/Rt[a^2-b^2-c^2,2]]/(e*Rt[a^2-b^2-c^2,2]) /;
FreeQ[{a,b,c,d,e},x] && NonzeroQ[a^2-b^2] && PosQ[a^2-b^2-c^2]


(* ::Code:: *)
Int[1/(a_.+b_.*Cos[d_.+e_.*x_]+c_.*Sin[d_.+e_.*x_]),x_Symbol] :=
  -2*ArcTanh[(c+(a-b)*Tan[(d+e*x)/2])/Rt[-a^2+b^2+c^2,2]]/(e*Rt[-a^2+b^2+c^2,2]) /;
FreeQ[{a,b,c,d,e},x] && NonzeroQ[a^2-b^2] && NegQ[a^2-b^2-c^2]


(* ::Code:: *)
Int[Sqrt[a_+b_.*Cos[d_.+e_.*x_]+c_.*Sin[d_.+e_.*x_]],x_Symbol] :=
  2*(-c*Cos[d+e*x]+b*Sin[d+e*x])/(e*Sqrt[a+b*Cos[d+e*x]+c*Sin[d+e*x]]) /;
FreeQ[{a,b,c,d,e},x] && ZeroQ[a^2-b^2-c^2]


(* ::Code:: *)
Int[Sqrt[a_+b_.*Cos[d_.+e_.*x_]+c_.*Sin[d_.+e_.*x_]],x_Symbol] :=
  Int[Sqrt[a+Sqrt[b^2+c^2]*Cos[d+e*x-ArcTan[b,c]]],x] /;
FreeQ[{a,b,c,d,e},x] && NonzeroQ[a^2-b^2-c^2] && PositiveQ[a+Sqrt[b^2+c^2]]


(* ::Code:: *)
Int[Sqrt[a_.+b_.*Cos[d_.+e_.*x_]+c_.*Sin[d_.+e_.*x_]],x_Symbol] :=
  Sqrt[a+b*Cos[d+e*x]+c*Sin[d+e*x]]/Sqrt[(a+b*Cos[d+e*x]+c*Sin[d+e*x])/(a+Sqrt[b^2+c^2])]*
    Int[Sqrt[a/(a+Sqrt[b^2+c^2])+Sqrt[b^2+c^2]/(a+Sqrt[b^2+c^2])*Cos[d+e*x-ArcTan[b,c]]],x] /;
FreeQ[{a,b,c,d,e},x] && NonzeroQ[a^2-b^2-c^2] && Not[PositiveQ[a+Sqrt[b^2+c^2]]]


(* ::Code:: *)
Int[1/Sqrt[a_+b_.*Cos[d_.+e_.*x_]+c_.*Sin[d_.+e_.*x_]],x_Symbol] :=
  Int[1/Sqrt[a+Sqrt[b^2+c^2]*Cos[d+e*x-ArcTan[b,c]]],x] /;
FreeQ[{a,b,c,d,e},x] && PositiveQ[a+Sqrt[b^2+c^2]]


(* ::Code:: *)
Int[1/Sqrt[a_.+b_.*Cos[d_.+e_.*x_]+c_.*Sin[d_.+e_.*x_]],x_Symbol] :=
  Sqrt[(a+b*Cos[d+e*x]+c*Sin[d+e*x])/(a+Sqrt[b^2+c^2])]/Sqrt[a+b*Cos[d+e*x]+c*Sin[d+e*x]]*
    Int[1/Sqrt[a/(a+Sqrt[b^2+c^2])+Sqrt[b^2+c^2]/(a+Sqrt[b^2+c^2])*Cos[d+e*x-ArcTan[b,c]]],x] /;
FreeQ[{a,b,c,d,e},x] && NonzeroQ[a+Sqrt[b^2+c^2]] && Not[PositiveQ[a+Sqrt[b^2+c^2]]]


(* ::Code:: *)
Int[(a_+b_.*Cos[d_.+e_.*x_]+c_.*Sin[d_.+e_.*x_])^n_,x_Symbol] :=
  (-c*Cos[d+e*x]+b*Sin[d+e*x])*(a+b*Cos[d+e*x]+c*Sin[d+e*x])^(n-1)/(e*n) +
  Dist[a*(2*n-1)/n,Int[(a+b*Cos[d+e*x]+c*Sin[d+e*x])^(n-1),x]] /;
FreeQ[{a,b,c,d,e},x] && ZeroQ[a^2-b^2-c^2] && RationalQ[n] && n>1


(* ::Code:: *)
Int[(a_+b_.*Cos[d_.+e_.*x_]+c_.*Sin[d_.+e_.*x_])^n_,x_Symbol] :=
  (-c*Cos[d+e*x]+b*Sin[d+e*x])*(a+b*Cos[d+e*x]+c*Sin[d+e*x])^(n-1)/(e*n) +
  Dist[1/n,Int[(n*a^2+(n-1)*(b^2+c^2)+a*b*(2*n-1)*Cos[d+e*x]+a*c*(2*n-1)*Sin[d+e*x])*
    (a+b*Cos[d+e*x]+c*Sin[d+e*x])^(n-2),x]] /;
FreeQ[{a,b,c,d,e},x] && NonzeroQ[a^2-b^2-c^2] && FractionQ[n] && n>1


(* ::Code:: *)
Int[(a_+b_.*Cos[d_.+e_.*x_]+c_.*Sin[d_.+e_.*x_])^n_,x_Symbol] :=
  (c*Cos[d+e*x]-b*Sin[d+e*x])*(a+b*Cos[d+e*x]+c*Sin[d+e*x])^n/(a*e*(2*n+1)) +
  Dist[(n+1)/(a*(2*n+1)),Int[(a+b*Cos[d+e*x]+c*Sin[d+e*x])^(n+1),x]] /;
FreeQ[{a,b,c,d,e},x] && ZeroQ[a^2-b^2-c^2] && RationalQ[n] && n<-1


(* ::Code:: *)
Int[1/(a_+b_.*Cos[d_.+e_.*x_]+c_.*Sin[d_.+e_.*x_])^2,x_Symbol] :=
  (c*Cos[d+e*x]-b*Sin[d+e*x])/(e*(a^2-b^2-c^2)*(a+b*Cos[d+e*x]+c*Sin[d+e*x])) +
  Dist[a/(a^2-b^2-c^2),Int[1/(a+b*Cos[d+e*x]+c*Sin[d+e*x]),x]] /;
FreeQ[{a,b,c,d,e},x] && NonzeroQ[a^2-b^2-c^2]


(* ::Code:: *)
Int[1/(a_+b_.*Cos[d_.+e_.*x_]+c_.*Sin[d_.+e_.*x_])^(3/2),x_Symbol] :=
  2*(c*Cos[d+e*x]-b*Sin[d+e*x])/(e*(a^2-b^2-c^2)*Sqrt[a+b*Cos[d+e*x]+c*Sin[d+e*x]]) +
  Dist[1/(a^2-b^2-c^2),Int[Sqrt[a+b*Cos[d+e*x]+c*Sin[d+e*x]],x]] /;
FreeQ[{a,b,c,d,e},x] && NonzeroQ[a^2-b^2-c^2]


(* ::Code:: *)
Int[(a_+b_.*Cos[d_.+e_.*x_]+c_.*Sin[d_.+e_.*x_])^n_,x_Symbol] :=
  (-c*Cos[d+e*x]+b*Sin[d+e*x])*(a+b*Cos[d+e*x]+c*Sin[d+e*x])^(n+1)/(e*(n+1)*(a^2-b^2-c^2)) +
  Dist[1/((n+1)*(a^2-b^2-c^2)),
    Int[((n+1)*a-(n+2)*b*Cos[d+e*x]-(n+2)*c*Sin[d+e*x])*(a+b*Cos[d+e*x]+c*Sin[d+e*x])^(n+1),x]] /;
FreeQ[{a,b,c,d,e},x] && NonzeroQ[a^2-b^2-c^2] && RationalQ[n] && n<-1 && n!=-2 && n!=-3/2


(* ::Code:: *)
Int[(A_.+B_.*Cos[d_.+e_.*x_]+C_.*Sin[d_.+e_.*x_])/(a_+b_.*Cos[d_.+e_.*x_]+c_.*Sin[d_.+e_.*x_]),x_Symbol] :=
  (2*a*A-b*B-c*C)*x/(2*a^2) - (b*B+c*C)*(b*Cos[d+e*x]-c*Sin[d+e*x])/(2*a*b*c*e) + 
  (a^2*(b*B-c*C)-2*a*A*b^2+b^2*(b*B+c*C))*Log[a+b*Cos[d+e*x]+c*Sin[d+e*x]]/(2*a^2*b*c*e) /;
FreeQ[{a,b,c,d,e,A,B,C},x] && ZeroQ[b^2+c^2]


(* ::Code:: *)
Int[(A_.+C_.*Sin[d_.+e_.*x_])/(a_+b_.*Cos[d_.+e_.*x_]+c_.*Sin[d_.+e_.*x_]),x_Symbol] :=
  (2*a*A-c*C)*x/(2*a^2) - C*Cos[d+e*x]/(2*a*e) + c*C*Sin[d+e*x]/(2*a*b*e) + 
  (-a^2*C+2*a*c*A+b^2*C)*Log[a+b*Cos[d+e*x]+c*Sin[d+e*x]]/(2*a^2*b*e) /;
FreeQ[{a,b,c,d,e,A,C},x] && ZeroQ[b^2+c^2]


(* ::Code:: *)
Int[(A_.+B_.*Cos[d_.+e_.*x_])/(a_+b_.*Cos[d_.+e_.*x_]+c_.*Sin[d_.+e_.*x_]),x_Symbol] :=
  (2*a*A-b*B)*x/(2*a^2) - b*B*Cos[d+e*x]/(2*a*c*e) + B*Sin[d+e*x]/(2*a*e) + 
  (a^2*B-2*a*b*A+b^2*B)*Log[a+b*Cos[d+e*x]+c*Sin[d+e*x]]/(2*a^2*c*e) /;
FreeQ[{a,b,c,d,e,A,B},x] && ZeroQ[b^2+c^2]


(* ::Code:: *)
Int[(A_.+B_.*Cos[d_.+e_.*x_]+C_.*Sin[d_.+e_.*x_])/(a_.+b_.*Cos[d_.+e_.*x_]+c_.*Sin[d_.+e_.*x_]),x_Symbol] :=
  (b*B+c*C)*x/(b^2+c^2) + (c*B-b*C)*Log[a+b*Cos[d+e*x]+c*Sin[d+e*x]]/(e*(b^2+c^2)) /;
FreeQ[{a,b,c,d,e,A,B,C},x] && NonzeroQ[b^2+c^2] && ZeroQ[A*(b^2+c^2)-a*(b*B+c*C)]


(* ::Code:: *)
Int[(A_.+C_.*Sin[d_.+e_.*x_])/(a_.+b_.*Cos[d_.+e_.*x_]+c_.*Sin[d_.+e_.*x_]),x_Symbol] :=
  c*C*x/(b^2+c^2) - b*C*Log[a+b*Cos[d+e*x]+c*Sin[d+e*x]]/(e*(b^2+c^2)) /;
FreeQ[{a,b,c,d,e,A,C},x] && NonzeroQ[b^2+c^2] && ZeroQ[A*(b^2+c^2)-a*c*C]


(* ::Code:: *)
Int[(A_.+B_.*Cos[d_.+e_.*x_])/(a_.+b_.*Cos[d_.+e_.*x_]+c_.*Sin[d_.+e_.*x_]),x_Symbol] :=
  b*B*x/(b^2+c^2) + c*B*Log[a+b*Cos[d+e*x]+c*Sin[d+e*x]]/(e*(b^2+c^2)) /;
FreeQ[{a,b,c,d,e,A,B},x] && NonzeroQ[b^2+c^2] && ZeroQ[A*(b^2+c^2)-a*b*B]


(* ::Code:: *)
Int[(A_.+B_.*Cos[d_.+e_.*x_]+C_.*Sin[d_.+e_.*x_])/(a_.+b_.*Cos[d_.+e_.*x_]+c_.*Sin[d_.+e_.*x_]),x_Symbol] :=
  (b*B+c*C)*x/(b^2+c^2) + (c*B-b*C)*Log[a+b*Cos[d+e*x]+c*Sin[d+e*x]]/(e*(b^2+c^2)) +
  Dist[(A*(b^2+c^2)-a*(b*B+c*C))/(b^2+c^2),Int[1/(a+b*Cos[d+e*x]+c*Sin[d+e*x]),x]] /;
FreeQ[{a,b,c,d,e,A,B,C},x] && NonzeroQ[b^2+c^2] && NonzeroQ[A*(b^2+c^2)-a*(b*B+c*C)]


(* ::Code:: *)
Int[(A_.+C_.*Sin[d_.+e_.*x_])/(a_.+b_.*Cos[d_.+e_.*x_]+c_.*Sin[d_.+e_.*x_]),x_Symbol] :=
  c*C*(d+e*x)/(e*(b^2+c^2)) - b*C*Log[a+b*Cos[d+e*x]+c*Sin[d+e*x]]/(e*(b^2+c^2)) +
  Dist[(A*(b^2+c^2)-a*c*C)/(b^2+c^2),Int[1/(a+b*Cos[d+e*x]+c*Sin[d+e*x]),x]] /;
FreeQ[{a,b,c,d,e,A,C},x] && NonzeroQ[b^2+c^2] && NonzeroQ[A*(b^2+c^2)-a*c*C]


(* ::Code:: *)
Int[(A_.+B_.*Cos[d_.+e_.*x_])/(a_.+b_.*Cos[d_.+e_.*x_]+c_.*Sin[d_.+e_.*x_]),x_Symbol] :=
  b*B*(d+e*x)/(e*(b^2+c^2)) +
  c*B*Log[a+b*Cos[d+e*x]+c*Sin[d+e*x]]/(e*(b^2+c^2)) +
  Dist[(A*(b^2+c^2)-a*b*B)/(b^2+c^2),Int[1/(a+b*Cos[d+e*x]+c*Sin[d+e*x]),x]] /;
FreeQ[{a,b,c,d,e,A,B},x] && NonzeroQ[b^2+c^2] && NonzeroQ[A*(b^2+c^2)-a*b*B]


(* ::Code:: *)
Int[(A_.+B_.*Cos[d_.+e_.*x_]+C_.*Sin[d_.+e_.*x_])/(a_.+b_.*Cos[d_.+e_.*x_]+c_.*Sin[d_.+e_.*x_])^2,x_Symbol] :=
  (c*B-b*C-(a*C-c*A)*Cos[d+e*x]+(a*B-b*A)*Sin[d+e*x])/
    (e*(a^2-b^2-c^2)*(a+b*Cos[d+e*x]+c*Sin[d+e*x])) /;
FreeQ[{a,b,c,d,e,A,B,C},x] && NonzeroQ[a^2-b^2-c^2] && ZeroQ[a*A-b*B-c*C]


(* ::Code:: *)
Int[(A_.+C_.*Sin[d_.+e_.*x_])/(a_.+b_.*Cos[d_.+e_.*x_]+c_.*Sin[d_.+e_.*x_])^2,x_Symbol] :=
  -(b*C+(a*C-c*A)*Cos[d+e*x]+b*A*Sin[d+e*x])/(e*(a^2-b^2-c^2)*(a+b*Cos[d+e*x]+c*Sin[d+e*x])) /;
FreeQ[{a,b,c,d,e,A,C},x] && NonzeroQ[a^2-b^2-c^2] && ZeroQ[a*A-c*C]


(* ::Code:: *)
Int[(A_.+B_.*Cos[d_.+e_.*x_])/(a_.+b_.*Cos[d_.+e_.*x_]+c_.*Sin[d_.+e_.*x_])^2,x_Symbol] :=
  (c*B+c*A*Cos[d+e*x]+(a*B-b*A)*Sin[d+e*x])/(e*(a^2-b^2-c^2)*(a+b*Cos[d+e*x]+c*Sin[d+e*x])) /;
FreeQ[{a,b,c,d,e,A,B},x] && NonzeroQ[a^2-b^2-c^2] && ZeroQ[a*A-b*B]


(* ::Code:: *)
Int[(A_.+B_.*Cos[d_.+e_.*x_]+C_.*Sin[d_.+e_.*x_])/(a_.+b_.*Cos[d_.+e_.*x_]+c_.*Sin[d_.+e_.*x_])^2,x_Symbol] :=
  (c*B-b*C-(a*C-c*A)*Cos[d+e*x]+(a*B-b*A)*Sin[d+e*x])/
    (e*(a^2-b^2-c^2)*(a+b*Cos[d+e*x]+c*Sin[d+e*x])) +
  Dist[(a*A-b*B-c*C)/(a^2-b^2-c^2),Int[1/(a+b*Cos[d+e*x]+c*Sin[d+e*x]),x]] /;
FreeQ[{a,b,c,d,e,A,B,C},x] && NonzeroQ[a^2-b^2-c^2] && NonzeroQ[a*A-b*B-c*C]


(* ::Code:: *)
Int[(A_.+C_.*Sin[d_.+e_.*x_])/(a_.+b_.*Cos[d_.+e_.*x_]+c_.*Sin[d_.+e_.*x_])^2,x_Symbol] :=
  -(b*C+(a*C-c*A)*Cos[d+e*x]+b*A*Sin[d+e*x])/(e*(a^2-b^2-c^2)*(a+b*Cos[d+e*x]+c*Sin[d+e*x])) +
  Dist[(a*A-c*C)/(a^2-b^2-c^2),Int[1/(a+b*Cos[d+e*x]+c*Sin[d+e*x]),x]] /;
FreeQ[{a,b,c,d,e,A,C},x] && NonzeroQ[a^2-b^2-c^2] && NonzeroQ[a*A-c*C]


(* ::Code:: *)
Int[(A_.+B_.*Cos[d_.+e_.*x_])/(a_.+b_.*Cos[d_.+e_.*x_]+c_.*Sin[d_.+e_.*x_])^2,x_Symbol] :=
  (c*B+c*A*Cos[d+e*x]+(a*B-b*A)*Sin[d+e*x])/(e*(a^2-b^2-c^2)*(a+b*Cos[d+e*x]+c*Sin[d+e*x])) +
  Dist[(a*A-b*B)/(a^2-b^2-c^2),Int[1/(a+b*Cos[d+e*x]+c*Sin[d+e*x]),x]] /;
FreeQ[{a,b,c,d,e,A,B},x] && NonzeroQ[a^2-b^2-c^2] && NonzeroQ[a*A-b*B]


(* ::Code:: *)
Int[(A_.+B_.*Cos[d_.+e_.*x_]+C_.*Sin[d_.+e_.*x_])*(a_.+b_.*Cos[d_.+e_.*x_]+c_.*Sin[d_.+e_.*x_])^n_,x_Symbol] :=
  -(c*B-b*C-(a*C-c*A)*Cos[d+e*x]+(a*B-b*A)*Sin[d+e*x])*(a+b*Cos[d+e*x]+c*Sin[d+e*x])^(n+1)/
    (e*(n+1)*(a^2-b^2-c^2)) +
  Dist[1/((n+1)*(a^2-b^2-c^2)),
    Int[((n+1)*(a*A-b*B-c*C)+(n+2)*(a*B-b*A)*Cos[d+e*x]+(n+2)*(a*C-c*A)*Sin[d+e*x])*
      (a+b*Cos[d+e*x]+c*Sin[d+e*x])^(n+1),x]] /;
FreeQ[{a,b,c,d,e,A,B,C},x] && NonzeroQ[a^2-b^2-c^2] && RationalQ[n] && n<-1 && n!=-2


(* ::Code:: *)
Int[(A_.+C_.*Sin[d_.+e_.*x_])*(a_.+b_.*Cos[d_.+e_.*x_]+c_.*Sin[d_.+e_.*x_])^n_,x_Symbol] :=
  (b*C+(a*C-c*A)*Cos[d+e*x]+b*A*Sin[d+e*x])*(a+b*Cos[d+e*x]+c*Sin[d+e*x])^(n+1)/
    (e*(n+1)*(a^2-b^2-c^2)) +
  Dist[1/((n+1)*(a^2-b^2-c^2)),
    Int[((n+1)*(a*A-c*C)-(n+2)*b*A*Cos[d+e*x]+(n+2)*(a*C-c*A)*Sin[d+e*x])*
      (a+b*Cos[d+e*x]+c*Sin[d+e*x])^(n+1),x]] /;
FreeQ[{a,b,c,d,e,A,C},x] && NonzeroQ[a^2-b^2-c^2] && RationalQ[n] && n<-1 && n!=-2


(* ::Code:: *)
Int[(A_.+B_.*Cos[d_.+e_.*x_])*(a_.+b_.*Cos[d_.+e_.*x_]+c_.*Sin[d_.+e_.*x_])^n_,x_Symbol] :=
  -(c*B+c*A*Cos[d+e*x]+(a*B-b*A)*Sin[d+e*x])*(a+b*Cos[d+e*x]+c*Sin[d+e*x])^(n+1)/
    (e*(n+1)*(a^2-b^2-c^2)) +
  Dist[1/((n+1)*(a^2-b^2-c^2)),
    Int[((n+1)*(a*A-b*B)+(n+2)*(a*B-b*A)*Cos[d+e*x]-(n+2)*c*A*Sin[d+e*x])*
      (a+b*Cos[d+e*x]+c*Sin[d+e*x])^(n+1),x]] /;
FreeQ[{a,b,c,d,e,A,B},x] && NonzeroQ[a^2-b^2-c^2] && RationalQ[n] && n<-1 && n!=-2


(* ::Code:: *)
Int[(A_.+B_.*Cos[d_.+e_.*x_]+C_.*Sin[d_.+e_.*x_])*(a_+b_.*Cos[d_.+e_.*x_]+c_.*Sin[d_.+e_.*x_])^n_,x_Symbol] :=
  Dist[B/b,Int[(a+b*Cos[d+e*x]+c*Sin[d+e*x])^(n+1),x]] +
  Dist[(b*A-a*B)/b,Int[(a+b*Cos[d+e*x]+c*Sin[d+e*x])^n,x]] /;
FreeQ[{a,b,c,d,e,A,B,C},x] && ZeroQ[b*C-c*B] && NonzeroQ[b*A-a*B] && RationalQ[n] && (n==-1/2 || ZeroQ[a^2-b^2-c^2])


(* ::Code:: *)
Int[(A_.+B_.*Cos[d_.+e_.*x_]+C_.*Sin[d_.+e_.*x_])*(a_+b_.*Cos[d_.+e_.*x_]+c_.*Sin[d_.+e_.*x_])^n_,x_Symbol] :=
  (B*c-b*C-a*C*Cos[d+e*x]+a*B*Sin[d+e*x])*(a+b*Cos[d+e*x]+c*Sin[d+e*x])^n/(a*e*(n+1)) + 
  Dist[1/(a*(n+1)),
    Int[(a*(b*B+c*C)*n + a^2*A*(n+1) + 
        (a^2*B*n + c*(b*C-c*B)*n + a*b*A*(n+1))*Cos[d+e*x] + 
        (a^2*C*n - b*(b*C-c*B)*n + a*c*A*(n+1))*Sin[d+e*x])*
      (a+b*Cos[d+e*x]+c*Sin[d+e*x])^(n-1),x]] /;
FreeQ[{a,b,c,d,e,A,B,C},x] && NonzeroQ[a^2-b^2-c^2] && RationalQ[n] && n>0


(* ::Code:: *)
Int[(A_.+C_.*Sin[d_.+e_.*x_])*(a_+b_.*Cos[d_.+e_.*x_]+c_.*Sin[d_.+e_.*x_])^n_,x_Symbol] :=
  -(b*C+a*C*Cos[d+e*x])*(a+b*Cos[d+e*x]+c*Sin[d+e*x])^n/(a*e*(n+1)) + 
  Dist[1/(a*(n+1)),
    Int[(a*c*C*n+a^2*A*(n+1)+(c*b*C*n+a*b*A*(n+1))*Cos[d+e*x]+(a^2*C*n-b^2*C*n+a*c*A*(n+1))*Sin[d+e*x])*
      (a+b*Cos[d+e*x]+c*Sin[d+e*x])^(n-1),x]] /;
FreeQ[{a,b,c,d,e,A,C},x] && NonzeroQ[a^2-b^2-c^2] && RationalQ[n] && n>0


(* ::Code:: *)
Int[(A_.+B_.*Cos[d_.+e_.*x_])*(a_+b_.*Cos[d_.+e_.*x_]+c_.*Sin[d_.+e_.*x_])^n_,x_Symbol] :=
  (B*c+a*B*Sin[d+e*x])*(a+b*Cos[d+e*x]+c*Sin[d+e*x])^n/(a*e*(n+1)) + 
  Dist[1/(a*(n+1)),
    Int[(a*b*B*n+a^2*A*(n+1)+(a^2*B*n-c^2*B*n+a*b*A*(n+1))*Cos[d+e*x]+(b*c*B*n+a*c*A*(n+1))*Sin[d+e*x])*
      (a+b*Cos[d+e*x]+c*Sin[d+e*x])^(n-1),x]] /;
FreeQ[{a,b,c,d,e,A,B},x] && NonzeroQ[a^2-b^2-c^2] && RationalQ[n] && n>0



(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Code:: *)
Int[x_*(A_+B_.*Sin[c_.+d_.*x_])/(a_+b_.*Sin[c_.+d_.*x_])^2,x_Symbol] :=
  -B*x*Cos[c+d*x]/(a*d*(a+b*Sin[c+d*x])) +
  Dist[B/(a*d),Int[Cos[c+d*x]/(a+b*Sin[c+d*x]),x]] /;
FreeQ[{a,b,c,d,A,B},x] && ZeroQ[a*A-b*B]


(* ::Code:: *)
Int[x_*(A_+B_.*Cos[c_.+d_.*x_])/(a_+b_.*Cos[c_.+d_.*x_])^2,x_Symbol] :=
  B*x*Sin[c+d*x]/(a*d*(a+b*Cos[c+d*x])) -
  Dist[B/(a*d),Int[Sin[c+d*x]/(a+b*Cos[c+d*x]),x]] /;
FreeQ[{a,b,c,d,A,B},x] && ZeroQ[a*A-b*B]


(* ::Code:: *)
Int[Sin[a_.+b_.*x_]*Tan[a_.+b_.*x_],x_Symbol] :=
  -Sin[a+b*x]/b + Int[Sec[a+b*x],x] /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[Cos[a_.+b_.*x_]*Cot[a_.+b_.*x_],x_Symbol] :=
  Cos[a+b*x]/b + Int[Csc[a+b*x],x] /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[Sin[a_.+b_.*x_]^m_*Tan[a_.+b_.*x_]^n_,x_Symbol] :=
  -Sin[a+b*x]^m*Tan[a+b*x]^(n-1)/(b*m) /;
FreeQ[{a,b,m,n},x] && ZeroQ[m+n-1]


(* ::Code:: *)
Int[Cos[a_.+b_.*x_]^m_*Cot[a_.+b_.*x_]^n_,x_Symbol] :=
  Cos[a+b*x]^m*Cot[a+b*x]^(n-1)/(b*m) /;
FreeQ[{a,b,m,n},x] && ZeroQ[m+n-1]


(* ::Code:: *)
Int[Sin[a_.+b_.*x_]^m_.*Tan[a_.+b_.*x_]^n_.,x_Symbol] :=
  Dist[-1/b,Subst[Int[Regularize[(1-x^2)^((m+n-1)/2)/x^n,x],x],x,Cos[a+b*x]]] /;
FreeQ[{a,b},x] && IntegersQ[m,n,(m+n-1)/2]


(* ::Code:: *)
Int[Cos[a_.+b_.*x_]^m_.*Cot[a_.+b_.*x_]^n_.,x_Symbol] :=
  Dist[1/b,Subst[Int[Regularize[(1-x^2)^((m+n-1)/2)/x^n,x],x],x,Sin[a+b*x]]] /;
FreeQ[{a,b},x] && IntegersQ[m,n,(m+n-1)/2]


(* ::Code:: *)
Int[Sin[a_.+b_.*x_]^m_*Tan[a_.+b_.*x_]^n_,x_Symbol] :=
  Sin[a+b*x]^m*Tan[a+b*x]^(n+1)/(b*m) -
  Dist[(n+1)/m,Int[Sin[a+b*x]^(m-2)*Tan[a+b*x]^(n+2),x]] /;
FreeQ[{a,b},x] && RationalQ[{m,n}] && m>1 && n<-1


(* ::Code:: *)
Int[Cos[a_.+b_.*x_]^m_*Cot[a_.+b_.*x_]^n_,x_Symbol] :=
  -Cos[a+b*x]^m*Cot[a+b*x]^(n+1)/(b*m) -
  Dist[(n+1)/m,Int[Cos[a+b*x]^(m-2)*Cot[a+b*x]^(n+2),x]] /;
FreeQ[{a,b},x] && RationalQ[{m,n}] && m>1 && n<-1


(* ::Code:: *)
Int[Sin[a_.+b_.*x_]^m_*Tan[a_.+b_.*x_]^n_,x_Symbol] :=
  Sin[a+b*x]^(m+2)*Tan[a+b*x]^(n-1)/(b*(n-1)) -
  Dist[(m+2)/(n-1),Int[Sin[a+b*x]^(m+2)*Tan[a+b*x]^(n-2),x]] /;
FreeQ[{a,b},x] && RationalQ[{m,n}] && m<-1 && n>1


(* ::Code:: *)
Int[Cos[a_.+b_.*x_]^m_*Cot[a_.+b_.*x_]^n_,x_Symbol] :=
  -Cos[a+b*x]^(m+2)*Cot[a+b*x]^(n-1)/(b*(n-1)) -
  Dist[(m+2)/(n-1),Int[Cos[a+b*x]^(m+2)*Cot[a+b*x]^(n-2),x]] /;
FreeQ[{a,b},x] && RationalQ[{m,n}] && m<-1 && n>1


(* ::Code:: *)
Int[Sin[a_.+b_.*x_]^m_*Tan[a_.+b_.*x_]^n_.,x_Symbol]:=
  -Sin[a+b*x]^m*Tan[a+b*x]^(n-1)/(b*m) +
  Dist[(m+n-1)/m,Int[Sin[a+b*x]^(m-2)*Tan[a+b*x]^n,x]] /;
FreeQ[{a,b,n},x] && RationalQ[m] && m>1


(* ::Code:: *)
Int[Cos[a_.+b_.*x_]^m_*Cot[a_.+b_.*x_]^n_.,x_Symbol] :=
  Cos[a+b*x]^m*Cot[a+b*x]^(n-1)/(b*m) +
  Dist[(m+n-1)/m,Int[Cos[a+b*x]^(m-2)*Cot[a+b*x]^n,x]] /;
FreeQ[{a,b,n},x] && RationalQ[m] && m>1


(* ::Code:: *)
Int[Sin[a_.+b_.*x_]^m_.*Tan[a_.+b_.*x_]^n_,x_Symbol] :=
  Sin[a+b*x]^m*Tan[a+b*x]^(n-1)/(b*(n-1)) -
  Dist[(m+n-1)/(n-1),Int[Sin[a+b*x]^m*Tan[a+b*x]^(n-2),x]] /;
FreeQ[{a,b,m},x] && RationalQ[n] && n>1


(* ::Code:: *)
Int[Cos[a_.+b_.*x_]^m_.*Cot[a_.+b_.*x_]^n_,x_Symbol] :=
  -Cos[a+b*x]^m*Cot[a+b*x]^(n-1)/(b*(n-1)) -
  Dist[(m+n-1)/(n-1),Int[Cos[a+b*x]^m*Cot[a+b*x]^(n-2),x]] /;
FreeQ[{a,b,m},x] && RationalQ[n] && n>1


(* ::Code:: *)
Int[Sin[a_.+b_.*x_]^m_*Tan[a_.+b_.*x_]^n_.,x_Symbol]:=
  Sin[a+b*x]^(m+2)*Tan[a+b*x]^(n-1)/(b*(m+n+1)) +
  Dist[(m+2)/(m+n+1),Int[Sin[a+b*x]^(m+2)*Tan[a+b*x]^n,x]] /;
FreeQ[{a,b,n},x] && RationalQ[m] && m<-1 && NonzeroQ[m+n+1]


(* ::Code:: *)
Int[Cos[a_.+b_.*x_]^m_*Cot[a_.+b_.*x_]^n_.,x_Symbol] :=
  -Cos[a+b*x]^(m+2)*Cot[a+b*x]^(n-1)/(b*(m+n+1)) +
  Dist[(m+2)/(m+n+1),Int[Cos[a+b*x]^(m+2)*Cot[a+b*x]^n,x]] /;
FreeQ[{a,b,n},x] && RationalQ[m] && m<-1 && NonzeroQ[m+n+1]


(* ::Code:: *)
Int[Sin[a_.+b_.*x_]^m_.*Tan[a_.+b_.*x_]^n_,x_Symbol]:=
  Sin[a+b*x]^m*Tan[a+b*x]^(n+1)/(b*(m+n+1)) -
  Dist[(n+1)/(m+n+1),Int[Sin[a+b*x]^m*Tan[a+b*x]^(n+2),x]] /;
FreeQ[{a,b,m},x] && RationalQ[n] && n<-1 && NonzeroQ[m+n+1]


(* ::Code:: *)
Int[Cos[a_.+b_.*x_]^m_.*Cot[a_.+b_.*x_]^n_,x_Symbol] :=
  -Cos[a+b*x]^m*Cot[a+b*x]^(n+1)/(b*(m+n+1)) -
  Dist[(n+1)/(m+n+1),Int[Cos[a+b*x]^m*Cot[a+b*x]^(n+2),x]] /;
FreeQ[{a,b,m},x] && RationalQ[n] && n<-1 && NonzeroQ[m+n+1]


(* ::Code:: *)
Int[Sin[a_.+b_.*x_]/Sqrt[Sin[c_.+d_.*x_]],x_Symbol] :=
  -ArcSin[Cos[a+b*x]-Sin[a+b*x]]/(2*b) - Log[Cos[a+b*x]+Sin[a+b*x]+Sqrt[Sin[c+d*x]]]/(2*b) /;
FreeQ[{a,b,c,d},x] && ZeroQ[c-2*a] && ZeroQ[d-2*b]


(* ::Code:: *)
Int[Cos[a_.+b_.*x_]/Sqrt[Sin[c_.+d_.*x_]],x_Symbol] :=
  -ArcSin[Cos[a+b*x]-Sin[a+b*x]]/(2*b) + Log[Cos[a+b*x]+Sin[a+b*x]+Sqrt[Sin[c+d*x]]]/(2*b) /;
FreeQ[{a,b,c,d},x] && ZeroQ[c-2*a] && ZeroQ[d-2*b]


(* ::Code:: *)
Int[Sin[a_.+b_.*x_]/Sin[c_.+d_.*x_]^(3/2),x_Symbol] :=
  Sin[a+b*x]/(b*Sqrt[Sin[c+d*x]]) /;
FreeQ[{a,b,c,d},x] && ZeroQ[c-2*a] && ZeroQ[d-2*b]


(* ::Code:: *)
Int[Cos[a_.+b_.*x_]/Sin[c_.+d_.*x_]^(3/2),x_Symbol] :=
  -Cos[a+b*x]/(b*Sqrt[Sin[c+d*x]]) /;
FreeQ[{a,b,c,d},x] && ZeroQ[c-2*a] && ZeroQ[d-2*b]


(* ::Code:: *)
Int[Sin[a_.+b_.*x_]*Sin[c_.+d_.*x_]^n_.,x_Symbol] :=
  -Cos[a+b*x]*Sin[c+d*x]^n/(b*(2*n+1)) + 
  Dist[2*n/(2*n+1),Int[Cos[a+b*x]*Sin[c+d*x]^(n-1),x]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[c-2*a] && ZeroQ[d-2*b] && FractionQ[n] && n>0


(* ::Code:: *)
Int[Cos[a_.+b_.*x_]*Sin[c_.+d_.*x_]^n_.,x_Symbol] :=
  Sin[a+b*x]*Sin[c+d*x]^n/(b*(2*n+1)) + 
  Dist[2*n/(2*n+1),Int[Sin[a+b*x]*Sin[c+d*x]^(n-1),x]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[c-2*a] && ZeroQ[d-2*b] && FractionQ[n] && n>0


(* ::Code:: *)
Int[Sin[a_.+b_.*x_]*Sin[c_.+d_.*x_]^n_,x_Symbol] :=
  -Sin[a+b*x]*Sin[c+d*x]^(n+1)/(2*b*(n+1)) + 
  Dist[(2*n+3)/(2*(n+1)),Int[Cos[a+b*x]*Sin[c+d*x]^(n+1),x]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[c-2*a] && ZeroQ[d-2*b] && FractionQ[n] && n<-1 && n!=-3/2


(* ::Code:: *)
Int[Cos[a_.+b_.*x_]*Sin[c_.+d_.*x_]^n_,x_Symbol] :=
  Cos[a+b*x]*Sin[c+d*x]^(n+1)/(2*b*(n+1)) + 
  Dist[(2*n+3)/(2*(n+1)),Int[Sin[a+b*x]*Sin[c+d*x]^(n+1),x]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[c-2*a] && ZeroQ[d-2*b] && FractionQ[n] && n<-1 && n!=-3/2


(* ::Code:: *)
Int[u_.*Sin[v_]*Cos[w_],x_Symbol] :=
  Dist[1/2,Int[u*Regularize[Sin[v+w],x],x]] + 
  Dist[1/2,Int[u*Regularize[Sin[v-w],x],x]] /;
(PolynomialQ[v,x] && PolynomialQ[w,x] || IndependentQ[Cancel[v/w],x]) && NonzeroQ[v+w] && NonzeroQ[v-w]


(* ::Code:: *)
Int[u_.*Sin[v_]*Sin[w_],x_Symbol] :=
  Dist[1/2,Int[u*Regularize[Cos[v-w],x],x]] - 
  Dist[1/2,Int[u*Regularize[Cos[v+w],x],x]] /;
(PolynomialQ[v,x] && PolynomialQ[w,x] || IndependentQ[Cancel[v/w],x]) && NonzeroQ[v+w] && NonzeroQ[v-w]


(* ::Code:: *)
Int[u_.*Cos[v_]*Cos[w_],x_Symbol] :=
  Dist[1/2,Int[u*Regularize[Cos[v-w],x],x]] + 
  Dist[1/2,Int[u*Regularize[Cos[v+w],x],x]] /;
(PolynomialQ[v,x] && PolynomialQ[w,x] || IndependentQ[Cancel[v/w],x]) && NonzeroQ[v+w] && NonzeroQ[v-w]


(* ::Code:: *)
Int[u_.*Sin[v_]*Tan[w_]^n_.,x_Symbol] :=
  -Int[u*Cos[v]*Tan[w]^(n-1),x] + Cos[v-w]*Int[u*Sec[w]*Tan[w]^(n-1),x] /;
RationalQ[n] && n>0 && FreeQ[v-w,x] && NonzeroQ[v-w]


(* ::Code:: *)
Int[u_.*Cos[v_]*Cot[w_]^n_.,x_Symbol] :=
  -Int[u*Sin[v]*Cot[w]^(n-1),x] + Cos[v-w]*Int[u*Csc[w]*Cot[w]^(n-1),x] /;
RationalQ[n] && n>0 && FreeQ[v-w,x] && NonzeroQ[v-w]


(* ::Code:: *)
Int[u_.*Sin[v_]*Cot[w_]^n_.,x_Symbol] :=
  Int[u*Cos[v]*Cot[w]^(n-1),x] + Sin[v-w]*Int[u*Csc[w]*Cot[w]^(n-1),x] /;
RationalQ[n] && n>0 && FreeQ[v-w,x] && NonzeroQ[v-w]


(* ::Code:: *)
Int[u_.*Cos[v_]*Tan[w_]^n_.,x_Symbol] :=
  Int[u*Sin[v]*Tan[w]^(n-1),x] - Sin[v-w]*Int[u*Sec[w]*Tan[w]^(n-1),x] /;
RationalQ[n] && n>0 && FreeQ[v-w,x] && NonzeroQ[v-w]


(* ::Code:: *)
Int[u_.*Sin[v_]*Sec[w_]^n_.,x_Symbol] :=
  Cos[v-w]*Int[u*Tan[w]*Sec[w]^(n-1),x] + Sin[v-w]*Int[u*Sec[w]^(n-1),x] /;
RationalQ[n] && n>0 && FreeQ[v-w,x] && NonzeroQ[v-w]


(* ::Code:: *)
Int[u_.*Cos[v_]*Csc[w_]^n_.,x_Symbol] :=
  Cos[v-w]*Int[u*Cot[w]*Csc[w]^(n-1),x] - Sin[v-w]*Int[u*Csc[w]^(n-1),x] /;
RationalQ[n] && n>0 && FreeQ[v-w,x] && NonzeroQ[v-w]


(* ::Code:: *)
Int[u_.*Sin[v_]*Csc[w_]^n_.,x_Symbol] :=
  Sin[v-w]*Int[u*Cot[w]*Csc[w]^(n-1),x] + Cos[v-w]*Int[u*Csc[w]^(n-1),x] /;
RationalQ[n] && n>0 && FreeQ[v-w,x] && NonzeroQ[v-w]


(* ::Code:: *)
Int[u_.*Cos[v_]*Sec[w_]^n_.,x_Symbol] :=
  -Sin[v-w]*Int[u*Tan[w]*Sec[w]^(n-1),x] + Cos[v-w]*Int[u*Sec[w]^(n-1),x] /;
RationalQ[n] && n>0 && FreeQ[v-w,x] && NonzeroQ[v-w]


(* ::Code:: *)
Int[x_^m_.*Sin[a_.+b_.*x_^n_.]^p_.*Cos[a_.+b_.*x_^n_.],x_Symbol] :=
  x^(m-n+1)*Sin[a+b*x^n]^(p+1)/(b*n*(p+1)) -
  Dist[(m-n+1)/(b*n*(p+1)),Int[x^(m-n)*Sin[a+b*x^n]^(p+1),x]] /;
FreeQ[{a,b},x] && IntegersQ[m,n,p] && p!=-1 && 0<n<=m


(* ::Code:: *)
Int[x_^m_.*Cos[a_.+b_.*x_^n_.]^p_.*Sin[a_.+b_.*x_^n_.],x_Symbol] :=
  -x^(m-n+1)*Cos[a+b*x^n]^(p+1)/(b*n*(p+1)) +
  Dist[(m-n+1)/(b*n*(p+1)),Int[x^(m-n)*Cos[a+b*x^n]^(p+1),x]] /;
FreeQ[{a,b},x] && IntegersQ[m,n,p] && p!=-1 && 0<n<=m


(* ::Code:: *)
Int[Sin[a_.+b_.*x_]^m_.*Cos[a_.+b_.*x_]^n_,x_Symbol] :=
  Sin[a+b*x]^(m+1)*Cos[a+b*x]^(n+1)/(b*(m+1)) /;
FreeQ[{a,b,m,n},x] && ZeroQ[m+n+2] && NonzeroQ[m+1]


(* ::Code:: *)
Int[Sin[a_.+b_.*x_]^m_*Cos[a_.+b_.*x_]^n_,x_Symbol] :=
  Dist[1/b,Subst[Int[Regularize[x^m*(1-x^2)^((n-1)/2),x],x],x,Sin[a+b*x]]] /;
FreeQ[{a,b,m},x] && OddQ[n] && Not[OddQ[m] && 0<m<n]


(* ::Code:: *)
Int[Sin[a_.+b_.*x_]^m_*Cos[a_.+b_.*x_]^n_,x_Symbol] :=
  Dist[-1/b,Subst[Int[Regularize[x^n*(1-x^2)^((m-1)/2),x],x],x,Cos[a+b*x]]] /;
FreeQ[{a,b,n},x] && OddQ[m] && Not[OddQ[n] && 0<n<=m]


(* ::Code:: *)
Int[Sin[a_.+b_.*x_]^m_*Cos[a_.+b_.*x_]^n_,x_Symbol] :=
  -Sin[a+b*x]^(m-1)*Cos[a+b*x]^(n+1)/(b*(n+1)) +
  Dist[(m-1)/(n+1),Int[Sin[a+b*x]^(m-2)*Cos[a+b*x]^(n+2),x]] /;
FreeQ[{a,b},x] && RationalQ[{m,n}] && m>1 && n<-1


(* ::Code:: *)
Int[Sin[a_.+b_.*x_]^m_*Cos[a_.+b_.*x_]^n_,x_Symbol] :=
  Sin[a+b*x]^(m+1)*Cos[a+b*x]^(n-1)/(b*(m+1)) +
  Dist[(n-1)/(m+1),Int[Sin[a+b*x]^(m+2)*Cos[a+b*x]^(n-2),x]] /;
FreeQ[{a,b},x] && RationalQ[{m,n}] && m<-1 && n>1


(* ::Code:: *)
Int[Sin[a_.+b_.*x_]^m_*Cos[a_.+b_.*x_]^n_,x_Symbol] :=
  -Sin[a+b*x]^(m-1)*Cos[a+b*x]^(n+1)/(b*(m+n)) +
  Dist[(m-1)/(m+n),Int[Sin[a+b*x]^(m-2)*Cos[a+b*x]^n,x]] /;
FreeQ[{a,b,n},x] && RationalQ[m] && m>1 && NonzeroQ[m+n]


(* ::Code:: *)
Int[Sin[a_.+b_.*x_]^m_*Cos[a_.+b_.*x_]^n_,x_Symbol] :=
  Sin[a+b*x]^(m+1)*Cos[a+b*x]^(n-1)/(b*(m+n)) +
  Dist[(n-1)/(m+n),Int[Sin[a+b*x]^m*Cos[a+b*x]^(n-2),x]] /;
FreeQ[{a,b,m},x] && RationalQ[n] && n>1 && NonzeroQ[m+n]


(* ::Code:: *)
Int[Sin[a_.+b_.*x_]^m_*Cos[a_.+b_.*x_]^n_,x_Symbol] :=
  Sin[a+b*x]^(m+1)*Cos[a+b*x]^(n+1)/(b*(m+1)) +
  Dist[(m+n+2)/(m+1),Int[Sin[a+b*x]^(m+2)*Cos[a+b*x]^n,x]] /;
FreeQ[{a,b,n},x] && RationalQ[m] && m<-1 && NonzeroQ[m+n+2]


(* ::Code:: *)
Int[Sin[a_.+b_.*x_]^m_*Cos[a_.+b_.*x_]^n_,x_Symbol] :=
  -Sin[a+b*x]^(m+1)*Cos[a+b*x]^(n+1)/(b*(n+1)) +
  Dist[(m+n+2)/(n+1),Int[Sin[a+b*x]^m*Cos[a+b*x]^(n+2),x]] /;
FreeQ[{a,b,m},x] && RationalQ[n] && n<-1 && NonzeroQ[m+n+2]


(* ::Code:: *)
Int[Sin[a_.+b_.*x_]^m_*Cos[a_.+b_.*x_]^n_,x_Symbol] :=
  Dist[1/(b*m),Subst[Int[x^(1/m)/(1+x^(2/m)),x],x,Sin[a+b*x]^m/Cos[a+b*x]^m]] /;
FreeQ[{a,b},x] && ZeroQ[m+n] && IntegerQ[1/m] && 1/m>1


(* ::Code:: *)
Int[Sin[a_.+b_.*x_]^m_*Cos[a_.+b_.*x_]^n_,x_Symbol] :=
  Dist[-1/(b*n),Subst[Int[x^(1/n)/(1+x^(2/n)),x],x,Cos[a+b*x]^n/Sin[a+b*x]^n]] /;
FreeQ[{a,b},x] && ZeroQ[m+n] && IntegerQ[1/n] && 1/n>1


(* ::Code:: *)
Int[x_^m_./(a_.+b_.*Cos[d_.+e_.*x_]^2+c_.*Sin[d_.+e_.*x_]^2),x_Symbol] :=
  Dist[2,Int[x^m/(2*a+b+c+(b-c)*Cos[2*d+2*e*x]),x]] /;
FreeQ[{a,b,c,d,e},x] && IntegerQ[m] && m>0 && NonzeroQ[a+b] && NonzeroQ[a+c]


(* ::Code:: *)
Int[x_^m_./(a_+b_.*Sin[c_.+d_.*x_]*Cos[c_.+d_.*x_]),x_Symbol] :=
  Int[x^m/(a+b*Sin[2*c+2*d*x]/2),x] /;
FreeQ[{a,b,c,d},x] && IntegerQ[m] && m>0


(* ::Code:: *)
Int[(a_+b_.*Sin[c_.+d_.*x_]*Cos[c_.+d_.*x_])^n_,x_Symbol] :=
  Int[(a+b*Sin[2*c+2*d*x]/2)^n,x] /;
FreeQ[{a,b,c,d},x] && HalfIntegerQ[n]


(* ::Code:: *)
Int[Sin[a_.+b_.*x_^n_]^p_.*Cos[a_.+b_.*x_^n_]^p_.,x_Symbol] :=
  Dist[1/2,Int[Sin[2*a+2*b*x^n]^p,x]] /;
FreeQ[{a,b},x] && IntegersQ[n,p]


(* ::Code:: *)
Int[(a_.*Csc[c_.+d_.*x_]+b_.*Sin[c_.+d_.*x_])^n_,x_Symbol] :=
  Int[(a*Cos[c+d*x]*Cot[c+d*x])^n,x] /;
FreeQ[{a,b,c,d,n},x] && ZeroQ[a+b]


(* ::Code:: *)
Int[(a_.*Sec[c_.+d_.*x_]+b_.*Cos[c_.+d_.*x_])^n_,x_Symbol] :=
  Int[(a*Sin[c+d*x]*Tan[c+d*x])^n,x] /;
FreeQ[{a,b,c,d,n},x] && ZeroQ[a+b]


(* ::Code:: *)
Int[Sec[v_]^m_.*(a_+b_.*Tan[v_])^n_., x_Symbol] :=
  Int[(a*Cos[v]+b*Sin[v])^n,x] /;
FreeQ[{a,b},x] && IntegersQ[m,n] && m+n==0 && OddQ[m]


(* ::Code:: *)
Int[Csc[v_]^m_.*(a_+b_.*Cot[v_])^n_., x_Symbol] :=
  Int[(b*Cos[v]+a*Sin[v])^n,x] /;
FreeQ[{a,b},x] && IntegersQ[m,n] && m+n==0 && OddQ[m]


(* ::Code:: *)
Int[x_^m_.*Csc[a_.+b_.*x_]^n_.*Sec[a_.+b_.*x_]^n_., x_Symbol] :=
  Dist[2^n,Int[x^m*Csc[2*a+2*b*x]^n,x]] /;
FreeQ[{a,b},x] && RationalQ[m] && IntegerQ[n]


(* ::Code:: *)
Int[x_^m_.*Csc[a_.+b_.*x_]^n_.*Sec[a_.+b_.*x_]^p_., x_Symbol] :=
  Module[{u=Block[{ShowSteps=False,StepCounter=Null}, Int[Csc[a+b*x]^n*Sec[a+b*x]^p,x]]},
  x^m*u - Dist[m,Int[x^(m-1)*u,x]]] /;
FreeQ[{a,b},x] && RationalQ[m] && IntegersQ[n,p] && m>0 && n!=p


(* ::Code:: *)
Int[(a_.*Tan[v_]+b_.*Sec[v_])^n_,x_Symbol] :=
  Dist[a^n,Int[Tan[v/2+Pi/4*a/b]^n,x]] /;
FreeQ[{a,b},x] && ZeroQ[a^2-b^2] && EvenQ[n]


(* ::Code:: *)
Int[(a_.*Cot[v_]+b_.*Csc[v_])^n_,x_Symbol] :=
  Dist[a^n,Int[Cot[v/2+(a/b-1)*Pi/4]^n,x]] /;
FreeQ[{a,b},x] && ZeroQ[a^2-b^2] && EvenQ[n]


(* ::Code:: *)
Int[u_.*(a_.*Sec[v_]^m_.+b_.*Tan[v_]^m_.)^n_.,x_Symbol] :=
  Int[u*(a+b*Sin[v]^m)^n/Cos[v]^(m*n),x] /;
FreeQ[{a,b},x] && IntegersQ[m,n] && (OddQ[m*n] || m*n<0) && Not[m==2 && ZeroQ[a+b]]


(* ::Code:: *)
Int[u_.*(a_.*Csc[v_]^m_.+b_.*Cot[v_]^m_.)^n_.,x_Symbol] :=
  Int[u*(a+b*Cos[v]^m)^n/Sin[v]^(m*n),x] /;
FreeQ[{a,b},x] && IntegersQ[m,n] && (OddQ[m*n] || m*n<0) && Not[m==2 && ZeroQ[a+b]]



(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Code:: *)
Int[x_^m_.*(a_+b_.*Sin[c_.+d_.*x_])^n_,x_Symbol] :=
  Dist[(2*a)^n,Int[x^m*Cos[-Pi*a/(4*b)+c/2+d*x/2]^(2*n),x]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2-b^2] && RationalQ[m] && IntegerQ[n] && n<0


(* ::Code:: *)
Int[x_^m_.*(a_+b_.*Sin[c_.+d_.*x_])^n_,x_Symbol] :=
  Dist[(2*a)^(n-1/2)*Sqrt[a+b*Sin[c+d*x]]/Cos[-Pi*a/(4*b)+c/2+d*x/2],
    Int[x^m*Cos[-Pi*a/(4*b)+c/2+d*x/2]^(2*n),x]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2-b^2] && RationalQ[m] && IntegerQ[n-1/2]


(* ::Code:: *)
Int[x_/(a_+b_.*Sin[c_.+d_.*x_])^2,x_Symbol] :=
  Dist[a/(a^2-b^2),Int[x/(a+b*Sin[c+d*x]),x]] -
  Dist[b/(a^2-b^2),Int[x*(b+a*Sin[c+d*x])/(a+b*Sin[c+d*x])^2,x]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2-b^2]


(* ::Code:: *)
Int[x_^m_.*(a_+b_.*Sin[c_.+d_.*x_])^n_,x_Symbol] :=
  Dist[1/2^n,Int[x^m*(I*b+2*a*E^(I*c+I*d*x)-I*b*E^(2*(I*c+I*d*x)))^n/E^(n*(I*c+I*d*x)),x]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2-b^2] && RationalQ[m] && m>0 && IntegerQ[n] && n<0


(* ::Code:: *)
(* Int[x_^m_.*(a_+b_.*Cos[c_.+d_.*x_])^n_,x_Symbol] :=
  Dist[(2*a)^n,Int[x^m*Cos[-Pi/4*(1-a/b)+c/2+d*x/2]^(2*n),x]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2-b^2] && RationalQ[m] && IntegerQ[n] && n<0 *)


(* ::Code:: *)
Int[x_^m_.*(a_+b_.*Cos[c_.+d_.*x_])^n_,x_Symbol] :=
  Dist[(2*a)^n,Int[x^m*Cos[c/2+d*x/2]^(2*n),x]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a-b] && RationalQ[m] && IntegerQ[n] && n<0


(* ::Code:: *)
Int[x_^m_.*(a_+b_.*Cos[c_.+d_.*x_])^n_,x_Symbol] :=
  Dist[(2*a)^n,Int[x^m*Sin[c/2+d*x/2]^(2*n),x]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a+b] && RationalQ[m] && IntegerQ[n] && n<0


(* ::Code:: *)
(* Int[x_^m_.*(a_+b_.*Cos[c_.+d_.*x_])^n_,x_Symbol] :=
  Dist[(2*a)^(n-1/2)*Sqrt[a+b*Cos[c+d*x]]/Cos[-Pi/4*(1-a/b)+c/2+d*x/2],
    Int[x^m*Cos[-Pi/4*(1-a/b)+c/2+d*x/2]^(2*n),x]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2-b^2] && RationalQ[m] && IntegerQ[n-1/2] *)


(* ::Code:: *)
Int[x_^m_.*(a_+b_.*Cos[c_.+d_.*x_])^n_,x_Symbol] :=
  Dist[(2*a)^(n-1/2)*Sqrt[a+b*Cos[c+d*x]]/Cos[c/2+d*x/2],Int[x^m*Cos[c/2+d*x/2]^(2*n),x]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a-b] && RationalQ[m] && IntegerQ[n-1/2]


(* ::Code:: *)
Int[x_^m_.*(a_+b_.*Cos[c_.+d_.*x_])^n_,x_Symbol] :=
  Dist[(2*a)^(n-1/2)*Sqrt[a+b*Cos[c+d*x]]/Sin[c/2+d*x/2],Int[x^m*Sin[c/2+d*x/2]^(2*n),x]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a+b] && RationalQ[m] && IntegerQ[n-1/2]


(* ::Code:: *)
Int[x_/(a_+b_.*Cos[c_.+d_.*x_])^2,x_Symbol] :=
  Dist[a/(a^2-b^2),Int[x/(a+b*Cos[c+d*x]),x]] -
  Dist[b/(a^2-b^2),Int[x*(b+a*Cos[c+d*x])/(a+b*Cos[c+d*x])^2,x]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2-b^2]


(* ::Code:: *)
Int[x_^m_.*(a_+b_.*Cos[c_.+d_.*x_])^n_,x_Symbol] :=
  Dist[1/2^n,Int[x^m*(b+2*a*E^(I*c+I*d*x)+b*E^(2*(I*c+I*d*x)))^n/E^(n*(I*c+I*d*x)),x]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2-b^2] && RationalQ[m] && m>0 && IntegerQ[n] && n<0


(* ::Code:: *)
Int[(a_+b_.*Sin[c_.+d_.*x_]^2)^n_,x_Symbol] :=
  Dist[1/2^n,Int[(2*a+b-b*Cos[2*c+2*d*x])^n,x]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a+b] && RationalQ[n] && n!=-1


(* ::Code:: *)
Int[(a_+b_.*Cos[c_.+d_.*x_]^2)^n_,x_Symbol] :=
  Dist[1/2^n,Int[(2*a+b+b*Cos[2*c+2*d*x])^n,x]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a+b] && RationalQ[n] && n!=-1


(* ::Code:: *)
Int[x_^m_.*(a_+b_.*Sin[c_.+d_.*x_]^2)^n_,x_Symbol] :=
  Dist[1/2^n,Int[x^m*(2*a+b-b*Cos[2*c+2*d*x])^n,x]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a+b] && IntegersQ[m,n] && (m>0 && n==-1 || m==1 && n==-2)


(* ::Code:: *)
Int[x_^m_.*(a_+b_.*Cos[c_.+d_.*x_]^2)^n_,x_Symbol] :=
  Dist[1/2^n,Int[x^m*(2*a+b+b*Cos[2*c+2*d*x])^n,x]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a+b] && IntegersQ[m,n] && (m>0 && n==-1 || m==1 && n==-2)


(* ::Code:: *)
Int[Sin[b_.*x_^2],x_Symbol] :=
  Sqrt[Pi/2]*FresnelS[Rt[b,2]*x/Sqrt[Pi/2]]/Rt[b,2] /;
FreeQ[b,x]


(* ::Code:: *)
Int[Cos[b_.*x_^2],x_Symbol] :=
  Sqrt[Pi/2]*FresnelC[Rt[b,2]*x/Sqrt[Pi/2]]/Rt[b,2] /;
FreeQ[b,x]


(* ::Code:: *)
Int[Sin[a_+b_.*x_^2],x_Symbol] :=
  Dist[Sin[a],Int[Cos[b*x^2],x]] + 
  Dist[Cos[a],Int[Sin[b*x^2],x]] /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[Cos[a_+b_.*x_^2],x_Symbol] :=
  Dist[Cos[a],Int[Cos[b*x^2],x]] - 
  Dist[Sin[a],Int[Sin[b*x^2],x]] /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[Sin[a_.+b_.*x_^n_],x_Symbol] :=
  Dist[I/2,Int[E^(-a*I-b*I*x^n),x]] - 
  Dist[I/2,Int[E^(a*I+b*I*x^n),x]] /;
FreeQ[{a,b,n},x] && Not[FractionOrNegativeQ[n]]


(* ::Code:: *)
Int[Cos[a_.+b_.*x_^n_],x_Symbol] :=
  Dist[1/2,Int[E^(-a*I-b*I*x^n),x]] + 
  Dist[1/2,Int[E^(a*I+b*I*x^n),x]] /;
FreeQ[{a,b,n},x] && Not[FractionOrNegativeQ[n]]


(* ::Code:: *)
Int[Sin[a_.+b_.*x_^n_],x_Symbol] :=
  x*Sin[a+b*x^n] -
  Dist[b*n,Int[x^n*Cos[a+b*x^n],x]] /;
FreeQ[{a,b},x] && IntegerQ[n] && n<0


(* ::Code:: *)
Int[Cos[a_.+b_.*x_^n_],x_Symbol] :=
  x*Cos[a+b*x^n] + 
  Dist[b*n,Int[x^n*Sin[a+b*x^n],x]] /;
FreeQ[{a,b},x] && IntegerQ[n] && n<0


(* ::Code:: *)
Int[Sin[b_.*x_^n_.]/x_,x_Symbol] :=
  SinIntegral[b*x^n]/n /;
FreeQ[{b,n},x]


(* ::Code:: *)
Int[Cos[b_.*x_^n_.]/x_,x_Symbol] :=
  CosIntegral[b*x^n]/n /;
FreeQ[{b,n},x]


(* ::Code:: *)
Int[Sin[a_+b_.*x_^n_.]/x_,x_Symbol] :=
  Dist[Sin[a],Int[Cos[b*x^n]/x,x]] + 
  Dist[Cos[a],Int[Sin[b*x^n]/x,x]] /;
FreeQ[{a,b,n},x]


(* ::Code:: *)
Int[Cos[a_+b_.*x_^n_.]/x_,x_Symbol] :=
  Dist[Cos[a],Int[Cos[b*x^n]/x,x]] - 
  Dist[Sin[a],Int[Sin[b*x^n]/x,x]] /;
FreeQ[{a,b,n},x]


(* ::Code:: *)
Int[x_^m_.*Sin[a_.+b_.*x_^n_.],x_Symbol] :=
  -x^(m-n+1)*Cos[a+b*x^n]/(b*n) +
  Dist[(m-n+1)/(b*n),Int[x^(m-n)*Cos[a+b*x^n],x]] /;
FreeQ[{a,b},x] && IntegerQ[n] && RationalQ[m] && 0<n<=m


(* ::Code:: *)
Int[x_^m_.*Cos[a_.+b_.*x_^n_.],x_Symbol] :=
  x^(m-n+1)*Sin[a+b*x^n]/(b*n) -
  Dist[(m-n+1)/(b*n),Int[x^(m-n)*Sin[a+b*x^n],x]] /;
FreeQ[{a,b},x] && IntegerQ[n] && RationalQ[m] && 0<n<=m


(* ::Code:: *)
Int[x_^m_.*Sin[a_.+b_.*x_^n_.],x_Symbol] :=
  x^(m+1)*Sin[a+b*x^n]/(m+1) -
  Dist[b*n/(m+1),Int[x^(m+n)*Cos[a+b*x^n],x]] /;
FreeQ[{a,b,m,n},x] && (ZeroQ[m+n+1] || IntegerQ[n] && RationalQ[m] && (n>0 && m<-1 || 0<-n<m+1))


(* ::Code:: *)
Int[x_^m_.*Cos[a_.+b_.*x_^n_.],x_Symbol] :=
  x^(m+1)*Cos[a+b*x^n]/(m+1) +
  Dist[b*n/(m+1),Int[x^(m+n)*Sin[a+b*x^n],x]] /;
FreeQ[{a,b,m,n},x] && (ZeroQ[m+n+1] || IntegerQ[n] && RationalQ[m] && (n>0 && m<-1 || 0<-n<m+1))


(* ::Code:: *)
Int[x_^m_.*Sin[a_.+b_.*x_^n_.],x_Symbol] :=
  Dist[I/2,Int[x^m*E^(-a*I-b*I*x^n),x]] - 
  Dist[I/2,Int[x^m*E^(a*I+b*I*x^n),x]] /;
FreeQ[{a,b,m,n},x] && NonzeroQ[m+1] && NonzeroQ[m-n+1] && 
Not[FractionQ[m] || FractionOrNegativeQ[n]]


(* ::Code:: *)
Int[x_^m_.*Cos[a_.+b_.*x_^n_.],x_Symbol] :=
  Dist[1/2,Int[x^m*E^(-a*I-b*I*x^n),x]] + 
  Dist[1/2,Int[x^m*E^(a*I+b*I*x^n),x]] /;
FreeQ[{a,b,m,n},x] && NonzeroQ[m+1] && NonzeroQ[m-n+1] && 
Not[FractionQ[m] || FractionOrNegativeQ[n]]


(* ::Code:: *)
Int[x_^m_.*Sin[a_.+b_.*x_^n_.]^p_,x_Symbol] :=
  -Sin[a+b*x^n]^p/((n-1)*x^(n-1)) +
  Dist[b*n*p/(n-1),Int[Sin[a+b*x^n]^(p-1)*Cos[a+b*x^n],x]] /;
FreeQ[{a,b},x] && IntegersQ[n,p] && ZeroQ[m+n] && p>1 && NonzeroQ[n-1]


(* ::Code:: *)
Int[x_^m_.*Cos[a_.+b_.*x_^n_.]^p_,x_Symbol] :=
  -Cos[a+b*x^n]^p/((n-1)*x^(n-1)) -
  Dist[b*n*p/(n-1),Int[Cos[a+b*x^n]^(p-1)*Sin[a+b*x^n],x]] /;
FreeQ[{a,b},x] && IntegersQ[n,p] && ZeroQ[m+n] && p>1 && NonzeroQ[n-1]


(* ::Code:: *)
Int[x_^m_.*Sin[a_.+b_.*x_^n_.]^p_,x_Symbol] :=
  n*Sin[a+b*x^n]^p/(b^2*n^2*p^2) -
  x^n*Cos[a+b*x^n]*Sin[a+b*x^n]^(p-1)/(b*n*p) +
  Dist[(p-1)/p,Int[x^m*Sin[a+b*x^n]^(p-2),x]] /;
FreeQ[{a,b,m,n},x] && RationalQ[p] && p>1 && ZeroQ[m-2*n+1]


(* ::Code:: *)
Int[x_^m_.*Cos[a_.+b_.*x_^n_.]^p_,x_Symbol] :=
  n*Cos[a+b*x^n]^p/(b^2*n^2*p^2) +
  x^n*Sin[a+b*x^n]*Cos[a+b*x^n]^(p-1)/(b*n*p) +
  Dist[(p-1)/p,Int[x^m*Cos[a+b*x^n]^(p-2),x]] /;
FreeQ[{a,b,m,n},x] && RationalQ[p] && p>1 && ZeroQ[m-2*n+1]


(* ::Code:: *)
Int[x_^m_.*Sin[a_.+b_.*x_^n_.]^p_,x_Symbol] :=
  (m-n+1)*x^(m-2*n+1)*Sin[a+b*x^n]^p/(b^2*n^2*p^2) -
  x^(m-n+1)*Cos[a+b*x^n]*Sin[a+b*x^n]^(p-1)/(b*n*p) +
  Dist[(p-1)/p,Int[x^m*Sin[a+b*x^n]^(p-2),x]] -
  Dist[(m-n+1)*(m-2*n+1)/(b^2*n^2*p^2),Int[x^(m-2*n)*Sin[a+b*x^n]^p,x]] /;
FreeQ[{a,b},x] && IntegersQ[m,n] && RationalQ[p] && p>1 && 0<2*n<m+1


(* ::Code:: *)
Int[x_^m_.*Cos[a_.+b_.*x_^n_.]^p_,x_Symbol] :=
  (m-n+1)*x^(m-2*n+1)*Cos[a+b*x^n]^p/(b^2*n^2*p^2) +
  x^(m-n+1)*Sin[a+b*x^n]*Cos[a+b*x^n]^(p-1)/(b*n*p) +
  Dist[(p-1)/p,Int[x^m*Cos[a+b*x^n]^(p-2),x]] -
  Dist[(m-n+1)*(m-2*n+1)/(b^2*n^2*p^2),Int[x^(m-2*n)*Cos[a+b*x^n]^p,x]] /;
FreeQ[{a,b},x] && IntegersQ[m,n] && RationalQ[p] && p>1 && 0<2*n<m+1


(* ::Code:: *)
Int[x_^m_.*Sin[a_.+b_.*x_^n_.]^p_,x_Symbol] :=
  x^n*Cos[a+b*x^n]*Sin[a+b*x^n]^(p+1)/(b*n*(p+1)) - 
  n*Sin[a+b*x^n]^(p+2)/(b^2*n^2*(p+1)*(p+2)) + 
  Dist[(p+2)/(p+1),Int[x^m*Sin[a+b*x^n]^(p+2),x]] /;
FreeQ[{a,b,m,n},x] && RationalQ[p] && p<-1 && p!=-2 && ZeroQ[m-2*n+1]


(* ::Code:: *)
Int[x_^m_.*Cos[a_.+b_.*x_^n_.]^p_,x_Symbol] :=
  -x^n*Sin[a+b*x^n]*Cos[a+b*x^n]^(p+1)/(b*n*(p+1)) - 
  n*Cos[a+b*x^n]^(p+2)/(b^2*n^2*(p+1)*(p+2)) + 
  Dist[(p+2)/(p+1),Int[x^m*Cos[a+b*x^n]^(p+2),x]] /;
FreeQ[{a,b,m,n},x] && RationalQ[p] && p<-1 && p!=-2 && ZeroQ[m-2*n+1]


(* ::Code:: *)
Int[x_^m_.*Sin[a_.+b_.*x_^n_.]^p_,x_Symbol] :=
  x^(m-n+1)*Cos[a+b*x^n]*Sin[a+b*x^n]^(p+1)/(b*n*(p+1)) -
  (m-n+1)*x^(m-2*n+1)*Sin[a+b*x^n]^(p+2)/(b^2*n^2*(p+1)*(p+2)) +
  Dist[(p+2)/(p+1),Int[x^m*Sin[a+b*x^n]^(p+2),x]] +
  Dist[(m-n+1)*(m-2*n+1)/(b^2*n^2*(p+1)*(p+2)),Int[x^(m-2*n)*Sin[a+b*x^n]^(p+2),x]] /;
FreeQ[{a,b},x] && IntegersQ[m,n] && RationalQ[p] && p<-1 && p!=-2 && 0<2*n<m+1 


(* ::Code:: *)
Int[x_^m_.*Cos[a_.+b_.*x_^n_.]^p_,x_Symbol] :=
  -x^(m-n+1)*Sin[a+b*x^n]*Cos[a+b*x^n]^(p+1)/(b*n*(p+1)) -
  (m-n+1)*x^(m-2*n+1)*Cos[a+b*x^n]^(p+2)/(b^2*n^2*(p+1)*(p+2)) +
  Dist[(p+2)/(p+1),Int[x^m*Cos[a+b*x^n]^(p+2),x]] +
  Dist[(m-n+1)*(m-2*n+1)/(b^2*n^2*(p+1)*(p+2)),Int[x^(m-2*n)*Cos[a+b*x^n]^(p+2),x]] /;
FreeQ[{a,b},x] && IntegersQ[m,n] && RationalQ[p] && p<-1 && p!=-2 && 0<2*n<m+1 


(* ::Code:: *)
Int[x_^m_.*Sin[a_.+b_.*x_^n_.]^p_,x_Symbol] :=
  x^(m+1)*Sin[a+b*x^n]^p/(m+1) - 
  b*n*p*x^(m+n+1)*Cos[a+b*x^n]*Sin[a+b*x^n]^(p-1)/((m+1)*(m+n+1)) - 
  Dist[b^2*n^2*p^2/((m+1)*(m+n+1)),Int[x^(m+2*n)*Sin[a+b*x^n]^p,x]] + 
  Dist[b^2*n^2*p*(p-1)/((m+1)*(m+n+1)),Int[x^(m+2*n)*Sin[a+b*x^n]^(p-2),x]] /;
FreeQ[{a,b},x] && IntegersQ[m,n] && RationalQ[p] && p>1 && 0<2*n<1-m && NonzeroQ[m+n+1]


(* ::Code:: *)
Int[x_^m_.*Cos[a_.+b_.*x_^n_.]^p_,x_Symbol] :=
  x^(m+1)*Cos[a+b*x^n]^p/(m+1) + 
  b*n*p*x^(m+n+1)*Sin[a+b*x^n]*Cos[a+b*x^n]^(p-1)/((m+1)*(m+n+1)) - 
  Dist[b^2*n^2*p^2/((m+1)*(m+n+1)),Int[x^(m+2*n)*Cos[a+b*x^n]^p,x]] + 
  Dist[b^2*n^2*p*(p-1)/((m+1)*(m+n+1)),Int[x^(m+2*n)*Cos[a+b*x^n]^(p-2),x]] /;
FreeQ[{a,b},x] && IntegersQ[m,n] && RationalQ[p] && p>1 && 0<2*n<1-m && NonzeroQ[m+n+1]


(* ::Code:: *)
(* Int[x_^m_.*Sin[a_.+b_.*x_^n_.]^p_,x_Symbol] :=
  Dist[(I/2)^p,Int[x^m*(E^(-a*I-b*I*x^n)-E^(a*I+b*I*x^n))^p,x]] /;
FreeQ[{a,b,m,n},x] && IntegerQ[p] && p>0 && NonzeroQ[m+1] && NonzeroQ[m-n+1] && Not[FractionQ[m] || FractionOrNegativeQ[n]] *)


(* ::Code:: *)
Int[x_^m_.*Sin[a_.+b_.*(c_+d_.*x_)^n_]^p_.,x_Symbol] :=
  Dist[1/d,Subst[Int[(-c/d+x/d)^m*Sin[a+b*x^n]^p,x],x,c+d*x]] /;
FreeQ[{a,b,c,d,n},x] && IntegerQ[m] && m>0 && RationalQ[p]


(* ::Code:: *)
Int[x_^m_.*Cos[a_.+b_.*(c_+d_.*x_)^n_]^p_.,x_Symbol] :=
  Dist[1/d,Subst[Int[(-c/d+x/d)^m*Cos[a+b*x^n]^p,x],x,c+d*x]] /;
FreeQ[{a,b,c,d,n},x] && IntegerQ[m] && m>0 && RationalQ[p]


(* ::Code:: *)
Int[Sin[a_.+b_.*x_+c_.*x_^2],x_Symbol] :=
  Int[Sin[(b+2*c*x)^2/(4*c)],x] /;
FreeQ[{a,b,c},x] && ZeroQ[b^2-4*a*c]


(* ::Code:: *)
Int[Cos[a_.+b_.*x_+c_.*x_^2],x_Symbol] :=
  Int[Cos[(b+2*c*x)^2/(4*c)],x] /;
FreeQ[{a,b,c},x] && ZeroQ[b^2-4*a*c]


(* ::Code:: *)
Int[Sin[a_.+b_.*x_+c_.*x_^2],x_Symbol] :=
  Cos[(b^2-4*a*c)/(4*c)]*Int[Sin[(b+2*c*x)^2/(4*c)],x] - 
  Sin[(b^2-4*a*c)/(4*c)]*Int[Cos[(b+2*c*x)^2/(4*c)],x] /;
FreeQ[{a,b,c},x] && NonzeroQ[b^2-4*a*c]


(* ::Code:: *)
Int[Cos[a_.+b_.*x_+c_.*x_^2],x_Symbol] :=
  Cos[(b^2-4*a*c)/(4*c)]*Int[Cos[(b+2*c*x)^2/(4*c)],x] + 
  Sin[(b^2-4*a*c)/(4*c)]*Int[Sin[(b+2*c*x)^2/(4*c)],x] /;
FreeQ[{a,b,c},x] && NonzeroQ[b^2-4*a*c]


(* ::Code:: *)
Int[(d_.+e_.*x_)*Sin[a_.+b_.*x_+c_.*x_^2],x_Symbol] :=
  -e*Cos[a+b*x+c*x^2]/(2*c) /;
FreeQ[{a,b,c,d,e},x] && ZeroQ[b*e-2*c*d]


(* ::Code:: *)
Int[(d_.+e_.*x_)*Cos[a_.+b_.*x_+c_.*x_^2],x_Symbol] :=
  e*Sin[a+b*x+c*x^2]/(2*c) /;
FreeQ[{a,b,c,d,e},x] && ZeroQ[b*e-2*c*d]


(* ::Code:: *)
Int[(d_.+e_.*x_)*Sin[a_.+b_.*x_+c_.*x_^2],x_Symbol] :=
  -e*Cos[a+b*x+c*x^2]/(2*c) -
  Dist[(b*e-2*c*d)/(2*c),Int[Sin[a+b*x+c*x^2],x]] /;
FreeQ[{a,b,c,d,e},x] && NonzeroQ[b*e-2*c*d]


(* ::Code:: *)
Int[(d_.+e_.*x_)*Cos[a_.+b_.*x_+c_.*x_^2],x_Symbol] :=
  e*Sin[a+b*x+c*x^2]/(2*c) -
  Dist[(b*e-2*c*d)/(2*c),Int[Cos[a+b*x+c*x^2],x]] /;
FreeQ[{a,b,c,d,e},x] && NonzeroQ[b*e-2*c*d]


(* ::Code:: *)
Int[(d_.+e_.*x_)^m_*Sin[a_.+b_.*x_+c_.*x_^2],x_Symbol] :=
  -e*(d+e*x)^(m-1)*Cos[a+b*x+c*x^2]/(2*c) + 
  Dist[e^2*(m-1)/(2*c),Int[(d+e*x)^(m-2)*Cos[a+b*x+c*x^2],x]] /;
FreeQ[{a,b,c,d,e},x] && RationalQ[m] && m>1 && ZeroQ[b*e-2*c*d]


(* ::Code:: *)
Int[(d_.+e_.*x_)^m_*Cos[a_.+b_.*x_+c_.*x_^2],x_Symbol] :=
  e*(d+e*x)^(m-1)*Sin[a+b*x+c*x^2]/(2*c) - 
  Dist[e^2*(m-1)/(2*c),Int[(d+e*x)^(m-2)*Sin[a+b*x+c*x^2],x]] /;
FreeQ[{a,b,c,d,e},x] && RationalQ[m] && m>1 && ZeroQ[b*e-2*c*d]


(* ::Code:: *)
Int[(d_.+e_.*x_)^m_*Sin[a_.+b_.*x_+c_.*x_^2],x_Symbol] :=
  -e*(d+e*x)^(m-1)*Cos[a+b*x+c*x^2]/(2*c) - 
  Dist[(b*e-2*c*d)/(2*c),Int[(d+e*x)^(m-1)*Sin[a+b*x+c*x^2],x]] + 
  Dist[e^2*(m-1)/(2*c),Int[(d+e*x)^(m-2)*Cos[a+b*x+c*x^2],x]] /;
FreeQ[{a,b,c,d,e},x] && RationalQ[m] && m>1 && NonzeroQ[b*e-2*c*d]


(* ::Code:: *)
Int[(d_.+e_.*x_)^m_*Cos[a_.+b_.*x_+c_.*x_^2],x_Symbol] :=
  e*(d+e*x)^(m-1)*Sin[a+b*x+c*x^2]/(2*c) - 
  Dist[(b*e-2*c*d)/(2*c),Int[(d+e*x)^(m-1)*Cos[a+b*x+c*x^2],x]] - 
  Dist[e^2*(m-1)/(2*c),Int[(d+e*x)^(m-2)*Sin[a+b*x+c*x^2],x]] /;
FreeQ[{a,b,c,d,e},x] && RationalQ[m] && m>1 && NonzeroQ[b*e-2*c*d]


(* ::Code:: *)
Int[(d_.+e_.*x_)^m_*Sin[a_.+b_.*x_+c_.*x_^2],x_Symbol] :=
  (d+e*x)^(m+1)*Sin[a+b*x+c*x^2]/(e*(m+1)) -
  Dist[2*c/(e^2*(m+1)),Int[(d+e*x)^(m+2)*Cos[a+b*x+c*x^2],x]] /;
FreeQ[{a,b,c,d,e},x] && RationalQ[m] && m<-1 && ZeroQ[b*e-2*c*d]


(* ::Code:: *)
Int[(d_.+e_.*x_)^m_*Cos[a_.+b_.*x_+c_.*x_^2],x_Symbol] :=
  (d+e*x)^(m+1)*Cos[a+b*x+c*x^2]/(e*(m+1)) + 
  Dist[2*c/(e^2*(m+1)),Int[(d+e*x)^(m+2)*Sin[a+b*x+c*x^2],x]] /;
FreeQ[{a,b,c,d,e},x] && RationalQ[m] && m<-1 && ZeroQ[b*e-2*c*d]


(* ::Code:: *)
Int[(d_.+e_.*x_)^m_*Sin[a_.+b_.*x_+c_.*x_^2],x_Symbol] :=
  (d+e*x)^(m+1)*Sin[a+b*x+c*x^2]/(e*(m+1)) -
  Dist[(b*e-2*c*d)/(e^2*(m+1)),Int[(d+e*x)^(m+1)*Cos[a+b*x+c*x^2],x]] -
  Dist[2*c/(e^2*(m+1)),Int[(d+e*x)^(m+2)*Cos[a+b*x+c*x^2],x]] /;
FreeQ[{a,b,c,d,e},x] && RationalQ[m] && m<-1 && NonzeroQ[b*e-2*c*d]


(* ::Code:: *)
Int[(d_.+e_.*x_)^m_*Cos[a_.+b_.*x_+c_.*x_^2],x_Symbol] :=
  (d+e*x)^(m+1)*Cos[a+b*x+c*x^2]/(e*(m+1)) + 
  Dist[(b*e-2*c*d)/(e^2*(m+1)),Int[(d+e*x)^(m+1)*Sin[a+b*x+c*x^2],x]] +
  Dist[2*c/(e^2*(m+1)),Int[(d+e*x)^(m+2)*Sin[a+b*x+c*x^2],x]] /;
FreeQ[{a,b,c,d,e},x] && RationalQ[m] && m<-1 && NonzeroQ[b*e-2*c*d]


(* ::Code:: *)
Int[Sin[a_.+b_.*Log[c_.*x_^n_.]],x_Symbol] :=
  x*Sin[a+b*Log[c*x^n]]/(1+b^2*n^2) -
  b*n*x*Cos[a+b*Log[c*x^n]]/(1+b^2*n^2) /;
FreeQ[{a,b,c,n},x] && NonzeroQ[1+b^2*n^2]


(* ::Code:: *)
Int[Cos[a_.+b_.*Log[c_.*x_^n_.]],x_Symbol] :=
  x*Cos[a+b*Log[c*x^n]]/(1+b^2*n^2) +
  b*n*x*Sin[a+b*Log[c*x^n]]/(1+b^2*n^2) /;
FreeQ[{a,b,c,n},x] && NonzeroQ[1+b^2*n^2]


(* ::Code:: *)
Int[Sin[a_.+b_.*Log[c_.*x_^n_.]]^p_,x_Symbol] :=
  x*Sin[a+b*Log[c*x^n]]^p/(1+b^2*n^2*p^2) -
  b*n*p*x*Cos[a+b*Log[c*x^n]]*Sin[a+b*Log[c*x^n]]^(p-1)/(1+b^2*n^2*p^2) +
  Dist[b^2*n^2*p*(p-1)/(1+b^2*n^2*p^2),Int[Sin[a+b*Log[c*x^n]]^(p-2),x]] /;
FreeQ[{a,b,c,n},x] && RationalQ[p] && p>1 && NonzeroQ[1+b^2*n^2*p^2]


(* ::Code:: *)
Int[Cos[a_.+b_.*Log[c_.*x_^n_.]]^p_,x_Symbol] :=
  x*Cos[a+b*Log[c*x^n]]^p/(1+b^2*n^2*p^2) +
  b*n*p*x*Cos[a+b*Log[c*x^n]]^(p-1)*Sin[a+b*Log[c*x^n]]/(1+b^2*n^2*p^2) +
  Dist[b^2*n^2*p*(p-1)/(1+b^2*n^2*p^2),Int[Cos[a+b*Log[c*x^n]]^(p-2),x]] /;
FreeQ[{a,b,c,n},x] && RationalQ[p] && p>1 && NonzeroQ[1+b^2*n^2*p^2]


(* ::Code:: *)
Int[Sin[a_.+b_.*Log[c_.*x_^n_.]]^p_,x_Symbol] :=
  x*Cot[a+b*Log[c*x^n]]*Sin[a+b*Log[c*x^n]]^(p+2)/(b*n*(p+1)) -
  x*Sin[a+b*Log[c*x^n]]^(p+2)/(b^2*n^2*(p+1)*(p+2)) /;
FreeQ[{a,b,c,n,p},x] && NonzeroQ[p+1] && NonzeroQ[p+2] && ZeroQ[1+b^2*n^2*(p+2)^2]


(* ::Code:: *)
Int[Cos[a_.+b_.*Log[c_.*x_^n_.]]^p_,x_Symbol] :=
  -x*Tan[a+b*Log[c*x^n]]*Cos[a+b*Log[c*x^n]]^(p+2)/(b*n*(p+1)) -
  x*Cos[a+b*Log[c*x^n]]^(p+2)/(b^2*n^2*(p+1)*(p+2)) /;
FreeQ[{a,b,c,n,p},x] && NonzeroQ[p+1] && NonzeroQ[p+2] && ZeroQ[1+b^2*n^2*(p+2)^2]


(* ::Code:: *)
Int[Sin[a_.+b_.*Log[c_.*x_^n_.]]^p_,x_Symbol] :=
  x*Cot[a+b*Log[c*x^n]]*Sin[a+b*Log[c*x^n]]^(p+2)/(b*n*(p+1)) -
  x*Sin[a+b*Log[c*x^n]]^(p+2)/(b^2*n^2*(p+1)*(p+2)) +
  Dist[(1+b^2*n^2*(p+2)^2)/(b^2*n^2*(p+1)*(p+2)),Int[Sin[a+b*Log[c*x^n]]^(p+2),x]] /;
FreeQ[{a,b,c,n},x] && RationalQ[p] && p<-1 && p!=-2 && NonzeroQ[1+b^2*n^2*(p+2)^2]


(* ::Code:: *)
Int[Cos[a_.+b_.*Log[c_.*x_^n_.]]^p_,x_Symbol] :=
  -x*Tan[a+b*Log[c*x^n]]*Cos[a+b*Log[c*x^n]]^(p+2)/(b*n*(p+1)) -
  x*Cos[a+b*Log[c*x^n]]^(p+2)/(b^2*n^2*(p+1)*(p+2)) +
  Dist[(1+b^2*n^2*(p+2)^2)/(b^2*n^2*(p+1)*(p+2)),Int[Cos[a+b*Log[c*x^n]]^(p+2),x]] /;
FreeQ[{a,b,c,n},x] && RationalQ[p] && p<-1 && p!=-2 && NonzeroQ[1+b^2*n^2*(p+2)^2]


(* ::Code:: *)
Int[x_^m_.*Sin[a_.+b_.*Log[c_.*x_^n_.]],x_Symbol] :=
  (m+1)*x^(m+1)*Sin[a+b*Log[c*x^n]]/(b^2*n^2+(m+1)^2) -
  b*n*x^(m+1)*Cos[a+b*Log[c*x^n]]/(b^2*n^2+(m+1)^2) /;
FreeQ[{a,b,c,m,n},x] && NonzeroQ[b^2*n^2+(m+1)^2] && NonzeroQ[m+1]


(* ::Code:: *)
Int[x_^m_.*Cos[a_.+b_.*Log[c_.*x_^n_.]],x_Symbol] :=
  (m+1)*x^(m+1)*Cos[a+b*Log[c*x^n]]/(b^2*n^2+(m+1)^2) +
  b*n*x^(m+1)*Sin[a+b*Log[c*x^n]]/(b^2*n^2+(m+1)^2) /;
FreeQ[{a,b,c,m,n},x] && NonzeroQ[b^2*n^2+(m+1)^2] && NonzeroQ[m+1]


(* ::Code:: *)
Int[x_^m_.*Sin[a_.+b_.*Log[c_.*x_^n_.]]^p_,x_Symbol] :=
  (m+1)*x^(m+1)*Sin[a+b*Log[c*x^n]]^p/(b^2*n^2*p^2+(m+1)^2) -
  b*n*p*x^(m+1)*Cos[a+b*Log[c*x^n]]*Sin[a+b*Log[c*x^n]]^(p-1)/(b^2*n^2*p^2+(m+1)^2) +
  Dist[b^2*n^2*p*(p-1)/(b^2*n^2*p^2+(m+1)^2),Int[x^m*Sin[a+b*Log[c*x^n]]^(p-2),x]] /;
FreeQ[{a,b,c,m,n},x] && RationalQ[p] && p>1 && NonzeroQ[b^2*n^2*p^2+(m+1)^2] && NonzeroQ[m+1]


(* ::Code:: *)
Int[x_^m_.*Cos[a_.+b_.*Log[c_.*x_^n_.]]^p_,x_Symbol] :=
  (m+1)*x^(m+1)*Cos[a+b*Log[c*x^n]]^p/(b^2*n^2*p^2+(m+1)^2) +
  b*n*p*x^(m+1)*Sin[a+b*Log[c*x^n]]*Cos[a+b*Log[c*x^n]]^(p-1)/(b^2*n^2*p^2+(m+1)^2) +
  Dist[b^2*n^2*p*(p-1)/(b^2*n^2*p^2+(m+1)^2),Int[x^m*Cos[a+b*Log[c*x^n]]^(p-2),x]] /;
FreeQ[{a,b,c,m,n},x] && RationalQ[p] && p>1 && NonzeroQ[b^2*n^2*p^2+(m+1)^2] && NonzeroQ[m+1]


(* ::Code:: *)
Int[x_^m_.*Sin[a_.+b_.*Log[c_.*x_^n_.]]^p_,x_Symbol] :=
  x^(m+1)*Cot[a+b*Log[c*x^n]]*Sin[a+b*Log[c*x^n]]^(p+2)/(b*n*(p+1)) -
  (m+1)*x^(m+1)*Sin[a+b*Log[c*x^n]]^(p+2)/(b^2*n^2*(p+1)*(p+2)) +
  Dist[(b^2*n^2*(p+2)^2+(m+1)^2)/(b^2*n^2*(p+1)*(p+2)),Int[x^m*Sin[a+b*Log[c*x^n]]^(p+2),x]] /;
FreeQ[{a,b,c,m,n},x] && RationalQ[p] && p<-1 && p!=-2 && NonzeroQ[m+1]


(* ::Code:: *)
Int[x_^m_.*Cos[a_.+b_.*Log[c_.*x_^n_.]]^p_,x_Symbol] :=
  -x^(m+1)*Tan[a+b*Log[c*x^n]]*Cos[a+b*Log[c*x^n]]^(p+2)/(b*n*(p+1)) -
  (m+1)*x^(m+1)*Cos[a+b*Log[c*x^n]]^(p+2)/(b^2*n^2*(p+1)*(p+2)) +
  Dist[(b^2*n^2*(p+2)^2+(m+1)^2)/(b^2*n^2*(p+1)*(p+2)),Int[x^m*Cos[a+b*Log[c*x^n]]^(p+2),x]] /;
FreeQ[{a,b,c,m,n},x] && RationalQ[p] && p<-1 && p!=-2 && NonzeroQ[m+1]


(* ::Code:: *)
Int[Sin[a_.*x_*Log[b_.*x_]^p_.]*Log[b_.*x_]^p_.,x_Symbol] :=
  -Cos[a*x*Log[b*x]^p]/a -
  Dist[p,Int[Sin[a*x*Log[b*x]^p]*Log[b*x]^(p-1),x]] /;
FreeQ[{a,b},x] && RationalQ[p] && p>0


(* ::Code:: *)
Int[Cos[a_.*x_*Log[b_.*x_]^p_.]*Log[b_.*x_]^p_.,x_Symbol] :=
  Sin[a*x*Log[b*x]^p]/a -
  Dist[p,Int[Cos[a*x*Log[b*x]^p]*Log[b*x]^(p-1),x]] /;
FreeQ[{a,b},x] && RationalQ[p] && p>0


(* ::Code:: *)
Int[Sin[a_.*x_^n_*Log[b_.*x_]^p_.]*Log[b_.*x_]^p_.,x_Symbol] :=
  -Cos[a*x^n*Log[b*x]^p]/(a*n*x^(n-1)) -
  Dist[p/n,Int[Sin[a*x^n*Log[b*x]^p]*Log[b*x]^(p-1),x]] -
  Dist[(n-1)/(a*n),Int[Cos[a*x^n*Log[b*x]^p]/x^n,x]] /;
FreeQ[{a,b},x] && RationalQ[{n,p}] && p>0


(* ::Code:: *)
Int[Cos[a_.*x_^n_*Log[b_.*x_]^p_.]*Log[b_.*x_]^p_.,x_Symbol] :=
  Sin[a*x^n*Log[b*x]^p]/(a*n*x^(n-1)) -
  Dist[p/n,Int[Cos[a*x^n*Log[b*x]^p]*Log[b*x]^(p-1),x]] +
  Dist[(n-1)/(a*n),Int[Sin[a*x^n*Log[b*x]^p]/x^n,x]] /;
FreeQ[{a,b},x] && RationalQ[{n,p}] && p>0


(* ::Code:: *)
Int[x_^m_.*Sin[a_.*x_^n_.*Log[b_.*x_]^p_.]*Log[b_.*x_]^p_.,x_Symbol] :=
  -Cos[a*x^n*Log[b*x]^p]/(a*n) -
  Dist[p/n,Int[x^m*Sin[a*x^n*Log[b*x]^p]*Log[b*x]^(p-1),x]] /;
FreeQ[{a,b},x] && RationalQ[{m,n,p}] && p>0 && ZeroQ[m-n+1]


(* ::Code:: *)
Int[x_^m_.*Cos[a_.*x_^n_.*Log[b_.*x_]^p_.]*Log[b_.*x_]^p_.,x_Symbol] :=
  Sin[a*x^n*Log[b*x]^p]/(a*n) -
  Dist[p/n,Int[x^m*Cos[a*x^n*Log[b*x]^p]*Log[b*x]^(p-1),x]] /;
FreeQ[{a,b},x] && RationalQ[{m,n,p}] && p>0 && ZeroQ[m-n+1]


(* ::Code:: *)
Int[x_^m_.*Sin[a_.*x_^n_.*Log[b_.*x_]^p_.]*Log[b_.*x_]^p_.,x_Symbol] :=
  -x^(m-n+1)*Cos[a*x^n*Log[b*x]^p]/(a*n) -
  Dist[p/n,Int[x^m*Sin[a*x^n*Log[b*x]^p]*Log[b*x]^(p-1),x]] +
  Dist[(m-n+1)/(a*n),Int[x^(m-n)*Cos[a*x^n*Log[b*x]^p],x]] /;
FreeQ[{a,b},x] && RationalQ[{m,n,p}] && p>0 && NonzeroQ[m-n+1]


(* ::Code:: *)
Int[x_^m_*Cos[a_.*x_^n_.*Log[b_.*x_]^p_.]*Log[b_.*x_]^p_.,x_Symbol] :=
  x^(m-n+1)*Sin[a*x^n*Log[b*x]^p]/(a*n) -
  Dist[p/n,Int[x^m*Cos[a*x^n*Log[b*x]^p]*Log[b*x]^(p-1),x]] -
  Dist[(m-n+1)/(a*n),Int[x^(m-n)*Sin[a*x^n*Log[b*x]^p],x]] /;
FreeQ[{a,b},x] && RationalQ[{m,n,p}] && p>0 && NonzeroQ[m-n+1]


(* ::Code:: *)
Int[Sin[c_.+d_.*x_]^2*Sin[a_.+b_.*x_]^n_.,x_Symbol] :=
  Dist[1/2,Int[Sin[a+b*x]^n,x]] - 
  Dist[1/2,Int[Cos[a+b*x]*Sin[a+b*x]^n,x]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[c-a/2] && ZeroQ[d-b/2] && Not[OddQ[n]]


(* ::Code:: *)
Int[Cos[c_.+d_.*x_]^2*Sin[a_.+b_.*x_]^n_.,x_Symbol] :=
  Dist[1/2,Int[Sin[a+b*x]^n,x]] + 
  Dist[1/2,Int[Cos[a+b*x]*Sin[a+b*x]^n,x]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[c-a/2] && ZeroQ[d-b/2] && Not[OddQ[n]]


(* ::Code:: *)
Int[u_*Sin[a_.+b_.*x_]^n_.,x_Symbol] :=
  Dist[2^n,Int[u*Cos[a/2+b*x/2]^n*Sin[a/2+b*x/2]^n,x]] /;
FreeQ[{a,b},x] && IntegerQ[n] && ZeroQ[a/2+b*x/2-FunctionOfTrig[u,x]]


(* ::Code:: *)
(* Int[u_*Sin[a_.+b_.*x_]^n_,x_Symbol] :=
  Sin[a+b*x]^n/(Sin[a/2+b*x/2]^n*Cos[a/2+b*x/2]^n)*Int[u*Cos[a/2+b*x/2]^n*Sin[a/2+b*x/2]^n,x] /;
FreeQ[{a,b},x] && FractionQ[n] && ZeroQ[a/2+b*x/2-FunctionOfTrig[u,x]] *)


(* ::Code:: *)
(* Int[u_*Sin[v_]^2,x_Symbol] :=
  Dist[1/2,Int[u,x]] - 
  Dist[1/2,Int[u*Cos[2*v],x]] /;
FunctionOfTrigQ[u,2*v,x] *)


(* ::Code:: *)
(* Int[u_*Cos[v_]^2,x_Symbol] :=
  Dist[1/2,Int[u,x]] + 
  Dist[1/2,Int[u*Cos[2*v],x]] /;
FunctionOfTrigQ[u,2*v,x] *)



(* ::Package:: *)

ImageFile=False;
If[ImageFile,
  imagesize=500; textsize=14,
  imagesize=Medium; textsize=10];


(* ::Subsection::Closed:: *)
(*Graphics Utility Functions*)


\[Epsilon]=0.02;
{xmin=-4, xmax=4, ymin=-4, ymax=4};


ShowText[text_, x_, y_] :=
  Sequence[Black, Text[Style[text,textsize], {x,y}]]

RotateText[text_, x_, y_] :=
  Sequence[Black, Rotate[Text[Style[text,textsize], {x,y}], -90 Degree]]

RotateText[text_, x_, y_, angle_] :=
  Sequence[Black, Rotate[Text[Style[text,textsize], {x,y}], angle]]


LabeledRectangle[text_, color_, {x1_, y1_}, {x2_, y2_}] :=
  LabeledRectangle[text, color, x1, y1, x2, y2, (x1+x2)/2, (y1+y2)/2]

LabeledRectangle[text_, color_, {x1_, y1_}, {x2_, y2_}, y3_] :=
  LabeledRectangle[text, color, x1, y1, x2, y2, (x1+x2)/2, y3]

LabeledRectangle[text_, color_, {x1_, y1_}, {x2_, y2_}, {x3_, y3_}] :=
  Sequence[color, Rectangle[{x1,y1},{x2,y2}], ShowText[text, x3, y3]]

LabeledRectangle[text_, color_, x1_, y1_, x2_, y2_] :=
  LabeledRectangle[text, color, x1, y1, x2, y2, (x1+x2)/2, (y1+y2)/2]

LabeledRectangle[text_, color_, x1_, y1_, x2_, y2_, y3_] :=
  LabeledRectangle[text, color, x1, y1, x2, y2, (x1+x2)/2, y3]

LabeledRectangle[text_, color_, x1_, y1_, x2_, y2_, x3_, y3_] :=
  Sequence[color, Rectangle[{x1,y1},{x2,y2}], ShowText[text, x3, y3]]


LabeledDisk[text_, x_, y_] :=
  Sequence[Cyan, Disk[{x,y},Scaled[1/60]], Black, Text[text,{x+If[ImageFile,0,\[Epsilon]/2],y}]]

BlackDisk[x_, y_] :=
  Sequence[Black, Disk[{x,y},Scaled[1/120]]]

TerminalRule[text_, x_, y_] :=
  Sequence[Lighter[Red,0.3], Disk[{x,y},Scaled[1/60]], White, Text[text,{x+If[ImageFile,0,\[Epsilon]/2],y}]]

DashedLine[{x1_, y1_}, {x2_, y2_}] :=
  Sequence[Thickness[0.007], Black, Dashing[{0.003,0.02}], Line[{{x1,y1},{x2,y2}}], Dashing[{}]]

DashedLine[x1_, y1_, x2_, y2_] :=
  DashedLine[{x1, y1}, {x2, y2}]


(* ::Subsection::Closed:: *)
(*Domain Map of Integration Rules for (sin(x)^j)^m (a+b sin(x)^k)^n when a^2!=b^2*)


Graphics[{
  LabeledRectangle["Rule 1a
\[LowerRightArrow]\[DownArrow]\[DownArrow]\[Diamond]", Red, xmin, 2, -1, ymax],

  LabeledRectangle["Rule 1b \[LowerRightArrow]\[DownArrow]\[Diamond]", Lighter[Red,0.4], xmin, 1, -1, 2],

  LabeledRectangle["Rule 1c \[LowerRightArrow]\[Diamond]", Lighter[Red,0.7], {xmin, 0}, {-1, 1}, 0.6],

  LabeledRectangle["Rule 2a
\[DownArrow]\[DownArrow]\[DownArrow]\[Diamond]", Lighter[Blue,0.5], -1, 2, 0, ymax],
  DashedLine[-1+\[Epsilon],ymax-\[Epsilon],-1+\[Epsilon],2+\[Epsilon]],

  LabeledRectangle["Rule 2b
\[LowerLeftArrow]\[DownArrow]\[Diamond]", Lighter[Blue,0.8], {0, 1}, {1, ymax}, (ymax+2)/2],

  LabeledRectangle["Rule 3a
\[LeftArrow]\[LeftArrow]\[LeftArrow]\[Diamond]", Green, {2, -1}, {xmax, ymax}, {(xmax+2)/2, (ymax+2)/2}],
  DashedLine[{2+\[Epsilon], -1+\[Epsilon]}, {xmax-\[Epsilon], -1+\[Epsilon]}],

  LabeledRectangle["Rule 3b
\[LowerLeftArrow]\[LeftArrow]\[Diamond]", Lighter[Green,0.7], {1, 0}, {2, ymax}, (ymax+2)/2],

  LabeledRectangle["Rule 4a
\[UpperLeftArrow]\[LeftArrow]\[LeftArrow]\[Diamond]", Pink, {2, ymin}, {xmax, -1}, -2.6],

  LabeledRectangle["Rule 4b
\[UpperLeftArrow]\[LeftArrow]\[Diamond]", Lighter[Pink,0.4], {1, ymin}, {2, -1}, -2.6],

  LabeledRectangle["Rule 5a
\[UpperLeftArrow]\[Diamond]", Lighter[Magenta,0.7], 0, ymin, 1, -1, -2.6],

  LabeledRectangle["Rule 5b
\[UpArrow]\[Diamond]", Lighter[Magenta,0.3], -1, ymin, 0, -1, -2.6],
  DashedLine[-1+\[Epsilon],-1-\[Epsilon],-1+\[Epsilon],ymin+\[Epsilon]],

  LabeledRectangle["Rule 6
\[RightArrow]\[Diamond]", Orange, xmin, ymin, -1, 0, -2.6],

  Thick, Green, Line[{{0,ymin+\[Epsilon]},{0,-1}}],
  RotateText["  Rule 7\[LeftArrow]\[LeftArrow]", 0.15, -3.25],

  Thick, Red, Line[{{0,1},{0,ymax-\[Epsilon]}}],
  RotateText["  Rule  8\[RightArrow]\[RightArrow]", 0.15, 2],

  Thick, Green, Line[{{xmin+\[Epsilon],0},{-1,0}}],
  ShowText["Rule 9 \[RightArrow]\[Diamond]", (xmin-1)/2, 0.13],

  Thick, Red, Line[{{1,0},{xmax-\[Epsilon],0}}],
  ShowText["Rule 10 \[LeftArrow]\[LeftArrow]\[Diamond]", (xmax+2)/2, 0.13],

  Thick, Lighter[Blue,0.5], Line[{{2,-1},{2,ymin+\[Epsilon]}}],
  RotateText[" Rule 11\[LowerLeftArrow]", 2.15, -3.5],

  Thick, Blue, Line[{{2,-1},{2,ymax-\[Epsilon]}}],
  RotateText["Rule  12 \[DownArrow]", 2.15, 2],

(*Thick, Blue, Line[{{3/2,-1},{3/2,1}}],
  RotateText["Rule  13\[DownArrow]\[Diamond]", 1.63, 0], *)

  Thick, Black, Line[{{xmin+\[Epsilon],1},{xmax-\[Epsilon],1}}],
  Thick, Black, Line[{{1,ymax-\[Epsilon]},{1,ymin+\[Epsilon]}}],

  Thick, Black, Line[{{xmin+\[Epsilon],2},{xmax-\[Epsilon],2}}],

  TerminalRule["a",0,1],
  TerminalRule["a",0,-1],
  TerminalRule["b",0,2],
  TerminalRule["b",0,-2],

  TerminalRule["c",-1,0],
  LabeledDisk["d",2,0],
  TerminalRule["e",1/2,0],
  TerminalRule["f",-1/2,0],
  TerminalRule["e",0,1/2],
  TerminalRule["f",0,-1/2],

  LabeledDisk["g",-1,-1],
  TerminalRule["h",-1,-1/2],
  TerminalRule["h",-1/2,-1],

  LabeledDisk["i",1/2,-1],
  LabeledDisk["i",-1,1/2],
  LabeledDisk["j",3/2,-1],
  LabeledDisk["j",-1,3/2],

  TerminalRule["k",-1/2,-1/2],
  LabeledDisk["l",1/2,1/2],
  LabeledDisk["m",1/2,-1/2],
  LabeledDisk["m",-1/2,1/2],

  LabeledDisk["n",1/2,-3/2],
  LabeledDisk["n",-3/2,1/2],
  LabeledDisk["o",3/2,-1/2],
  LabeledDisk["o",-1/2,3/2],
  LabeledDisk["p",3/2,-3/2],
  LabeledDisk["p",-3/2,3/2],
  LabeledDisk["q",-1/2,-3/2],
  LabeledDisk["q",-3/2,-1/2]
},
ImageSize->imagesize,
Axes->True,AxesLabel->{n,j k m}
]


(* ::Subsection::Closed:: *)
(*Domain Map of Integration Rules for (sin(x)^j)^m (A+B sin(x)^k) (a+b sin(x)^k)^n when a^2!=b^2*)


Graphics[{
  LabeledRectangle["Rule 1a
\[LowerRightArrow]\[DownArrow]\[Diamond]", Lighter[Red,0.3], {xmin, 1}, {-1, ymax}, {(xmin-1)/2, (ymax+1)/2}],

  LabeledRectangle["Rule 1b \[LowerRightArrow]\[Diamond]", Lighter[Red,0.5], {xmin, 0}, {-1, 1}, {(xmin-1)/2, 1/2}],
  Thick, White, Line[{{-1,0},{-1,1}}],

  LabeledRectangle["Rule 2
\[DownArrow]\[DownArrow]\[Diamond] ", Lighter[Blue,0.5], {-1, 1}, {0, ymax}, (ymax+1)/2],
  DashedLine[-1+\[Epsilon], ymax-\[Epsilon], -1+\[Epsilon], 1],

  LabeledRectangle["Rule 3a
\[LeftArrow]\[LeftArrow]\[Diamond]", Lighter[Green,0.2], {1, -1}, {xmax, ymax}, (ymax+1)/2],
  DashedLine[{1+\[Epsilon], -1+\[Epsilon]}, {xmax-\[Epsilon], -1+\[Epsilon]}],

  LabeledRectangle["Rule 3b
\[LowerLeftArrow]\[Diamond]", Lighter[Green,0.7], {0, 0}, {1, ymax}, (ymax+1)/2],

  LabeledRectangle["Rule 4a
\[UpperLeftArrow]\[LeftArrow]\[Diamond]", Pink, {1, ymin}, {xmax, -1}, (ymin-1)/2],

  LabeledRectangle["Rule 4b
\[UpperLeftArrow]\[Diamond]", Lighter[Pink,0.6], {0, ymin}, {1, -1}, (ymin-1)/2],

  LabeledRectangle["Rule 5
\[UpArrow]\[Diamond]", Magenta, {-1, ymin}, {0, -1-\[Epsilon]}, (ymin-1)/2],
  DashedLine[-1+\[Epsilon],-1-2\[Epsilon],-1+\[Epsilon],ymin+\[Epsilon]],

  LabeledRectangle["Rule 6
\[RightArrow]\[Diamond]", Orange, {xmin, ymin}, {-1, 0}, {(xmin-1)/2, (ymin-1)/2}],
  Thick, White, Line[{{-1,0-\[Epsilon]},{-1,-1}}],

  Thick, Lighter[Green,0.2], Line[{{0, ymin+\[Epsilon]}, {0, -1-\[Epsilon]}}],
  RotateText["Rule 7 \[LeftArrow]", 0.15, -3.25],

  Thick, Blue, Line[{{0, 0}, {0, ymax-\[Epsilon]}}],
  RotateText["Rule 8 \[RightArrow]", 0.15, 1.7],

  Thick, Lighter[Green,0.2], Line[{{xmin+\[Epsilon], 0}, {-1, 0}}],
  ShowText["Rule 9 \[RightArrow]", (xmin-1)/2, 0.13],

  Thick, Blue, Line[{{\[Epsilon], 0}, {xmax-\[Epsilon], 0}}],
  ShowText["Rule 10 \[LeftArrow]", (xmax+1)/2, 0.13],

  Thick, Yellow, Line[{{1,-1-\[Epsilon]},{1,ymin+\[Epsilon]}}],
  RotateText["Rule 11 \[LowerLeftArrow]", 1.15, (ymin-1)/2],

  Thick, Lighter[Magenta,0.5], Line[{{1,ymax-\[Epsilon]},{1,-1}}],
  RotateText["Rule 12 \[DownArrow]", 1.15, ymax/2],

  Thick, Yellow, Line[{{xmin+\[Epsilon],1},{-1-2\[Epsilon],1}}],
  ShowText["Rule 13 \[LowerRightArrow]", (xmin-1)/2, 1.13],

  Thick, Lighter[Magenta,0.5], Line[{{-1,1},{xmax-\[Epsilon],1}}],
  ShowText["Rule 14 \[DownArrow]", (xmax+1)/2, 1.13],

  LabeledDisk["a",0,-1],
  LabeledDisk["b",0,1/2],
  LabeledDisk["b",0,-1/2],

  LabeledDisk["c",1,0],
  LabeledDisk["d",-1,0],
  LabeledDisk["e",-1/2,0],
  LabeledDisk["f",-3/2,0],
  LabeledDisk["f",1/2,0],

  LabeledDisk["g",-1,-1],

  LabeledDisk["h",-1,1/2],
  LabeledDisk["h",-1,-1/2],
  LabeledDisk["i",1/2,-1],
  LabeledDisk["i",-1/2,-1],

  LabeledDisk["j",-1/2,-1/2],
  LabeledDisk["k",1/2,-1/2],
  LabeledDisk["k",-1/2,1/2],

  LabeledDisk["l",-1/2,-3/2],
  LabeledDisk["m",-3/2,-1/2],
  LabeledDisk["n",1/2,-3/2],
  LabeledDisk["o",-3/2,1/2]
},
ImageSize->imagesize,
Axes->True,AxesLabel->{n,j k m}
]


(* ::Subsection::Closed:: *)
(*Domain Map of Integration Rules for (sin(x)^j)^m (A+B sin(x)^k+C sin(x)^(2k)) (a+b sin(x)^k)^n when a^2!=b^2*)
(**)


Graphics[{
  LabeledRectangle["Rule 1 \[LowerRightArrow]", Red, {xmin, 0}, {-1, ymax}, (ymax+1)/2],

  LabeledRectangle["Rule 2 \[DownArrow]", Lighter[Blue,0.5], {-1, 0}, {0, ymax}, (ymax+1)/2],
  Thick, Lighter[Blue,0.5], Line[{{-1, ymax-\[Epsilon]},{-1, 0}}],
  DashedLine[{-1+\[Epsilon], ymax-\[Epsilon]}, {-1+\[Epsilon], 0}],

  LabeledRectangle["Rule 3 \[LeftArrow]", Green, {0, -1}, {xmax, ymax}, (ymax+1)/2],
  DashedLine[{0+\[Epsilon], -1+\[Epsilon]}, {xmax-\[Epsilon], -1+\[Epsilon]}],

  LabeledRectangle["Rule 4 \[UpperLeftArrow]", Pink, {0,ymin},{xmax,-1}],

  LabeledRectangle["Rule 5 \[UpArrow]", Magenta, {-1, ymin}, {0, -1}, -2.5],
  Thick, Magenta, Line[{{-1,-1-\[Epsilon]},{-1,ymin+\[Epsilon]}}],
  DashedLine[{-1+\[Epsilon], -1-2\[Epsilon]}, {-1+\[Epsilon], ymin+\[Epsilon]}],

  LabeledRectangle["Rule 6 \[RightArrow]", Orange, {xmin, ymin}, {-1, 0}, -2.5],
  Thick, White, Line[{{-1,0-\[Epsilon]},{-1,-1}}],

  Thick, Yellow, Line[{{0,ymin+\[Epsilon]},{0,-1-\[Epsilon]}}],
  RotateText["Rule 7\[LeftArrow]\[Diamond]", 0.15, -2.5],

  Thick, Brown, Line[{{0,-1},{0,ymax-\[Epsilon]}}],
  RotateText["Rule 8\[Diamond]", 0.15, 2],

  Thick, Lighter[Green, 0.3], Line[{{xmin+\[Epsilon],0},{-1,0}}],
  ShowText["Rule 9 \[RightArrow]\[Diamond]", (xmin-1)/2, 0.13],

  Thick, Blue, Line[{{-1,0},{xmax-\[Epsilon],0}}],
  ShowText["Rule 10\[Diamond]", xmax/2, 0.13],

  LabeledDisk["a",-1,0],
  LabeledDisk["b",-1,-1],
  LabeledDisk["c",-1,-1/2],
  LabeledDisk["d",-1/2,-1],
  LabeledDisk["e",-1/2,-1/2],
  LabeledDisk["f",-1/2,-3/2],
  LabeledDisk["g",-3/2,-1/2]
},
ImageSize->imagesize,
Axes->True,AxesLabel->{n,j k m}
]


(* ::Subsection::Closed:: *)
(*Domain Map of Integration Rules for (sin(x)^j)^m (a+b sin(x)^k)^n when a^2=b^2*)


Graphics[{
  LabeledRectangle["Rule 1a \[LowerRightArrow]\[DownArrow]\[Diamond]", Red, {xmin, 1}, {-1, ymax}, (ymax+2)/2],
  DashedLine[{-1-\[Epsilon], ymax-\[Epsilon]}, {-1-\[Epsilon], 1+\[Epsilon]}],

  LabeledRectangle["Rule 1b \[LowerRightArrow]\[Diamond]", Lighter[Red,0.5], {xmin, 0}, {-1, 1}, {(xmin-2.5)/2, 0.5}],
  DashedLine[{-1-\[Epsilon], 1}, {-1-\[Epsilon], 0}],

  LabeledRectangle["Rule 2\[DownArrow]\[DownArrow]\[Diamond]", Lighter[Blue,0.7], {-1, 1}, {0, ymax}, (ymax+2)/2],
  Thick, White, Line[{{0,1},{1/2,3/2}}],

  LabeledRectangle["Rule 3a \[LeftArrow]\[LeftArrow]\[Diamond]", Lighter[Green,0.2], {1, -1}, {xmax, ymax}, {(xmax+2)/2, (ymax+2)/2}],
  DashedLine[{1+\[Epsilon], -1+\[Epsilon]}, {xmax-\[Epsilon], -1+\[Epsilon]}],

  LabeledRectangle["Rule 3b
\[LowerLeftArrow]  \[Diamond]", Lighter[Green,0.7], {0, 0}, {1, ymax}, (ymax+2)/2],

  LabeledRectangle["Rule 4a \[UpperLeftArrow]\[LeftArrow]\[Diamond]", Pink, {1, -1}, {xmax, ymin}, {(xmax+2)/2, (ymin-1)/2}],

  LabeledRectangle["Rule 4b  
\[UpperLeftArrow]  \[Diamond]", Lighter[Pink,0.6], {0, ymin}, {1, -1}, -2.1],

  LabeledRectangle["Rule 5 \[UpArrow]\[Diamond]", Magenta, {-1, ymin}, {0, -1}, (ymin-1)/2],

  LabeledRectangle["Rule 6 \[RightArrow]\[Diamond]", Orange, {xmin, ymin}, {-1, 0}, ymin/2],
  DashedLine[{-1-\[Epsilon], 0}, {-1-\[Epsilon], ymin+\[Epsilon]}],

  Thick, Green, Line[{{xmin+\[Epsilon], 0}, {-1, 0}}],
  ShowText["Rule 7 \[RightArrow]", (xmin-2)/2, 0.13],

  Thick, Red, Line[{{1, 0}, {xmax-\[Epsilon], 0}}],
  ShowText["Rule 8 \[LeftArrow]", (xmax+2)/2, 0.13],

  Thick, Green, Line[{{1/2, -1-\[Epsilon]}, {1/2, ymin+\[Epsilon]}}],
  RotateText["Rule 9 \[LeftArrow]", 0.65, -3.4],

  Thick, Orange, Line[{{1/2, ymax-\[Epsilon]}, {1/2, 0+\[Epsilon]}}],
  RotateText["Rule  10\[RightArrow]", 0.65, 2],

  Thick, Yellow, Line[{{0, -1}, {-ymin-1, ymin}}],
  RotateText["Rule 11 \[LeftArrow]", 2.6, -3.4, -45 Degree],

  Thick, Blue, Line[{{xmin+\[Epsilon], -xmin-\[Epsilon]-1}, {-1-\[Epsilon], \[Epsilon]}}],
  RotateText["Rule 12 \[RightArrow]", -2.3, 1.5, -45 Degree],

  Thick, Yellow, Line[{{-1, -1}, {-ymin-2, ymin}}],
  RotateText["Rule 13 \[UpperLeftArrow]", 1.6, -3.4, -45 Degree],

  Thick, Blue, Line[{{xmin+\[Epsilon], -xmin-\[Epsilon]-2}, {-1-\[Epsilon], -1+\[Epsilon]}}],
  RotateText["Rule 14 \[UpperRightArrow]", -3.35, 1.55, -45 Degree],

  Thick, Black, Line[{{0,ymax-\[Epsilon]},{0,ymin+\[Epsilon]}}],
  Thick, Black, Line[{{1,ymax-\[Epsilon]},{1,ymin+\[Epsilon]}}],
  Thick, Black, Line[{{2,ymax-\[Epsilon]},{2,ymin+\[Epsilon]}}],

  Thick, Black, Line[{{xmin+\[Epsilon],1},{xmax-\[Epsilon],1}}],
  Thick, Black, Line[{{xmin+\[Epsilon],2},{xmax-\[Epsilon],2}}],

  TerminalRule["a",-1,0],
  TerminalRule["b",1/2,0],
  TerminalRule["c",-1/2,0],

  TerminalRule["d",1/2,-1],
  LabeledDisk["e",-1/2,-1],
  TerminalRule["f",-1/2,-1/2],
  TerminalRule["g",1/2,-1/2],
  LabeledDisk["h",-1/2,1/2],

  LabeledDisk["i",-2,1/2],
  LabeledDisk["i",-2,3/2]
},
ImageSize->imagesize,
Axes->True,AxesLabel->{n,j k m}
]


(* ::Subsection::Closed:: *)
(*Domain Map of Integration Rules for (sin(x)^j)^m (A+B sin(x)^k) (a+b sin(x)^k)^n when a^2=b^2*)


Graphics[{
  LabeledRectangle["Rule 1 \[LowerRightArrow]", Red, {xmin, 0}, {-1, ymax}, 2.5],
  DashedLine[-1-\[Epsilon],ymax-\[Epsilon],-1-\[Epsilon],0+\[Epsilon]],

  LabeledRectangle["Rule 2 \[DownArrow]", Lighter[Blue,0.7], {-1, 0}, {0, ymax}, 2.5],

  LabeledRectangle["Rule 3 \[LeftArrow]", Green, {0, -1-\[Epsilon]}, {xmax, ymax}, 2.5],
  DashedLine[{0+\[Epsilon], -1+\[Epsilon]}, {xmax-\[Epsilon], -1+\[Epsilon]}],

  LabeledRectangle["Rule 4 \[UpperLeftArrow]", Pink, {0, -1}, {xmax, ymin}],

  LabeledRectangle["Rule 5 \[UpArrow]", Magenta, {-1, ymin}, {0, -1-\[Epsilon]}, -2.5],

  LabeledRectangle["Rule 6 \[RightArrow]", Orange, {xmin, ymin}, {-1, 0}, -2.5],
  DashedLine[-1-\[Epsilon], 0, -1-\[Epsilon], ymin+\[Epsilon]],

  Thick, Green, Line[{{xmin+\[Epsilon],0},{-1,0}}],
  ShowText["Rule 7 \[RightArrow]\[Diamond]", (-2+xmin)/2, 0.13],

  Thick, Red, Line[{{-1+\[Epsilon],0},{xmax-\[Epsilon],0}}],
  ShowText["Rule 8\[Diamond]", xmax/2, 0.13],

  Thick, Yellow, Line[{{-1,-1},{-ymin-2,ymin}}],
  RotateText["Rule 11 \[UpperLeftArrow]\[Diamond]", 1.6, -3.39, -45 Degree],

  Thick, Blue, Line[{{xmin,-xmin-2},{-1-\[Epsilon],-1}}],
  RotateText["Rule 12 \[UpperRightArrow]\[Diamond]", -2.5, 0.7, -45 Degree],

  Thick, Green, Line[{{1/2,-1-\[Epsilon]},{1/2,ymin+\[Epsilon]}}],
  RotateText[" Rule 9 \[LeftArrow]\[Diamond]", 0.65, -3.4],

  Thick, Orange, Line[{{1/2,ymax-\[Epsilon]},{1/2,-1+\[Epsilon]}}],
  RotateText["Rule 10\[Diamond]", 0.65, 1.5],

  LabeledDisk["a",-1,0],
  LabeledDisk["b",-1/2,0],

  LabeledDisk["c",-1/2,-1],
  LabeledDisk["d",-1/2,-1/2],

  BlackDisk[-1, 1]
},
ImageSize->imagesize,
Axes->True,AxesLabel->{n,j k m}
]


(* ::Subsection::Closed:: *)
(*Domain Map of Integration Rules for (sin(x)^j)^m (A+B sin(x)^k+C sin(x)^(2k)) (a+b sin(x)^k)^n when a^2=b^2*)


Graphics[{
  LabeledRectangle["Rule 1 \[RightArrow]\[Diamond]", Red, {xmin, ymin}, {-1, ymax}, ymax/2],
  DashedLine[{-1-\[Epsilon], ymax-\[Epsilon]}, {-1-\[Epsilon], ymin+\[Epsilon]}],

  LabeledRectangle["Rule 2 \[UpArrow]\[Diamond]", Magenta, {-1, ymin}, {xmax, -1}, {xmax/2, -5/2}],

  LabeledRectangle["Rule 3\[Diamond]", Green, {-1, -1}, {xmax, ymax}, {xmax/2, ymax/2}],
  DashedLine[{-1-\[Epsilon], -1+\[Epsilon]}, {xmax-\[Epsilon], -1+\[Epsilon]}],

  Thick, Lighter[Blue,0.5], Line[{{xmin+\[Epsilon], 0}, {-1-\[Epsilon], 0}}],
  ShowText["Rule 4 \[RightArrow]\[Diamond]", (xmin-1)/2, 0.13],

  Thick, Black, Line[{{-1, 0}, {xmax-\[Epsilon],0}}]
},
ImageSize->imagesize,
Axes->True,AxesLabel->{n,j k m}
]
(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.*(Sin[c_.+d_.*x_]^k_.)^p_+B_.*(Sin[c_.+d_.*x_]^k_.)^q_),x_Symbol] :=
  Int[(Sin[c+d*x]^j)^(m+j*k*p)*(A+B*Sin[c+d*x]^k),x] /;
FreeQ[{c,d,A,B,m,p},x] && ZeroQ[j^2-1] && ZeroQ[k^2-1] && ZeroQ[p+1-q] && 
  (ZeroQ[j-k] || IntegerQ[p]) && p!=-2


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.*(Sin[c_.+d_.*x_]^k_.)^p_+B_.*(Sin[c_.+d_.*x_]^k_.)^q_),x_Symbol] :=
  Int[(Sin[c+d*x]^k)^(p-m)*(A+B*Sin[c+d*x]^k),x] /;
FreeQ[{c,d,A,B,m,p},x] && ZeroQ[k^2-1] && ZeroQ[j+k] && ZeroQ[p+1-q] && IntegerQ[m] && 
  Not[IntegerQ[p]]


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.*(Sin[c_.+d_.*x_]^k_.)^p_+B_.*(Sin[c_.+d_.*x_]^k_.)^q_),x_Symbol] :=
  Dist[Sqrt[Csc[c+d*x]]*Sqrt[Sin[c+d*x]],
    Int[(Sin[c+d*x]^k)^(p-m)*(A+B*Sin[c+d*x]^k),x]] /;
FreeQ[{c,d,A,B,m,p},x] && ZeroQ[k^2-1] && ZeroQ[j+k] && ZeroQ[p+1-q] && IntegerQ[m-1/2] && 
  Not[IntegerQ[p]]


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.*(Sin[c_.+d_.*x_]^k_.)^p_+B_.*(Sin[c_.+d_.*x_]^k_.)^q_),x_Symbol] :=
  Dist[Sqrt[Csc[c+d*x]]*Sqrt[Sin[c+d*x]],
    Int[(Sin[c+d*x]^j)^(m-p)*(A+B*Sin[c+d*x]^k),x]] /;
FreeQ[{c,d,A,B,m,p},x] && ZeroQ[k^2-1] && ZeroQ[j+k] && ZeroQ[p+1-q] && IntegerQ[p-1/2] && 
  Not[IntegerQ[2*m]]


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.*(Sin[c_.+d_.*x_]^k_.)^p_.+C_.*(Sin[c_.+d_.*x_]^k_.)^r_),x_Symbol] :=
  Int[(Sin[c+d*x]^j)^(m+j*k*p)*(A+C*Sin[c+d*x]^(2*k)),x] /;
FreeQ[{c,d,A,C,m,p},x] && ZeroQ[j^2-1] && ZeroQ[k^2-1] && ZeroQ[p+2-r] && 
  (ZeroQ[j-k] || IntegerQ[p])


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.*(Sin[c_.+d_.*x_]^k_.)^p_+C_.*(Sin[c_.+d_.*x_]^k_.)^r_),x_Symbol] :=
  Int[(Sin[c+d*x]^k)^(p-m)*(A+C*Sin[c+d*x]^(2*k)),x] /;
FreeQ[{c,d,A,C,m,p},x] && ZeroQ[k^2-1] && ZeroQ[j+k] && ZeroQ[p+2-r] && IntegerQ[m] && 
  Not[IntegerQ[p]]


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.*(Sin[c_.+d_.*x_]^k_.)^p_+C_.*(Sin[c_.+d_.*x_]^k_.)^r_),x_Symbol] :=
  Dist[Sqrt[Csc[c+d*x]]*Sqrt[Sin[c+d*x]],
    Int[(Sin[c+d*x]^k)^(p-m)*(A+C*Sin[c+d*x]^(2*k)),x]] /;
FreeQ[{c,d,A,C,m,p},x] && ZeroQ[k^2-1] && ZeroQ[j+k] && ZeroQ[p+2-r] && IntegerQ[m-1/2] && 
  Not[IntegerQ[p]]


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.*(Sin[c_.+d_.*x_]^k_.)^p_+C_.*(Sin[c_.+d_.*x_]^k_.)^r_),x_Symbol] :=
  Dist[Sqrt[Csc[c+d*x]]*Sqrt[Sin[c+d*x]],
    Int[(Sin[c+d*x]^j)^(m-p)*(A+C*Sin[c+d*x]^(2*k)),x]] /;
FreeQ[{c,d,A,C,m,p},x] && ZeroQ[k^2-1] && ZeroQ[j+k] && ZeroQ[p+2-r] && IntegerQ[p-1/2] && 
  Not[IntegerQ[2*m]]


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.+B_.*Sin[c_.+d_.*x_]+C_.*Sin[c_.+d_.*x_]^(-1)),x_Symbol] :=
  Int[(Sin[c+d*x]^j)^(m-j)*(C+A*Sin[c+d*x]+B*Sin[c+d*x]^2),x] /;
FreeQ[{c,d,A,B,C,m},x] && ZeroQ[j^2-1]


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*
    (A_.*(Sin[c_.+d_.*x_]^k_.)^p_.+B_.*(Sin[c_.+d_.*x_]^k_.)^q_+C_.*(Sin[c_.+d_.*x_]^k_.)^r_),x_Symbol] :=
  Int[(Sin[c+d*x]^j)^(m+j*k*p)*(A+B*Sin[c+d*x]^k+C*Sin[c+d*x]^(2*k)),x] /;
FreeQ[{c,d,A,B,C,m,p},x] && ZeroQ[j^2-1] && ZeroQ[k^2-1] && ZeroQ[p+1-q] && ZeroQ[p+2-r] && 
  (ZeroQ[j-k] || IntegerQ[p])


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*
    (A_.*(Sin[c_.+d_.*x_]^k_.)^p_+B_.*(Sin[c_.+d_.*x_]^k_.)^q_+C_.*(Sin[c_.+d_.*x_]^k_.)^r_),x_Symbol] :=
  Int[(Sin[c+d*x]^k)^(p-m)*(A+B*Sin[c+d*x]^k+C*Sin[c+d*x]^(2*k)),x] /;
FreeQ[{c,d,A,B,C,m,p},x] && ZeroQ[k^2-1] && ZeroQ[j+k] && ZeroQ[p+1-q] && ZeroQ[p+2-r] && 
  IntegerQ[m] && Not[IntegerQ[p]]


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*
    (A_.*(Sin[c_.+d_.*x_]^k_.)^p_+B_.*(Sin[c_.+d_.*x_]^k_.)^q_+C_.*(Sin[c_.+d_.*x_]^k_.)^r_),x_Symbol] :=
  Dist[Sqrt[Csc[c+d*x]]*Sqrt[Sin[c+d*x]],
    Int[(Sin[c+d*x]^k)^(p-m)*(A+B*Sin[c+d*x]^k+C*Sin[c+d*x]^(2*k)),x]] /;
FreeQ[{c,d,A,B,C,m,p},x] && ZeroQ[k^2-1] && ZeroQ[j+k] && ZeroQ[p+1-q] && ZeroQ[p+2-r] && 
  IntegerQ[m-1/2] && Not[IntegerQ[p]]


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*
    (A_.*(Sin[c_.+d_.*x_]^k_.)^p_+B_.*(Sin[c_.+d_.*x_]^k_.)^q_+C_.*(Sin[c_.+d_.*x_]^k_.)^r_),x_Symbol] :=
  Dist[Sqrt[Csc[c+d*x]]*Sqrt[Sin[c+d*x]],
    Int[(Sin[c+d*x]^j)^(m-p)*(A+B*Sin[c+d*x]^k+C*Sin[c+d*x]^(2*k)),x]] /;
FreeQ[{c,d,A,B,C,m,p},x] && ZeroQ[k^2-1] && ZeroQ[j+k] && ZeroQ[p+1-q] && ZeroQ[p+2-r] && 
  IntegerQ[p-1/2] && Not[IntegerQ[2*m]]


Int[(A_.*(Sin[c_.+d_.*x_]^k_.)^p_+B_.*(Sin[c_.+d_.*x_]^k_.)^q_)*(a_.+b_.*Sin[c_.+d_.*x_]^k_.)^n_.,x_Symbol] :=
  Int[(Sin[c+d*x]^k)^p*(A+B*Sin[c+d*x]^k)*(a+b*Sin[c+d*x]^k)^n,x] /;
FreeQ[{a,b,c,d,A,B,n,p},x] && ZeroQ[k^2-1] && ZeroQ[p+1-q] && Not[a===0 && b===1]


Int[(A_+B_.*Sin[c_.+d_.*x_]^i_.)*(a_.+b_.*Sin[c_.+d_.*x_]^k_.)^n_.,x_Symbol] :=
  Int[Sin[c+d*x]^(-k)*(B+A*Sin[c+d*x]^k)*(a+b*Sin[c+d*x]^k)^n,x] /;
FreeQ[{a,b,c,d,A,B,n},x] && ZeroQ[k^2-1] && ZeroQ[k+i] && Not[a===0 && b===1]


Int[(A_.*(Sin[c_.+d_.*x_]^i_.)^p_+B_.*(Sin[c_.+d_.*x_]^i_.)^q_)*(a_.+b_.*Sin[c_.+d_.*x_]^k_.)^n_.,x_Symbol] :=
  Int[(Sin[c+d*x]^(-k))^(p+1)*(B+A*Sin[c+d*x]^k)*(a+b*Sin[c+d*x]^k)^n,x] /;
FreeQ[{a,b,c,d,A,B,n,p},x] && ZeroQ[k^2-1] && ZeroQ[k+i] && ZeroQ[p+1-q] && 
  Not[a===0 && b===1] && p!=-2


Int[(A_.*(Sin[c_.+d_.*x_]^k_.)^p_.+C_.*(Sin[c_.+d_.*x_]^k_.)^r_)*
    (a_.+b_.*Sin[c_.+d_.*x_]^k_.)^n_.,x_Symbol] :=
  Int[(Sin[c+d*x]^k)^p*(A+C*Sin[c+d*x]^(2*k))*(a+b*Sin[c+d*x]^k)^n,x] /;
FreeQ[{a,b,c,d,A,C,n,p},x] && ZeroQ[k^2-1] && ZeroQ[p+2-r]


Int[(A_+C_.*Sin[c_.+d_.*x_]^i2_)*(a_.+b_.*Sin[c_.+d_.*x_]^k_.)^n_.,x_Symbol] :=
  Int[Sin[c+d*x]^(-2*k)*(C+A*Sin[c+d*x]^(2*k))*(a+b*Sin[c+d*x]^k)^n,x] /;
FreeQ[{a,b,c,d,A,C,n},x] && ZeroQ[k^2-1] && ZeroQ[k+i2/2]


Int[(A_.*(Sin[c_.+d_.*x_]^i_.)^p_.+C_.*(Sin[c_.+d_.*x_]^i_.)^r_)*(a_.+b_.*Sin[c_.+d_.*x_]^k_.)^n_.,x_Symbol] :=
  Int[(Sin[c+d*x]^(-k))^(p+2)*(C+A*Sin[c+d*x]^(2*k))*(a+b*Sin[c+d*x]^k)^n,x] /;
FreeQ[{a,b,c,d,A,C,n,p},x] && ZeroQ[k^2-1] && ZeroQ[k+i] && ZeroQ[p+2-r]


Int[(A_.+B_.*Sin[c_.+d_.*x_]^k_.+C_.*Sin[c_.+d_.*x_]^l_.)*(a_.+b_.*Sin[c_.+d_.*x_]^k_.)^n_.,x_Symbol] :=
  Int[Sin[c+d*x]^(-k)*(C+A*Sin[c+d*x]^k+B*Sin[c+d*x]^(2*k))*(a+b*Sin[c+d*x]^k)^n,x] /;
FreeQ[{a,b,c,d,A,B,C,n},x] && ZeroQ[k^2-1] && ZeroQ[k+l]


Int[(A_.*(Sin[c_.+d_.*x_]^k_.)^p_.+B_.*(Sin[c_.+d_.*x_]^k_.)^q_+C_.*(Sin[c_.+d_.*x_]^k_.)^r_)*
    (a_.+b_.*Sin[c_.+d_.*x_]^k_.)^n_.,x_Symbol] :=
  Int[(Sin[c+d*x]^k)^p*(A+B*Sin[c+d*x]^k+C*Sin[c+d*x]^(2*k))*(a+b*Sin[c+d*x]^k)^n,x] /;
FreeQ[{a,b,c,d,A,B,C,n,p},x] && ZeroQ[k^2-1] && ZeroQ[p+1-q] && ZeroQ[p+2-r]


Int[(A_.+B_.*Sin[c_.+d_.*x_]^i_.+C_.*Sin[c_.+d_.*x_]^i2_)*(a_.+b_.*Sin[c_.+d_.*x_]^k_.)^n_.,x_Symbol] :=
  Int[Sin[c+d*x]^(-2*k)*(C+B*Sin[c+d*x]^k+A*Sin[c+d*x]^(2*k))*(a+b*Sin[c+d*x]^k)^n,x] /;
FreeQ[{a,b,c,d,A,B,C,n},x] && ZeroQ[k^2-1] && ZeroQ[k+i] && ZeroQ[2*i-i2]


Int[(A_.*(Sin[c_.+d_.*x_]^i_.)^p_.+B_.*(Sin[c_.+d_.*x_]^i_.)^q_+C_.*(Sin[c_.+d_.*x_]^i_.)^r_)*
    (a_.+b_.*Sin[c_.+d_.*x_]^k_.)^n_.,x_Symbol] :=
  Int[(Sin[c+d*x]^(-k))^(p+2)*(C+B*Sin[c+d*x]^k+A*Sin[c+d*x]^(2*k))*(a+b*Sin[c+d*x]^k)^n,x] /;
FreeQ[{a,b,c,d,A,B,C,n,p},x] && ZeroQ[k^2-1] && ZeroQ[k+i] && ZeroQ[p+1-q] && ZeroQ[p+2-r]


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.*(Sin[c_.+d_.*x_]^k_.)^p_+B_.*(Sin[c_.+d_.*x_]^k_.)^q_)*
    (a_.+b_.*Sin[c_.+d_.*x_]^k_.)^n_.,x_Symbol] :=
  Int[(Sin[c+d*x]^j)^(m+j*k*p)*(A+B*Sin[c+d*x]^k)*(a+b*Sin[c+d*x]^k)^n,x] /;
FreeQ[{a,b,c,d,A,B,m,n,p},x] && ZeroQ[j^2-1] && ZeroQ[k^2-1] && ZeroQ[p+1-q] && 
  (ZeroQ[j-k] || IntegerQ[p])


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.*(Sin[c_.+d_.*x_]^k_.)^p_+B_.*(Sin[c_.+d_.*x_]^k_.)^q_)*
    (a_.+b_.*Sin[c_.+d_.*x_]^k_.)^n_.,x_Symbol] :=
  Int[(Sin[c+d*x]^k)^(p-m)*(A+B*Sin[c+d*x]^k)*(a+b*Sin[c+d*x]^k)^n,x] /;
FreeQ[{a,b,c,d,A,B,m,n,p},x] && ZeroQ[k^2-1] && ZeroQ[j+k] && ZeroQ[p+1-q] && 
  IntegerQ[m] && Not[IntegerQ[p]]


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.*(Sin[c_.+d_.*x_]^k_.)^p_+B_.*(Sin[c_.+d_.*x_]^k_.)^q_)*
    (a_.+b_.*Sin[c_.+d_.*x_]^k_.)^n_.,x_Symbol] :=
  Dist[Sqrt[Csc[c+d*x]]*Sqrt[Sin[c+d*x]],
    Int[(Sin[c+d*x]^k)^(p-m)*(A+B*Sin[c+d*x]^k)*(a+b*Sin[c+d*x]^k)^n,x]] /;
FreeQ[{a,b,c,d,A,B,m,n,p},x] && ZeroQ[k^2-1] && ZeroQ[j+k] && ZeroQ[p+1-q] && 
  IntegerQ[m-1/2] && Not[IntegerQ[p]]


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.*(Sin[c_.+d_.*x_]^k_.)^p_+B_.*(Sin[c_.+d_.*x_]^k_.)^q_)*
    (a_.+b_.*Sin[c_.+d_.*x_]^k_.)^n_.,x_Symbol] :=
  Dist[Sqrt[Csc[c+d*x]]*Sqrt[Sin[c+d*x]],
    Int[(Sin[c+d*x]^j)^(m-p)*(A+B*Sin[c+d*x]^k)*(a+b*Sin[c+d*x]^k)^n,x]] /;
FreeQ[{a,b,c,d,A,B,m,n,p},x] && ZeroQ[k^2-1] && ZeroQ[j+k] && ZeroQ[p+1-q] && 
  IntegerQ[p-1/2] && Not[IntegerQ[2*m]]


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.+B_.*Sin[c_.+d_.*x_]^i_.)*(a_.+b_.*Sin[c_.+d_.*x_]^k_.)^n_.,x_Symbol] :=
  Int[(Sin[c+d*x]^j)^(m-j*k)*(B+A*Sin[c+d*x]^k)*(a+b*Sin[c+d*x]^k)^n,x] /;
FreeQ[{a,b,c,d,A,B,m,n},x] && ZeroQ[j^2-1] && ZeroQ[k^2-1] && ZeroQ[k+i]


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.*(Sin[c_.+d_.*x_]^i_.)^p_+B_.*(Sin[c_.+d_.*x_]^i_.)^q_)*
    (a_.+b_.*Sin[c_.+d_.*x_]^k_.)^n_.,x_Symbol] :=
  Int[(Sin[c+d*x]^j)^(m-j*k*(p+1))*(B+A*Sin[c+d*x]^k)*(a+b*Sin[c+d*x]^k)^n,x] /;
FreeQ[{a,b,c,d,A,B,m,n,p},x] && ZeroQ[j^2-1] && ZeroQ[k^2-1] && ZeroQ[k+i] && 
  ZeroQ[p+1-q] && (ZeroQ[j+k] || IntegerQ[p]) && p!=-2


Int[(Sin[c_.+d_.*x_]^k_.)^m_.*(A_.*(Sin[c_.+d_.*x_]^i_.)^p_+B_.*(Sin[c_.+d_.*x_]^i_.)^q_)*
    (a_.+b_.*Sin[c_.+d_.*x_]^k_.)^n_.,x_Symbol] :=
  Int[(Sin[c+d*x]^(-k))^(p-m+1)*(B+A*Sin[c+d*x]^k)*(a+b*Sin[c+d*x]^k)^n,x] /;
FreeQ[{a,b,c,d,A,B,m,n,p},x] && ZeroQ[k^2-1] && ZeroQ[k+i] && ZeroQ[p+1-q] && 
  IntegerQ[m] && Not[IntegerQ[p]]


Int[(Sin[c_.+d_.*x_]^k_.)^m_.*(A_.*(Sin[c_.+d_.*x_]^i_.)^p_+B_.*(Sin[c_.+d_.*x_]^i_.)^q_)*
    (a_.+b_.*Sin[c_.+d_.*x_]^k_.)^n_.,x_Symbol] :=
  Dist[Sqrt[Csc[c+d*x]]*Sqrt[Sin[c+d*x]],
    Int[(Sin[c+d*x]^(-k))^(p-m+1)*(B+A*Sin[c+d*x]^k)*(a+b*Sin[c+d*x]^k)^n,x]] /;
FreeQ[{a,b,c,d,A,B,m,n,p},x] && ZeroQ[k^2-1] && ZeroQ[k+i] && ZeroQ[p+1-q] && 
  IntegerQ[m-1/2] && Not[IntegerQ[p]]


Int[(Sin[c_.+d_.*x_]^k_.)^m_.*(A_.*(Sin[c_.+d_.*x_]^i_.)^p_+B_.*(Sin[c_.+d_.*x_]^i_.)^q_)*
    (a_.+b_.*Sin[c_.+d_.*x_]^k_.)^n_.,x_Symbol] :=
  Dist[Sqrt[Csc[c+d*x]]*Sqrt[Sin[c+d*x]],
    Int[(Sin[c+d*x]^k)^(m-p-1)*(B+A*Sin[c+d*x]^k)*(a+b*Sin[c+d*x]^k)^n,x]] /;
FreeQ[{a,b,c,d,A,B,m,n,p},x] && ZeroQ[k^2-1] && ZeroQ[k+i] && ZeroQ[p+1-q] && 
  IntegerQ[p-1/2] && Not[IntegerQ[2*m]]


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.*(Sin[c_.+d_.*x_]^k_.)^p_.+C_.*(Sin[c_.+d_.*x_]^k_.)^r_)*
    (a_.+b_.*Sin[c_.+d_.*x_]^k_.)^n_.,x_Symbol] :=
  Int[(Sin[c+d*x]^j)^(m+j*k*p)*(A+C*Sin[c+d*x]^(2*k))*(a+b*Sin[c+d*x]^k)^n,x] /;
FreeQ[{a,b,c,d,A,C,m,n,p},x] && ZeroQ[j^2-1] && ZeroQ[k^2-1] && ZeroQ[p+2-r] && 
  (ZeroQ[j-k] || IntegerQ[p])


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.*(Sin[c_.+d_.*x_]^k_.)^p_+C_.*(Sin[c_.+d_.*x_]^k_.)^r_)*
    (a_.+b_.*Sin[c_.+d_.*x_]^k_.)^n_.,x_Symbol] :=
  Int[(Sin[c+d*x]^k)^(p-m)*(A+C*Sin[c+d*x]^(2*k))*(a+b*Sin[c+d*x]^k)^n,x] /;
FreeQ[{a,b,c,d,A,C,m,n,p},x] && ZeroQ[k^2-1] && ZeroQ[j+k] && ZeroQ[p+2-r] && 
  IntegerQ[m] && Not[IntegerQ[p]]


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.*(Sin[c_.+d_.*x_]^k_.)^p_+C_.*(Sin[c_.+d_.*x_]^k_.)^r_)*
    (a_.+b_.*Sin[c_.+d_.*x_]^k_.)^n_.,x_Symbol] :=
  Dist[Sqrt[Csc[c+d*x]]*Sqrt[Sin[c+d*x]],
    Int[(Sin[c+d*x]^k)^(p-m)*(A+C*Sin[c+d*x]^(2*k))*(a+b*Sin[c+d*x]^k)^n,x]] /;
FreeQ[{a,b,c,d,A,C,m,n,p},x] && ZeroQ[k^2-1] && ZeroQ[j+k] && ZeroQ[p+2-r] && 
  IntegerQ[m-1/2] && Not[IntegerQ[p]]


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.*(Sin[c_.+d_.*x_]^k_.)^p_+C_.*(Sin[c_.+d_.*x_]^k_.)^r_)*
    (a_.+b_.*Sin[c_.+d_.*x_]^k_.)^n_.,x_Symbol] :=
  Dist[Sqrt[Csc[c+d*x]]*Sqrt[Sin[c+d*x]],
    Int[(Sin[c+d*x]^j)^(m-p)*(A+C*Sin[c+d*x]^(2*k))*(a+b*Sin[c+d*x]^k)^n,x]] /;
FreeQ[{a,b,c,d,A,C,m,n,p},x] && ZeroQ[k^2-1] && ZeroQ[j+k] && ZeroQ[p+2-r] && 
  IntegerQ[p-1/2] && Not[IntegerQ[2*m]]


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.+C_.*Sin[c_.+d_.*x_]^i2_)*(a_.+b_.*Sin[c_.+d_.*x_]^k_.)^n_.,x_Symbol] :=
  Int[(Sin[c+d*x]^j)^(m-2*j*k)*(C+A*Sin[c+d*x]^(2*k))*(a+b*Sin[c+d*x]^k)^n,x] /;
FreeQ[{a,b,c,d,A,C,m,n},x] && ZeroQ[j^2-1] && ZeroQ[k^2-1] && ZeroQ[k+i2/2]


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.*(Sin[c_.+d_.*x_]^i_.)^p_.+C_.*(Sin[c_.+d_.*x_]^i_.)^r_)*
    (a_.+b_.*Sin[c_.+d_.*x_]^k_.)^n_.,x_Symbol] :=
  Int[(Sin[c+d*x]^j)^(m-j*k*(p+2))*(C+A*Sin[c+d*x]^(2*k))*(a+b*Sin[c+d*x]^k)^n,x] /;
FreeQ[{a,b,c,d,A,C,m,n,p},x] && ZeroQ[j^2-1] && ZeroQ[k^2-1] && ZeroQ[k+i] && 
  ZeroQ[p+2-r] && (ZeroQ[j+k] || IntegerQ[p])


Int[(Sin[c_.+d_.*x_]^k_.)^m_.*(A_.*(Sin[c_.+d_.*x_]^i_.)^p_+C_.*(Sin[c_.+d_.*x_]^i_.)^r_)*
    (a_.+b_.*Sin[c_.+d_.*x_]^k_.)^n_.,x_Symbol] :=
  Int[(Sin[c+d*x]^(-k))^(p-m+2)*(C+A*Sin[c+d*x]^(2*k))*(a+b*Sin[c+d*x]^k)^n,x] /;
FreeQ[{a,b,c,d,A,C,m,n,p},x] && ZeroQ[k^2-1] && ZeroQ[k+i] && ZeroQ[p+2-r] && 
  IntegerQ[m] && Not[IntegerQ[p]]


Int[(Sin[c_.+d_.*x_]^k_.)^m_.*(A_.*(Sin[c_.+d_.*x_]^i_.)^p_+C_.*(Sin[c_.+d_.*x_]^i_.)^r_)*
    (a_.+b_.*Sin[c_.+d_.*x_]^k_.)^n_.,x_Symbol] :=
  Dist[Sqrt[Csc[c+d*x]]*Sqrt[Sin[c+d*x]],
    Int[(Sin[c+d*x]^(-k))^(p-m+2)*(C+A*Sin[c+d*x]^(2*k))*(a+b*Sin[c+d*x]^k)^n,x]] /;
FreeQ[{a,b,c,d,A,C,m,n,p},x] && ZeroQ[k^2-1] && ZeroQ[k+i] && ZeroQ[p+2-r] && 
  IntegerQ[m-1/2] && Not[IntegerQ[p]]


Int[(Sin[c_.+d_.*x_]^k_.)^m_.*(A_.*(Sin[c_.+d_.*x_]^i_.)^p_+C_.*(Sin[c_.+d_.*x_]^i_.)^r_)*
    (a_.+b_.*Sin[c_.+d_.*x_]^k_.)^n_.,x_Symbol] :=
  Dist[Sqrt[Csc[c+d*x]]*Sqrt[Sin[c+d*x]],
    Int[(Sin[c+d*x]^k)^(m-p-2)*(C+A*Sin[c+d*x]^(2*k))*(a+b*Sin[c+d*x]^k)^n,x]] /;
FreeQ[{a,b,c,d,A,C,m,n,p},x] && ZeroQ[k^2-1] && ZeroQ[k+i] && ZeroQ[p+2-r] && 
  IntegerQ[p-1/2] && Not[IntegerQ[2*m]]


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.+B_.*Sin[c_.+d_.*x_]^k_.+C_.*Sin[c_.+d_.*x_]^l_.)*
    (a_.+b_.*Sin[c_.+d_.*x_]^k_.)^n_.,x_Symbol] :=
  Int[(Sin[c+d*x]^j)^(m-j*k)*(C+A*Sin[c+d*x]^k+B*Sin[c+d*x]^(2*k))*(a+b*Sin[c+d*x]^k)^n,x] /;
FreeQ[{a,b,c,d,A,B,C,m,n},x] && ZeroQ[j^2-1] && ZeroQ[k^2-1] && ZeroQ[k+l]


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*
    (A_.*(Sin[c_.+d_.*x_]^k_.)^p_.+B_.*(Sin[c_.+d_.*x_]^k_.)^q_+C_.*(Sin[c_.+d_.*x_]^k_.)^r_)*
    (a_.+b_.*Sin[c_.+d_.*x_]^k_.)^n_.,x_Symbol] :=
  Int[(Sin[c+d*x]^j)^(m+j*k*p)*(A+B*Sin[c+d*x]^k+C*Sin[c+d*x]^(2*k))*(a+b*Sin[c+d*x]^k)^n,x] /;
FreeQ[{a,b,c,d,A,B,C,m,n,p},x] && ZeroQ[j^2-1] && ZeroQ[k^2-1] && ZeroQ[p+1-q] && 
  ZeroQ[p+2-r] && (ZeroQ[j-k] || IntegerQ[p])


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*
    (A_.*(Sin[c_.+d_.*x_]^k_.)^p_+B_.*(Sin[c_.+d_.*x_]^k_.)^q_+C_.*(Sin[c_.+d_.*x_]^k_.)^r_)*
    (a_.+b_.*Sin[c_.+d_.*x_]^k_.)^n_.,x_Symbol] :=
  Int[(Sin[c+d*x]^k)^(p-m)*(A+B*Sin[c+d*x]^k+C*Sin[c+d*x]^(2*k))*(a+b*Sin[c+d*x]^k)^n,x] /;
FreeQ[{a,b,c,d,A,B,C,m,n,p},x] && ZeroQ[k^2-1] && ZeroQ[j+k] && ZeroQ[p+1-q] && 
  ZeroQ[p+2-r] && IntegerQ[m] && Not[IntegerQ[p]]


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*
    (A_.*(Sin[c_.+d_.*x_]^k_.)^p_+B_.*(Sin[c_.+d_.*x_]^k_.)^q_+C_.*(Sin[c_.+d_.*x_]^k_.)^r_)*
    (a_.+b_.*Sin[c_.+d_.*x_]^k_.)^n_.,x_Symbol] :=
  Dist[Sqrt[Csc[c+d*x]]*Sqrt[Sin[c+d*x]],
    Int[(Sin[c+d*x]^k)^(p-m)*(A+B*Sin[c+d*x]^k+C*Sin[c+d*x]^(2*k))*(a+b*Sin[c+d*x]^k)^n,x]] /;
FreeQ[{a,b,c,d,A,B,C,m,n,p},x] && ZeroQ[k^2-1] && ZeroQ[j+k] && ZeroQ[p+1-q] && 
  ZeroQ[p+2-r] && IntegerQ[m-1/2] && Not[IntegerQ[p]]


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*
    (A_.*(Sin[c_.+d_.*x_]^k_.)^p_+B_.*(Sin[c_.+d_.*x_]^k_.)^q_+C_.*(Sin[c_.+d_.*x_]^k_.)^r_)*
    (a_.+b_.*Sin[c_.+d_.*x_]^k_.)^n_.,x_Symbol] :=
  Dist[Sqrt[Csc[c+d*x]]*Sqrt[Sin[c+d*x]],
    Int[(Sin[c+d*x]^j)^(m-p)*(A+B*Sin[c+d*x]^k+C*Sin[c+d*x]^(2*k))*(a+b*Sin[c+d*x]^k)^n,x]] /;
FreeQ[{a,b,c,d,A,B,C,m,n,p},x] && ZeroQ[k^2-1] && ZeroQ[j+k] && ZeroQ[p+1-q] && 
  ZeroQ[p+2-r] && IntegerQ[p-1/2] && Not[IntegerQ[2*m]]


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.+B_.*Sin[c_.+d_.*x_]^i_.+C_.*Sin[c_.+d_.*x_]^i2_)*
    (a_.+b_.*Sin[c_.+d_.*x_]^k_.)^n_.,x_Symbol] :=
  Int[(Sin[c+d*x]^j)^(m-2*j*k)*(C+B*Sin[c+d*x]^k+A*Sin[c+d*x]^(2*k))*(a+b*Sin[c+d*x]^k)^n,x] /;
FreeQ[{a,b,c,d,A,B,C,m,n},x] && ZeroQ[j^2-1] && ZeroQ[k^2-1] && ZeroQ[k+i] && 
  ZeroQ[2*i-i2]


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*
    (A_.*(Sin[c_.+d_.*x_]^i_.)^p_.+B_.*(Sin[c_.+d_.*x_]^i_.)^q_+C_.*(Sin[c_.+d_.*x_]^i_.)^r_)*
    (a_.+b_.*Sin[c_.+d_.*x_]^k_.)^n_.,x_Symbol] :=
  Int[(Sin[c+d*x]^j)^(m-j*k*(p+2))*(C+B*Sin[c+d*x]^k+A*Sin[c+d*x]^(2*k))*(a+b*Sin[c+d*x]^k)^n,x] /;
FreeQ[{a,b,c,d,A,B,C,m,n,p},x] && ZeroQ[j^2-1] && ZeroQ[k^2-1] && ZeroQ[k+i] && 
  ZeroQ[p+1-q] && ZeroQ[p+2-r] && (ZeroQ[j+k] || IntegerQ[p])


Int[(Sin[c_.+d_.*x_]^k_.)^m_.*
    (A_.*(Sin[c_.+d_.*x_]^i_.)^p_+B_.*(Sin[c_.+d_.*x_]^i_.)^q_+C_.*(Sin[c_.+d_.*x_]^i_.)^r_)*
    (a_.+b_.*Sin[c_.+d_.*x_]^k_.)^n_.,x_Symbol] :=
  Int[(Sin[c+d*x]^(-k))^(p-m+2)*(C+B*Sin[c+d*x]^k+A*Sin[c+d*x]^(2*k))*(a+b*Sin[c+d*x]^k)^n,x] /;
FreeQ[{a,b,c,d,A,B,C,m,n,p},x] && ZeroQ[k^2-1] && ZeroQ[k+i] && ZeroQ[p+1-q] && 
  ZeroQ[p+2-r] && IntegerQ[m] && Not[IntegerQ[p]]


Int[(Sin[c_.+d_.*x_]^k_.)^m_.*
    (A_.*(Sin[c_.+d_.*x_]^i_.)^p_+B_.*(Sin[c_.+d_.*x_]^i_.)^q_+C_.*(Sin[c_.+d_.*x_]^i_.)^r_)*
    (a_.+b_.*Sin[c_.+d_.*x_]^k_.)^n_.,x_Symbol] :=
  Dist[Sqrt[Csc[c+d*x]]*Sqrt[Sin[c+d*x]],
    Int[(Sin[c+d*x]^(-k))^(p-m+2)*(C+B*Sin[c+d*x]^k+A*Sin[c+d*x]^(2*k))*(a+b*Sin[c+d*x]^k)^n,x]] /;
FreeQ[{a,b,c,d,A,B,C,m,n,p},x] && ZeroQ[k^2-1] && ZeroQ[k+i] && ZeroQ[p+1-q] && 
  ZeroQ[p+2-r] && IntegerQ[m-1/2] && Not[IntegerQ[p]]


Int[(Sin[c_.+d_.*x_]^k_.)^m_.*
    (A_.*(Sin[c_.+d_.*x_]^i_.)^p_+B_.*(Sin[c_.+d_.*x_]^i_.)^q_+C_.*(Sin[c_.+d_.*x_]^i_.)^r_)*
    (a_.+b_.*Sin[c_.+d_.*x_]^k_.)^n_.,x_Symbol] :=
  Dist[Sqrt[Csc[c+d*x]]*Sqrt[Sin[c+d*x]],
    Int[(Sin[c+d*x]^k)^(m-p-2)*(C+B*Sin[c+d*x]^k+A*Sin[c+d*x]^(2*k))*(a+b*Sin[c+d*x]^k)^n,x]] /;
FreeQ[{a,b,c,d,A,B,C,m,n,p},x] && ZeroQ[k^2-1] && ZeroQ[k+i] && ZeroQ[p+1-q] && 
  ZeroQ[p+2-r] && IntegerQ[p-1/2] && Not[IntegerQ[2*m]]


If[ShowSteps,

Int[u_,x_Symbol] :=
  Int[SubstInertSineForTrigOfLinear[u,x],x] /;
SimplifyFlag && FunctionOfTrigOfLinearQ[u,x],

Int[u_,x_Symbol] :=
  Int[SubstInertSineForTrigOfLinear[u,x],x] /;
FunctionOfTrigOfLinearQ[u,x]]


Int[u_,x_Symbol] :=
  Defer[Int[u,x]] /;
RecognizedFunctionOfTrigQ[u,x]
(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Code:: *)
Int[Tan[a_.+b_.*x_],x_Symbol] :=
  -Log[Cos[a+b*x]]/b /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[Cot[a_.+b_.*x_],x_Symbol] :=
  Log[Sin[a+b*x]]/b /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[Tan[a_.+b_.*x_]^2,x_Symbol] :=
  -x + Tan[a+b*x]/b /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[Cot[a_.+b_.*x_]^2,x_Symbol] :=
  -x - Cot[a+b*x]/b /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[(c_.*Tan[a_.+b_.*x_])^n_,x_Symbol] :=
  c*(c*Tan[a+b*x])^(n-1)/(b*(n-1)) - 
  Dist[c^2,Int[(c*Tan[a+b*x])^(n-2),x]] /;
FreeQ[{a,b,c},x] && RationalQ[n] && n>1


(* ::Code:: *)
Int[(c_.*Cot[a_.+b_.*x_])^n_,x_Symbol] :=
  -c*(c*Cot[a+b*x])^(n-1)/(b*(n-1)) - 
  Dist[c^2,Int[(c*Cot[a+b*x])^(n-2),x]] /;
FreeQ[{a,b,c},x] && RationalQ[n] && n>1


(* ::Code:: *)
Int[(c_.*Tan[a_.+b_.*x_])^n_,x_Symbol] :=
  (c*Tan[a+b*x])^(n+1)/(b*c*(n+1)) - 
  Dist[1/c^2,Int[(c*Tan[a+b*x])^(n+2),x]] /;
FreeQ[{a,b,c},x] && RationalQ[n] && n<-1


(* ::Code:: *)
Int[(c_.*Cot[a_.+b_.*x_])^n_,x_Symbol] :=
  -(c*Cot[a+b*x])^(n+1)/(b*c*(n+1)) - 
  Dist[1/c^2,Int[(c*Cot[a+b*x])^(n+2),x]] /;
FreeQ[{a,b,c},x] && RationalQ[n] && n<-1


(* ::Code:: *)
Int[1/(a_+b_.*Tan[c_.+d_.*x_]),x_Symbol] :=
  x/(2*a) - a/(2*b*d*(a+b*Tan[c+d*x])) /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2+b^2]


(* ::Code:: *)
Int[1/(a_+b_.*Cot[c_.+d_.*x_]),x_Symbol] :=
  x/(2*a) + a/(2*b*d*(a+b*Cot[c+d*x])) /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2+b^2]


(* ::Code:: *)
Int[Sqrt[a_+b_.*Tan[c_.+d_.*x_]],x_Symbol] :=
  -Sqrt[2]*b*ArcTanh[Sqrt[a+b*Tan[c+d*x]]/(Sqrt[2]*Rt[a,2])]/(d*Rt[a,2]) /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2+b^2] && PosQ[a]


(* ::Code:: *)
Int[Sqrt[a_+b_.*Cot[c_.+d_.*x_]],x_Symbol] :=
  Sqrt[2]*b*ArcCoth[Sqrt[a+b*Cot[c+d*x]]/(Sqrt[2]*Rt[a,2])]/(d*Rt[a,2]) /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2+b^2] && PosQ[a]


(* ::Code:: *)
Int[Sqrt[a_+b_.*Tan[c_.+d_.*x_]],x_Symbol] :=
  Sqrt[2]*b*ArcTan[Sqrt[a+b*Tan[c+d*x]]/(Sqrt[2]*Rt[-a,2])]/(d*Rt[-a,2]) /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2+b^2] && NegQ[a]


(* ::Code:: *)
Int[Sqrt[a_+b_.*Cot[c_.+d_.*x_]],x_Symbol] :=
  Sqrt[2]*b*ArcCot[Sqrt[a+b*Cot[c+d*x]]/(Sqrt[2]*Rt[-a,2])]/(d*Rt[-a,2]) /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2+b^2] && NegQ[a]


(* ::Code:: *)
Int[(a_+b_.*Tan[c_.+d_.*x_])^n_,x_Symbol] :=
  -a^2*(a+b*Tan[c+d*x])^(n-1)/(b*d*(n-1)) + 
  Dist[2*a,Int[(a+b*Tan[c+d*x])^(n-1),x]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2+b^2] && FractionQ[n] && n>1


(* ::Code:: *)
Int[(a_+b_.*Cot[c_.+d_.*x_])^n_,x_Symbol] :=
  a^2*(a+b*Cot[c+d*x])^(n-1)/(b*d*(n-1)) + 
  Dist[2*a,Int[(a+b*Cot[c+d*x])^(n-1),x]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2+b^2] && FractionQ[n] && n>1


(* ::Code:: *)
Int[(a_+b_.*Tan[c_.+d_.*x_])^n_,x_Symbol] :=
  a*(a+b*Tan[c+d*x])^n/(2*b*d*n) + 
  Dist[1/(2*a),Int[(a+b*Tan[c+d*x])^(n+1),x]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2+b^2] && RationalQ[n] && n<0


(* ::Code:: *)
Int[(a_+b_.*Cot[c_.+d_.*x_])^n_,x_Symbol] :=
  -a*(a+b*Cot[c+d*x])^n/(2*b*d*n) + 
  Dist[1/(2*a),Int[(a+b*Cot[c+d*x])^(n+1),x]] /;
FreeQ[{a,b,c,d},x] && ZeroQ[a^2+b^2] && RationalQ[n] && n<0


(* ::Code:: *)
Int[1/(a_+b_.*Tan[c_.+d_.*x_]),x_Symbol] :=
  a*x/(a^2+b^2) + b*Log[a*Cos[c+d*x]+b*Sin[c+d*x]]/(d*(a^2+b^2)) /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2+b^2]


(* ::Code:: *)
Int[1/(a_+b_.*Cot[c_.+d_.*x_]),x_Symbol] :=
  a*x/(a^2+b^2) - b*Log[b*Cos[c+d*x]+a*Sin[c+d*x]]/(d*(a^2+b^2)) /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2+b^2]


(* ::Code:: *)
Int[Sqrt[a_+b_.*Tan[c_.+d_.*x_]],x_Symbol] :=
  Dist[(a-b*I)/2,Int[(1+I*Tan[c+d*x])/Sqrt[a+b*Tan[c+d*x]],x]] +
  Dist[(a+b*I)/2,Int[(1-I*Tan[c+d*x])/Sqrt[a+b*Tan[c+d*x]],x]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2+b^2]


(* ::Code:: *)
Int[Sqrt[a_+b_.*Cot[c_.+d_.*x_]],x_Symbol] :=
  Dist[(a-b*I)/2,Int[(1+I*Cot[c+d*x])/Sqrt[a+b*Cot[c+d*x]],x]] +
  Dist[(a+b*I)/2,Int[(1-I*Cot[c+d*x])/Sqrt[a+b*Cot[c+d*x]],x]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2+b^2]


(* ::Code:: *)
Int[1/Sqrt[a_+b_.*Tan[c_.+d_.*x_]],x_Symbol] :=
  Dist[1/2,Int[(1+I*Tan[c+d*x])/Sqrt[a+b*Tan[c+d*x]],x]] +
  Dist[1/2,Int[(1-I*Tan[c+d*x])/Sqrt[a+b*Tan[c+d*x]],x]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2+b^2]


(* ::Code:: *)
Int[1/Sqrt[a_+b_.*Cot[c_.+d_.*x_]],x_Symbol] :=
  Dist[1/2,Int[(1+I*Cot[c+d*x])/Sqrt[a+b*Cot[c+d*x]],x]] +
  Dist[1/2,Int[(1-I*Cot[c+d*x])/Sqrt[a+b*Cot[c+d*x]],x]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2+b^2]


(* ::Code:: *)
Int[(a_+b_.*Tan[c_.+d_.*x_])^n_,x_Symbol] :=
  b*(a+b*Tan[c+d*x])^(n-1)/(d*(n-1)) + 
  Int[(a^2-b^2+2*a*b*Tan[c+d*x])*(a+b*Tan[c+d*x])^(n-2),x] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2+b^2] && FractionQ[n] && n>1


(* ::Code:: *)
Int[(a_+b_.*Cot[c_.+d_.*x_])^n_,x_Symbol] :=
  -b*(a+b*Cot[c+d*x])^(n-1)/(d*(n-1)) + 
  Int[(a^2-b^2+2*a*b*Cot[c+d*x])*(a+b*Cot[c+d*x])^(n-2),x] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2+b^2] && FractionQ[n] && n>1


(* ::Code:: *)
Int[(a_+b_.*Tan[c_.+d_.*x_])^n_,x_Symbol] :=
  (b*(a+b*Tan[c+d*x])^(n+1))/(d*(a^2+b^2)*(n+1)) + 
  Dist[1/(a^2+b^2),Int[(a-b*Tan[c+d*x])*(a+b*Tan[c+d*x])^(n+1),x]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2+b^2] && RationalQ[n] && n<-1


(* ::Code:: *)
Int[(a_+b_.*Cot[c_.+d_.*x_])^n_,x_Symbol] :=
  -(b*(a+b*Cot[c+d*x])^(n+1))/(d*(a^2+b^2)*(n+1)) + 
  Dist[1/(a^2+b^2),Int[(a-b*Cot[c+d*x])*(a+b*Cot[c+d*x])^(n+1),x]] /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a^2+b^2] && RationalQ[n] && n<-1


(* ::Code:: *)
Int[(A_.+B_.*Tan[c_.+d_.*x_])/(a_.+b_.*Tan[c_.+d_.*x_]),x_Symbol] :=
  B*x/b + Dist[(b*A-a*B)/b,Int[1/(a+b*Tan[c+d*x]),x]] /;
FreeQ[{a,b,c,d,A,B},x] && NonzeroQ[b*A-a*B]


(* ::Code:: *)
Int[(A_.+B_.*Cot[c_.+d_.*x_])/(a_.+b_.*Cot[c_.+d_.*x_]),x_Symbol] :=
  B*x/b + Dist[(b*A-a*B)/b,Int[1/(a+b*Cot[c+d*x]),x]] /;
FreeQ[{a,b,c,d,A,B},x] && NonzeroQ[b*A-a*B]


(* ::Code:: *)
Int[(A_+B_.*Tan[c_.+d_.*x_])/Sqrt[a_.+b_.*Tan[c_.+d_.*x_]],x_Symbol] :=
  -2*B*ArcTanh[Sqrt[a+b*Tan[c+d*x]]/Rt[a+b*A/B,2]]/(d*Rt[a+b*A/B,2]) /;
FreeQ[{a,b,c,d,A,B},x] && ZeroQ[A^2+B^2] && NonzeroQ[b*A+a*B]


(* ::Code:: *)
Int[(A_+B_.*Cot[c_.+d_.*x_])/Sqrt[a_.+b_.*Cot[c_.+d_.*x_]],x_Symbol] :=
  2*B*ArcCoth[Sqrt[a+b*Cot[c+d*x]]/Rt[a+b*A/B,2]]/(d*Rt[a+b*A/B,2]) /;
FreeQ[{a,b,c,d,A,B},x] && ZeroQ[A^2+B^2] && NonzeroQ[b*A+a*B]


(* ::Code:: *)
Int[(A_.+B_.*Tan[c_.+d_.*x_])/Sqrt[a_.+b_.*Tan[c_.+d_.*x_]],x_Symbol] :=
  Dist[(A-B*I)/2,Int[(1+I*Tan[c+d*x])/Sqrt[a+b*Tan[c+d*x]],x]] +
  Dist[(A+B*I)/2,Int[(1-I*Tan[c+d*x])/Sqrt[a+b*Tan[c+d*x]],x]] /;
FreeQ[{a,b,c,d,A,B},x] && NonzeroQ[A^2+B^2] && NonzeroQ[a^2+b^2]


(* ::Code:: *)
Int[(A_.+B_.*Cot[c_.+d_.*x_])/Sqrt[a_.+b_.*Cot[c_.+d_.*x_]],x_Symbol] :=
  Dist[(A-B*I)/2,Int[(1+I*Cot[c+d*x])/Sqrt[a+b*Cot[c+d*x]],x]] +
  Dist[(A+B*I)/2,Int[(1-I*Cot[c+d*x])/Sqrt[a+b*Cot[c+d*x]],x]] /;
FreeQ[{a,b,c,d,A,B},x] && NonzeroQ[A^2+B^2] && NonzeroQ[a^2+b^2]


(* ::Code:: *)
Int[(A_.+B_.*Tan[c_.+d_.*x_])*(a_+b_.*Tan[c_.+d_.*x_])^n_,x_Symbol] :=
  B*(a+b*Tan[c+d*x])^n/(d*n) + 
  Dist[a*A-b*B,Int[(a+b*Tan[c+d*x])^(n-1),x]] /;
FreeQ[{a,b,c,d,A,B},x] && FractionQ[n] && n>0 && ZeroQ[b*A+a*B]


(* ::Code:: *)
Int[(A_.+B_.*Cot[c_.+d_.*x_])*(a_+b_.*Cot[c_.+d_.*x_])^n_,x_Symbol] :=
  -B*(a+b*Cot[c+d*x])^n/(d*n) + 
  Dist[a*A-b*B,Int[(a+b*Cot[c+d*x])^(n-1),x]] /;
FreeQ[{a,b,c,d,A,B},x] && FractionQ[n] && n>0 && ZeroQ[b*A+a*B]


(* ::Code:: *)
Int[(A_.+B_.*Tan[c_.+d_.*x_])*(a_+b_.*Tan[c_.+d_.*x_])^n_,x_Symbol] :=
  B*(a+b*Tan[c+d*x])^n/(d*n) + 
  Int[(a*A-b*B+(b*A+a*B)*Tan[c+d*x])*(a+b*Tan[c+d*x])^(n-1),x] /;
FreeQ[{a,b,c,d,A,B},x] && FractionQ[n] && n>0 && NonzeroQ[b*A+a*B]


(* ::Code:: *)
Int[(A_.+B_.*Cot[c_.+d_.*x_])*(a_+b_.*Cot[c_.+d_.*x_])^n_,x_Symbol] :=
  -B*(a+b*Cot[c+d*x])^n/(d*n) + 
  Int[(a*A-b*B+(b*A+a*B)*Cot[c+d*x])*(a+b*Cot[c+d*x])^(n-1),x] /;
FreeQ[{a,b,c,d,A,B},x] && FractionQ[n] && n>0 && NonzeroQ[b*A+a*B]


(* ::Code:: *)
Int[(A_.+B_.*Tan[c_.+d_.*x_])*(a_+b_.*Tan[c_.+d_.*x_])^n_,x_Symbol] :=
  (b*A-a*B)*(a+b*Tan[c+d*x])^(n+1)/(d*(a^2+b^2)*(n+1)) + 
  Dist[1/(a^2+b^2),Int[(a*A+b*B-(b*A-a*B)*Tan[c+d*x])*(a+b*Tan[c+d*x])^(n+1),x]] /;
FreeQ[{a,b,c,d,A,B},x] && NonzeroQ[a^2+b^2] && RationalQ[n] && n<-1 && NonzeroQ[b*A-a*B]


(* ::Code:: *)
Int[(A_.+B_.*Cot[c_.+d_.*x_])*(a_+b_.*Cot[c_.+d_.*x_])^n_,x_Symbol] :=
  -(b*A-a*B)*(a+b*Cot[c+d*x])^(n+1)/(d*(a^2+b^2)*(n+1)) + 
  Dist[1/(a^2+b^2),Int[(a*A+b*B-(b*A-a*B)*Cot[c+d*x])*(a+b*Cot[c+d*x])^(n+1),x]] /;
FreeQ[{a,b,c,d,A,B},x] && NonzeroQ[a^2+b^2] && RationalQ[n] && n<-1 && NonzeroQ[b*A-a*B]


(* ::Code:: *)
Int[u_.*(a_+b_.*Tan[v_]^2)^m_,x_Symbol] :=
  Dist[b^m,Int[u*Sec[v]^(2*m),x]] /;
FreeQ[{a,b,m},x] && ZeroQ[a-b] && IntegerQ[m]


(* ::Code:: *)
Int[u_.*(a_+b_.*Cot[v_]^2)^m_,x_Symbol] :=
  Dist[b^m,Int[u*Csc[v]^(2*m),x]] /;
FreeQ[{a,b,m},x] && ZeroQ[a-b] && IntegerQ[m]


(* ::Code:: *)
Int[u_.*(a_+b_.*Tan[v_]^2)^m_,x_Symbol] :=
  Int[u*(b*Sec[v]^2)^m,x] /;
FreeQ[{a,b,m},x] && ZeroQ[a-b] && Not[IntegerQ[m]]


(* ::Code:: *)
Int[u_.*(a_+b_.*Cot[v_]^2)^m_,x_Symbol] :=
  Int[u*(b*Csc[v]^2)^m,x] /;
FreeQ[{a,b,m},x] && ZeroQ[a-b] && Not[IntegerQ[m]]


(* ::Code:: *)
Int[1/(a_+b_.*Tan[c_.+d_.*x_]^2),x_Symbol] :=
  x/(a-b) - Sqrt[b]*ArcTan[Sqrt[b]*Tan[c+d*x]/Sqrt[a]]/(Sqrt[a]*d*(a-b)) /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a-b]


(* ::Code:: *)
Int[1/(a_+b_.*Cot[c_.+d_.*x_]^2),x_Symbol] :=
  x/(a-b) + Sqrt[b]*ArcTan[Sqrt[b]*Cot[c+d*x]/Sqrt[a]]/(Sqrt[a]*d*(a-b)) /;
FreeQ[{a,b,c,d},x] && NonzeroQ[a-b]


(* ::Code:: *)
Int[x_^m_.*Tan[a_.+b_.*x_^n_.],x_Symbol] :=
  -I*x^(m+1)/(m+1) + 
  Dist[2*I,Int[x^m/(1+E^(2*I*a+2*I*b*x^n)),x]] /;
FreeQ[{a,b,n},x] && IntegerQ[m] && m>0 && NonzeroQ[m-n+1] && n===1


(* ::Code:: *)
Int[x_^m_.*Cot[a_.+b_.*x_^n_.],x_Symbol] :=
  I*x^(m+1)/(m+1) - 
  Dist[2*I,Int[x^m/(1-E^(2*I*a+2*I*b*x^n)),x]] /;
FreeQ[{a,b,n},x] && IntegerQ[m] && m>0 && NonzeroQ[m-n+1] && n===1


(* ::Code:: *)
Int[x_^m_.*Tan[a_.+b_.*x_^n_.]^p_,x_Symbol] :=
  x^(m-n+1)*Tan[a+b*x^n]^(p-1)/(b*n*(p-1)) - 
  Dist[(m-n+1)/(b*n*(p-1)),Int[x^(m-n)*Tan[a+b*x^n]^(p-1),x]] - 
  Int[x^m*Tan[a+b*x^n]^(p-2),x] /;
FreeQ[{a,b},x] && RationalQ[{m,n,p}] && p>1 && NonzeroQ[m-n+1] && 0<n<=m


(* ::Code:: *)
Int[x_^m_.*Cot[a_.+b_.*x_^n_.]^p_,x_Symbol] :=
  -x^(m-n+1)*Cot[a+b*x^n]^(p-1)/(b*n*(p-1)) + 
  Dist[(m-n+1)/(b*n*(p-1)),Int[x^(m-n)*Cot[a+b*x^n]^(p-1),x]] - 
  Int[x^m*Cot[a+b*x^n]^(p-2),x] /;
FreeQ[{a,b},x] && RationalQ[{m,n,p}] && p>1 && NonzeroQ[m-n+1] && 0<n<=m


(* ::Code:: *)
Int[x_*Tan[a_.+b_.*x_+c_.*x_^2],x_Symbol] :=
  -Log[Cos[a+b*x+c*x^2]]/(2*c) -
  Dist[b/(2*c),Int[Tan[a+b*x+c*x^2],x]] /;
FreeQ[{a,b,c},x]


(* ::Code:: *)
Int[x_*Cot[a_.+b_.*x_+c_.*x_^2],x_Symbol] :=
  Log[Sin[a+b*x+c*x^2]]/(2*c) -
  Dist[b/(2*c),Int[Cot[a+b*x+c*x^2],x]] /;
FreeQ[{a,b,c},x]


(* ::Code:: *)
(* Int[x_^m_*Tan[a_.+b_.*x_+c_.*x_^2],x_Symbol] :=
  -x^(m-1)*Log[Cos[a+b*x+c*x^2]]/(2*c) - 
  Dist[b/(2*c),Int[x^(m-1)*Tan[a+b*x+c*x^2],x]] + 
  Dist[(m-1)/(2*c),Int[x^(m-2)*Log[Cos[a+b*x+c*x^2]],x]] /;
FreeQ[{a,b,c},x] && RationalQ[m] && m>1 *)


(* ::Code:: *)
(* Int[x_^m_*Cot[a_.+b_.*x_+c_.*x_^2],x_Symbol] :=
  x^(m-1)*Log[Sin[a+b*x+c*x^2]]/(2*c) -
  Dist[b/(2*c),Int[x^(m-1)*Cot[a+b*x+c*x^2],x]] -
  Dist[(m-1)/(2*c),Int[x^(m-2)*Log[Sin[a+b*x+c*x^2]],x]] /;
FreeQ[{a,b,c},x] && RationalQ[m] && m>1*)



(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Code:: *)
Int[x_^m_.*Sec[a_.+b_.*x_],x_Symbol] :=
  -2*I*x^m*ArcTan[E^(I*a+I*b*x)]/b +
  Dist[2*I*m/b,Int[x^(m-1)*ArcTan[E^(I*a+I*b*x)],x]] /;
FreeQ[{a,b},x] && IntegerQ[m] && m>0


(* ::Code:: *)
Int[x_^m_.*Csc[a_.+b_.*x_],x_Symbol] :=
  -2*x^m*ArcTanh[E^(I*a+I*b*x)]/b +
  Dist[2*m/b,Int[x^(m-1)*ArcTanh[E^(I*a+I*b*x)],x]] /;
FreeQ[{a,b},x] && IntegerQ[m] && m>0


(* ::Code:: *)
Int[x_^m_.*Sec[a_.+b_.*x_]^2,x_Symbol] :=
  x^m*Tan[a+b*x]/b -
  Dist[m/b,Int[x^(m-1)*Tan[a+b*x],x]] /;
FreeQ[{a,b},x] && RationalQ[m] && m>0


(* ::Code:: *)
Int[x_^m_.*Csc[a_.+b_.*x_]^2,x_Symbol] :=
  -x^m*Cot[a+b*x]/b +
  Dist[m/b,Int[x^(m-1)*Cot[a+b*x],x]] /;
FreeQ[{a,b},x] && RationalQ[m] && m>0


(* ::Code:: *)
Int[x_*Sec[a_.+b_.*x_]^n_,x_Symbol] :=
  x*Tan[a+b*x]*Sec[a+b*x]^(n-2)/(b*(n-1)) -
  Sec[a+b*x]^(n-2)/(b^2*(n-1)*(n-2)) +
  Dist[(n-2)/(n-1),Int[x*Sec[a+b*x]^(n-2),x]] /;
FreeQ[{a,b},x] && RationalQ[n] && n>1 && n!=2


(* ::Code:: *)
Int[x_*Csc[a_.+b_.*x_]^n_,x_Symbol] :=
  -x*Cot[a+b*x]*Csc[a+b*x]^(n-2)/(b*(n-1)) -
  Csc[a+b*x]^(n-2)/(b^2*(n-1)*(n-2)) +
  Dist[(n-2)/(n-1),Int[x*Csc[a+b*x]^(n-2),x]] /;
FreeQ[{a,b},x] && RationalQ[n] && n>1 && n!=2


(* ::Code:: *)
Int[x_^m_*Sec[a_.+b_.*x_]^n_,x_Symbol] :=
  x^m*Tan[a+b*x]*Sec[a+b*x]^(n-2)/(b*(n-1)) -
  m*x^(m-1)*Sec[a+b*x]^(n-2)/(b^2*(n-1)*(n-2)) +
  Dist[(n-2)/(n-1),Int[x^m*Sec[a+b*x]^(n-2),x]] +
  Dist[m*(m-1)/(b^2*(n-1)*(n-2)),Int[x^(m-2)*Sec[a+b*x]^(n-2),x]] /;
FreeQ[{a,b},x] && RationalQ[{m,n}] && m>1 && n>1 && n!=2


(* ::Code:: *)
Int[x_^m_*Csc[a_.+b_.*x_]^n_,x_Symbol] :=
  -x^m*Cot[a+b*x]*Csc[a+b*x]^(n-2)/(b*(n-1)) -
  m*x^(m-1)*Csc[a+b*x]^(n-2)/(b^2*(n-1)*(n-2)) +
  Dist[(n-2)/(n-1),Int[x^m*Csc[a+b*x]^(n-2),x]] +
  Dist[m*(m-1)/(b^2*(n-1)*(n-2)),Int[x^(m-2)*Csc[a+b*x]^(n-2),x]] /;
FreeQ[{a,b},x] && RationalQ[{m,n}] && m>1 && n>1 && n!=2


(* ::Code:: *)
Int[x_*Sec[a_.+b_.*x_]^n_,x_Symbol] :=
  Sec[a+b*x]^n/(b^2*n^2) -
  x*Sin[a+b*x]*Sec[a+b*x]^(n+1)/(b*n) +
  Dist[(n+1)/n,Int[x*Sec[a+b*x]^(n+2),x]] /;
FreeQ[{a,b},x] && RationalQ[n] && n<-1


(* ::Code:: *)
Int[x_*Csc[a_.+b_.*x_]^n_,x_Symbol] :=
  Csc[a+b*x]^n/(b^2*n^2) +
  x*Cos[a+b*x]*Csc[a+b*x]^(n+1)/(b*n) +
  Dist[(n+1)/n,Int[x*Csc[a+b*x]^(n+2),x]] /;
FreeQ[{a,b},x] && RationalQ[n] && n<-1


(* ::Code:: *)
Int[x_^m_*Sec[a_.+b_.*x_]^n_,x_Symbol] :=
  m*x^(m-1)*Sec[a+b*x]^n/(b^2*n^2) -
  x^m*Sin[a+b*x]*Sec[a+b*x]^(n+1)/(b*n) +
  Dist[(n+1)/n,Int[x^m*Sec[a+b*x]^(n+2),x]] -
  Dist[m*(m-1)/(b^2*n^2),Int[x^(m-2)*Sec[a+b*x]^n,x]] /;
FreeQ[{a,b},x] && RationalQ[{m,n}] && m>1 && n<-1


(* ::Code:: *)
Int[x_^m_*Csc[a_.+b_.*x_]^n_,x_Symbol] :=
  m*x^(m-1)*Csc[a+b*x]^n/(b^2*n^2) +
  x^m*Cos[a+b*x]*Csc[a+b*x]^(n+1)/(b*n) +
  Dist[(n+1)/n,Int[x^m*Csc[a+b*x]^(n+2),x]] -
  Dist[m*(m-1)/(b^2*n^2),Int[x^(m-2)*Csc[a+b*x]^n,x]] /;
FreeQ[{a,b},x] && RationalQ[{m,n}] && m>1 && n<-1


(* ::Code:: *)
Int[u_.*(a_+b_.*Sec[v_]^2)^m_,x_Symbol] :=
  Dist[b^m,Int[u*Tan[v]^(2*m),x]] /;
FreeQ[{a,b,m},x] && ZeroQ[a+b] && IntegerQ[m]


(* ::Code:: *)
Int[u_.*(a_+b_.*Csc[v_]^2)^m_,x_Symbol] :=
  Dist[b^m,Int[u*Cot[v]^(2*m),x]] /;
FreeQ[{a,b,m},x] && ZeroQ[a+b] && IntegerQ[m]


(* ::Code:: *)
Int[u_.*(a_+b_.*Sec[v_]^2)^m_,x_Symbol] :=
  Int[u*(b*Tan[v]^2)^m,x] /;
FreeQ[{a,b,m},x] && ZeroQ[a+b] && Not[IntegerQ[m]]


(* ::Code:: *)
Int[u_.*(a_+b_.*Csc[v_]^2)^m_,x_Symbol] :=
  Int[u*(b*Cot[v]^2)^m,x] /;
FreeQ[{a,b,m},x] && ZeroQ[a+b] && Not[IntegerQ[m]]


(* ::Code:: *)
Int[(a_+b_.*Sec[v_]^n_)^m_,x_Symbol] :=
  Int[(b+a*Cos[v]^n)^m/Cos[v]^(m*n),x] /;
FreeQ[{a,b},x] && IntegersQ[m,n] && m<0 && n>1


(* ::Code:: *)
Int[(a_+b_.*Csc[v_]^n_)^m_,x_Symbol] :=
  Int[(b+a*Sin[v]^n)^m/Sin[v]^(m*n),x] /;
FreeQ[{a,b},x] && IntegersQ[m,n] && m<0 && n>1


(* ::Code:: *)
(* Int[Cos[v_]^p_.*(a_+b_.*Sec[v_]^n_.)^m_,x_Symbol] :=
  Int[Cos[v]^(p-m*n)*(b+a*Cos[v]^n)^m,x] /;
FreeQ[{a,b},x] && IntegersQ[m,n,p] && m<0 && n>0 *)


(* ::Code:: *)
(* Int[Sin[v_]^p_.*(a_+b_.*Csc[v_]^n_.)^m_,x_Symbol] :=
  Int[Sin[v]^(p-m*n)*(b+a*Sin[v]^n)^m,x] /;
FreeQ[{a,b},x] && IntegersQ[m,n,p] && m<0 && n>0 *)


(* ::Code:: *)
Int[Csc[a_.+b_.*x_]*Sec[a_.+b_.*x_],x_Symbol] :=
  Log[Tan[a+b*x]]/b /;
FreeQ[{a,b},x] && PosQ[b]


(* ::Code:: *)
Int[Csc[a_.+b_.*x_]^m_*Sec[a_.+b_.*x_]^n_,x_Symbol] :=
  Csc[a+b*x]^(m-1)*Sec[a+b*x]^(n-1)/(b*(n-1)) /;
FreeQ[{a,b,m,n},x] && ZeroQ[m+n-2] && NonzeroQ[n-1] && PosQ[n]


(* ::Code:: *)
Int[Csc[a_.+b_.*x_]^m_.*Sec[a_.+b_.*x_]^n_,x_Symbol] :=
  Dist[1/b,Subst[Int[Regularize[(1+x^2)^((m+n)/2-1)/x^m,x],x],x,Tan[a+b*x]]] /;
FreeQ[{a,b},x] && IntegersQ[m,n] && EvenQ[m+n] && 0<m<=n


(* ::Code:: *)
Int[Csc[a_.+b_.*x_]^m_*Sec[a_.+b_.*x_]^n_,x_Symbol] :=
  Csc[a+b*x]^(m+1)*Sec[a+b*x]^(n-1)/(b*(n-1)) +
  Dist[(m+1)/(n-1),Int[Csc[a+b*x]^(m+2)*Sec[a+b*x]^(n-2),x]] /;
FreeQ[{a,b},x] && RationalQ[{m,n}] && m<-1 && n>1


(* ::Code:: *)
Int[Csc[a_.+b_.*x_]^m_.*Sec[a_.+b_.*x_]^n_,x_Symbol] :=
  Csc[a+b*x]^(m-1)*Sec[a+b*x]^(n-1)/(b*(n-1)) +
  Dist[(m+n-2)/(n-1),Int[Csc[a+b*x]^m*Sec[a+b*x]^(n-2),x]] /;
FreeQ[{a,b,m},x] && RationalQ[n] && n>1 && Not[EvenQ[m+n]] && Not[EvenQ[n] && OddQ[m] && m>1]


(* ::Code:: *)
Int[Csc[a_.+b_.*x_]^m_.*Sec[a_.+b_.*x_]^n_,x_Symbol] :=
  -Csc[a+b*x]^(m-1)*Sec[a+b*x]^(n+1)/(b*(m+n)) +
  Dist[(n+1)/(m+n),Int[Csc[a+b*x]^m*Sec[a+b*x]^(n+2),x]] /;
FreeQ[{a,b,m},x] && RationalQ[n] && n<-1 && NonzeroQ[m+n]


(* ::Code:: *)
Int[Csc[a_.+b_.*x_]*Sec[a_.+b_.*x_],x_Symbol] :=
  -Log[Cot[a+b*x]]/b /;
FreeQ[{a,b},x] && NegQ[b]


(* ::Code:: *)
Int[Csc[a_.+b_.*x_]^m_*Sec[a_.+b_.*x_]^n_,x_Symbol] :=
  -Csc[a+b*x]^(m-1)*Sec[a+b*x]^(n-1)/(b*(m-1)) /;
FreeQ[{a,b,m,n},x] && ZeroQ[m+n-2] && NonzeroQ[m-1] && PosQ[m]


(* ::Code:: *)
Int[Csc[a_.+b_.*x_]^m_*Sec[a_.+b_.*x_]^n_.,x_Symbol] :=
  Dist[-1/b,Subst[Int[Regularize[(1+x^2)^((m+n)/2-1)/x^n,x],x],x,Cot[a+b*x]]] /;
FreeQ[{a,b},x] && IntegersQ[m,n] && EvenQ[m+n] && 0<n<m


(* ::Code:: *)
Int[Csc[a_.+b_.*x_]^m_*Sec[a_.+b_.*x_]^n_,x_Symbol] :=
  -Csc[a+b*x]^(m-1)*Sec[a+b*x]^(n+1)/(b*(m-1)) +
  Dist[(n+1)/(m-1),Int[Csc[a+b*x]^(m-2)*Sec[a+b*x]^(n+2),x]] /;
FreeQ[{a,b},x] && RationalQ[{m,n}] && m>1 && n<-1


(* ::Code:: *)
Int[Csc[a_.+b_.*x_]^m_*Sec[a_.+b_.*x_]^n_.,x_Symbol] :=
  -Csc[a+b*x]^(m-1)*Sec[a+b*x]^(n-1)/(b*(m-1)) +
  Dist[(m+n-2)/(m-1),Int[Csc[a+b*x]^(m-2)*Sec[a+b*x]^n,x]] /;
FreeQ[{a,b,n},x] && RationalQ[m] && m>1 && Not[EvenQ[m+n]] && Not[EvenQ[m] && OddQ[n] && n>1]


(* ::Code:: *)
Int[Csc[a_.+b_.*x_]^m_*Sec[a_.+b_.*x_]^n_.,x_Symbol] :=
  Csc[a+b*x]^(m+1)*Sec[a+b*x]^(n-1)/(b*(m+n)) +
  Dist[(m+1)/(m+n),Int[Csc[a+b*x]^(m+2)*Sec[a+b*x]^n,x]] /;
FreeQ[{a,b,n},x] && RationalQ[m] && m<-1 && NonzeroQ[m+n]


(* ::Code:: *)
Int[Sec[a_.+b_.*x_]^m_.*Tan[a_.+b_.*x_]^n_.,x_Symbol] :=
  Sec[a+b*x]^m/(b*m) /;
FreeQ[{a,b,m},x] && n===1


(* ::Code:: *)
Int[Csc[a_.+b_.*x_]^m_.*Cot[a_.+b_.*x_]^n_.,x_Symbol] :=
  -Csc[a+b*x]^m/(b*m) /;
FreeQ[{a,b,m},x] && n===1


(* ::Code:: *)
Int[Sec[a_.+b_.*x_]^m_*Tan[a_.+b_.*x_]^n_.,x_Symbol] :=
  Dist[1/b,Subst[Int[Regularize[x^n*(1+x^2)^((m-2)/2),x],x],x,Tan[a+b*x]]] /;
FreeQ[{a,b,n},x] && EvenQ[m] && m>2 && Not[OddQ[n] && 0<n<m-1]


(* ::Code:: *)
Int[Csc[a_.+b_.*x_]^m_*Cot[a_.+b_.*x_]^n_.,x_Symbol] :=
  Dist[-1/b,Subst[Int[Regularize[x^n*(1+x^2)^((m-2)/2),x],x],x,Cot[a+b*x]]] /;
FreeQ[{a,b,n},x] && EvenQ[m] && m>2 && Not[OddQ[n] && 0<n<m-1]


(* ::Code:: *)
Int[Sec[a_.+b_.*x_]^m_.*Tan[a_.+b_.*x_]^n_.,x_Symbol] :=
  Dist[1/b,Subst[Int[Regularize[x^(m-1)*(-1+x^2)^((n-1)/2),x],x],x,Sec[a+b*x]]] /;
FreeQ[{a,b,m},x] && OddQ[n] && Not[EvenQ[m] && 0<m<=n+1]


(* ::Code:: *)
Int[Csc[a_.+b_.*x_]^m_.*Cot[a_.+b_.*x_]^n_.,x_Symbol] :=
  Dist[-1/b,Subst[Int[Regularize[x^(m-1)*(-1+x^2)^((n-1)/2),x],x],x,Csc[a+b*x]]] /;
FreeQ[{a,b,m},x] && OddQ[n] && Not[EvenQ[m] && 0<m<=n+1]


(* ::Code:: *)
Int[Sec[a_.+b_.*x_]^m_*Tan[a_.+b_.*x_]^n_,x_Symbol] :=
  Sec[a+b*x]^(m-2)*Tan[a+b*x]^(n+1)/(b*(n+1)) -
  Dist[(m-2)/(n+1),Int[Sec[a+b*x]^(m-2)*Tan[a+b*x]^(n+2),x]] /;
FreeQ[{a,b},x] && RationalQ[{m,n}] && m>1 && n<-1 && Not[EvenQ[m]]


(* ::Code:: *)
Int[Csc[a_.+b_.*x_]^m_*Cot[a_.+b_.*x_]^n_,x_Symbol] :=
  -Csc[a+b*x]^(m-2)*Cot[a+b*x]^(n+1)/(b*(n+1)) -
  Dist[(m-2)/(n+1),Int[Csc[a+b*x]^(m-2)*Cot[a+b*x]^(n+2),x]] /;
FreeQ[{a,b},x] && RationalQ[{m,n}] && m>1 && n<-1 && Not[EvenQ[m]]


(* ::Code:: *)
Int[Sec[a_.+b_.*x_]^m_*Tan[a_.+b_.*x_]^n_,x_Symbol] :=
  Sec[a+b*x]^m*Tan[a+b*x]^(n-1)/(b*m) -
  Dist[(n-1)/m,Int[Sec[a+b*x]^(m+2)*Tan[a+b*x]^(n-2),x]] /;
FreeQ[{a,b},x] && RationalQ[{m,n}] && m<-1 && n>1 && Not[EvenQ[m]]


(* ::Code:: *)
Int[Csc[a_.+b_.*x_]^m_*Cot[a_.+b_.*x_]^n_,x_Symbol] :=
  -Csc[a+b*x]^m*Cot[a+b*x]^(n-1)/(b*m) -
  Dist[(n-1)/m,Int[Csc[a+b*x]^(m+2)*Cot[a+b*x]^(n-2),x]] /;
FreeQ[{a,b},x] && RationalQ[{m,n}] && m<-1 && n>1 && Not[EvenQ[m]]


(* ::Code:: *)
Int[Sec[a_.+b_.*x_]^m_*Tan[a_.+b_.*x_]^n_,x_Symbol] :=
  -Sec[a+b*x]^m*Tan[a+b*x]^(n+1)/(b*m) /;
FreeQ[{a,b,m,n},x] && ZeroQ[m+n+1]


(* ::Code:: *)
Int[Csc[a_.+b_.*x_]^m_.*Cot[a_.+b_.*x_]^n_,x_Symbol] :=
  Csc[a+b*x]^m*Cot[a+b*x]^(n+1)/(b*m) /;
FreeQ[{a,b,m,n},x] && ZeroQ[m+n+1]


(* ::Code:: *)
Int[Sec[a_.+b_.*x_]^m_*Tan[a_.+b_.*x_]^n_,x_Symbol] :=
  -Sec[a+b*x]^m*Tan[a+b*x]^(n+1)/(b*m) +
  Dist[(m+n+1)/m,Int[Sec[a+b*x]^(m+2)*Tan[a+b*x]^n,x]] /;
FreeQ[{a,b,n},x] && RationalQ[m] && m<-1 && Not[EvenQ[m]]


(* ::Code:: *)
Int[Csc[a_.+b_.*x_]^m_*Cot[a_.+b_.*x_]^n_,x_Symbol] :=
  Csc[a+b*x]^m*Cot[a+b*x]^(n+1)/(b*m) +
  Dist[(m+n+1)/m,Int[Csc[a+b*x]^(m+2)*Cot[a+b*x]^n,x]] /;
FreeQ[{a,b,n},x] && RationalQ[m] && m<-1 && Not[EvenQ[m]]


(* ::Code:: *)
Int[Sec[a_.+b_.*x_]^m_*Tan[a_.+b_.*x_]^n_,x_Symbol] :=
  Sec[a+b*x]^(m-2)*Tan[a+b*x]^(n+1)/(b*(m+n-1)) +
  Dist[(m-2)/(m+n-1),Int[Sec[a+b*x]^(m-2)*Tan[a+b*x]^n,x]] /;
FreeQ[{a,b,n},x] && RationalQ[m] && m>1 && NonzeroQ[m+n-1] && Not[EvenQ[m]] && Not[OddQ[n]]


(* ::Code:: *)
Int[Csc[a_.+b_.*x_]^m_*Cot[a_.+b_.*x_]^n_,x_Symbol] :=
  -Csc[a+b*x]^(m-2)*Cot[a+b*x]^(n+1)/(b*(m+n-1)) +
  Dist[(m-2)/(m+n-1),Int[Csc[a+b*x]^(m-2)*Cot[a+b*x]^n,x]] /;
FreeQ[{a,b,n},x] && RationalQ[m] && m>1 && NonzeroQ[m+n-1] && Not[EvenQ[m]] && Not[OddQ[n]]


(* ::Code:: *)
Int[Sec[a_.+b_.*x_]^m_.*Tan[a_.+b_.*x_]^n_,x_Symbol] :=
  Sec[a+b*x]^m*Tan[a+b*x]^(n-1)/(b*(m+n-1)) -
  Dist[(n-1)/(m+n-1),Int[Sec[a+b*x]^m*Tan[a+b*x]^(n-2),x]] /;
FreeQ[{a,b,m},x] && RationalQ[n] && n>1 && NonzeroQ[m+n-1] && Not[EvenQ[m]] && Not[OddQ[n]]


(* ::Code:: *)
Int[Csc[a_.+b_.*x_]^m_.*Cot[a_.+b_.*x_]^n_,x_Symbol] :=
  -Csc[a+b*x]^m*Cot[a+b*x]^(n-1)/(b*(m+n-1)) -
  Dist[(n-1)/(m+n-1),Int[Csc[a+b*x]^m*Cot[a+b*x]^(n-2),x]] /;
FreeQ[{a,b,m},x] && RationalQ[n] && n>1 && NonzeroQ[m+n-1] && Not[EvenQ[m]] && Not[OddQ[n]]


(* ::Code:: *)
Int[Sec[a_.+b_.*x_]^m_*Tan[a_.+b_.*x_]^n_,x_Symbol] :=
  Sec[a+b*x]^m*Tan[a+b*x]^(n+1)/(b*(n+1)) -
  Dist[(m+n+1)/(n+1),Int[Sec[a+b*x]^m*Tan[a+b*x]^(n+2),x]] /;
FreeQ[{a,b,m},x] && RationalQ[n] && n<-1 && Not[EvenQ[m]]


(* ::Code:: *)
Int[Csc[a_.+b_.*x_]^m_.*Cot[a_.+b_.*x_]^n_,x_Symbol] :=
  -Csc[a+b*x]^m*Cot[a+b*x]^(n+1)/(b*(n+1)) -
  Dist[(m+n+1)/(n+1),Int[Csc[a+b*x]^m*Cot[a+b*x]^(n+2),x]] /;
FreeQ[{a,b,m},x] && RationalQ[n] && n<-1 && Not[EvenQ[m]]


(* ::Code:: *)
Int[x_^m_.*Sec[a_.+b_.*x_^n_.]^p_*Sin[a_.+b_.*x_^n_.],x_Symbol] :=
  x^(m-n+1)*Sec[a+b*x^n]^(p-1)/(b*n*(p-1)) -
  Dist[(m-n+1)/(b*n*(p-1)),Int[x^(m-n)*Sec[a+b*x^n]^(p-1),x]] /;
FreeQ[{a,b,p},x] && RationalQ[m] && IntegerQ[n] && m-n>=0 && NonzeroQ[p-1]


(* ::Code:: *)
Int[x_^m_.*Csc[a_.+b_.*x_^n_.]^p_*Cos[a_.+b_.*x_^n_.],x_Symbol] :=
  -x^(m-n+1)*Csc[a+b*x^n]^(p-1)/(b*n*(p-1)) +
  Dist[(m-n+1)/(b*n*(p-1)),Int[x^(m-n)*Csc[a+b*x^n]^(p-1),x]] /;
FreeQ[{a,b,p},x] && RationalQ[m] && IntegerQ[n] && m-n>=0 && NonzeroQ[p-1]


(* ::Code:: *)
Int[x_^m_.*Sec[a_.+b_.*x_^n_.]^p_.*Tan[a_.+b_.*x_^n_.]^q_.,x_Symbol] :=
  x^(m-n+1)*Sec[a+b*x^n]^p/(b*n*p) -
  Dist[(m-n+1)/(b*n*p),Int[x^(m-n)*Sec[a+b*x^n]^p,x]] /;
FreeQ[{a,b,p},x] && RationalQ[m] && IntegerQ[n] && m-n>=0 && q===1


(* ::Code:: *)
Int[x_^m_.*Csc[a_.+b_.*x_^n_.]^p_.*Cot[a_.+b_.*x_^n_.]^q_.,x_Symbol] :=
  -x^(m-n+1)*Csc[a+b*x^n]^p/(b*n*p) +
  Dist[(m-n+1)/(b*n*p),Int[x^(m-n)*Csc[a+b*x^n]^p,x]] /;
FreeQ[{a,b,p},x] && RationalQ[m] && IntegerQ[n] && m-n>=0 && q===1


(* ::Code:: *)
Int[Sec[a_.+b_.*Log[c_.*x_^n_.]]^p_,x_Symbol] :=
  x*(b*n*(p-2)+Tan[a+b*Log[c*x^n]])*Sec[a+b*Log[c*x^n]]^(p-2)/(b*n*(p-1)) /;
FreeQ[{a,b,c,n,p},x] && NonzeroQ[p-1] && ZeroQ[b^2*n^2*(p-2)^2+1]


(* ::Code:: *)
Int[Csc[a_.+b_.*Log[c_.*x_^n_.]]^p_,x_Symbol] :=
  x*(b*n*(p-2)-Cot[a+b*Log[c*x^n]])*Csc[a+b*Log[c*x^n]]^(p-2)/(b*n*(p-1)) /;
FreeQ[{a,b,c,n,p},x] && NonzeroQ[p-1] && ZeroQ[b^2*n^2*(p-2)^2+1]


(* ::Code:: *)
Int[Sec[a_.+b_.*Log[c_.*x_^n_.]]^p_,x_Symbol] :=
  x*Tan[a+b*Log[c*x^n]]*Sec[a+b*Log[c*x^n]]^(p-2)/(b*n*(p-1)) -
  x*Sec[a+b*Log[c*x^n]]^(p-2)/(b^2*n^2*(p-1)*(p-2)) +
  Dist[(b^2*n^2*(p-2)^2+1)/(b^2*n^2*(p-1)*(p-2)),Int[Sec[a+b*Log[c*x^n]]^(p-2),x]] /;
FreeQ[{a,b,c,n},x] && RationalQ[p] && p>1 && p!=2 && NonzeroQ[b^2*n^2*(p-2)^2+1]


(* ::Code:: *)
Int[Csc[a_.+b_.*Log[c_.*x_^n_.]]^p_,x_Symbol] :=
  -x*Cot[a+b*Log[c*x^n]]*Csc[a+b*Log[c*x^n]]^(p-2)/(b*n*(p-1)) -
  x*Csc[a+b*Log[c*x^n]]^(p-2)/(b^2*n^2*(p-1)*(p-2)) +
  Dist[(b^2*n^2*(p-2)^2+1)/(b^2*n^2*(p-1)*(p-2)),Int[Csc[a+b*Log[c*x^n]]^(p-2),x]] /;
FreeQ[{a,b,c,n},x] && RationalQ[p] && p>1 && p!=2 && NonzeroQ[b^2*n^2*(p-2)^2+1]


(* ::Code:: *)
Int[Sec[a_.+b_.*Log[c_.*x_^n_.]]^p_,x_Symbol] :=
  -b*n*p*x*Sin[a+b*Log[c*x^n]]*Sec[a+b*Log[c*x^n]]^(p+1)/(b^2*n^2*p^2+1) +
  x*Sec[a+b*Log[c*x^n]]^p/(b^2*n^2*p^2+1) +
  Dist[b^2*n^2*p*(p+1)/(b^2*n^2*p^2+1),Int[Sec[a+b*Log[c*x^n]]^(p+2),x]] /;
FreeQ[{a,b,c,n},x] && RationalQ[p] && p<-1 && NonzeroQ[b^2*n^2*p^2+1]


(* ::Code:: *)
Int[Csc[a_.+b_.*Log[c_.*x_^n_.]]^p_,x_Symbol] :=
  b*n*p*x*Cos[a+b*Log[c*x^n]]*Csc[a+b*Log[c*x^n]]^(p+1)/(b^2*n^2*p^2+1) +
  x*Csc[a+b*Log[c*x^n]]^p/(b^2*n^2*p^2+1) +
  Dist[b^2*n^2*p*(p+1)/(b^2*n^2*p^2+1),Int[Csc[a+b*Log[c*x^n]]^(p+2),x]] /;
FreeQ[{a,b,c,n},x] && RationalQ[p] && p<-1 && NonzeroQ[b^2*n^2*p^2+1]


(* ::Code:: *)
Int[x_^m_.*Sec[a_.+b_.*Log[c_.*x_^n_.]]^p_,x_Symbol] :=
  x^(m+1)*(b*n*(p-2)+(m+1)*Tan[a+b*Log[c*x^n]])*Sec[a+b*Log[c*x^n]]^(p-2)/(b*n*(m+1)*(p-1)) /;
FreeQ[{a,b,c,m,n,p},x] && NonzeroQ[m+1] && NonzeroQ[p-1] && ZeroQ[b^2*n^2*(p-2)^2+(m+1)^2]


(* ::Code:: *)
Int[x_^m_.*Csc[a_.+b_.*Log[c_.*x_^n_.]]^p_,x_Symbol] :=
  x^(m+1)*(b*n*(p-2)-(m+1)*Cot[a+b*Log[c*x^n]])*Csc[a+b*Log[c*x^n]]^(p-2)/(b*n*(m+1)*(p-1)) /;
FreeQ[{a,b,c,m,n,p},x] && NonzeroQ[m+1] && NonzeroQ[p-1] && ZeroQ[b^2*n^2*(p-2)^2+(m+1)^2]


(* ::Code:: *)
Int[x_^m_.*Sec[a_.+b_.*Log[c_.*x_^n_.]]^p_,x_Symbol] :=
  x^(m+1)*Tan[a+b*Log[c*x^n]]*Sec[a+b*Log[c*x^n]]^(p-2)/(b*n*(p-1)) -
  (m+1)*x^(m+1)*Sec[a+b*Log[c*x^n]]^(p-2)/(b^2*n^2*(p-1)*(p-2)) +
  Dist[(b^2*n^2*(p-2)^2+(m+1)^2)/(b^2*n^2*(p-1)*(p-2)),Int[x^m*Sec[a+b*Log[c*x^n]]^(p-2),x]] /;
FreeQ[{a,b,c,m,n},x] && RationalQ[p] && p>1 && p!=2 && NonzeroQ[b^2*n^2*(p-2)^2+(m+1)^2]


(* ::Code:: *)
Int[x_^m_.*Csc[a_.+b_.*Log[c_.*x_^n_.]]^p_,x_Symbol] :=
  -x^(m+1)*Cot[a+b*Log[c*x^n]]*Csc[a+b*Log[c*x^n]]^(p-2)/(b*n*(p-1)) -
  (m+1)*x^(m+1)*Csc[a+b*Log[c*x^n]]^(p-2)/(b^2*n^2*(p-1)*(p-2)) +
  Dist[(b^2*n^2*(p-2)^2+(m+1)^2)/(b^2*n^2*(p-1)*(p-2)),Int[x^m*Csc[a+b*Log[c*x^n]]^(p-2),x]] /;
FreeQ[{a,b,c,m,n},x] && RationalQ[p] && p>1 && p!=2 && NonzeroQ[b^2*n^2*(p-2)^2+(m+1)^2]


(* ::Code:: *)
Int[x_^m_.*Sec[a_.+b_.*Log[c_.*x_^n_.]]^p_,x_Symbol] :=
  -b*n*p*x^(m+1)*Sin[a+b*Log[c*x^n]]*Sec[a+b*Log[c*x^n]]^(p+1)/(b^2*n^2*p^2+(m+1)^2) +
  (m+1)*x^(m+1)*Sec[a+b*Log[c*x^n]]^p/(b^2*n^2*p^2+(m+1)^2) +
  Dist[b^2*n^2*p*(p+1)/(b^2*n^2*p^2+(m+1)^2),Int[x^m*Sec[a+b*Log[c*x^n]]^(p+2),x]] /;
FreeQ[{a,b,c,m,n},x] && RationalQ[p] && p<-1 && NonzeroQ[b^2*n^2*p^2+(m+1)^2]


(* ::Code:: *)
Int[x_^m_.*Csc[a_.+b_.*Log[c_.*x_^n_.]]^p_,x_Symbol] :=
  b*n*p*x^(m+1)*Cos[a+b*Log[c*x^n]]*Csc[a+b*Log[c*x^n]]^(p+1)/(b^2*n^2*p^2+(m+1)^2) +
  (m+1)*x^(m+1)*Csc[a+b*Log[c*x^n]]^p/(b^2*n^2*p^2+(m+1)^2) +
  Dist[b^2*n^2*p*(p+1)/(b^2*n^2*p^2+(m+1)^2),Int[x^m*Csc[a+b*Log[c*x^n]]^(p+2),x]] /;
FreeQ[{a,b,c,m,n},x] && RationalQ[p] && p<-1 && NonzeroQ[b^2*n^2*p^2+(m+1)^2]


(* ::Code:: *)
Int[u_*Csc[a_.+b_.*x_]^n_.,x_Symbol] :=
  Dist[1/2^n,Int[u*Csc[a/2+b*x/2]^n*Sec[a/2+b*x/2]^n,x]] /;
FreeQ[{a,b},x] && IntegerQ[n] && ZeroQ[a/2+b*x/2-FunctionOfTrig[u,x]]


(* ::Code:: *)
(* Int[u_*Csc[a_.+b_.*x_]^n_,x_Symbol] :=
  Csc[a+b*x]^n/(Csc[a/2+b*x/2]^n*Sec[a/2+b*x/2]^n)*Int[u*Csc[a/2+b*x/2]^n*Sec[a/2+b*x/2]^n,x] /;
FreeQ[{a,b},x] && FractionQ[n] && ZeroQ[a/2+b*x/2-FunctionOfTrig[u,x]] *)



(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



Int[(Sin[c_.+d_.*x_]^j_.)^m_*(A_+C_.*Sin[c_.+d_.*x_]^k2_),x_Symbol] :=
  A*Cos[c+d*x]*(Sin[c+d*x]^j)^(m+j*k2/2)/(d*(j*k2/2*m+(k2/2+1)/2)) /;
FreeQ[{c,d,A,C,m},x] && OneQ[j^2,k2^2/4] && ZeroQ[A+(A+C)*(j*k2/2*m+(k2/2+1)/2)]


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.+B_.*Sin[c_.+d_.*x_]^k_.+C_.*Sin[c_.+d_.*x_]^k2_),x_Symbol] :=
  A*Cos[c+d*x]*(Sin[c+d*x]^j)^(m+j*k)/(d*(j*k*m+(k+1)/2)) + 
  Dist[1/(j*k*m+(k+1)/2),
    Int[(Sin[c+d*x]^j)^(m+j*k)*Simplify[B*(j*k*m+(k+1)/2)+(A+(A+C)*(j*k*m+(k+1)/2))*Sin[c+d*x]^k,x],x]] /;
FreeQ[{c,d,A,B,C},x] && OneQ[j^2,k^2] && k2===2*k && RationalQ[m] && j*k*m+(k+1)/2!=0 && j*k*m<=-1


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_+C_.*Sin[c_.+d_.*x_]^k2_),x_Symbol] :=
  A*Cos[c+d*x]*(Sin[c+d*x]^j)^(m+j*k2/2)/(d*(j*k2/2*m+(k2/2+1)/2)) + 
  Dist[(A+(A+C)*(j*k2/2*m+(k2/2+1)/2))/(j*k2/2*m+(k2/2+1)/2),Int[(Sin[c+d*x]^j)^(m+j*k2),x]] /;
FreeQ[{c,d,A,C},x] && OneQ[j^2,k2^2/4] && RationalQ[m] && j*k2/2*m+(k2/2+1)/2!=0 && j*k2/2*m<=-1


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.+B_.*Sin[c_.+d_.*x_]^k_.+C_.*Sin[c_.+d_.*x_]^k2_),x_Symbol] :=
  -C*Cos[c+d*x]*(Sin[c+d*x]^j)^(m+j*k)/(d*(j*k*m+(k+3)/2)) + 
  Dist[1/(j*k*m+(k+3)/2),
    Int[(Sin[c+d*x]^j)^m*Simplify[A+(A+C)*(j*k*m+(k+1)/2)+B*(j*k*m+(k+3)/2)*Sin[c+d*x]^k,x],x]] /;
FreeQ[{c,d,A,B,C},x] && OneQ[j^2,k^2] && k2===2*k && RationalQ[m] && j*k*m+(k+3)/2!=0 && j*k*m>=-1


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_+C_.*Sin[c_.+d_.*x_]^k2_),x_Symbol] :=
  -C*Cos[c+d*x]*(Sin[c+d*x]^j)^(m+j*k2/2)/(d*(j*k2/2*m+(k2/2+3)/2)) + 
  Dist[(A+(A+C)*(j*k2/2*m+(k2/2+1)/2))/(j*k2/2*m+(k2/2+3)/2),Int[(Sin[c+d*x]^j)^m,x]] /;
FreeQ[{c,d,A,C},x] && OneQ[j^2,k2^2/4] && RationalQ[m] && j*k2/2*m+(k2/2+3)/2!=0 && j*k2/2*m>=-1


Int[(A_.+B_.*Sin[c_.+d_.*x_]+C_.*Sin[c_.+d_.*x_]^2)/(a_+b_.*Sin[c_.+d_.*x_]),x_Symbol] :=
  -C*Cos[c+d*x]/(b*d) + Dist[1/b,Int[(b*A+(b*B-a*C)*Sin[c+d*x])/(a+b*Sin[c+d*x]),x]] /;
FreeQ[{a,b,c,d,A,B,C},x]


Int[(A_+C_.*Sin[c_.+d_.*x_]^2)/(a_+b_.*Sin[c_.+d_.*x_]),x_Symbol] :=
  -C*Cos[c+d*x]/(b*d) + Dist[1/b,Int[(b*A-a*C*Sin[c+d*x])/(a+b*Sin[c+d*x]),x]] /;
FreeQ[{a,b,c,d,A,C},x]


Int[(A_.+B_.*Sin[c_.+d_.*x_]^(-1)+C_.*Sin[c_.+d_.*x_]^(-2))/(a_+b_.*Sin[c_.+d_.*x_]^(-1)),x_Symbol] :=
  A*x/a + Int[(C+(B-b*A/a)*Sin[c+d*x])/(Sin[c+d*x]*(b+a*Sin[c+d*x])),x] /;
FreeQ[{a,b,c,d,A,B,C},x] && NonzeroQ[a^2-b^2]


Int[(A_+C_.*Sin[c_.+d_.*x_]^(-2))/(a_+b_.*Sin[c_.+d_.*x_]^(-1)),x_Symbol] :=
  A*x/a + Int[(C-b*A/a*Sin[c+d*x])/(Sin[c+d*x]*(b+a*Sin[c+d*x])),x] /;
FreeQ[{a,b,c,d,A,C},x] && NonzeroQ[a^2-b^2]


Int[(A_+B_.*Sin[c_.+d_.*x_]^(-1)+C_.*Sin[c_.+d_.*x_]^(-2))*(b_.*Sin[c_.+d_.*x_]^(-1))^n_,x_Symbol] :=
  Dist[Sin[c+d*x]^n*(b*Csc[c+d*x])^n,Int[(C+B*Sin[c+d*x]+A*Sin[c+d*x]^2)/Sin[c+d*x]^(n+2),x]] /;
FreeQ[{b,c,d,A,B,C},x] && ZeroQ[n^2-1/4]


Int[(A_+C_.*Sin[c_.+d_.*x_]^(-2))*(b_.*Sin[c_.+d_.*x_]^(-1))^n_,x_Symbol] :=
  Dist[Sin[c+d*x]^n*(b*Csc[c+d*x])^n,Int[(C+A*Sin[c+d*x]^2)/Sin[c+d*x]^(n+2),x]] /;
FreeQ[{b,c,d,A,C},x] && ZeroQ[n^2-1/4]


Int[(A_.+B_.*Sin[c_.+d_.*x_]^(-1)+C_.*Sin[c_+d_.*x_]^(-2))*(a_.+b_.*Sin[c_.+d_.*x_]^(-1))^n_,x_Symbol] :=
  Dist[Sqrt[b+a*Sin[c+d*x]]/(Sqrt[Sin[c+d*x]]*Sqrt[a+b*Csc[c+d*x]]),
    Int[(C+B*Sin[c+d*x]+A*Sin[c+d*x]^2)*(b+a*Sin[c+d*x])^n/Sin[c+d*x]^(n+2),x]] /;
FreeQ[{a,b,c,d,A,B,C},x] && NonzeroQ[a^2-b^2] && IntegerQ[n-1/2] && -2<n<0


Int[(A_.+C_.*Sin[c_.+d_.*x_]^(-2))*(a_+b_.*Sin[c_.+d_.*x_]^(-1))^n_,x_Symbol] :=
  Dist[Sqrt[b+a*Sin[c+d*x]]/(Sqrt[Sin[c+d*x]]*Sqrt[a+b*Csc[c+d*x]]),
    Int[(C+A*Sin[c+d*x]^2)*(b+a*Sin[c+d*x])^n/Sin[c+d*x]^(n+2),x]] /;
FreeQ[{a,b,c,d,A,C},x] && NonzeroQ[a^2-b^2] && IntegerQ[n-1/2] && -2<n<0


Int[(A_.+B_.*Sin[c_.+d_.*x_]^k_.+C_.*Sin[c_.+d_.*x_]^k2_)*(a_+b_.*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  Dist[1/b^2,Int[Simplify[b*B-a*C+b*C*Sin[c+d*x]^k,x]*(a+b*Sin[c+d*x]^k)^(n+1),x]] /;
FreeQ[{a,b,c,d,A,B,C},x] && OneQ[k^2] && k2===2*k && ZeroQ[a^2*C-a*b*B+b^2*A] && RationalQ[n] && 
  n<-1


Int[(A_+C_.*Sin[c_.+d_.*x_]^k2_)*(a_+b_.*Sin[c_.+d_.*x_]^k_.)^n_.,x_Symbol] :=
  Dist[C/b^2,Int[Simplify[-a+b*Sin[c+d*x]^k,x]*(a+b*Sin[c+d*x]^k)^(n+1),x]] /;
FreeQ[{a,b,c,d,A,C},x] && OneQ[k^2] && k2===2*k && ZeroQ[a^2*C+b^2*A] && RationalQ[n] && n<-1


Int[(A_.+B_.*Sin[c_.+d_.*x_]^(-1)+C_.*Sin[c_.+d_.*x_]^(-2))*(a_+b_.*Sin[c_.+d_.*x_]^(-1))^n_,x_Symbol] :=
  (a^2*C-a*b*B+b^2*A)*Cot[c+d*x]*(a+b*Csc[c+d*x])^(n+1)/(a*d*(n+1)*(a^2-b^2)) + 
  Dist[1/(a*(n+1)*(a^2-b^2)),
    Int[Simplify[A*(a^2-b^2)*(n+1)-(a*(b*A-a*B+b*C)*(n+1))*Sin[c+d*x]^(-1)+
        (a^2*C-a*b*B+b^2*A)*(n+2)*Sin[c+d*x]^(-2),x]*
      (a+b*Sin[c+d*x]^(-1))^(n+1),x]] /;
FreeQ[{a,b,c,d,A,B,C},x] && NonzeroQ[a^2-b^2] && NonzeroQ[a^2*C-a*b*B+b^2*A] && RationalQ[n] && n<-1


Int[(A_.+C_.*Sin[c_.+d_.*x_]^(-2))*(a_+b_.*Sin[c_.+d_.*x_]^(-1))^n_,x_Symbol] :=
  (a^2*C+b^2*A)*Cot[c+d*x]*(a+b*Csc[c+d*x])^(n+1)/(a*d*(n+1)*(a^2-b^2)) + 
  Dist[1/(a*(n+1)*(a^2-b^2)),
    Int[Simplify[A*(a^2-b^2)*(n+1)-(a*b*(A+C)*(n+1))*Sin[c+d*x]^(-1)+(a^2*C+b^2*A)*(n+2)*Sin[c+d*x]^(-2),x]*
      (a+b*Sin[c+d*x]^(-1))^(n+1),x]] /;
FreeQ[{a,b,c,d,A,C},x] && NonzeroQ[a^2-b^2] && NonzeroQ[a^2*C+b^2*A] && RationalQ[n] && n<-1


Int[(A_.+B_.*Sin[c_.+d_.*x_]^(-1)+C_.*Sin[c_.+d_.*x_]^(-2))*(a_+b_.*Sin[c_.+d_.*x_]^(-1))^n_.,x_Symbol] :=
  -C*Cot[c+d*x]*(a+b*Csc[c+d*x])^n/(d*(n+1)) + 
  Dist[1/(n+1),
    Int[Simplify[a*A*(n+1)+(b*A+a*B+n*(b*A+a*B+b*C))*Sin[c+d*x]^(-1)+(a*C*n+b*B*(n+1))*Sin[c+d*x]^(-2),x]*
      (a+b*Sin[c+d*x]^(-1))^(n-1),x]] /;
FreeQ[{a,b,c,d,A,B,C},x] && RationalQ[n] && n>0


Int[(A_.+C_.*Sin[c_.+d_.*x_]^(-2))*(a_+b_.*Sin[c_.+d_.*x_]^(-1))^n_.,x_Symbol] :=
  -C*Cot[c+d*x]*(a+b*Csc[c+d*x])^n/(d*(n+1)) + 
  Dist[1/(n+1),
    Int[Simplify[a*A*(n+1)+b*(A+n*(A+C))*Sin[c+d*x]^(-1)+a*C*n*Sin[c+d*x]^(-2),x]*
      (a+b*Sin[c+d*x]^(-1))^(n-1),x]] /;
FreeQ[{a,b,c,d,A,C},x] && RationalQ[n] && n>0 && Not[ZeroQ[A] && ZeroQ[a^2-b^2]]


Int[(A_.+B_.*Sin[c_.+d_.*x_]^k_.+C_.*Sin[c_.+d_.*x_]^k2_)*(b_.*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  2*A*Cos[c+d*x]*(b*Sin[c+d*x]^k)^(n+1)/(b*d*(2*n+k+1)) + 
  Dist[1/(b*(2*n+k+1)),
    Int[Simplify[(2*n+k+1)*B+(2*A+(A+C)*(2*n+k+1))*Sin[c+d*x]^k,x]*(b*Sin[c+d*x]^k)^(n+1),x]] /;
FreeQ[{b,c,d,A,B,C},x] && OneQ[k^2] && k2===2*k  && RationalQ[n] && n<-1


Int[(A_+C_.*Sin[c_.+d_.*x_]^k2_)*(b_.*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  2*A*Cos[c+d*x]*(b*Sin[c+d*x]^k)^(n+1)/(b*d*(2*n+k+1)) + 
  Dist[(2*A+(A+C)*(2*n+k+1))/(b^2*(2*n+k+1)),Int[(b*Sin[c+d*x]^k)^(n+2),x]] /;
FreeQ[{b,c,d,A,C},x] && OneQ[k^2] && k2===2*k  && RationalQ[n] && n<-1


Int[(A_.+B_.*Sin[c_.+d_.*x_]^k_.+C_.*Sin[c_.+d_.*x_]^k2_)*(b_.*Sin[c_.+d_.*x_]^k_.)^n_.,x_Symbol] :=
  -2*C*Cos[c+d*x]*(b*Sin[c+d*x]^k)^(n+1)/(b*d*(2*n+k+3)) + 
  Dist[1/(2*n+k+3),
    Int[Simplify[2*A+(A+C)*(2*n+k+1)+B*(2*n+k+3)*Sin[c+d*x]^k,x]*(b*Sin[c+d*x]^k)^n,x]] /;
FreeQ[{b,c,d,A,B,C},x] && OneQ[k^2] && k2===2*k && RationalQ[n] && n>-1


Int[(A_+C_.*Sin[c_.+d_.*x_]^k2_)*(b_.*Sin[c_.+d_.*x_]^k_.)^n_.,x_Symbol] :=
  -2*C*Cos[c+d*x]*(b*Sin[c+d*x]^k)^(n+1)/(b*d*(2*n+k+3)) + 
  Dist[(2*A+(A+C)*(2*n+k+1))/(2*n+k+3),Int[(b*Sin[c+d*x]^k)^n,x]] /;
FreeQ[{b,c,d,A,C},x] && OneQ[k^2] && k2===2*k && RationalQ[n] && n>-1


Int[(A_.+B_.*Sin[c_.+d_.*x_]+C_.*Sin[c_.+d_.*x_]^2)/(Sin[c_.+d_.*x_]*(a_+b_.*Sin[c_.+d_.*x_])),x_Symbol] :=
  A/a*Int[1/Sin[c+d*x],x] - 
  Dist[1/a,Int[(b*A-a*B-a*C*Sin[c+d*x])/(a+b*Sin[c+d*x]),x]] /;
FreeQ[{a,b,c,d,A,B,C},x] && NonzeroQ[a^2-b^2]


Int[(A_+C_.*Sin[c_.+d_.*x_]^2)/(Sin[c_.+d_.*x_]*(a_+b_.*Sin[c_.+d_.*x_])),x_Symbol] :=
  A/a*Int[1/Sin[c+d*x],x] - 
  Dist[1/a,Int[(b*A-a*C*Sin[c+d*x])/(a+b*Sin[c+d*x]),x]] /;
FreeQ[{a,b,c,d,A,C},x] && NonzeroQ[a^2-b^2]


Int[(A_.+B_.*Sin[c_.+d_.*x_]+C_.*Sin[c_.+d_.*x_]^2)/(Sqrt[Sin[c_.+d_.*x_]]*(a_+b_.*Sin[c_.+d_.*x_])),x_Symbol] :=
  Dist[C/b,Int[Sqrt[Sin[c+d*x]],x]] + 
  Dist[1/b,Int[Simplify[b*A+(b*B-a*C)*Sin[c+d*x],x]/(Sqrt[Sin[c+d*x]]*(a+b*Sin[c+d*x])),x]] /;
FreeQ[{a,b,c,d,A,B,C},x] && NonzeroQ[a^2-b^2]


Int[(A_+C_.*Sin[c_.+d_.*x_]^2)/(Sqrt[Sin[c_.+d_.*x_]]*(a_+b_.*Sin[c_.+d_.*x_])),x_Symbol] :=
  Dist[C/b,Int[Sqrt[Sin[c+d*x]],x]] + 
  Dist[1/b,Int[(b*A-a*C*Sin[c+d*x])/(Sqrt[Sin[c+d*x]]*(a+b*Sin[c+d*x])),x]] /;
FreeQ[{a,b,c,d,A,C},x] && NonzeroQ[a^2-b^2]


Int[(A_.+B_.*Sin[c_.+d_.*x_]+C_.*Sin[c_.+d_.*x_]^2)/(Sin[c_.+d_.*x_]*Sqrt[a_+b_.*Sin[c_.+d_.*x_]]),x_Symbol] :=
  Dist[C/b,Int[Sqrt[a+b*Sin[c+d*x]],x]] +
  Dist[1/b,Int[Simplify[b*A+(b*B-a*C)*Sin[c+d*x],x]/(Sin[c+d*x]*Sqrt[a+b*Sin[c+d*x]]),x]] /;
FreeQ[{a,b,c,d,A,B,C},x] && NonzeroQ[a^2-b^2]


Int[(A_+C_.*Sin[c_.+d_.*x_]^2)/(Sin[c_.+d_.*x_]*Sqrt[a_+b_.*Sin[c_.+d_.*x_]]),x_Symbol] :=
  Dist[C/b,Int[Sqrt[a+b*Sin[c+d*x]],x]] + 
  Dist[1/b,Int[(A*b-a*C*Sin[c+d*x])/(Sin[c+d*x]*Sqrt[a+b*Sin[c+d*x]]),x]] /;
FreeQ[{a,b,c,d,A,C},x] && NonzeroQ[a^2-b^2]


Int[(A_+B_.*Sin[c_.+d_.*x_]+C_.*Sin[c_.+d_.*x_]^2)/(Sqrt[Sin[c_.+d_.*x_]]*Sqrt[a_+b_.*Sin[c_.+d_.*x_]]),x_Symbol] :=
  C*Sqrt[Sin[c+d*x]]*Sqrt[a+b*Sin[c+d*x]]*Tan[(c-Pi/2+d*x)/2]/(b*d) + 
  C/b*Int[Sqrt[a+b*Sin[c+d*x]]/(Sqrt[Sin[c+d*x]]*(1+Sin[c+d*x])),x] /;
FreeQ[{a,b,c,d,A,B,C},x] && NonzeroQ[a^2-b^2] && ZeroQ[A-B] && ZeroQ[2*b*A-a*C]


Int[(A_+C_.*Sin[c_.+d_.*x_]^2)/(Sqrt[Sin[c_.+d_.*x_]]*Sqrt[a_+b_.*Sin[c_.+d_.*x_]]),x_Symbol] :=
  A*Int[1/(Sqrt[Sin[c+d*x]]*Sqrt[a+b*Sin[c+d*x]]),x] + 
  Dist[C,Int[Sin[c+d*x]^(3/2)/Sqrt[a+b*Sin[c+d*x]],x]] /;
FreeQ[{a,b,c,d,A,C},x] && NonzeroQ[a^2-b^2]


Int[(A_.+B_.*Sin[c_.+d_.*x_]+C_.*Sin[c_.+d_.*x_]^2)/(Sqrt[Sin[c_.+d_.*x_]]*Sqrt[a_+b_.*Sin[c_.+d_.*x_]]),x_Symbol] :=
  Dist[1/(2*b),Int[(2*b*A-a*C+(2*b*B-a*C)*Sin[c+d*x])/(Sqrt[Sin[c+d*x]]*Sqrt[a+b*Sin[c+d*x]]),x]] + 
  Dist[C/(2*b),Int[(a+a*Sin[c+d*x]+2*b*Sin[c+d*x]^2)/(Sqrt[Sin[c+d*x]]*Sqrt[a+b*Sin[c+d*x]]),x]] /;
FreeQ[{a,b,c,d,A,B,C},x] && NonzeroQ[a^2-b^2]


Int[(A_.+B_.*Sin[c_.+d_.*x_]+C_.*Sin[c_.+d_.*x_]^2)/(Sin[c_.+d_.*x_]^(3/2)*Sqrt[a_+b_.*Sin[c_.+d_.*x_]]),x_Symbol] :=
  Dist[C,Int[(1+Sin[c+d*x])/(Sqrt[Sin[c+d*x]]*Sqrt[a+b*Sin[c+d*x]]),x]] + 
  Int[(A+(B-C)*Sin[c+d*x])/(Sin[c+d*x]^(3/2)*Sqrt[a+b*Sin[c+d*x]]),x] /;
FreeQ[{a,b,c,d,A,B,C},x] && NonzeroQ[a^2-b^2]


Int[(A_+C_.*Sin[c_.+d_.*x_]^2)/(Sin[c_.+d_.*x_]^(3/2)*Sqrt[a_+b_.*Sin[c_.+d_.*x_]]),x_Symbol] :=
  Dist[C,Int[(1+Sin[c+d*x])/(Sqrt[Sin[c+d*x]]*Sqrt[a+b*Sin[c+d*x]]),x]] + 
  Int[(A-C*Sin[c+d*x])/(Sin[c+d*x]^(3/2)*Sqrt[a+b*Sin[c+d*x]]),x] /;
FreeQ[{a,b,c,d,A,C},x] && NonzeroQ[a^2-b^2]


Int[(A_.+B_.*Sin[c_.+d_.*x_]+C_.*Sin[c_.+d_.*x_]^2)/(Sqrt[Sin[c_.+d_.*x_]]*(a_+b_.*Sin[c_.+d_.*x_])^(3/2)),x_Symbol] :=
  Dist[C/b,Int[(1+Sin[c+d*x])/(Sqrt[Sin[c+d*x]]*Sqrt[a+b*Sin[c+d*x]]),x]] + 
  Dist[1/b,Int[(b*A-a*C+(b*B-C*(a+b))*Sin[c+d*x])/(Sqrt[Sin[c+d*x]]*(a+b*Sin[c+d*x])^(3/2)),x]] /;
FreeQ[{a,b,c,d,A,B,C},x] && NonzeroQ[a^2-b^2]


Int[(A_+C_.*Sin[c_.+d_.*x_]^2)/(Sqrt[Sin[c_.+d_.*x_]]*(a_+b_.*Sin[c_.+d_.*x_])^(3/2)),x_Symbol] :=
  Dist[C/b,Int[(1+Sin[c+d*x])/(Sqrt[Sin[c+d*x]]*Sqrt[a+b*Sin[c+d*x]]),x]] + 
  Dist[1/b,Int[(b*A-a*C-C*(a+b)*Sin[c+d*x])/(Sqrt[Sin[c+d*x]]*(a+b*Sin[c+d*x])^(3/2)),x]] /;
FreeQ[{a,b,c,d,A,C},x] && NonzeroQ[a^2-b^2]


Int[Sin[c_.+d_.*x_]^m_.*(A_.+B_.*Sin[c_.+d_.*x_]^k_.+C_.*Sin[c_.+d_.*x_]^k2_)*
    (b_.*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  Dist[1/b^(k*m),Int[(A+B*Sin[c+d*x]^k+C*Sin[c+d*x]^(2*k))*(b*Sin[c+d*x]^k)^(k*m+n),x]] /;
FreeQ[{b,c,d,A,B,C,n},x] && OneQ[k^2] && k2===2*k && IntegerQ[m]


Int[Sin[c_.+d_.*x_]^m_.*(A_+C_.*Sin[c_.+d_.*x_]^k2_)*(b_.*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  Dist[1/b^(k*m),Int[(A+C*Sin[c+d*x]^(2*k))*(b*Sin[c+d*x]^k)^(k*m+n),x]] /;
FreeQ[{b,c,d,A,C,n},x] && OneQ[k^2] && k2===2*k && IntegerQ[m]


Int[(Sin[c_.+d_.*x_]^j_.)^m_*(A_.+B_.*Sin[c_.+d_.*x_]^k_.+C_.*Sin[c_.+d_.*x_]^k2_)*
    (b_*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  Dist[b^(n-1/2)*Sqrt[b*Sin[c+d*x]^k]/(Sqrt[Sin[c+d*x]^j])^(j*k),
    Int[Sin[c+d*x]^(j*m+k*n)*(A+B*Sin[c+d*x]^k+C*Sin[c+d*x]^(2*k)),x]] /;
FreeQ[{b,c,d,A,B,C},x] && OneQ[j^2,k^2] && IntegerQ[m-1/2] && IntegerQ[n-1/2] && n>0


Int[(Sin[c_.+d_.*x_]^j_.)^m_*(A_.+C_.*Sin[c_.+d_.*x_]^k2_)*(b_*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  Dist[b^(n-1/2)*Sqrt[b*Sin[c+d*x]^k]/(Sqrt[Sin[c+d*x]^j])^(j*k),
    Int[Sin[c+d*x]^(j*m+k*n)*(A+C*Sin[c+d*x]^(2*k)),x]] /;
FreeQ[{b,c,d,A,C},x] && OneQ[j^2,k^2] && IntegerQ[m-1/2] && IntegerQ[n-1/2] && n>0


Int[(Sin[c_.+d_.*x_]^j_.)^m_*(A_.+B_.*Sin[c_.+d_.*x_]^k_.+C_.*Sin[c_.+d_.*x_]^k2_)*
    (b_*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  Dist[b^(n+1/2)*(Sqrt[Sin[c+d*x]^j])^(j*k)/Sqrt[b*Sin[c+d*x]^k],
    Int[Sin[c+d*x]^(j*m+k*n)*(A+B*Sin[c+d*x]^k+C*Sin[c+d*x]^(2*k)),x]] /;
FreeQ[{b,c,d,A,B,C},x] && OneQ[j^2,k^2] && IntegerQ[m-1/2] && IntegerQ[n-1/2] && n<0


Int[(Sin[c_.+d_.*x_]^j_.)^m_*(A_.+C_.*Sin[c_.+d_.*x_]^k2_)*(b_*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  Dist[b^(n+1/2)*(Sqrt[Sin[c+d*x]^j])^(j*k)/Sqrt[b*Sin[c+d*x]^k],
    Int[Sin[c+d*x]^(j*m+k*n)*(A+C*Sin[c+d*x]^(2*k)),x]] /;
FreeQ[{b,c,d,A,C},x] && OneQ[j^2,k^2] && IntegerQ[m-1/2] && IntegerQ[n-1/2] && n<0


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.+B_.*Sin[c_.+d_.*x_]^(-1)+C_.*Sin[c_.+d_.*x_]^(-2))/
    (a_+b_.*Sin[c_.+d_.*x_]^(-1)),x_Symbol] :=
  Int[(Sin[c+d*x]^j)^(m-j)*(C+B*Sin[c+d*x]+A*Sin[c+d*x]^2)/(b+a*Sin[c+d*x]),x] /;
FreeQ[{a,b,c,d,A,B,C},x] && OneQ[j^2] && NonzeroQ[a^2-b^2] && RationalQ[m] && -1<m<=1


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.+C_.*Sin[c_.+d_.*x_]^(-2))/(a_+b_.*Sin[c_.+d_.*x_]^(-1)),x_Symbol] :=
  Int[(Sin[c+d*x]^j)^(m-j)*(C+A*Sin[c+d*x]^2)/(b+a*Sin[c+d*x]),x] /;
FreeQ[{a,b,c,d,A,C},x] && OneQ[j^2] && NonzeroQ[a^2-b^2] && RationalQ[m] && -1<m<=1


Int[Sin[c_.+d_.*x_]*(A_.+B_.*Sin[c_.+d_.*x_]^(-1)+C_.*Sin[c_.+d_.*x_]^(-2))/
    Sqrt[a_.+b_.*Sin[c_.+d_.*x_]^(-1)],x_Symbol] :=
  Dist[Sqrt[b+a*Sin[c+d*x]]/(Sqrt[Sin[c+d*x]]*Sqrt[a+b*Csc[c+d*x]]),
    Int[(C+B*Sin[c+d*x]+A*Sin[c+d*x]^2)/(Sqrt[Sin[c+d*x]]*Sqrt[b+a*Sin[c+d*x]]),x]] /;
FreeQ[{a,b,c,d,A,B,C},x] && NonzeroQ[a^2-b^2]


Int[Sin[c_.+d_.*x_]*(A_.+C_.*Sin[c_.+d_.*x_]^(-2))/Sqrt[a_.+b_.*Sin[c_.+d_.*x_]^(-1)],x_Symbol] :=
  Dist[Sqrt[b+a*Sin[c+d*x]]/(Sqrt[Sin[c+d*x]]*Sqrt[a+b*Csc[c+d*x]]),
    Int[(C+A*Sin[c+d*x]^2)/(Sqrt[Sin[c+d*x]]*Sqrt[b+a*Sin[c+d*x]]),x]] /;
FreeQ[{a,b,c,d,A,C},x] && NonzeroQ[a^2-b^2]


Int[(Sin[c_.+d_.*x_]^j_.)^m_*(A_.+B_.*Sin[c_.+d_.*x_]^(-1)+C_.*Sin[c_.+d_.*x_]^(-2))/
    Sqrt[a_.+b_.*Sin[c_.+d_.*x_]^(-1)],x_Symbol] :=
  Dist[Sqrt[b+a*Sin[c+d*x]]/((Sqrt[Sin[c+d*x]^j])^j*Sqrt[a+b*Csc[c+d*x]]),
    Int[Sin[c+d*x]^(j*m-3/2)*(C+B*Sin[c+d*x]+A*Sin[c+d*x]^2)/Sqrt[b+a*Sin[c+d*x]],x]] /;
FreeQ[{a,b,c,d,A,B,C},x] && OneQ[j^2] && NonzeroQ[a^2-b^2] && ZeroQ[j*m-1/2]


Int[(Sin[c_.+d_.*x_]^j_.)^m_*(A_.+C_.*Sin[c_.+d_.*x_]^(-2))/Sqrt[a_.+b_.*Sin[c_.+d_.*x_]^(-1)],x_Symbol] :=
  Dist[Sqrt[b+a*Sin[c+d*x]]/((Sqrt[Sin[c+d*x]^j])^j*Sqrt[a+b*Csc[c+d*x]]),
    Int[Sin[c+d*x]^(j*m-3/2)*(C+A*Sin[c+d*x]^2)/Sqrt[b+a*Sin[c+d*x]],x]] /;
FreeQ[{a,b,c,d,A,C},x] && OneQ[j^2] && NonzeroQ[a^2-b^2] && ZeroQ[j*m-1/2]


Int[(Sin[c_.+d_.*x_]^(-1))^m_*(A_.+B_.*Sin[c_.+d_.*x_]+C_.*Sin[c_.+d_.*x_]^2)*
    (a_+b_.*Sin[c_.+d_.*x_])^n_,x_Symbol] :=
  Dist[Sqrt[Csc[c+d*x]]*Sqrt[Sin[c+d*x]],
    Int[(A+B*Sin[c+d*x]+C*Sin[c+d*x]^2)*(a+b*Sin[c+d*x])^n/Sin[c+d*x]^m,x]] /;
FreeQ[{a,b,c,d,A,B,C},x] && IntegerQ[m-1/2] && RationalQ[n] && 0<m<2 && -2<n<0


Int[(Sin[c_.+d_.*x_]^(-1))^m_*(A_.+C_.*Sin[c_.+d_.*x_]^2)*(a_+b_.*Sin[c_.+d_.*x_])^n_,x_Symbol] :=
  Dist[Sqrt[Csc[c+d*x]]*Sqrt[Sin[c+d*x]],
    Int[(A+C*Sin[c+d*x]^2)*(a+b*Sin[c+d*x])^n/Sin[c+d*x]^m,x]] /;
FreeQ[{a,b,c,d,A,C},x] && IntegerQ[m-1/2] && RationalQ[n] && 0<m<2 && -2<n<0


Int[(A_.+B_.*Sin[c_.+d_.*x_]+C_.*Sin[c_.+d_.*x_]^2)*(a_+b_.*Sin[c_.+d_.*x_])^n_,x_Symbol] :=
  -(a^2*C-a*b*B+b^2*A)*Cos[c+d*x]*(a+b*Sin[c+d*x])^(n+1)/(b*d*(n+1)*(a^2-b^2)) + 
  Dist[1/(b*(n+1)*(a^2-b^2)),
    Int[Simplify[b*(a*A-b*B+a*C)*(n+1)-(a^2*C-a*b*B+b^2*A+(b^2*A-a*b*B+b^2*C)*(n+1))*Sin[c+d*x],x]*
      (a+b*Sin[c+d*x])^(n+1),x]] /;
FreeQ[{a,b,c,d,A,B,C},x] && NonzeroQ[a^2-b^2] && NonzeroQ[a^2*C-a*b*B+b^2*A] && RationalQ[n] && n<-1


Int[(A_.+C_.*Sin[c_.+d_.*x_]^2)*(a_+b_.*Sin[c_.+d_.*x_])^n_,x_Symbol] :=
  -(a^2*C+b^2*A)*Cos[c+d*x]*(a+b*Sin[c+d*x])^(n+1)/(b*d*(n+1)*(a^2-b^2)) + 
  Dist[1/(b*(n+1)*(a^2-b^2)),
    Int[Simplify[a*b*(A+C)*(n+1)-(a^2*C+b^2*A+(b^2*A+b^2*C)*(n+1))*Sin[c+d*x],x]*
      (a+b*Sin[c+d*x])^(n+1),x]] /;
FreeQ[{a,b,c,d,A,C},x] && NonzeroQ[a^2-b^2] && NonzeroQ[a^2*C+b^2*A] && RationalQ[n] && n<-1


Int[Sin[c_.+d_.*x_]^(-1)*(A_.+B_.*Sin[c_.+d_.*x_]^(-1)+C_.*Sin[c_.+d_.*x_]^(-2))*
    (a_+b_.*Sin[c_.+d_.*x_]^(-1))^n_,x_Symbol] :=
  -(a^2*C-a*b*B+b^2*A)*Cot[c+d*x]*(a+b*Csc[c+d*x])^(n+1)/(b*d*(n+1)*(a^2-b^2)) + 
  Dist[1/(b*(n+1)*(a^2-b^2)),
    Int[Sin[c+d*x]^(-1)*
      Simplify[b*(a*A-b*B+a*C)*(n+1)-(a^2*C-a*b*B+b^2*A+(b^2*A-a*b*B+b^2*C)*(n+1))*Sin[c+d*x]^(-1),x]*
      (a+b*Sin[c+d*x]^(-1))^(n+1),x]] /;
FreeQ[{a,b,c,d,A,B,C},x] && NonzeroQ[a^2-b^2] && NonzeroQ[a^2*C-a*b*B+b^2*A] && RationalQ[n] && n<-1


Int[Sin[c_.+d_.*x_]^(-1)*(A_.+C_.*Sin[c_.+d_.*x_]^(-2))*(a_+b_.*Sin[c_.+d_.*x_]^(-1))^n_,x_Symbol] :=
  -(a^2*C+b^2*A)*Cot[c+d*x]*(a+b*Csc[c+d*x])^(n+1)/(b*d*(n+1)*(a^2-b^2)) + 
  Dist[1/(b*(n+1)*(a^2-b^2)),
    Int[Sin[c+d*x]^(-1)*
      Simplify[a*b*(A+C)*(n+1)-(a^2*C+b^2*A+(b^2*A+b^2*C)*(n+1))*Sin[c+d*x]^(-1),x]*
      (a+b*Sin[c+d*x]^(-1))^(n+1),x]] /;
FreeQ[{a,b,c,d,A,C},x] && NonzeroQ[a^2-b^2] && NonzeroQ[a^2*C+b^2*A] && RationalQ[n] && n<-1


Int[(A_.+B_.*Sin[c_.+d_.*x_]+C_.*Sin[c_.+d_.*x_]^2)*(a_.+b_.*Sin[c_.+d_.*x_])^n_.,x_Symbol] :=
  -C*Cos[c+d*x]*(a+b*Sin[c+d*x])^(n+1)/(b*d*(n+2)) + 
  Dist[1/(b*(n+2)),
    Int[Simplify[b*A*(n+2)+b*C*(n+1)+(b*B*(n+2)-a*C)*Sin[c+d*x],x]*(a+b*Sin[c+d*x])^n,x]] /;
FreeQ[{a,b,c,d,A,B,C},x] && RationalQ[n] && n>-1


Int[(A_.+C_.*Sin[c_.+d_.*x_]^2)*(a_.+b_.*Sin[c_.+d_.*x_])^n_.,x_Symbol] :=
  -C*Cos[c+d*x]*(a+b*Sin[c+d*x])^(n+1)/(b*d*(n+2)) + 
  Dist[1/(b*(n+2)),
    Int[Simplify[b*A*(n+2)+b*C*(n+1)-a*C*Sin[c+d*x],x]*(a+b*Sin[c+d*x])^n,x]] /;
FreeQ[{a,b,c,d,A,C},x] && RationalQ[n] && n>-1


Int[Sin[c_.+d_.*x_]^(-1)*(A_.+B_.*Sin[c_.+d_.*x_]^(-1)+C_.*Sin[c_.+d_.*x_]^(-2))*
    (a_+b_.*Sin[c_.+d_.*x_]^(-1))^n_.,x_Symbol] :=
  -C*Cot[c+d*x]*(a+b*Csc[c+d*x])^(n+1)/(b*d*(n+2)) + 
  Dist[1/(b*(n+2)),
    Int[Sin[c+d*x]^(-1)*
      Simplify[b*A*(n+2)+b*C*(n+1)+(b*B*(n+2)-a*C)*Sin[c+d*x]^(-1),x]*(a+b*Sin[c+d*x]^(-1))^n,x]] /;
FreeQ[{a,b,c,d,A,B,C},x] && RationalQ[n] && n>-1


Int[Sin[c_.+d_.*x_]^(-1)*(A_.+C_.*Sin[c_.+d_.*x_]^(-2))*(a_+b_.*Sin[c_.+d_.*x_]^(-1))^n_.,x_Symbol] :=
  -C*Cot[c+d*x]*(a+b*Csc[c+d*x])^(n+1)/(b*d*(n+2)) + 
  Dist[1/(b*(n+2)),
    Int[Sin[c+d*x]^(-1)*
      Simplify[b*A*(n+2)+b*C*(n+1)-a*C*Sin[c+d*x]^(-1),x]*(a+b*Sin[c+d*x]^(-1))^n,x]] /;
FreeQ[{a,b,c,d,A,C},x] && RationalQ[n] && n>-1


(* Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.+B_.*Sin[c_.+d_.*x_]^k_.+C_.*Sin[c_.+d_.*x_]^k2_)*
    (a_+b_.*Sin[c_.+d_.*x_]^k_.),x_Symbol] :=
  a*A*Cos[c+d*x]*(Sin[c+d*x]^j)^(m+j*k)/(d*(j*k*m+(k+1)/2)) + 
  Dist[1/(j*k*m+(k+1)/2),
    Int[(Sin[c+d*x]^j)^(m+j*k)*
      Simplify[(j*k*m+(k+1)/2)*(b*A+a*B)+((j*k*m+(k+3)/2)*a*A+(j*k*m+(k+1)/2)*(b*B+a*C))*Sin[c+d*x]^k+
        (j*k*m+(k+1)/2)*b*C*Sin[c+d*x]^(2*k),x],x]] /;
FreeQ[{a,b,c,d,A,B,C},x] && OneQ[j^2,k^2] && k2===2*k && RationalQ[m] && j*k*m<-1 *)


(* Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.+C_.*Sin[c_.+d_.*x_]^k2_)*
    (a_+b_.*Sin[c_.+d_.*x_]^k_.),x_Symbol] :=
  a*A*Cos[c+d*x]*(Sin[c+d*x]^j)^(m+j*k)/(d*(j*k*m+(k+1)/2)) + 
  Dist[1/(j*k*m+(k+1)/2),
    Int[(Sin[c+d*x]^j)^(m+j*k)*
      Simplify[(j*k*m+(k+1)/2)*b*A+((j*k*m+(k+3)/2)*a*A+(j*k*m+(k+1)/2)*a*C)*Sin[c+d*x]^k+
        (j*k*m+(k+1)/2)*b*C*Sin[c+d*x]^(2*k),x],x]] /;
FreeQ[{a,b,c,d,A,C},x] && OneQ[j^2,k^2] && k2===2*k && RationalQ[m] && j*k*m<-1 *)


(* Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.+B_.*Sin[c_.+d_.*x_]^k_.+C_.*Sin[c_.+d_.*x_]^k2_)*
    (a_+b_.*Sin[c_.+d_.*x_]^k_.),x_Symbol] :=
  -b*C*Cos[c+d*x]*(Sin[c+d*x]^j)^(m+2*j*k)/(d*(j*k*m+(k+5)/2)) + 
  Dist[1/(j*k*m+(k+5)/2),
    Int[(Sin[c+d*x]^j)^m*
      Simplify[(j*k*m+(k+5)/2)*a*A+((j*k*m+(k+5)/2)*(b*A+a*B)+(j*k*m+(k+3)/2)*b*C)*Sin[c+d*x]^k+
        (j*k*m+(k+5)/2)*(b*B+a*C)*Sin[c+d*x]^(2*k),x],x]] /;
FreeQ[{a,b,c,d,A,B,C},x] && OneQ[j^2,k^2] && k2===2*k && RationalQ[m] && j*k*m>=-1 *)


(* Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.+C_.*Sin[c_.+d_.*x_]^k2_)*
    (a_+b_.*Sin[c_.+d_.*x_]^k_.),x_Symbol] :=
  -b*C*Cos[c+d*x]*(Sin[c+d*x]^j)^(m+2*j*k)/(d*(j*k*m+(k+5)/2)) + 
  Dist[1/(j*k*m+(k+5)/2),
    Int[(Sin[c+d*x]^j)^m*
      Simplify[(j*k*m+(k+5)/2)*a*A+((j*k*m+(k+5)/2)*b*A+(j*k*m+(k+3)/2)*b*C)*Sin[c+d*x]^k+
        (j*k*m+(k+5)/2)*a*C*Sin[c+d*x]^(2*k),x],x]] /;
FreeQ[{a,b,c,d,A,C},x] && OneQ[j^2,k^2] && k2===2*k && RationalQ[m] && j*k*m>=-1 *)


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.+B_.*Sin[c_.+d_.*x_]^k_.+C_.*Sin[c_.+d_.*x_]^k2_)*
    (a_+b_.*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  Dist[1/b^2,Int[(Sin[c+d*x]^j)^m*Simplify[b*B-a*C+b*C*Sin[c+d*x]^k,x]*(a+b*Sin[c+d*x]^k)^(n+1),x]] /;
FreeQ[{a,b,c,d,A,B,C,m},x] && OneQ[j^2,k^2] && k2===2*k && ZeroQ[a^2*C-a*b*B+b^2*A] && RationalQ[n] && n<-1


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.+C_.*Sin[c_.+d_.*x_]^k2_)*(a_+b_.*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  Dist[1/b^2,Int[(Sin[c+d*x]^j)^m*Simplify[-a*C+b*C*Sin[c+d*x]^k,x]*(a+b*Sin[c+d*x]^k)^(n+1),x]] /;
FreeQ[{a,b,c,d,A,C,m},x] && OneQ[j^2,k^2] && k2===2*k && ZeroQ[a^2*C+b^2*A] && RationalQ[n] && n<-1


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.+B_.*Sin[c_.+d_.*x_]^k_.+C_.*Sin[c_.+d_.*x_]^k2_)*
    (a_+b_.*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  -(a^2*C-a*b*B+b^2*A)*Cos[c+d*x]*(Sin[c+d*x]^j)^m*(a+b*Sin[c+d*x]^k)^(n+1)/(b*d*(n+1)*(a^2-b^2)) + 
  Dist[1/(b*(n+1)*(a^2-b^2)),
    Int[(Sin[c+d*x]^j)^(m-j*k)*
      Simplify[(a^2*C-a*b*B+b^2*A)*(j*k*m+(k-1)/2)+b*(a*A-b*B+a*C)*(n+1)*Sin[c+d*x]^k-
        ((b^2*A-a*b*B+b^2*C)*(n+1)+(a^2*C-a*b*B+b^2*A)*(j*k*m+(k+1)/2))*Sin[c+d*x]^(2*k),x]*
      (a+b*Sin[c+d*x]^k)^(n+1),x]] /;
FreeQ[{a,b,c,d,A,B,C},x] && OneQ[j^2,k^2] && k2===2*k && NonzeroQ[a^2-b^2] && 
  NonzeroQ[a^2*C-a*b*B+b^2*A] && RationalQ[m,n] && j*k*m>0 && n<-1


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.+C_.*Sin[c_.+d_.*x_]^k2_)*(a_+b_.*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  -(a^2*C+b^2*A)*Cos[c+d*x]*(Sin[c+d*x]^j)^m*(a+b*Sin[c+d*x]^k)^(n+1)/(b*d*(n+1)*(a^2-b^2)) + 
  Dist[1/(b*(n+1)*(a^2-b^2)),
    Int[(Sin[c+d*x]^j)^(m-j*k)*
      Simplify[(a^2*C+b^2*A)*(j*k*m+(k-1)/2)+b*(a*A+a*C)*(n+1)*Sin[c+d*x]^k-
        ((b^2*A+b^2*C)*(n+1)+(a^2*C+b^2*A)*(j*k*m+(k+1)/2))*Sin[c+d*x]^(2*k),x]*
      (a+b*Sin[c+d*x]^k)^(n+1),x]] /;
FreeQ[{a,b,c,d,A,C},x] && OneQ[j^2,k^2] && k2===2*k && NonzeroQ[a^2-b^2] && 
  NonzeroQ[a^2*C+b^2*A] && RationalQ[m,n] && j*k*m>0 && n<-1


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.+B_.*Sin[c_.+d_.*x_]^k_.+C_.*Sin[c_.+d_.*x_]^k2_)*
    (a_+b_.*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  -C*Cos[c+d*x]*(Sin[c+d*x]^j)^m*(a+b*Sin[c+d*x]^k)^(n+1)/(b*d*(j*k*m+n+(k+3)/2)) + 
  Dist[1/(b*(j*k*m+n+(k+3)/2)),
    Int[(Sin[c+d*x]^j)^(m-j*k)*
      Simplify[a*C*(j*k*m+(k-1)/2)+b*(A+(A+C)*(j*k*m+n+(k+1)/2))*Sin[c+d*x]^k+
        (b*B*(n+1)+(b*B-a*C)*(j*k*m+(k+1)/2))*Sin[c+d*x]^(2*k),x]*
      (a+b*Sin[c+d*x]^k)^n,x]] /;
FreeQ[{a,b,c,d,A,B,C},x] && OneQ[j^2,k^2] && k2===2*k && NonzeroQ[a^2-b^2] && 
  RationalQ[m,n] && j*k*m>0 && -1<=n<0


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.+C_.*Sin[c_.+d_.*x_]^k2_)*(a_+b_.*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  -C*Cos[c+d*x]*(Sin[c+d*x]^j)^m*(a+b*Sin[c+d*x]^k)^(n+1)/(b*d*(j*k*m+n+(k+1)/2+1)) + 
  Dist[1/(b*(j*k*m+n+(k+1)/2+1)),
    Int[(Sin[c+d*x]^j)^(m-j*k)*
      Simplify[a*C*(j*k*m+(k-1)/2)+b*(A+(A+C)*(j*k*m+n+(k+1)/2))*Sin[c+d*x]^k-
        a*C*(j*k*m+(k+1)/2)*Sin[c+d*x]^(2*k),x]*
      (a+b*Sin[c+d*x]^k)^n,x]] /;
FreeQ[{a,b,c,d,A,C},x] && OneQ[j^2,k^2] && k2===2*k && NonzeroQ[a^2-b^2] && 
  RationalQ[m,n] && j*k*m>0 && -1<=n<0


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.+B_.*Sin[c_.+d_.*x_]^k_.+C_.*Sin[c_.+d_.*x_]^k2_)*
    (a_+b_.*Sin[c_.+d_.*x_]^k_.)^n_.,x_Symbol] :=
  -C*Cos[c+d*x]*(Sin[c+d*x]^j)^(m+j*k)*(a+b*Sin[c+d*x]^k)^n/(d*(j*k*m+(k+3)/2+n)) + 
  Dist[1/(j*k*m+(k+3)/2+n),
    Int[(Sin[c+d*x]^j)^m*
      Simplify[a*(A*(n+1)+(A+C)*(j*k*m+(k+1)/2))+(b*A+a*B+(b*A+a*B+b*C)*(j*k*m+(k+1)/2+n))*Sin[c+d*x]^k+
        (a*C*n+b*B*(j*k*m+(k+3)/2+n))*Sin[c+d*x]^(2*k),x]*
      (a+b*Sin[c+d*x]^k)^(n-1),x]] /;
FreeQ[{a,b,c,d,A,B,C},x] && OneQ[j^2,k^2] && k2===2*k && NonzeroQ[a^2-b^2] && 
  RationalQ[m,n] && j*k*m>=-1 && Not[m^2==1 && k==-1] && n>0


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.+C_.*Sin[c_.+d_.*x_]^k2_)*(a_+b_.*Sin[c_.+d_.*x_]^k_.)^n_.,x_Symbol] :=
  -C*Cos[c+d*x]*(Sin[c+d*x]^j)^(m+j*k)*(a+b*Sin[c+d*x]^k)^n/(d*(j*k*m+(k+3)/2+n)) + 
  Dist[1/(j*k*m+(k+3)/2+n),
    Int[(Sin[c+d*x]^j)^m*
      Simplify[a*(A*(n+1)+(A+C)*(j*k*m+(k+1)/2))+(b*A+(b*A+b*C)*(j*k*m+(k+1)/2+n))*Sin[c+d*x]^k+
        a*C*n*Sin[c+d*x]^(2*k),x]*
      (a+b*Sin[c+d*x]^k)^(n-1),x]] /;
FreeQ[{a,b,c,d,A,C},x] && OneQ[j^2,k^2] && k2===2*k && NonzeroQ[a^2-b^2] && 
  RationalQ[m,n] && j*k*m>=-1 && Not[m^2==1 && k==-1] && n>0


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.+B_.*Sin[c_.+d_.*x_]^k_.+C_.*Sin[c_.+d_.*x_]^k2_)*
    (a_+b_.*Sin[c_.+d_.*x_]^k_.)^n_.,x_Symbol] :=
  A*Cos[c+d*x]*(Sin[c+d*x]^j)^(m+j*k)*(a+b*Sin[c+d*x]^k)^n/(d*(j*k*m+(k+1)/2)) + 
  Dist[1/(j*k*m+(k+1)/2),
    Int[(Sin[c+d*x]^j)^(m+j*k)*
      Simplify[a*B*(j*k*m+(k+1)/2)-b*A*n+(a*A+(a*A+a*C+b*B)*(j*k*m+(k+1)/2))*Sin[c+d*x]^k+
        b*(A*(n+1)+(A+C)*(j*k*m+(k+1)/2))*Sin[c+d*x]^(2*k),x]*
      (a+b*Sin[c+d*x]^k)^(n-1),x]] /;
FreeQ[{a,b,c,d,A,B,C},x] && OneQ[j^2,k^2] && k2===2*k && NonzeroQ[a^2-b^2] && 
  RationalQ[m,n] && j*k*m+(k+1)/2!=0 && j*k*m<=-1 && n>0


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.+C_.*Sin[c_.+d_.*x_]^k2_)*(a_+b_.*Sin[c_.+d_.*x_]^k_.)^n_.,x_Symbol] :=
  A*Cos[c+d*x]*(Sin[c+d*x]^j)^(m+j*k)*(a+b*Sin[c+d*x]^k)^n/(d*(j*k*m+(k+1)/2)) + 
  Dist[1/(j*k*m+(k+1)/2),
    Int[(Sin[c+d*x]^j)^(m+j*k)*
      Simplify[-b*A*n+a*(A+(A+C)*(j*k*m+(k+1)/2))*Sin[c+d*x]^k+
        b*(A*(n+1)+(A+C)*(j*k*m+(k+1)/2))*Sin[c+d*x]^(2*k),x]*
      (a+b*Sin[c+d*x]^k)^(n-1),x]] /;
FreeQ[{a,b,c,d,A,C},x] && OneQ[j^2,k^2] && k2===2*k && NonzeroQ[a^2-b^2] && 
  RationalQ[m,n] && j*k*m+(k+1)/2!=0 && j*k*m<=-1 && n>0


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.+B_.*Sin[c_.+d_.*x_]^k_.+C_.*Sin[c_.+d_.*x_]^k2_)*
    (a_+b_.*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  A*Cos[c+d*x]*(Sin[c+d*x]^j)^(m+j*k)*(a+b*Sin[c+d*x]^k)^(n+1)/(a*d*(j*k*m+(k+1)/2)) + 
  Dist[1/(a*(j*k*m+(k+1)/2)),
    Int[(Sin[c+d*x]^j)^(m+j*k)*
      Simplify[(a*B-b*A)*(j*k*m+(k+1)/2)-b*A*(n+1)+a*(A+(A+C)*(j*k*m+(k+1)/2))*Sin[c+d*x]^k+
        b*A*(j*k*m+n+(k+5)/2)*Sin[c+d*x]^(2*k),x]*
      (a+b*Sin[c+d*x]^k)^n,x]] /;
FreeQ[{a,b,c,d,A,B,C},x] && OneQ[j^2,k^2] && k2===2*k && NonzeroQ[a^2-b^2] && 
  RationalQ[m,n] && j*k*m+(k+1)/2!=0 && j*k*m<=-1 && -1<=n<0


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.+C_.*Sin[c_.+d_.*x_]^k2_)*(a_+b_.*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  A*Cos[c+d*x]*(Sin[c+d*x]^j)^(m+j*k)*(a+b*Sin[c+d*x]^k)^(n+1)/(a*d*(j*k*m+(k+1)/2)) + 
  Dist[1/(a*(j*k*m+(k+1)/2)),
    Int[(Sin[c+d*x]^j)^(m+j*k)*
      Simplify[-b*A*(j*k*m+(k+1)/2)-b*A*(n+1)+a*(A+(A+C)*(j*k*m+(k+1)/2))*Sin[c+d*x]^k+
        b*A*(j*k*m+n+(k+5)/2)*Sin[c+d*x]^(2*k),x]*
      (a+b*Sin[c+d*x]^k)^n,x]] /;
FreeQ[{a,b,c,d,A,C},x] && OneQ[j^2,k^2] && k2===2*k && NonzeroQ[a^2-b^2] && 
  RationalQ[m,n] && j*k*m+(k+1)/2!=0 && j*k*m<=-1 && -1<=n<0


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.+B_.*Sin[c_.+d_.*x_]^k_.+C_.*Sin[c_.+d_.*x_]^k2_)*
    (a_+b_.*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  (a^2*C-a*b*B+b^2*A)*Cos[c+d*x]*(Sin[c+d*x]^j)^(m+j*k)*(a+b*Sin[c+d*x]^k)^(n+1)/(a*d*(n+1)*(a^2-b^2)) + 
  Dist[1/(a*(n+1)*(a^2-b^2)),
    Int[(Sin[c+d*x]^j)^m*
      Simplify[A*(a^2-b^2)*(n+1)-(a^2*C-a*b*B+b^2*A)*(j*k*m+(k+1)/2)-a*(b*A-a*B+b*C)*(n+1)*Sin[c+d*x]^k+
        (a^2*C-a*b*B+b^2*A)*(j*k*m+n+(k+5)/2)*Sin[c+d*x]^(2*k),x]*
      (a+b*Sin[c+d*x]^k)^(n+1),x]] /;
FreeQ[{a,b,c,d,A,B,C},x] && OneQ[j^2,k^2] && k2===2*k && NonzeroQ[a^2-b^2] && 
  NonzeroQ[a^2*C-a*b*B+b^2*A] && RationalQ[m,n] && j*k*m<0 && n<-1


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.+C_.*Sin[c_.+d_.*x_]^k2_)*(a_+b_.*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  (a^2*C+b^2*A)*Cos[c+d*x]*(Sin[c+d*x]^j)^(m+j*k)*(a+b*Sin[c+d*x]^k)^(n+1)/(a*d*(n+1)*(a^2-b^2)) + 
  Dist[1/(a*(n+1)*(a^2-b^2)),
    Int[(Sin[c+d*x]^j)^m*
      Simplify[A*(a^2-b^2)*(n+1)-(a^2*C+b^2*A)*(j*k*m+(k+1)/2)-a*b*(A+C)*(n+1)*Sin[c+d*x]^k+
        (a^2*C+b^2*A)*(j*k*m+n+(k+5)/2)*Sin[c+d*x]^(2*k),x]*
      (a+b*Sin[c+d*x]^k)^(n+1),x]] /;
FreeQ[{a,b,c,d,A,C},x] && OneQ[j^2,k^2] && k2===2*k && NonzeroQ[a^2-b^2] && 
  NonzeroQ[a^2*C+b^2*A] && RationalQ[m,n] && j*k*m<0 && n<-1
(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



Int[(A_.+B_.*Sin[c_.+d_.*x_]^(-1)+C_.*Sin[c_.+d_.*x_]^(-2))/(a_+b_.*Sin[c_.+d_.*x_]^(-1)),x_Symbol] :=
  A*x/a + 
  C/b*Int[Sin[c+d*x]^(-1),x] - 
  (b*A-a*B+b*C)/a*Int[Sin[c+d*x]^(-1)/(a+b*Sin[c+d*x]^(-1)),x] /;
FreeQ[{a,b,c,d,A,B,C},x] && ZeroQ[a^2-b^2]


Int[(A_.+C_.*Sin[c_.+d_.*x_]^(-2))/(a_+b_.*Sin[c_.+d_.*x_]^(-1)),x_Symbol] :=
  A*x/a + C/b*Int[Sin[c+d*x]^(-1),x] - 
  (b*A+b*C)/a*Int[Sin[c+d*x]^(-1)/(a+b*Sin[c+d*x]^(-1)),x] /;
FreeQ[{a,b,c,d,A,C},x] && ZeroQ[a^2-b^2]


Int[(A_.+B_.*Sin[c_.+d_.*x_]^(-1)+C_.*Sin[c_.+d_.*x_]^(-2))/Sqrt[a_.+b_.*Sin[c_.+d_.*x_]^(-1)],x_Symbol] :=
  -2*C*Cot[c+d*x]/(d*Sqrt[a+b*Csc[c + d*x]]) + 
  Dist[1/a,Int[Simplify[a*A+(a*B-b*C)*Sin[c+d*x]^(-1),x]/Sqrt[a+b*Sin[c+d*x]^(-1)],x]] /;
FreeQ[{a,b,c,d,A,B,C},x] && ZeroQ[a^2-b^2]


Int[(A_+C_.*Sin[c_.+d_.*x_]^(-2))/Sqrt[a_.+b_.*Sin[c_.+d_.*x_]^(-1)],x_Symbol] :=
  -2*C*Cot[c+d*x]/(d*Sqrt[a+b*Csc[c + d*x]]) + 
  Dist[1/a,Int[Simplify[a*A-b*C*Sin[c+d*x]^(-1),x]/Sqrt[a+b*Sin[c+d*x]^(-1)],x]] /;
FreeQ[{a,b,c,d,A,C},x] && ZeroQ[a^2-b^2]


Int[(Sin[c_.+d_.*x_]^j_.)^m_*(A_+B_.*Sin[c_.+d_.*x_]^(-1)+C_.*Sin[c_.+d_.*x_]^(-2))/
    Sqrt[a_.+b_.*Sin[c_.+d_.*x_]^(-1)],x_Symbol] :=
  -2*A*Cos[c+d*x]/(d*(Sin[c+d*x]^j)^m*Sqrt[a+b*Csc[c+d*x]]) - 
  Dist[1/a,
    Int[Simplify[b*A-a*B-a*C*Sin[c+d*x]^(-1),x]/((Sin[c+d*x]^j)^m*Sqrt[a+b*Sin[c+d*x]^(-1)]),x]] /;
FreeQ[{a,b,c,d,A,B,C},x] && OneQ[j^2] && ZeroQ[a^2-b^2] && RationalQ[m] && j*m==1/2


Int[(Sin[c_.+d_.*x_]^j_.)^m_*(A_+C_.*Sin[c_.+d_.*x_]^(-2))/Sqrt[a_.+b_.*Sin[c_.+d_.*x_]^(-1)],x_Symbol] :=
  -2*A*Cos[c+d*x]/(d*(Sin[c+d*x]^j)^m*Sqrt[a+b*Csc[c+d*x]]) - 
  Dist[1/a,
    Int[Simplify[b*A-a*C*Sin[c+d*x]^(-1),x]/((Sin[c+d*x]^j)^m*Sqrt[a+b*Sin[c+d*x]^(-1)]),x]] /;
FreeQ[{a,b,c,d,A,C},x] && OneQ[j^2] && ZeroQ[a^2-b^2] && RationalQ[m] && j*m==1/2


Int[(A_.+B_.*Sin[c_.+d_.*x_]+C_.*Sin[c_.+d_.*x_]^2)*(a_+b_.*Sin[c_.+d_.*x_])^n_,x_Symbol] :=
  (b*(A+C)-a*B)*Cos[c+d*x]*(a+b*Sin[c+d*x])^n/(a*d*(2*n+1)) + 
  Dist[1/(a^2*(2*n+1)),
    Int[Simplify[a*A*(n+1)+n*(b*B-a*C)+b*C*(2*n+1)*Sin[c+d*x],x]*(a+b*Sin[c+d*x])^(n+1),x]] /;
FreeQ[{a,b,c,d,A,B,C},x] && ZeroQ[a^2-b^2] && RationalQ[n] && n<-1


Int[(A_.+C_.*Sin[c_.+d_.*x_]^2)*(a_+b_.*Sin[c_.+d_.*x_])^n_,x_Symbol] :=
  b*(A+C)*Cos[c+d*x]*(a+b*Sin[c+d*x])^n/(a*d*(2*n+1)) + 
  Dist[1/(a^2*(2*n+1)),
    Int[Simplify[a*A*(n+1)-a*C*n+b*C*(2*n+1)*Sin[c+d*x],x]*(a+b*Sin[c+d*x])^(n+1),x]] /;
FreeQ[{a,b,c,d,A,C},x] && ZeroQ[a^2-b^2] && RationalQ[n] && n<-1


Int[(A_.+B_.*Sin[c_.+d_.*x_]^(-1)+C_.*Sin[c_.+d_.*x_]^(-2))*(a_+b_.*Sin[c_.+d_.*x_]^(-1))^n_,x_Symbol] :=
  (a*B-b*(A+C))*Cot[c+d*x]*(a+b*Csc[c+d*x])^n/(b*d*(2*n+1)) + 
  Dist[1/(a^2*(2*n+1)),
    Int[Simplify[a*A*(2*n+1)+(b*C*n-(b*A-a*B)*(n+1))*Sin[c+d*x]^(-1),x]*(a+b*Sin[c+d*x]^(-1))^(n+1),x]] /;
FreeQ[{a,b,c,d,A,B,C},x] && ZeroQ[a^2-b^2] && RationalQ[n] && n<-1


Int[(A_.+C_.*Sin[c_.+d_.*x_]^(-2))*(a_+b_.*Sin[c_.+d_.*x_]^(-1))^n_,x_Symbol] :=
  -(A+C)*Cot[c+d*x]*(a+b*Csc[c+d*x])^n/(d*(2*n+1)) + 
  Dist[1/(a^2*(2*n+1)),
    Int[Simplify[a*A*(2*n+1)+(b*C*n-b*A*(n+1))*Sin[c+d*x]^(-1),x]*(a+b*Sin[c+d*x]^(-1))^(n+1),x]] /;
FreeQ[{a,b,c,d,A,C},x] && ZeroQ[a^2-b^2] && RationalQ[n] && n<-1


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(B_.*Sin[c_.+d_.*x_]^k_.+C_.*Sin[c_.+d_.*x_]^k2_)*
    (a_+b_.*Sin[c_.+d_.*x_]^k_.)^n_.,x_Symbol] :=
  Int[(Sin[c+d*x]^j)^(m+j*k)*(B+C*Sin[c+d*x]^k)*(a+b*Sin[c+d*x]^k)^n,x] /;
FreeQ[{a,b,c,d,B,C,m,n},x] && OneQ[j^2,k^2] && k2===2*k && ZeroQ[a^2-b^2]


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_+B_.*Sin[c_.+d_.*x_]^k_.+C_.*Sin[c_.+d_.*x_]^k2_)*
    (a_+b_.*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  (a*B-b*A-b*C)*Cos[c+d*x]*(Sin[c+d*x]^j)^(m+j*k)*(a+b*Sin[c+d*x]^k)^n/(b*d*(2*n+1)) + 
  Dist[1/(a^2*(2*n+1)),
    Int[(Sin[c+d*x]^j)^m*
      Simplify[a*A*(2*n+1)-(b*B-a*A-a*C)*(j*k*m+(k+1)/2)+
        (b*C*n-(b*A-a*B)*(n+1)+(a*B-b*A-b*C)*(j*k*m+(k+1)/2))*Sin[c+d*x]^k,x]*
      (a+b*Sin[c+d*x]^k)^(n+1),x]] /;
FreeQ[{a,b,c,d,A,B,C},x] && OneQ[j^2,k^2] && k2===2*k && ZeroQ[a^2-b^2] && 
  RationalQ[m,n] && n<=-1


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.+C_.*Sin[c_.+d_.*x_]^k2_)*(a_+b_.*Sin[c_.+d_.*x_]^k_.)^n_,x_Symbol] :=
  -(A+C)*Cos[c+d*x]*(Sin[c+d*x]^j)^(m+j*k)*(a+b*Sin[c+d*x]^k)^n/(d*(2*n+1)) + 
  Dist[1/(a^2*(2*n+1)),
    Int[(Sin[c+d*x]^j)^m*
      Simplify[a*A*(2*n+1)+a*(A+C)*(j*k*m+(k+1)/2)+
        (b*C*n-b*A*(n+1)-b*(A+C)*(j*k*m+(k+1)/2))*Sin[c+d*x]^k,x]*
      (a+b*Sin[c+d*x]^k)^(n+1),x]] /;
FreeQ[{a,b,c,d,A,C},x] && OneQ[j^2,k^2] && k2===2*k && ZeroQ[a^2-b^2] && 
  RationalQ[m,n] && n<=-1


Int[(Sin[c_.+d_.*x_]^j_.)^m_*(A_+B_.*Sin[c_.+d_.*x_]^k_.+C_.*Sin[c_.+d_.*x_]^k2_)*
    (a_+b_.*Sin[c_.+d_.*x_]^k_.)^n_.,x_Symbol] :=
  A*Cos[c+d*x]*(Sin[c+d*x]^j)^(m+j*k)*(a+b*Sin[c+d*x]^k)^n/(d*(j*k*m+(k+1)/2)) + 
  Dist[1/(a*(j*k*m+(k+1)/2)),
    Int[(Sin[c+d*x]^j)^(m+j*k)*
      Simplify[a*B*(j*k*m+(k+1)/2)-b*A*n+a*(A*(n+1)+(A+C)*(j*k*m+(k+1)/2))*Sin[c+d*x]^k,x]*
      (a+b*Sin[c+d*x]^k)^n,x]] /;
FreeQ[{a,b,c,d,A,B,C},x] && OneQ[j^2,k^2] && k2===2*k && ZeroQ[a^2-b^2] && 
  RationalQ[m,n] && j*k*m<-1 && n>-1


Int[(Sin[c_.+d_.*x_]^j_.)^m_*(A_.+C_.*Sin[c_.+d_.*x_]^k2_)*(a_+b_.*Sin[c_.+d_.*x_]^k_.)^n_.,x_Symbol] :=
  A*Cos[c+d*x]*(Sin[c+d*x]^j)^(m+j*k)*(a+b*Sin[c+d*x]^k)^n/(d*(j*k*m+(k+1)/2)) + 
  Dist[1/(a*(j*k*m+(k+1)/2)),
    Int[(Sin[c+d*x]^j)^(m+j*k)*
      Simplify[-b*A*n+a*(A*(n+1)+(A+C)*(j*k*m+(k+1)/2))*Sin[c+d*x]^k,x]*
      (a+b*Sin[c+d*x]^k)^n,x]] /;
FreeQ[{a,b,c,d,A,C},x] && OneQ[j^2,k^2] && k2===2*k && ZeroQ[a^2-b^2] && 
  RationalQ[m,n] && j*k*m<-1 && n>-1


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_+B_.*Sin[c_.+d_.*x_]^k_.+C_.*Sin[c_.+d_.*x_]^k2_)*
    (a_+b_.*Sin[c_.+d_.*x_]^k_.)^n_.,x_Symbol] :=
  -C*Cos[c+d*x]*(Sin[c+d*x]^j)^(m+j*k)*(a+b*Sin[c+d*x]^k)^n/(d*(j*k*m+n+(k+3)/2)) + 
  Dist[1/(a*(j*k*m+n+(k+3)/2)),
    Int[(Sin[c+d*x]^j)^m*
      Simplify[a*A*(n+1)+a*(A+C)*(j*k*m+(k+1)/2)+(b*C*n+a*B*(j*k*m+n+(k+3)/2))*Sin[c+d*x]^k,x]*
      (a+b*Sin[c+d*x]^k)^n,x]] /;
FreeQ[{a,b,c,d,A,B,C},x] && OneQ[j^2,k^2] && k2===2*k && ZeroQ[a^2-b^2] && 
  RationalQ[m,n] && NonzeroQ[j*k*m+n+(k+3)/2] && j*k*m>=-1 && n>-1


Int[(Sin[c_.+d_.*x_]^j_.)^m_.*(A_.+C_.*Sin[c_.+d_.*x_]^k2_)*(a_+b_.*Sin[c_.+d_.*x_]^k_.)^n_.,x_Symbol] :=
  -C*Cos[c+d*x]*(Sin[c+d*x]^j)^(m+j*k)*(a+b*Sin[c+d*x]^k)^n/(d*(j*k*m+n+(k+3)/2)) + 
  Dist[1/(a*(j*k*m+n+(k+3)/2)),
    Int[(Sin[c+d*x]^j)^m*
      Simplify[a*A*(n+1)+a*(A+C)*(j*k*m+(k+1)/2)+b*C*n*Sin[c+d*x]^k,x]*
      (a+b*Sin[c+d*x]^k)^n,x]] /;
FreeQ[{a,b,c,d,A,C},x] && OneQ[j^2,k^2] && k2===2*k && ZeroQ[a^2-b^2] && 
  RationalQ[m,n] && NonzeroQ[j*k*m+n+(k+3)/2] && j*k*m>=-1 && n>-1
(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Code:: *)
Int[Gamma[n_,a_.+b_.*x_],x_Symbol] :=
  (a+b*x)*Gamma[n,a+b*x]/b -
  Gamma[n+1,a+b*x]/b /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[x_^m_.*Gamma[n_,a_.*x_],x_Symbol] :=
  x^(m+1)*Gamma[n,a*x]/(m+1) -
  Gamma[m+n+1,a*x]/((m+1)*a^(m+1)) /;
FreeQ[{a,n},x] && (IntegerQ[m] || PositiveQ[a])


(* ::Code:: *)
Int[x_^m_.*Gamma[n_,a_*x_],x_Symbol] :=
  x^(m+1)*Gamma[n,a*x]/(m+1) -
  x^(m+1)*Gamma[m+n+1,a*x]/((m+1)*(a*x)^(m+1)) /;
FreeQ[{a,m,n},x]


(* ::Code:: *)
Int[x_^m_.*Gamma[n_,a_+b_.*x_],x_Symbol] :=
  x^m*(a+b*x)*Gamma[n,a+b*x]/(b*(m+1)) -
  x^m*Gamma[n+1,a+b*x]/(b*(m+1)) -
  Dist[a*m/(b*(m+1)),Int[x^(m-1)*Gamma[n,a+b*x],x]] +
  Dist[m/(b*(m+1)),Int[x^(m-1)*Gamma[n+1,a+b*x],x]] /;
FreeQ[{a,b,n},x] && RationalQ[m] && m>0


(* ::Code:: *)
Int[LogGamma[a_.+b_.*x_],x_Symbol] :=
  PolyGamma[-2,a+b*x]/b /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[x_^m_.*LogGamma[a_.+b_.*x_],x_Symbol] :=
  x^m*PolyGamma[-2,a+b*x]/b -
  Dist[m/b,Int[x^(m-1)*PolyGamma[-2,a+b*x],x]] /;
FreeQ[{a,b},x] && RationalQ[m] && m>0


(* ::Code:: *)
Int[PolyGamma[n_,a_.+b_.*x_],x_Symbol] :=
  PolyGamma[n-1,a+b*x]/b /;
FreeQ[{a,b,n},x]


(* ::Code:: *)
Int[x_^m_.*PolyGamma[n_,a_.+b_.*x_],x_Symbol] :=
  x^m*PolyGamma[n-1,a+b*x]/b -
  Dist[m/b,Int[x^(m-1)*PolyGamma[n-1,a+b*x],x]] /;
FreeQ[{a,b,n},x] && RationalQ[m] && m>0


(* ::Code:: *)
Int[x_^m_.*PolyGamma[n_,a_.+b_.*x_],x_Symbol] :=
  x^(m+1)*PolyGamma[n,a+b*x]/(m+1) -
  Dist[b/(m+1),Int[x^(m+1)*PolyGamma[n+1,a+b*x],x]] /;
FreeQ[{a,b,n},x] && RationalQ[m] && m<-1


(* ::Code:: *)
Int[Gamma[a_.+b_.*x_]^n_.*PolyGamma[0,a_.+b_.*x_],x_Symbol] :=
  Gamma[a+b*x]^n/(b*n) /;
FreeQ[{a,b,n},x]


(* ::Code:: *)
Int[((a_.+b_.*x_)!)^n_.*PolyGamma[0,c_.+b_.*x_],x_Symbol] :=
  ((a+b*x)!)^n/(b*n) /;
FreeQ[{a,b,c,n},x] && ZeroQ[a-c+1]



(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Code:: *)
Int[Zeta[2,a_.+b_.*x_],x_Symbol] :=
  Int[PolyGamma[1,a+b*x],x] /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[Zeta[s_,a_.+b_.*x_],x_Symbol] :=
  -Zeta[s-1,a+b*x]/(b*(s-1)) /;
FreeQ[{a,b,s},x] && NonzeroQ[s-1] && NonzeroQ[s-2]


(* ::Code:: *)
Int[x_^m_.*Zeta[2,a_.+b_.*x_],x_Symbol] :=
  Int[x^m*PolyGamma[1,a+b*x],x] /;
FreeQ[{a,b},x] && RationalQ[m]


(* ::Code:: *)
Int[x_^m_.*Zeta[s_,a_.+b_.*x_],x_Symbol] :=
  -x^m*Zeta[s-1,a+b*x]/(b*(s-1)) +
  Dist[m/(b*(s-1)),Int[x^(m-1)*Zeta[s-1,a+b*x],x]] /;
FreeQ[{a,b,s},x] && RationalQ[m] && m>0 && NonzeroQ[s-1] && NonzeroQ[s-2]


(* ::Code:: *)
Int[x_^m_.*Zeta[s_,a_.+b_.*x_],x_Symbol] :=
  x^(m+1)*Zeta[s,a+b*x]/(m+1) +
  Dist[b*s/(m+1),Int[x^(m+1)*Zeta[s+1,a+b*x],x]] /;
FreeQ[{a,b,s},x] && RationalQ[m] && m<-1 && NonzeroQ[s-1] && NonzeroQ[s-2]



(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Code:: *)
Int[(c_.*ProductLog[a_.+b_.*x_])^p_,x_Symbol] :=
  (a+b*x)*(c*ProductLog[a+b*x])^p/(b*(p+1)) +
  Dist[p/(c*(p+1)),Int[(c*ProductLog[a+b*x])^(p+1)/(1+ProductLog[a+b*x]),x]] /;
FreeQ[{a,b,c},x] && RationalQ[p] && p<-1


(* ::Code:: *)
Int[(c_.*ProductLog[a_.+b_.*x_])^p_.,x_Symbol] :=
  (a+b*x)*(c*ProductLog[a+b*x])^p/b -
  Dist[p,Int[(c*ProductLog[a+b*x])^p/(1+ProductLog[a+b*x]),x]] /;
FreeQ[{a,b,c},x] && Not[RationalQ[p] && p<-1]


(* ::Code:: *)
Int[1/(d_+d_.*ProductLog[a_.+b_.*x_]),x_Symbol] :=
  (a+b*x)/(b*d*ProductLog[a+b*x]) /;
FreeQ[{a,b,d},x]


(* ::Code:: *)
Int[ProductLog[a_.+b_.*x_]/(d_+d_.*ProductLog[a_.+b_.*x_]),x_Symbol] :=
  d*x - 
  Int[1/(d+d*ProductLog[a+b*x]),x] /;
FreeQ[{a,b,d},x]


(* ::Code:: *)
Int[1/(ProductLog[a_.+b_.*x_]*(d_+d_.*ProductLog[a_.+b_.*x_])),x_Symbol] :=
  ExpIntegralEi[ProductLog[a+b*x]]/(b*d) /;
FreeQ[{a,b,d},x]


(* ::Code:: *)
Int[1/(Sqrt[c_.*ProductLog[a_.+b_.*x_]]*(d_+d_.*ProductLog[a_.+b_.*x_])),x_Symbol] :=
  Rt[Pi*c,2]*Erfi[Sqrt[c*ProductLog[a+b*x]]/Rt[c,2]]/(b*c*d) /;
FreeQ[{a,b,c,d},x] && PosQ[c]


(* ::Code:: *)
Int[1/(Sqrt[c_.*ProductLog[a_.+b_.*x_]]*(d_+d_.*ProductLog[a_.+b_.*x_])),x_Symbol] :=
  Rt[-Pi*c,2]*Erf[Sqrt[c*ProductLog[a+b*x]]/Rt[-c,2]]/(b*c*d) /;
FreeQ[{a,b,c,d},x] && NegQ[c]


(* ::Code:: *)
Int[(c_.*ProductLog[a_.+b_.*x_])^p_/(d_+d_.*ProductLog[a_.+b_.*x_]),x_Symbol] :=
  c*(a+b*x)*(c*ProductLog[a+b*x])^(p-1)/(b*d) -
  Dist[c*p,Int[(c*ProductLog[a+b*x])^(p-1)/(d+d*ProductLog[a+b*x]),x]] /;
FreeQ[{a,b,c,d},x] && RationalQ[p] && p>0


(* ::Code:: *)
Int[(c_.*ProductLog[a_.+b_.*x_])^p_/(d_+d_.*ProductLog[a_.+b_.*x_]),x_Symbol] :=
  (a+b*x)*(c*ProductLog[a+b*x])^p/(b*d*(p+1)) -
  Dist[1/(c*(p+1)),Int[(c*ProductLog[a+b*x])^(p+1)/(d+d*ProductLog[a+b*x]),x]] /;
FreeQ[{a,b,c,d},x] && RationalQ[p] && p<-1


(* ::Code:: *)
Int[(c_.*ProductLog[a_.+b_.*x_])^p_./(d_+d_.*ProductLog[a_.+b_.*x_]),x_Symbol] :=
  Gamma[p+1,-ProductLog[a+b*x]]*(c*ProductLog[a+b*x])^p/(b*d*(-ProductLog[a+b*x])^p) /;
FreeQ[{a,b,c,d,p},x]


(* ::Code:: *)
Int[x_^m_.*(c_.*ProductLog[a_+b_.*x_])^p_.,x_Symbol] :=
  Dist[1/b,Subst[Int[Dist[(c*ProductLog[x])^p,Expand[(-a/b+x/b)^m]],x],x,a+b*x]] /;
FreeQ[{a,b,c,p},x] && IntegerQ[m] && m>0


(* ::Code:: *)
Int[x_^m_./(d_+d_.*ProductLog[a_+b_.*x_]),x_Symbol] :=
  Dist[1/b,Subst[Int[Dist[1/(d+d*ProductLog[x]),Expand[(-a/b+x/b)^m]],x],x,a+b*x]] /;
FreeQ[{a,b,d},x] && IntegerQ[m] && m>0


(* ::Code:: *)
Int[x_^m_.*(c_.*ProductLog[a_+b_.*x_])^p_./(d_+d_.*ProductLog[a_+b_.*x_]),x_Symbol] :=
  Dist[1/b,Subst[Int[Dist[(c*ProductLog[x])^p/(d+d*ProductLog[x]),Expand[(-a/b+x/b)^m]],x],x,a+b*x]] /;
FreeQ[{a,b,c,d,p},x] && IntegerQ[m] && m>0


(* ::Code:: *)
Int[(c_.*ProductLog[a_.*x_^n_])^p_.,x_Symbol] :=
  x*(c*ProductLog[a*x^n])^p -
  Dist[n*p,Int[(c*ProductLog[a*x^n])^p/(1+ProductLog[a*x^n]),x]] /;
FreeQ[{a,c,n,p},x] && (ZeroQ[n*(p-1)+1] || IntegerQ[p-1/2] && ZeroQ[n*(p-1/2)+1])


(* ::Code:: *)
Int[(c_.*ProductLog[a_.*x_^n_])^p_.,x_Symbol] :=
  x*(c*ProductLog[a*x^n])^p/(n*p+1) +
  Dist[n*p/(c*(n*p+1)),Int[(c*ProductLog[a*x^n])^(p+1)/(1+ProductLog[a*x^n]),x]] /;
FreeQ[{a,c,n},x] && (IntegerQ[p] && ZeroQ[n*(p+1)+1] || IntegerQ[p-1/2] && ZeroQ[n*(p+1/2)+1])


(* ::Code:: *)
Int[(c_.*ProductLog[a_.*x_^n_])^p_.,x_Symbol] :=
  -Subst[Int[(c*ProductLog[a*x^(-n)])^p/x^2,x],x,1/x] /;
FreeQ[{a,c,p},x] && IntegerQ[n] && n<0


(* ::Code:: *)
Int[1/(d_+d_.*ProductLog[a_.*x_^n_]),x_Symbol] :=
  -Subst[Int[1/(x^2*(d+d*ProductLog[a*x^(-n)])),x],x,1/x] /;
FreeQ[{a,d},x] && IntegerQ[n] && n<0


(* ::Code:: *)
Int[(c_.*ProductLog[a_.*x_^n_.])^p_./(d_+d_.*ProductLog[a_.*x_^n_.]),x_Symbol] :=
  c*x*(c*ProductLog[a*x^n])^(p-1)/d /;
FreeQ[{a,c,d,n,p},x] && ZeroQ[n*(p-1)+1]


(* ::Code:: *)
Int[ProductLog[a_.*x_^n_.]^p_./(d_+d_.*ProductLog[a_.*x_^n_.]),x_Symbol] :=
  a^p*ExpIntegralEi[-p*ProductLog[a*x^n]]/(d*n) /;
FreeQ[{a,d},x] && IntegerQ[1/n] && ZeroQ[p+1/n]


(* ::Code:: *)
Int[(c_.*ProductLog[a_.*x_^n_.])^p_/(d_+d_.*ProductLog[a_.*x_^n_.]),x_Symbol] :=
  Rt[Pi*c*n,2]/(d*n*a^(1/n)*c^(1/n))*Erfi[Sqrt[c*ProductLog[a*x^n]]/Rt[c*n,2]] /;
FreeQ[{a,c,d},x] && IntegerQ[1/n] && ZeroQ[p-1/2+1/n] && PosQ[c*n]


(* ::Code:: *)
Int[(c_.*ProductLog[a_.*x_^n_.])^p_/(d_+d_.*ProductLog[a_.*x_^n_.]),x_Symbol] :=
  Rt[-Pi*c*n,2]/(d*n*a^(1/n)*c^(1/n))*Erf[Sqrt[c*ProductLog[a*x^n]]/Rt[-c*n,2]] /;
FreeQ[{a,c,d},x] && IntegerQ[1/n] && ZeroQ[p-1/2+1/n] && NegQ[c*n]


(* ::Code:: *)
Int[(c_.*ProductLog[a_.*x_^n_.])^p_./(d_+d_.*ProductLog[a_.*x_^n_.]),x_Symbol] :=
  c*x*(c*ProductLog[a*x^n])^(p-1)/d -
  Dist[c*(n*(p-1)+1),Int[(c*ProductLog[a*x^n])^(p-1)/(d+d*ProductLog[a*x^n]),x]] /;
FreeQ[{a,c,d},x] && RationalQ[{n,p}] && n>0 && n*(p-1)+1>0


(* ::Code:: *)
Int[(c_.*ProductLog[a_.*x_^n_.])^p_./(d_+d_.*ProductLog[a_.*x_^n_.]),x_Symbol] :=
  x*(c*ProductLog[a*x^n])^p/(d*(n*p+1)) -
  Dist[1/(c*(n*p+1)),Int[(c*ProductLog[a*x^n])^(p+1)/(d+d*ProductLog[a*x^n]),x]] /;
FreeQ[{a,c,d},x] && RationalQ[{n,p}] && n>0 && n*p+1<0


(* ::Code:: *)
Int[(c_.*ProductLog[a_.*x_^n_])^p_./(d_+d_.*ProductLog[a_.*x_^n_]),x_Symbol] :=
  -Subst[Int[(c*ProductLog[a*x^(-n)])^p/(x^2*(d+d*ProductLog[a*x^(-n)])),x],x,1/x] /;
FreeQ[{a,c,d,p},x] && IntegerQ[n] && n<0


(* ::Code:: *)
Int[x_^m_.*(c_.*ProductLog[a_.*x_^n_.])^p_.,x_Symbol] :=
  x^(m+1)*(c*ProductLog[a*x^n])^p/(m+1) -
  Dist[n*p/(m+1),Int[x^m*(c*ProductLog[a*x^n])^p/(1+ProductLog[a*x^n]),x]] /;
FreeQ[{a,c,m,n,p},x] && NonzeroQ[m+1] &&
(IntegerQ[p-1/2] && IntegerQ[2*Simplify[p+(m+1)/n]] && Simplify[p+(m+1)/n]>0 ||
 Not[IntegerQ[p-1/2]] && IntegerQ[Simplify[p+(m+1)/n]] && Simplify[p+(m+1)/n]>=0)


(* ::Code:: *)
Int[x_^m_.*(c_.*ProductLog[a_.*x_^n_.])^p_.,x_Symbol] :=
  x^(m+1)*(c*ProductLog[a*x^n])^p/(m+n*p+1) +
  Dist[n*p/(c*(m+n*p+1)),Int[x^m*(c*ProductLog[a*x^n])^(p+1)/(1+ProductLog[a*x^n]),x]] /;
FreeQ[{a,c,m,n,p},x] &&
(ZeroQ[m+1] ||
 IntegerQ[p-1/2] && IntegerQ[Simplify[p+(m+1)/n]-1/2] && Simplify[p+(m+1)/n]<0 ||
 Not[IntegerQ[p-1/2]] && IntegerQ[Simplify[p+(m+1)/n]] && Simplify[p+(m+1)/n]<0)


(* ::Code:: *)
Int[x_^m_.*(c_.*ProductLog[a_.*x_])^p_.,x_Symbol] :=
  Int[x^m*(c*ProductLog[a*x])^p/(1+ProductLog[a*x]),x] +
  Dist[1/c,Int[x^m*(c*ProductLog[a*x])^(p+1)/(1+ProductLog[a*x]),x]] /;
FreeQ[{a,c,m},x]


(* ::Code:: *)
Int[x_^m_.*(c_.*ProductLog[a_.*x_^n_])^p_.,x_Symbol] :=
  -Subst[Int[(c*ProductLog[a*x^(-n)])^p/x^(m+2),x],x,1/x] /;
FreeQ[{a,c,p},x] && IntegersQ[m,n] && n<0 && NonzeroQ[m+1]


(* ::Code:: *)
Int[1/(x_*(d_+d_.*ProductLog[a_.*x_^n_.])),x_Symbol] :=
  Log[ProductLog[a*x^n]]/(d*n) /;
FreeQ[{a,d,n},x]


(* ::Code:: *)
Int[x_^m_./(d_+d_.*ProductLog[a_.*x_]),x_Symbol] :=
  x^(m+1)/(d*(m+1)*ProductLog[a*x]) -
  Dist[m/(m+1),Int[x^m/(ProductLog[a*x]*(d+d*ProductLog[a*x])),x]] /;
FreeQ[{a,d},x] && RationalQ[m] && m>0


(* ::Code:: *)
Int[x_^m_./(d_+d_.*ProductLog[a_.*x_]),x_Symbol] :=
  x^(m+1)/(d*(m+1)) -
  Int[x^m*ProductLog[a*x]/(d+d*ProductLog[a*x]),x] /;
FreeQ[{a,d},x] && RationalQ[m] && m<-1


(* ::Code:: *)
Int[x_^m_./(d_+d_.*ProductLog[a_.*x_]),x_Symbol] :=
  x^m*Gamma[m+1,-(m+1)*ProductLog[a*x]]/
	(a*d*(m+1)*E^(m*ProductLog[a*x])*(-(m+1)*ProductLog[a*x])^m) /;
FreeQ[{a,d},x] && NonzeroQ[m+1]


(* ::Code:: *)
Int[x_^m_./(d_+d_.*ProductLog[a_.*x_^n_]),x_Symbol] :=
  -Subst[Int[1/(x^(m+2)*(d+d*ProductLog[a*x^(-n)])),x],x,1/x] /;
FreeQ[{a,d},x] && IntegersQ[m,n] && n<0 && NonzeroQ[m+1]


(* ::Code:: *)
Int[(c_.*ProductLog[a_.*x_^n_.])^p_./(x_*(d_+d_.*ProductLog[a_.*x_^n_.])),x_Symbol] :=
  (c*ProductLog[a*x^n])^p/(d*n*p) /;
FreeQ[{a,c,d,n,p},x]


(* ::Code:: *)
Int[x_^m_.*(c_.*ProductLog[a_.*x_^n_.])^p_./(d_+d_.*ProductLog[a_.*x_^n_.]),x_Symbol] :=
  c*x^(m+1)*(c*ProductLog[a*x^n])^(p-1)/(d*(m+1)) /;
FreeQ[{a,c,d,m,n,p},x] && ZeroQ[m+n*(p-1)+1] && NonzeroQ[m+1]


(* ::Code:: *)
Int[x_^m_.*ProductLog[a_.*x_^n_.]^p_./(d_+d_.*ProductLog[a_.*x_^n_.]),x_Symbol] :=
  a^p*ExpIntegralEi[-p*ProductLog[a*x^n]]/(d*n) /;
FreeQ[{a,d,m,n},x] && IntegerQ[p] && ZeroQ[m+n*p+1]


(* ::Code:: *)
Int[x_^m_.*(c_.*ProductLog[a_.*x_^n_.])^p_/(d_+d_.*ProductLog[a_.*x_^n_.]),x_Symbol] :=
  a^(p-1/2)*c^(p-1/2)*Rt[Pi*c/(p-1/2),2]*Erf[Sqrt[c*ProductLog[a*x^n]]/Rt[c/(p-1/2),2]]/(d*n) /;
FreeQ[{a,c,d,m,n},x] && IntegerQ[p-1/2] && p-1/2!=0 && ZeroQ[m+n*(p-1/2)+1] && PosQ[c/(p-1/2)]


(* ::Code:: *)
Int[x_^m_.*(c_.*ProductLog[a_.*x_^n_.])^p_/(d_+d_.*ProductLog[a_.*x_^n_.]),x_Symbol] :=
  a^(p-1/2)*c^(p-1/2)*Rt[-Pi*c/(p-1/2),2]*Erfi[Sqrt[c*ProductLog[a*x^n]]/Rt[-c/(p-1/2),2]]/(d*n) /;
FreeQ[{a,c,d,m,n},x] && IntegerQ[p-1/2] && p-1/2!=0 && ZeroQ[m+n*(p-1/2)+1] && NegQ[c/(p-1/2)]


(* ::Code:: *)
Int[x_^m_.*(c_.*ProductLog[a_.*x_^n_.])^p_./(d_+d_.*ProductLog[a_.*x_^n_.]),x_Symbol] :=
  c*x^(m+1)*(c*ProductLog[a*x^n])^(p-1)/(d*(m+1)) -
  Dist[c*(m+n*(p-1)+1)/(m+1),Int[x^m*(c*ProductLog[a*x^n])^(p-1)/(d+d*ProductLog[a*x^n]),x]] /;
FreeQ[{a,c,d,m,n,p},x] && NonzeroQ[m+1] && RationalQ[Simplify[p+(m+1)/n]] && Simplify[p+(m+1)/n]>1


(* ::Code:: *)
Int[x_^m_.*(c_.*ProductLog[a_.*x_^n_.])^p_./(d_+d_.*ProductLog[a_.*x_^n_.]),x_Symbol] :=
  x^(m+1)*(c*ProductLog[a*x^n])^p/(d*(m+n*p+1)) -
  Dist[(m+1)/(c*(m+n*p+1)),Int[x^m*(c*ProductLog[a*x^n])^(p+1)/(d+d*ProductLog[a*x^n]),x]] /;
FreeQ[{a,c,d,m,n,p},x] && NonzeroQ[m+1] && RationalQ[Simplify[p+(m+1)/n]] && Simplify[p+(m+1)/n]<0


(* ::Code:: *)
Int[x_^m_.*(c_.*ProductLog[a_.*x_])^p_./(d_+d_.*ProductLog[a_.*x_]),x_Symbol] :=
  x^m*Gamma[m+p+1,-(m+1)*ProductLog[a*x]]*(c*ProductLog[a*x])^p/
	(a*d*(m+1)*E^(m*ProductLog[a*x])*(-(m+1)*ProductLog[a*x])^(m+p)) /;
FreeQ[{a,c,d,m,p},x] && NonzeroQ[m+1]


(* ::Code:: *)
Int[x_^m_.*(c_.*ProductLog[a_.*x_^n_.])^p_./(d_+d_.*ProductLog[a_.*x_^n_.]),x_Symbol] :=
  -Subst[Int[(c*ProductLog[a*x^(-n)])^p/(x^(m+2)*(d+d*ProductLog[a*x^(-n)])),x],x,1/x] /;
FreeQ[{a,c,d,p},x] && IntegersQ[m,n] && n<0 && NonzeroQ[m+1]


(* ::Code:: *)
Int[u_,x_Symbol] :=
  Subst[Int[Regularize[(x+1)*E^x*SubstFor[ProductLog[x],u,x],x],x],x,ProductLog[x]] /;
FunctionOfQ[ProductLog[x],u,x]
(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Code:: *)
Int[PolyLog[n_,a_.*(b_.*x_^p_.)^q_.],x_Symbol] :=
  x*PolyLog[n,a*(b*x^p)^q] -
  Dist[p*q,Int[PolyLog[n-1,a*(b*x^p)^q],x]] /;
FreeQ[{a,b,p,q},x] && RationalQ[n] && n>0


(* ::Code:: *)
Int[PolyLog[n_,a_.*(b_.*x_^p_.)^q_.],x_Symbol] :=
  x*PolyLog[n+1,a*(b*x^p)^q]/(p*q) -
  Dist[1/(p*q),Int[PolyLog[n+1,a*(b*x^p)^q],x]] /;
FreeQ[{a,b,p,q},x] && RationalQ[n] && n<-1


(* ::Code:: *)
Int[PolyLog[n_,a_.*(b_.*x_^p_.)^q_.]/x_,x_Symbol] :=
  PolyLog[n+1,a*(b*x^p)^q]/(p*q) /;
FreeQ[{a,b,n,p,q},x]


(* ::Code:: *)
Int[x_^m_.*PolyLog[n_,a_.*(b_.*x_^p_.)^q_.],x_Symbol] :=
  x^(m+1)*PolyLog[n,a*(b*x^p)^q]/(m+1) -
  Dist[p*q/(m+1),Int[x^m*PolyLog[n-1,a*(b*x^p)^q],x]] /;
FreeQ[{a,b,m,p,q},x] && RationalQ[n] && n>0 && NonzeroQ[m+1]


(* ::Code:: *)
Int[x_^m_.*PolyLog[n_,a_.*(b_.*x_^p_.)^q_.],x_Symbol] :=
  x^(m+1)*PolyLog[n+1,a*(b*x^p)^q]/(p*q) -
  Dist[(m+1)/(p*q),Int[x^m*PolyLog[n+1,a*(b*x^p)^q],x]] /;
FreeQ[{a,b,m,p,q},x] && RationalQ[n] && n<-1 && NonzeroQ[m+1]


(* ::Code:: *)
Int[PolyLog[n_,u_]/(a_+b_.*x_),x_Symbol] :=
  Dist[1/b,Subst[Int[PolyLog[n,Regularize[Subst[u,x,-a/b+x/b],x]]/x,x],x,a+b*x]] /;
FreeQ[{a,b,n},x]


(* ::Code:: *)
Int[PolyLog[n_,c_.*(a_.+b_.*x_)^p_.],x_Symbol] :=
  x*PolyLog[n,c*(a+b*x)^p] -
  Dist[p,Int[PolyLog[n-1,c*(a+b*x)^p],x]] +
  Dist[a*p,Int[PolyLog[n-1,c*(a+b*x)^p]/(a+b*x),x]] /;
FreeQ[{a,b,c,p},x] && RationalQ[n] && n>0


(* ::Code:: *)
Int[x_^m_.*PolyLog[n_,c_.*(a_.+b_.*x_)^p_.],x_Symbol] :=
  x^(m+1)*PolyLog[n,c*(a+b*x)^p]/(m+1) -
  Dist[b*p/(m+1),Int[x^(m+1)*PolyLog[n-1,c*(a+b*x)^p]/(a+b*x),x]] /;
FreeQ[{a,b,c,m,p},x] && RationalQ[n] && n>0 && IntegerQ[m] && m>0


(* ::Code:: *)
Int[PolyLog[n_,c_.*f_^(a_.+b_.*x_)],x_Symbol] :=
  PolyLog[n+1,c*f^(a+b*x)]/(b*Log[f]) /;
FreeQ[{a,b,c,n},x]


(* ::Code:: *)
Int[x_^m_.*PolyLog[n_,c_.*f_^(a_.+b_.*x_)],x_Symbol] :=
  x^m*PolyLog[n+1,c*f^(a+b*x)]/(b*Log[f]) -
  Dist[m/(b*Log[f]),Int[x^(m-1)*PolyLog[n+1,c*f^(a+b*x)],x]] /;
FreeQ[{a,b,c,n},x] && RationalQ[m] && m>0


(* ::Code:: *)
Int[Log[a_.*x_^n_.]^p_.*PolyLog[q_,b_.*x_^m_.]/x_,x_Symbol] :=
  Log[a*x^n]^p*PolyLog[q+1,b*x^m]/m -
  Dist[n*p/m,Int[Log[a*x^n]^(p-1)*PolyLog[q+1,b*x^m]/x,x]] /;
FreeQ[{a,b,m,n,q},x] && RationalQ[p] && p>0
(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Code:: *)
Int[FresnelS[a_.+b_.*x_],x_Symbol] :=
  (a+b*x)*FresnelS[a+b*x]/b + Cos[Pi/2*(a+b*x)^2]/(b*Pi) /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[FresnelC[a_.+b_.*x_],x_Symbol] :=
  (a+b*x)*FresnelC[a+b*x]/b - Sin[Pi/2*(a+b*x)^2]/(b*Pi) /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[FresnelS[a_.+b_.*x_]^2,x_Symbol] :=
  (a+b*x)*FresnelS[a+b*x]^2/b -
  Dist[2,Int[(a+b*x)*Sin[Pi/2*(a+b*x)^2]*FresnelS[a+b*x],x]] /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[FresnelC[a_.+b_.*x_]^2,x_Symbol] :=
  (a+b*x)*FresnelC[a+b*x]^2/b -
  Dist[2,Int[(a+b*x)*Cos[Pi/2*(a+b*x)^2]*FresnelC[a+b*x],x]] /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[x_^m_.*FresnelS[a_.+b_.*x_],x_Symbol] :=
  x^(m+1)*FresnelS[a+b*x]/(m+1) -
  Dist[b/(m+1),Int[x^(m+1)*Sin[Pi/2*(a+b*x)^2],x]] /;
FreeQ[{a,b,m},x] && NonzeroQ[m+1]


(* ::Code:: *)
Int[x_^m_.*FresnelC[a_.+b_.*x_],x_Symbol] :=
  x^(m+1)*FresnelC[a+b*x]/(m+1) -
  Dist[b/(m+1),Int[x^(m+1)*Cos[Pi/2*(a+b*x)^2],x]] /;
FreeQ[{a,b,m},x] && NonzeroQ[m+1]


(* ::Code:: *)
Int[x_^m_*FresnelS[b_.*x_]^2,x_Symbol] :=
  x^(m+1)*FresnelS[b*x]^2/(m+1) -
  Dist[2*b/(m+1),Int[x^(m+1)*Sin[Pi/2*b^2*x^2]*FresnelS[b*x],x]] /;
FreeQ[b,x] && IntegerQ[m] && m+1!=0 && (m>0 && EvenQ[m] || Mod[m,4]==3)


(* ::Code:: *)
Int[x_^m_*FresnelC[b_.*x_]^2,x_Symbol] :=
  x^(m+1)*FresnelC[b*x]^2/(m+1) -
  Dist[2*b/(m+1),Int[x^(m+1)*Cos[Pi/2*b^2*x^2]*FresnelC[b*x],x]] /;
FreeQ[b,x] && IntegerQ[m] && m+1!=0 && (m>0 && EvenQ[m] || Mod[m,4]==3)


(* ::Code:: *)
(* Int[x_^m_.*FresnelS[a_+b_.*x_]^2,x_Symbol] :=
  Dist[1/b,Subst[Int[(-a/b+x/b)^m*FresnelS[x]^2,x],x,a+b*x]] /;
FreeQ[{a,b},x] && IntegerQ[m] && m>0 *)


(* ::Code:: *)
(* Int[x_^m_.*FresnelC[a_+b_.*x_]^2,x_Symbol] :=
  Dist[1/b,Subst[Int[(-a/b+x/b)^m*FresnelC[x]^2,x],x,a+b*x]] /;
FreeQ[{a,b},x] && IntegerQ[m] && m>0 *)


(* ::Code:: *)
Int[x_*Sin[c_.*x_^2]*FresnelS[b_.*x_],x_Symbol] :=
  -Cos[Pi/2*b^2*x^2]*FresnelS[b*x]/(Pi*b^2) +
  Dist[1/(2*Pi*b),Int[Sin[Pi*b^2*x^2],x]] /;
FreeQ[{b,c},x] && ZeroQ[c-Pi/2*b^2]


(* ::Code:: *)
Int[x_*Cos[c_.*x_^2]*FresnelC[b_.*x_],x_Symbol] :=
  Sin[Pi/2*b^2*x^2]*FresnelC[b*x]/(Pi*b^2) -
  Dist[1/(2*Pi*b),Int[Sin[Pi*b^2*x^2],x]] /;
FreeQ[{b,c},x] && ZeroQ[c-Pi/2*b^2]


(* ::Code:: *)
Int[x_^m_*Sin[c_.*x_^2]*FresnelS[b_.*x_],x_Symbol] :=
  -x^(m-1)*Cos[Pi/2*b^2*x^2]*FresnelS[b*x]/(Pi*b^2) +
  Dist[1/(2*Pi*b),Int[x^(m-1)*Sin[Pi*b^2*x^2],x]] +
  Dist[(m-1)/(Pi*b^2),Int[x^(m-2)*Cos[Pi/2*b^2*x^2]*FresnelS[b*x],x]] /;
FreeQ[{b,c},x] && ZeroQ[c-Pi/2*b^2] && IntegerQ[m] && m>1 && Not[Mod[m,4]==2]


(* ::Code:: *)
Int[x_^m_*Cos[c_.*x_^2]*FresnelC[b_.*x_],x_Symbol] :=
  x^(m-1)*Sin[Pi/2*b^2*x^2]*FresnelC[b*x]/(Pi*b^2) -
  Dist[1/(2*Pi*b),Int[x^(m-1)*Sin[Pi*b^2*x^2],x]] -
  Dist[(m-1)/(Pi*b^2),Int[x^(m-2)*Sin[Pi/2*b^2*x^2]*FresnelC[b*x],x]] /;
FreeQ[{b,c},x] && ZeroQ[c-Pi/2*b^2] && IntegerQ[m] && m>1 && Not[Mod[m,4]==2]


(* ::Code:: *)
Int[x_^m_*Sin[c_.*x_^2]*FresnelS[b_.*x_],x_Symbol] :=
  x^(m+1)*Sin[Pi/2*b^2*x^2]*FresnelS[b*x]/(m+1) - b*x^(m+2)/(2*(m+1)*(m+2)) +
  Dist[b/(2*(m+1)),Int[x^(m+1)*Cos[Pi*b^2*x^2],x]] -
  Dist[Pi*b^2/(m+1),Int[x^(m+2)*Cos[Pi/2*b^2*x^2]*FresnelS[b*x],x]] /;
FreeQ[{b,c},x] && ZeroQ[c-Pi/2*b^2] && IntegerQ[m] && m<-2 && Mod[m,4]==0


(* ::Code:: *)
Int[x_^m_*Cos[c_.*x_^2]*FresnelC[b_.*x_],x_Symbol] :=
  x^(m+1)*Cos[Pi/2*b^2*x^2]*FresnelC[b*x]/(m+1) - b*x^(m+2)/(2*(m+1)*(m+2)) -
  Dist[b/(2*(m+1)),Int[x^(m+1)*Cos[Pi*b^2*x^2],x]] +
  Dist[Pi*b^2/(m+1),Int[x^(m+2)*Sin[Pi/2*b^2*x^2]*FresnelC[b*x],x]] /;
FreeQ[{b,c},x] && ZeroQ[c-Pi/2*b^2] && IntegerQ[m] && m<-2 && Mod[m,4]==0


(* ::Code:: *)
Int[x_*Cos[c_.*x_^2]*FresnelS[b_.*x_],x_Symbol] :=
  Sin[Pi/2*b^2*x^2]*FresnelS[b*x]/(Pi*b^2) - x/(2*Pi*b) +
  Dist[1/(2*Pi*b),Int[Cos[Pi*b^2*x^2],x]] /;
FreeQ[{b,c},x] && ZeroQ[c-Pi/2*b^2]


(* ::Code:: *)
Int[x_*Sin[c_.*x_^2]*FresnelC[b_.*x_],x_Symbol] :=
  -Cos[Pi/2*b^2*x^2]*FresnelC[b*x]/(Pi*b^2) + x/(2*Pi*b) +
  Dist[1/(2*Pi*b),Int[Cos[Pi*b^2*x^2],x]] /;
FreeQ[{b,c},x] && ZeroQ[c-Pi/2*b^2]


(* ::Code:: *)
Int[x_^m_*Cos[c_.*x_^2]*FresnelS[b_.*x_],x_Symbol] :=
  x^(m-1)*Sin[Pi/2*b^2*x^2]*FresnelS[b*x]/(Pi*b^2) - x^m/(2*b*m*Pi) +
  Dist[1/(2*Pi*b),Int[x^(m-1)*Cos[Pi*b^2*x^2],x]] -
  Dist[(m-1)/(Pi*b^2),Int[x^(m-2)*Sin[Pi/2*b^2*x^2]*FresnelS[b*x],x]] /;
FreeQ[{b,c},x] && ZeroQ[c-Pi/2*b^2] && IntegerQ[m] && m>1 && Not[Mod[m,4]==0]


(* ::Code:: *)
Int[x_^m_*Sin[c_.*x_^2]*FresnelC[b_.*x_],x_Symbol] :=
  -x^(m-1)*Cos[Pi/2*b^2*x^2]*FresnelC[b*x]/(Pi*b^2) + x^m/(2*b*m*Pi) +
  Dist[1/(2*Pi*b),Int[x^(m-1)*Cos[Pi*b^2*x^2],x]] +
  Dist[(m-1)/(Pi*b^2),Int[x^(m-2)*Cos[Pi/2*b^2*x^2]*FresnelC[b*x],x]] /;
FreeQ[{b,c},x] && ZeroQ[c-Pi/2*b^2] && IntegerQ[m] && m>1 && Not[Mod[m,4]==0]


(* ::Code:: *)
Int[x_^m_*Cos[c_.*x_^2]*FresnelS[b_.*x_],x_Symbol] :=
  x^(m+1)*Cos[Pi/2*b^2*x^2]*FresnelS[b*x]/(m+1) -
  Dist[b/(2*(m+1)),Int[x^(m+1)*Sin[Pi*b^2*x^2],x]] +
  Dist[Pi*b^2/(m+1),Int[x^(m+2)*Sin[Pi/2*b^2*x^2]*FresnelS[b*x],x]] /;
FreeQ[{b,c},x] && ZeroQ[c-Pi/2*b^2] && IntegerQ[m] && m<-1 && Mod[m,4]==2


(* ::Code:: *)
Int[x_^m_*Sin[c_.*x_^2]*FresnelC[b_.*x_],x_Symbol] :=
  x^(m+1)*Sin[Pi/2*b^2*x^2]*FresnelC[b*x]/(m+1) -
  Dist[b/(2*(m+1)),Int[x^(m+1)*Sin[Pi*b^2*x^2],x]] -
  Dist[Pi*b^2/(m+1),Int[x^(m+2)*Cos[Pi/2*b^2*x^2]*FresnelC[b*x],x]] /;
FreeQ[{b,c},x] && ZeroQ[c-Pi/2*b^2] && IntegerQ[m] && m<-1 && Mod[m,4]==2



(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Code:: *)
Int[LogIntegral[a_.+b_.*x_],x_Symbol] :=
  (a+b*x)*LogIntegral[a+b*x]/b - ExpIntegralEi[2*Log[a+b*x]]/b /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[x_^m_.*LogIntegral[a_.+b_.*x_],x_Symbol] :=
  x^(m+1)*LogIntegral[a+b*x]/(m+1) -
  Dist[b/(m+1),Int[x^(m+1)/Log[a+b*x],x]] /;
FreeQ[{a,b,m},x] && NonzeroQ[m+1]
(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Code:: *)
Int[Erf[a_.+b_.*x_],x_Symbol] :=
  (a+b*x)*Erf[a+b*x]/b + 1/(b*Sqrt[Pi]*E^(a+b*x)^2) /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[Erf[a_.+b_.*x_]^2,x_Symbol] :=
  (a+b*x)*Erf[a+b*x]^2/b -
  Dist[4/Sqrt[Pi],Int[(a+b*x)*Erf[a+b*x]/E^(a+b*x)^2,x]] /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[x_^m_.*Erf[a_.+b_.*x_],x_Symbol] :=
  x^(m+1)*Erf[a+b*x]/(m+1) -
  Dist[2*b/(Sqrt[Pi]*(m+1)),Int[x^(m+1)/E^(a+b*x)^2,x]] /;
FreeQ[{a,b,m},x] && NonzeroQ[m+1]


(* ::Code:: *)
Int[x_^m_.*Erf[b_.*x_]^2,x_Symbol] :=
  x^(m+1)*Erf[b*x]^2/(m+1) -
  Dist[4*b/(Sqrt[Pi]*(m+1)),Int[x^(m+1)*E^(-b^2*x^2)*Erf[b*x],x]] /;
FreeQ[b,x] && IntegerQ[m] && m+1!=0 && (m>0 || OddQ[m])


(* ::Code:: *)
Int[x_^m_.*Erf[a_+b_.*x_]^2,x_Symbol] :=
  Dist[1/b,Subst[Int[(-a/b+x/b)^m*Erf[x]^2,x],x,a+b*x]] /;
FreeQ[{a,b},x] && IntegerQ[m] && m>0


(* ::Code:: *)
Int[x_*E^(c_.*x_^2)*Erf[b_.*x_],x_Symbol] :=
  -E^(-b^2*x^2)*Erf[b*x]/(2*b^2) +
  Dist[1/(b*Sqrt[Pi]),Int[E^(-2*b^2*x^2),x]] /;
FreeQ[{b,c},x] && ZeroQ[c+b^2]


(* ::Code:: *)
Int[x_^m_*E^(c_.*x_^2)*Erf[b_.*x_],x_Symbol] :=
  -x^(m-1)*E^(-b^2*x^2)*Erf[b*x]/(2*b^2) +
  Dist[1/(b*Sqrt[Pi]),Int[x^(m-1)*E^(-2*b^2*x^2),x]] +
  Dist[(m-1)/(2*b^2),Int[x^(m-2)*E^(-b^2*x^2)*Erf[b*x],x]] /;
FreeQ[{b,c},x] && ZeroQ[c+b^2] && IntegerQ[m] && m>1


(* ::Code:: *)
Int[x_^m_*E^(c_.*x_^2)*Erf[b_.*x_],x_Symbol] :=
  x^(m+1)*E^(-b^2*x^2)*Erf[b*x]/(m+1) -
  Dist[2*b/(Sqrt[Pi]*(m+1)),Int[x^(m+1)*E^(-2*b^2*x^2),x]] +
  Dist[2*b^2/(m+1),Int[x^(m+2)*E^(-b^2*x^2)*Erf[b*x],x]] /;
FreeQ[{b,c},x] && ZeroQ[c+b^2] && EvenQ[m] && m<-1


(* ::Code:: *)
Int[Erfc[a_.+b_.*x_],x_Symbol] :=
  (a+b*x)*Erfc[a+b*x]/b - 1/(b*Sqrt[Pi]*E^(a+b*x)^2) /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[Erfc[a_.+b_.*x_]^2,x_Symbol] :=
  (a+b*x)*Erfc[a+b*x]^2/b +
  Dist[4/Sqrt[Pi],Int[(a+b*x)*Erfc[a+b*x]/E^(a+b*x)^2,x]] /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[x_^m_.*Erfc[a_.+b_.*x_],x_Symbol] :=
  x^(m+1)*Erfc[a+b*x]/(m+1) +
  Dist[2*b/(Sqrt[Pi]*(m+1)),Int[x^(m+1)/E^(a+b*x)^2,x]] /;
FreeQ[{a,b,m},x] && NonzeroQ[m+1]


(* ::Code:: *)
Int[x_^m_.*Erfc[b_.*x_]^2,x_Symbol] :=
  x^(m+1)*Erfc[b*x]^2/(m+1) +
  Dist[4*b/(Sqrt[Pi]*(m+1)),Int[x^(m+1)*E^(-b^2*x^2)*Erfc[b*x],x]] /;
FreeQ[b,x] && IntegerQ[m] && m+1!=0 && (m>0 || OddQ[m])


(* ::Code:: *)
Int[x_^m_.*Erfc[a_+b_.*x_]^2,x_Symbol] :=
  Dist[1/b,Subst[Int[(-a/b+x/b)^m*Erfc[x]^2,x],x,a+b*x]] /;
FreeQ[{a,b},x] && IntegerQ[m] && m>0


(* ::Code:: *)
Int[x_*E^(c_.*x_^2)*Erfc[b_.*x_],x_Symbol] :=
  -E^(-b^2*x^2)*Erfc[b*x]/(2*b^2) -
  Dist[1/(b*Sqrt[Pi]),Int[E^(-2*b^2*x^2),x]] /;
FreeQ[{b,c},x] && ZeroQ[c+b^2]


(* ::Code:: *)
Int[x_^m_*E^(c_.*x_^2)*Erfc[b_.*x_],x_Symbol] :=
  -x^(m-1)*E^(-b^2*x^2)*Erfc[b*x]/(2*b^2) -
  Dist[1/(b*Sqrt[Pi]),Int[x^(m-1)*E^(-2*b^2*x^2),x]] +
  Dist[(m-1)/(2*b^2),Int[x^(m-2)*E^(-b^2*x^2)*Erfc[b*x],x]] /;
FreeQ[{b,c},x] && ZeroQ[c+b^2] && IntegerQ[m] && m>1


(* ::Code:: *)
Int[x_^m_*E^(c_.*x_^2)*Erfc[b_.*x_],x_Symbol] :=
  x^(m+1)*E^(-b^2*x^2)*Erfc[b*x]/(m+1) +
  Dist[2*b/(Sqrt[Pi]*(m+1)),Int[x^(m+1)*E^(-2*b^2*x^2),x]] +
  Dist[2*b^2/(m+1),Int[x^(m+2)*E^(-b^2*x^2)*Erfc[b*x],x]] /;
FreeQ[{b,c},x] && ZeroQ[c+b^2] && EvenQ[m] && m<-1


(* ::Code:: *)
Int[Erfi[a_.+b_.*x_],x_Symbol] :=
  (a+b*x)*Erfi[a+b*x]/b - E^(a+b*x)^2/(b*Sqrt[Pi]) /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[Erfi[a_.+b_.*x_]^2,x_Symbol] :=
  (a+b*x)*Erfi[a+b*x]^2/b -
  Dist[4/Sqrt[Pi],Int[(a+b*x)*E^(a+b*x)^2*Erfi[a+b*x],x]] /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[x_^m_.*Erfi[a_.+b_.*x_],x_Symbol] :=
  x^(m+1)*Erfi[a+b*x]/(m+1) -
  Dist[2*b/(Sqrt[Pi]*(m+1)),Int[x^(m+1)*E^(a+b*x)^2,x]] /;
FreeQ[{a,b,m},x] && NonzeroQ[m+1]


(* ::Code:: *)
Int[x_^m_.*Erfi[b_.*x_]^2,x_Symbol] :=
  x^(m+1)*Erfi[b*x]^2/(m+1) -
  Dist[4*b/(Sqrt[Pi]*(m+1)),Int[x^(m+1)*E^(b^2*x^2)*Erfi[b*x],x]] /;
FreeQ[b,x] && IntegerQ[m] && m+1!=0 && (m>0 || OddQ[m])


(* ::Code:: *)
Int[x_^m_.*Erfi[a_+b_.*x_]^2,x_Symbol] :=
  Dist[1/b,Subst[Int[(-a/b+x/b)^m*Erfi[x]^2,x],x,a+b*x]] /;
FreeQ[{a,b},x] && IntegerQ[m] && m>0


(* ::Code:: *)
Int[x_*E^(c_.*x_^2)*Erfi[b_.*x_],x_Symbol] :=
  E^(b^2*x^2)*Erfi[b*x]/(2*b^2) -
  Dist[1/(b*Sqrt[Pi]),Int[E^(2*b^2*x^2),x]] /;
FreeQ[{b,c},x] && ZeroQ[c-b^2]


(* ::Code:: *)
Int[x_^m_*E^(c_.*x_^2)*Erfi[b_.*x_],x_Symbol] :=
  x^(m-1)*E^(b^2*x^2)*Erfi[b*x]/(2*b^2) -
  Dist[1/(b*Sqrt[Pi]),Int[x^(m-1)*E^(2*b^2*x^2),x]] -
  Dist[(m-1)/(2*b^2),Int[x^(m-2)*E^(b^2*x^2)*Erfi[b*x],x]] /;
FreeQ[{b,c},x] && ZeroQ[c-b^2] && IntegerQ[m] && m>1


(* ::Code:: *)
Int[x_^m_*E^(c_.*x_^2)*Erfi[b_.*x_],x_Symbol] :=
  x^(m+1)*E^(b^2*x^2)*Erfi[b*x]/(m+1) -
  Dist[2*b/(Sqrt[Pi]*(m+1)),Int[x^(m+1)*E^(2*b^2*x^2),x]] -
  Dist[2*b^2/(m+1),Int[x^(m+2)*E^(b^2*x^2)*Erfi[b*x],x]] /;
FreeQ[{b,c},x] && ZeroQ[c-b^2] && EvenQ[m] && m<-1



(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Code:: *)
Int[ExpIntegralE[n_,a_.+b_.*x_],x_Symbol] :=
  -ExpIntegralE[n+1,a+b*x]/b /;
FreeQ[{a,b,n},x]


(* ::Code:: *)
Int[x_^m_.*ExpIntegralE[n_,a_.+b_.*x_],x_Symbol] :=
  x^(m+1)*ExpIntegralE[n,a+b*x]/(m+1) +
  Dist[b/(m+1),Int[x^(m+1)*ExpIntegralE[n-1,a+b*x],x]] /;
FreeQ[{a,b,m},x] && IntegerQ[n] && n>0


(* ::Code:: *)
Int[x_^m_.*ExpIntegralE[n_,a_.+b_.*x_],x_Symbol] :=
  -x^m*ExpIntegralE[n+1,a+b*x]/b +
  Dist[m/b,Int[x^(m-1)*ExpIntegralE[n+1,a+b*x],x]] /;
FreeQ[{a,b,m},x] && IntegerQ[n] && n<0


(* ::Code:: *)
Int[ExpIntegralEi[a_.+b_.*x_],x_Symbol] :=
  (a+b*x)*ExpIntegralEi[a+b*x]/b - E^(a+b*x)/b /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[ExpIntegralEi[a_.+b_.*x_]^2,x_Symbol] :=
  (a+b*x)*ExpIntegralEi[a+b*x]^2/b -
  Dist[2,Int[E^(a+b*x)*ExpIntegralEi[a+b*x],x]] /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[x_^m_.*ExpIntegralEi[a_.+b_.*x_],x_Symbol] :=
  x^(m+1)*ExpIntegralEi[a+b*x]/(m+1) -
  Dist[b/(m+1),Int[x^(m+1)*E^(a+b*x)/(a+b*x),x]] /;
FreeQ[{a,b,m},x] && NonzeroQ[m+1]


(* ::Code:: *)
Int[x_^m_.*ExpIntegralEi[b_.*x_]^2,x_Symbol] :=
  x^(m+1)*ExpIntegralEi[b*x]^2/(m+1) -
  Dist[2/(m+1),Int[x^m*E^(b*x)*ExpIntegralEi[b*x],x]] /;
FreeQ[b,x] && IntegerQ[m] && m>0


(* ::Code:: *)
Int[x_^m_.*ExpIntegralEi[a_+b_.*x_]^2,x_Symbol] :=
  x^(m+1)*ExpIntegralEi[a+b*x]^2/(m+1) +
  a*x^m*ExpIntegralEi[a+b*x]^2/(b*(m+1)) -
  Dist[2/(m+1),Int[x^m*E^(a+b*x)*ExpIntegralEi[a+b*x],x]] -
  Dist[a*m/(b*(m+1)),Int[x^(m-1)*ExpIntegralEi[a+b*x]^2,x]] /;
FreeQ[{a,b},x] && IntegerQ[m] && m>0


(* ::Code:: *)
(* Int[x_^m_.*ExpIntegralEi[a_+b_.*x_]^2,x_Symbol] :=
  b*x^(m+2)*ExpIntegralEi[a+b*x]^2/(a*(m+1)) +
  x^(m+1)*ExpIntegralEi[a+b*x]^2/(m+1) -
  Dist[2*b/(a*(m+1)),Int[x^(m+1)*E^(a+b*x)*ExpIntegralEi[a+b*x],x]] -
  Dist[b*(m+2)/(a*(m+1)),Int[x^(m+1)*ExpIntegralEi[a+b*x]^2,x]] /;
FreeQ[{a,b},x] && IntegerQ[m] && m<-2 *)


(* ::Code:: *)
Int[E^(a_.+b_.*x_)*ExpIntegralEi[c_.+d_.*x_],x_Symbol] :=
  E^(a+b*x)*ExpIntegralEi[c+d*x]/b -
  Dist[d/b,Int[E^(a+b*x)*E^(c+d*x)/(c+d*x),x]] /;
FreeQ[{a,b,c,d},x]


(* ::Code:: *)
Int[x_^m_.*E^(a_.+b_.*x_)*ExpIntegralEi[c_.+d_.*x_],x_Symbol] :=
  x^m*E^(a+b*x)*ExpIntegralEi[c+d*x]/b -
  Dist[d/b,Int[x^m*E^(a+b*x)*E^(c+d*x)/(c+d*x),x]] -
  Dist[m/b,Int[x^(m-1)*E^(a+b*x)*ExpIntegralEi[c+d*x],x]] /;
FreeQ[{a,b,c,d},x] && IntegerQ[m] && m>0


(* ::Code:: *)
Int[x_^m_*E^(a_.+b_.*x_)*ExpIntegralEi[c_.+d_.*x_],x_Symbol] :=
  x^(m+1)*E^(a+b*x)*ExpIntegralEi[c+d*x]/(m+1) -
  Dist[d/(m+1),Int[x^(m+1)*E^(a+b*x)*E^(c+d*x)/(c+d*x),x]] -
  Dist[b/(m+1),Int[x^(m+1)*E^(a+b*x)*ExpIntegralEi[c+d*x],x]] /;
FreeQ[{a,b,c,d},x] && IntegerQ[m] && m<-1



(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Code:: *)
Int[SinhIntegral[a_.+b_.*x_],x_Symbol] :=
  (a+b*x)*SinhIntegral[a+b*x]/b - Cosh[a+b*x]/b/;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[CoshIntegral[a_.+b_.*x_],x_Symbol] :=
  (a+b*x)*CoshIntegral[a+b*x]/b - Sinh[a+b*x]/b /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[SinhIntegral[a_.+b_.*x_]^2,x_Symbol] :=
  (a+b*x)*SinhIntegral[a+b*x]^2/b -
  Dist[2,Int[Sinh[a+b*x]*SinhIntegral[a+b*x],x]] /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[CoshIntegral[a_.+b_.*x_]^2,x_Symbol] :=
  (a+b*x)*CoshIntegral[a+b*x]^2/b -
  Dist[2,Int[Cosh[a+b*x]*CoshIntegral[a+b*x],x]] /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[x_^m_.*SinhIntegral[a_.+b_.*x_],x_Symbol] :=
  x^(m+1)*SinhIntegral[a+b*x]/(m+1) -
  Dist[b/(m+1),Int[x^(m+1)*Sinh[a+b*x]/(a+b*x),x]] /;
FreeQ[{a,b,m},x] && NonzeroQ[m+1]


(* ::Code:: *)
Int[x_^m_.*CoshIntegral[a_.+b_.*x_],x_Symbol] :=
  x^(m+1)*CoshIntegral[a+b*x]/(m+1) -
  Dist[b/(m+1),Int[x^(m+1)*Cosh[a+b*x]/(a+b*x),x]] /;
FreeQ[{a,b,m},x] && NonzeroQ[m+1]


(* ::Code:: *)
Int[x_^m_.*SinhIntegral[b_.*x_]^2,x_Symbol] :=
  x^(m+1)*SinhIntegral[b*x]^2/(m+1) -
  Dist[2/(m+1),Int[x^m*Sinh[b*x]*SinhIntegral[b*x],x]] /;
FreeQ[b,x] && IntegerQ[m] && m>0


(* ::Code:: *)
Int[x_^m_.*CoshIntegral[b_.*x_]^2,x_Symbol] :=
  x^(m+1)*CoshIntegral[b*x]^2/(m+1) -
  Dist[2/(m+1),Int[x^m*Cosh[b*x]*CoshIntegral[b*x],x]] /;
FreeQ[b,x] && IntegerQ[m] && m>0


(* ::Code:: *)
Int[x_^m_.*SinhIntegral[a_+b_.*x_]^2,x_Symbol] :=
  x^(m+1)*SinhIntegral[a+b*x]^2/(m+1) +
  a*x^m*SinhIntegral[a+b*x]^2/(b*(m+1)) -
  Dist[2/(m+1),Int[x^m*Sinh[a+b*x]*SinhIntegral[a+b*x],x]] -
  Dist[a*m/(b*(m+1)),Int[x^(m-1)*SinhIntegral[a+b*x]^2,x]] /;
FreeQ[{a,b},x] && IntegerQ[m] && m>0


(* ::Code:: *)
Int[x_^m_.*CoshIntegral[a_+b_.*x_]^2,x_Symbol] :=
  x^(m+1)*CoshIntegral[a+b*x]^2/(m+1) +
  a*x^m*CoshIntegral[a+b*x]^2/(b*(m+1)) -
  Dist[2/(m+1),Int[x^m*Cosh[a+b*x]*CoshIntegral[a+b*x],x]] -
  Dist[a*m/(b*(m+1)),Int[x^(m-1)*CoshIntegral[a+b*x]^2,x]] /;
FreeQ[{a,b},x] && IntegerQ[m] && m>0


(* ::Code:: *)
(* Int[x_^m_.*SinhIntegral[a_+b_.*x_]^2,x_Symbol] :=
  b*x^(m+2)*SinhIntegral[a+b*x]^2/(a*(m+1)) +
  x^(m+1)*SinhIntegral[a+b*x]^2/(m+1) -
  Dist[2*b/(a*(m+1)),Int[x^(m+1)*Sinh[a+b*x]*SinhIntegral[a+b*x],x]] -
  Dist[b*(m+2)/(a*(m+1)),Int[x^(m+1)*SinhIntegral[a+b*x]^2,x]] /;
FreeQ[{a,b},x] && IntegerQ[m] && m<-2 *)


(* ::Code:: *)
(* Int[x_^m_.*CoshIntegral[a_+b_.*x_]^2,x_Symbol] :=
  b*x^(m+2)*CoshIntegral[a+b*x]^2/(a*(m+1)) +
  x^(m+1)*CoshIntegral[a+b*x]^2/(m+1) -
  Dist[2*b/(a*(m+1)),Int[x^(m+1)*Cosh[a+b*x]*CoshIntegral[a+b*x],x]] -
  Dist[b*(m+2)/(a*(m+1)),Int[x^(m+1)*CoshIntegral[a+b*x]^2,x]] /;
FreeQ[{a,b},x] && IntegerQ[m] && m<-2 *)


(* ::Code:: *)
Int[Sinh[a_.+b_.*x_]*SinhIntegral[c_.+d_.*x_],x_Symbol] :=
  Cosh[a+b*x]*SinhIntegral[c+d*x]/b -
  Dist[d/b,Int[Cosh[a+b*x]*Sinh[c+d*x]/(c+d*x),x]] /;
FreeQ[{a,b,c,d},x]


(* ::Code:: *)
Int[Cosh[a_.+b_.*x_]*CoshIntegral[c_.+d_.*x_],x_Symbol] :=
  Sinh[a+b*x]*CoshIntegral[c+d*x]/b -
  Dist[d/b,Int[Sinh[a+b*x]*Cosh[c+d*x]/(c+d*x),x]] /;
FreeQ[{a,b,c,d},x]


(* ::Code:: *)
Int[x_^m_.*Sinh[a_.+b_.*x_]*SinhIntegral[c_.+d_.*x_],x_Symbol] :=
  x^m*Cosh[a+b*x]*SinhIntegral[c+d*x]/b -
  Dist[d/b,Int[x^m*Cosh[a+b*x]*Sinh[c+d*x]/(c+d*x),x]] -
  Dist[m/b,Int[x^(m-1)*Cosh[a+b*x]*SinhIntegral[c+d*x],x]] /;
FreeQ[{a,b,c,d},x] && IntegerQ[m] && m>0


(* ::Code:: *)
Int[x_^m_.*Cosh[a_.+b_.*x_]*CoshIntegral[c_.+d_.*x_],x_Symbol] :=
  x^m*Sinh[a+b*x]*CoshIntegral[c+d*x]/b -
  Dist[d/b,Int[x^m*Sinh[a+b*x]*Cosh[c+d*x]/(c+d*x),x]] -
  Dist[m/b,Int[x^(m-1)*Sinh[a+b*x]*CoshIntegral[c+d*x],x]] /;
FreeQ[{a,b,c,d},x] && IntegerQ[m] && m>0


(* ::Code:: *)
Int[x_^m_*Sinh[a_.+b_.*x_]*SinhIntegral[c_.+d_.*x_],x_Symbol] :=
  x^(m+1)*Sinh[a+b*x]*SinhIntegral[c+d*x]/(m+1) -
  Dist[d/(m+1),Int[x^(m+1)*Sinh[a+b*x]*Sinh[c+d*x]/(c+d*x),x]] -
  Dist[b/(m+1),Int[x^(m+1)*Cosh[a+b*x]*SinhIntegral[c+d*x],x]] /;
FreeQ[{a,b,c,d},x] && IntegerQ[m] && m<-1


(* ::Code:: *)
Int[x_^m_.*Cosh[a_.+b_.*x_]*CoshIntegral[c_.+d_.*x_],x_Symbol] :=
  x^(m+1)*Cosh[a+b*x]*CoshIntegral[c+d*x]/(m+1) -
  Dist[d/(m+1),Int[x^(m+1)*Cosh[a+b*x]*Cosh[c+d*x]/(c+d*x),x]] -
  Dist[b/(m+1),Int[x^(m+1)*Sinh[a+b*x]*CoshIntegral[c+d*x],x]] /;
FreeQ[{a,b,c,d},x] && IntegerQ[m] && m<-1


(* ::Code:: *)
Int[Cosh[a_.+b_.*x_]*SinhIntegral[c_.+d_.*x_],x_Symbol] :=
  Sinh[a+b*x]*SinhIntegral[c+d*x]/b -
  Dist[d/b,Int[Sinh[a+b*x]*Sinh[c+d*x]/(c+d*x),x]] /;
FreeQ[{a,b,c,d},x]


(* ::Code:: *)
Int[Sinh[a_.+b_.*x_]*CoshIntegral[c_.+d_.*x_],x_Symbol] :=
  Cosh[a+b*x]*CoshIntegral[c+d*x]/b -
  Dist[d/b,Int[Cosh[a+b*x]*Cosh[c+d*x]/(c+d*x),x]] /;
FreeQ[{a,b,c,d},x]


(* ::Code:: *)
Int[x_^m_.*Cosh[a_.+b_.*x_]*SinhIntegral[c_.+d_.*x_],x_Symbol] :=
  x^m*Sinh[a+b*x]*SinhIntegral[c+d*x]/b -
  Dist[d/b,Int[x^m*Sinh[a+b*x]*Sinh[c+d*x]/(c+d*x),x]] -
  Dist[m/b,Int[x^(m-1)*Sinh[a+b*x]*SinhIntegral[c+d*x],x]] /;
FreeQ[{a,b,c,d},x] && IntegerQ[m] && m>0


(* ::Code:: *)
Int[x_^m_.*Sinh[a_.+b_.*x_]*CoshIntegral[c_.+d_.*x_],x_Symbol] :=
  x^m*Cosh[a+b*x]*CoshIntegral[c+d*x]/b -
  Dist[d/b,Int[x^m*Cosh[a+b*x]*Cosh[c+d*x]/(c+d*x),x]] -
  Dist[m/b,Int[x^(m-1)*Cosh[a+b*x]*CoshIntegral[c+d*x],x]] /;
FreeQ[{a,b,c,d},x] && IntegerQ[m] && m>0


(* ::Code:: *)
Int[x_^m_.*Cosh[a_.+b_.*x_]*SinhIntegral[c_.+d_.*x_],x_Symbol] :=
  x^(m+1)*Cosh[a+b*x]*SinhIntegral[c+d*x]/(m+1) -
  Dist[d/(m+1),Int[x^(m+1)*Cosh[a+b*x]*Sinh[c+d*x]/(c+d*x),x]] -
  Dist[b/(m+1),Int[x^(m+1)*Sinh[a+b*x]*SinhIntegral[c+d*x],x]] /;
FreeQ[{a,b,c,d},x] && IntegerQ[m] && m<-1


(* ::Code:: *)
Int[x_^m_*Sinh[a_.+b_.*x_]*CoshIntegral[c_.+d_.*x_],x_Symbol] :=
  x^(m+1)*Sinh[a+b*x]*CoshIntegral[c+d*x]/(m+1) -
  Dist[d/(m+1),Int[x^(m+1)*Sinh[a+b*x]*Cosh[c+d*x]/(c+d*x),x]] -
  Dist[b/(m+1),Int[x^(m+1)*Cosh[a+b*x]*CoshIntegral[c+d*x],x]] /;
FreeQ[{a,b,c,d},x] && IntegerQ[m] && m<-1



(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Code:: *)
Int[SinIntegral[a_.+b_.*x_],x_Symbol] :=
  (a+b*x)*SinIntegral[a+b*x]/b + Cos[a+b*x]/b/;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[CosIntegral[a_.+b_.*x_],x_Symbol] :=
  (a+b*x)*CosIntegral[a+b*x]/b - Sin[a+b*x]/b /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[SinIntegral[a_.+b_.*x_]^2,x_Symbol] :=
  (a+b*x)*SinIntegral[a+b*x]^2/b -
  Dist[2,Int[Sin[a+b*x]*SinIntegral[a+b*x],x]] /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[CosIntegral[a_.+b_.*x_]^2,x_Symbol] :=
  (a+b*x)*CosIntegral[a+b*x]^2/b -
  Dist[2,Int[Cos[a+b*x]*CosIntegral[a+b*x],x]] /;
FreeQ[{a,b},x]


(* ::Code:: *)
Int[x_^m_.*SinIntegral[a_.+b_.*x_],x_Symbol] :=
  x^(m+1)*SinIntegral[a+b*x]/(m+1) -
  Dist[b/(m+1),Int[x^(m+1)*Sin[a+b*x]/(a+b*x),x]] /;
FreeQ[{a,b,m},x] && NonzeroQ[m+1]


(* ::Code:: *)
Int[x_^m_.*CosIntegral[a_.+b_.*x_],x_Symbol] :=
  x^(m+1)*CosIntegral[a+b*x]/(m+1) -
  Dist[b/(m+1),Int[x^(m+1)*Cos[a+b*x]/(a+b*x),x]] /;
FreeQ[{a,b,m},x] && NonzeroQ[m+1]


(* ::Code:: *)
Int[x_^m_.*SinIntegral[b_.*x_]^2,x_Symbol] :=
  x^(m+1)*SinIntegral[b*x]^2/(m+1) -
  Dist[2/(m+1),Int[x^m*Sin[b*x]*SinIntegral[b*x],x]] /;
FreeQ[b,x] && IntegerQ[m] && m>0


(* ::Code:: *)
Int[x_^m_.*CosIntegral[b_.*x_]^2,x_Symbol] :=
  x^(m+1)*CosIntegral[b*x]^2/(m+1) -
  Dist[2/(m+1),Int[x^m*Cos[b*x]*CosIntegral[b*x],x]] /;
FreeQ[b,x] && IntegerQ[m] && m>0


(* ::Code:: *)
Int[x_^m_.*SinIntegral[a_+b_.*x_]^2,x_Symbol] :=
  x^(m+1)*SinIntegral[a+b*x]^2/(m+1) +
  a*x^m*SinIntegral[a+b*x]^2/(b*(m+1)) -
  Dist[2/(m+1),Int[x^m*Sin[a+b*x]*SinIntegral[a+b*x],x]] -
  Dist[a*m/(b*(m+1)),Int[x^(m-1)*SinIntegral[a+b*x]^2,x]] /;
FreeQ[{a,b},x] && IntegerQ[m] && m>0


(* ::Code:: *)
Int[x_^m_.*CosIntegral[a_+b_.*x_]^2,x_Symbol] :=
  x^(m+1)*CosIntegral[a+b*x]^2/(m+1) +
  a*x^m*CosIntegral[a+b*x]^2/(b*(m+1)) -
  Dist[2/(m+1),Int[x^m*Cos[a+b*x]*CosIntegral[a+b*x],x]] -
  Dist[a*m/(b*(m+1)),Int[x^(m-1)*CosIntegral[a+b*x]^2,x]] /;
FreeQ[{a,b},x] && IntegerQ[m] && m>0


(* ::Code:: *)
(* Int[x_^m_.*SinIntegral[a_+b_.*x_]^2,x_Symbol] :=
  b*x^(m+2)*SinIntegral[a+b*x]^2/(a*(m+1)) +
  x^(m+1)*SinIntegral[a+b*x]^2/(m+1) -
  Dist[2*b/(a*(m+1)),Int[x^(m+1)*Sin[a+b*x]*SinIntegral[a+b*x],x]] -
  Dist[b*(m+2)/(a*(m+1)),Int[x^(m+1)*SinIntegral[a+b*x]^2,x]] /;
FreeQ[{a,b},x] && IntegerQ[m] && m<-2 *)


(* ::Code:: *)
(* Int[x_^m_.*CosIntegral[a_+b_.*x_]^2,x_Symbol] :=
  b*x^(m+2)*CosIntegral[a+b*x]^2/(a*(m+1)) +
  x^(m+1)*CosIntegral[a+b*x]^2/(m+1) -
  Dist[2*b/(a*(m+1)),Int[x^(m+1)*Cos[a+b*x]*CosIntegral[a+b*x],x]] -
  Dist[b*(m+2)/(a*(m+1)),Int[x^(m+1)*CosIntegral[a+b*x]^2,x]] /;
FreeQ[{a,b},x] && IntegerQ[m] && m<-2 *)


(* ::Code:: *)
Int[Sin[a_.+b_.*x_]*SinIntegral[c_.+d_.*x_],x_Symbol] :=
  -Cos[a+b*x]*SinIntegral[c+d*x]/b +
  Dist[d/b,Int[Cos[a+b*x]*Sin[c+d*x]/(c+d*x),x]] /;
FreeQ[{a,b,c,d},x]


(* ::Code:: *)
Int[Cos[a_.+b_.*x_]*CosIntegral[c_.+d_.*x_],x_Symbol] :=
  Sin[a+b*x]*CosIntegral[c+d*x]/b -
  Dist[d/b,Int[Sin[a+b*x]*Cos[c+d*x]/(c+d*x),x]] /;
FreeQ[{a,b,c,d},x]


(* ::Code:: *)
Int[x_^m_.*Sin[a_.+b_.*x_]*SinIntegral[c_.+d_.*x_],x_Symbol] :=
  -x^m*Cos[a+b*x]*SinIntegral[c+d*x]/b +
  Dist[d/b,Int[x^m*Cos[a+b*x]*Sin[c+d*x]/(c+d*x),x]] +
  Dist[m/b,Int[x^(m-1)*Cos[a+b*x]*SinIntegral[c+d*x],x]] /;
FreeQ[{a,b,c,d},x] && IntegerQ[m] && m>0


(* ::Code:: *)
Int[x_^m_.*Cos[a_.+b_.*x_]*CosIntegral[c_.+d_.*x_],x_Symbol] :=
  x^m*Sin[a+b*x]*CosIntegral[c+d*x]/b -
  Dist[d/b,Int[x^m*Sin[a+b*x]*Cos[c+d*x]/(c+d*x),x]] -
  Dist[m/b,Int[x^(m-1)*Sin[a+b*x]*CosIntegral[c+d*x],x]] /;
FreeQ[{a,b,c,d},x] && IntegerQ[m] && m>0


(* ::Code:: *)
Int[x_^m_*Sin[a_.+b_.*x_]*SinIntegral[c_.+d_.*x_],x_Symbol] :=
  x^(m+1)*Sin[a+b*x]*SinIntegral[c+d*x]/(m+1) -
  Dist[d/(m+1),Int[x^(m+1)*Sin[a+b*x]*Sin[c+d*x]/(c+d*x),x]] -
  Dist[b/(m+1),Int[x^(m+1)*Cos[a+b*x]*SinIntegral[c+d*x],x]] /;
FreeQ[{a,b,c,d},x] && IntegerQ[m] && m<-1


(* ::Code:: *)
Int[x_^m_.*Cos[a_.+b_.*x_]*CosIntegral[c_.+d_.*x_],x_Symbol] :=
  x^(m+1)*Cos[a+b*x]*CosIntegral[c+d*x]/(m+1) -
  Dist[d/(m+1),Int[x^(m+1)*Cos[a+b*x]*Cos[c+d*x]/(c+d*x),x]] +
  Dist[b/(m+1),Int[x^(m+1)*Sin[a+b*x]*CosIntegral[c+d*x],x]] /;
FreeQ[{a,b,c,d},x] && IntegerQ[m] && m<-1


(* ::Code:: *)
Int[Cos[a_.+b_.*x_]*SinIntegral[c_.+d_.*x_],x_Symbol] :=
  Sin[a+b*x]*SinIntegral[c+d*x]/b -
  Dist[d/b,Int[Sin[a+b*x]*Sin[c+d*x]/(c+d*x),x]] /;
FreeQ[{a,b,c,d},x]


(* ::Code:: *)
Int[Sin[a_.+b_.*x_]*CosIntegral[c_.+d_.*x_],x_Symbol] :=
  -Cos[a+b*x]*CosIntegral[c+d*x]/b +
  Dist[d/b,Int[Cos[a+b*x]*Cos[c+d*x]/(c+d*x),x]] /;
FreeQ[{a,b,c,d},x]


(* ::Code:: *)
Int[x_^m_.*Cos[a_.+b_.*x_]*SinIntegral[c_.+d_.*x_],x_Symbol] :=
  x^m*Sin[a+b*x]*SinIntegral[c+d*x]/b -
  Dist[d/b,Int[x^m*Sin[a+b*x]*Sin[c+d*x]/(c+d*x),x]] -
  Dist[m/b,Int[x^(m-1)*Sin[a+b*x]*SinIntegral[c+d*x],x]] /;
FreeQ[{a,b,c,d},x] && IntegerQ[m] && m>0


(* ::Code:: *)
Int[x_^m_.*Sin[a_.+b_.*x_]*CosIntegral[c_.+d_.*x_],x_Symbol] :=
  -x^m*Cos[a+b*x]*CosIntegral[c+d*x]/b +
  Dist[d/b,Int[x^m*Cos[a+b*x]*Cos[c+d*x]/(c+d*x),x]] +
  Dist[m/b,Int[x^(m-1)*Cos[a+b*x]*CosIntegral[c+d*x],x]] /;
FreeQ[{a,b,c,d},x] && IntegerQ[m] && m>0


(* ::Code:: *)
Int[x_^m_.*Cos[a_.+b_.*x_]*SinIntegral[c_.+d_.*x_],x_Symbol] :=
  x^(m+1)*Cos[a+b*x]*SinIntegral[c+d*x]/(m+1) -
  Dist[d/(m+1),Int[x^(m+1)*Cos[a+b*x]*Sin[c+d*x]/(c+d*x),x]] +
  Dist[b/(m+1),Int[x^(m+1)*Sin[a+b*x]*SinIntegral[c+d*x],x]] /;
FreeQ[{a,b,c,d},x] && IntegerQ[m] && m<-1


(* ::Code:: *)
Int[x_^m_*Sin[a_.+b_.*x_]*CosIntegral[c_.+d_.*x_],x_Symbol] :=
  x^(m+1)*Sin[a+b*x]*CosIntegral[c+d*x]/(m+1) -
  Dist[d/(m+1),Int[x^(m+1)*Sin[a+b*x]*Cos[c+d*x]/(c+d*x),x]] -
  Dist[b/(m+1),Int[x^(m+1)*Cos[a+b*x]*CosIntegral[c+d*x],x]] /;
FreeQ[{a,b,c,d},x] && IntegerQ[m] && m<-1



